%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Macho.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Diana
%%CreationDate: 8/13/2010
%%BoundingBox: 0 0 596 726
%%HiResBoundingBox: 0 0 595.0538 725.0005
%%CropBox: 0 0 595.0538 725.0005
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 108 128 8%%BeginData: 28463 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8
%FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8
%CFA8CAA8CFFD0AA8FF7DA8A1A8A1A8A8A8A7FD08A8CAA8A8A8CFA8CAA8CF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CAA8CF
%A8A8A8CFFD0AA8A7A8A7A87DA8A1FFA8A1FD08A8CAA8A8A8CFA8CFA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8FFA8CAA8CFA8A8A8CAFD06A8A1A8FF7DA87DA8A7
%A8A1A8A8A8A7FD08A8CFA8CAA8CFA8CFA8CFA8CFA8FFA8CFA8FFA8CFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7A8A8A8A1
%A8A1A87DFFFD06A8CAA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCA
%FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8
%FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD04A8FFA1A8A1A8A8A8A7FD04A8CA
%A8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FF
%A8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7A8A8
%A8A1FFFD08A8CFA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8
%FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%FFA8CFA8CFA8CAA8CAFD06A8FF7DA8A7A8A7FD08A8CAA8A8A8CFA8CAA8CF
%A8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FF
%A8CFA8CFA8CFA8CFA8A8A8CAFD0AA8A1A8A7FFFD04A8CAA8CAA8FFA8CFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8
%CAA8CAA8A8FFA1FD08A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8CFA8FFA8FFA8
%FFA8FFA8FFCAFFA8FFCFFFA8FFA8FFFFFFCFFFA8FFCFFFCAFFCFFFCAFFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8
%FFA8CFA8CFA8A8A8CAFD09A8FFFD06A8CFA8CAA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFFFCF7651265151A7FD04FFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFF
%A8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFD04A8FFA7A8A7FD
%08A8CAA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFCF26
%26202620262051A8FFCFFFA8FFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCA
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CFFD0AA8
%A7FFA8A8CFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCF
%FFCFFFFFFFCFFFFFFF7C26264A264B26262051A8FFFFFFCFFD05FFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFFFD07A8CAA8A8A8CFA8CFA8FF
%A8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFFF7CF82626262026264B
%204A7DA8514A7CFF51A7FFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CFFD07A8FFCAA8
%A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCF
%FFFFFFCFFFA826204A20264BA17D7D26262026204B5151A8FFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8
%FFA8FFA8FFA8CFA8FFA8CAA8CFA8A8FFA7FD08A8CFA8CAA8CFA8CFA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FF7D26F82651A1A1A8A17D27
%272626202651FFCFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CFA8CFA8A8A8CAFD05A8FFCFA8CA
%A8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFF
%FFFFCFFFFFFFA176A1CAA7CAA1A7A7CAA1522026264BA8FD0BFFCFFFFFCF
%A8FFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FF
%A8CFA8FFA8CAFFFD05A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8
%FFCFFFCAFFCFFFCAFFCFFFCFFFFFA8A1CFA7A7A17CA1A8A7CA4B20202620
%51CFFFCFFFCFFFCFFFCFFFCFFFA8A1767C7CA8A8FFCFFFCFFFA8FFCFFFA8
%FFA8FFA8FFA8CFA8FFA8CFA8FFA8CAA8CFFD05A8FFA8A8CFA8CFA8FFA8FF
%A8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFFFFFA8FFFFFFCFFFFFFFCFFF
%A1CA7CA17CA87C7651A1A7A1FD0526FD05FFCFFD05FFA7A1A1CAA7A77CA1
%7DA8A8FD05FFCFFFCFFFCFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFA8CFA8CF
%FFFD07A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFCFFFA8A77C7D7DA8A8
%FFCFFFCFFFA87C75767CA7A1A7A1A1767CA17C20262026A8FFCAFFCFFFCA
%FFFFA876A1A1A7A17C7DA7A1A17C7C527C7CA8CFFFA8FFA8FFA8FFA8FFA8
%CFA8FFA8CFA8CFA8A8A8CAA8A8A8FFCFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CFFFCFFFFFFFA8CFA8A8A1A7A1CAA8CAA17D7CFD05FF7CA7A8CAA7CAA7CA
%A7CAA1CAA752202626A8FD08FF51A7A7A7A1A77C7DA1CAA1A8A1A77D7C51
%7CA8FFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFFFA8A8A8CF
%A8CAA8CFA8CFA8FFA8CFA8FFA8FFCFA7527676A1A1A7A7CAA1A8A1CAA7A1
%7CFFCFFFFFA8A1CAA1CAA7A7A1A8A1A7A1CA7626267C767DA8FFCFFFCFFF
%A87CA1A7A1A751CF7D7CA1A7A1A7A1A7A1A15151A1FFA8FFCAFFA8FFA8FF
%A8FFA8CFA8FFA8CAA8CFA8A8A8FFCFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8
%FFCF7C51A1A7CAA7CAA7CAA1A1A7CAA7CAA7A8FFFFFFCF7C7D7DA7A1CAA1
%7C51A8A1A8A77C267C51A7A1A7FD04FFCFFFA1A1A1A7A17CA8FF76A7A1A8
%A1A7A1CAA1A17651A8FFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CF
%FFFD05A8CFA8CFA8CFA8CFA8FFA8FFA87C51CAA7CAA7A8A1CAA1A7A77C7D
%A8A7A1A8FFCAFFA87D7DA8A1A7A1A7A1A8A1A7A1A120517D7C51A17CFFCA
%FFCFFFCFFF7C7676767DFFFFA776A7A1A7A1A1A1A7767D517DFFFFA8FFA8
%FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8FFFFA8FFA8FFA8FFA8FFCFFFCAFF
%CFFFFFA751CFA7CAA8CAA7CAA8A77DFF7CA8A7A7A7FD05FF76A77DA7A7CA
%A7A7A1CAA7A84B2651CAA1A17CA7FD08FFA8CFA8FFFFFFCF7CA1CAA1A7A1
%CAA1A17C7D76FFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFFFA8CF
%A8CAA8CFA8CFA8FFA8CFA8FFCFFF51A7A7A8A7CAA7A8A7CA76A7FFA87CA1
%7DFFFFFFCFCF517C7CA7A7A7A1CAA7A7A1A77D51F87CA1A17CA1CFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFA176A1A8A1A7A1A77C7C7676A8FFA8FFCAFF
%A8FFA8FFA8FFA8CFA8FFA8CAA8CFA8FFCFA8FFA8FFA8FFCAFFA8FFCFFFCF
%FF7CA1A8CAA7CAA7CAA7CAA176CFFFFFFFCFFD06FF7C51A17C7C7DA8A1A7
%7DA17DA77D7676CA7DA8CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFA77C
%7CA7A1A7A1A17C7D76A1FFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FF
%FFA8A8A8CFA8CFA8CFA8CFA8FFA8FF7C7CA7A8A7CAA7A8A1CAA151A1FFCF
%FFCFFFCFFFCAFFCFFF7D7D767C7CA17DA77DA8A8A7527C527C7CA1A1FFCA
%FFCFFFCAFFCFFFCAFFCFFFCF7C4A51517C7C517CA7A1A7A1A1767D51A8CF
%FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8FFFFA8FFA8FFA8FFCFFFCAFF
%CFFF7CA1CACAA7CAA8CAA7CFA17CA8FFA8FD09FFCFA7A7A8A1A8A8FD05FF
%7C7D7D7D517CA1A1FD0DFF7D4BA1A1A77DA1A1CAA1A7A1CAA1A17CA176FD
%05FFCFFFCFFFCAFFCFFFA8FFA8FFA8FFFFA8CAA8CFA8CFA8FFA8CFA8FFA8
%7CA7CAA7CAA7CAA7A8A7A77DA776517CFFCFFFCFFFCFFFFFA87CA87D7DA8
%FD05FF7C7C7CA1765176A876CFCFFFCFFFCFFFFFFFCFFFFFA84AA7A1A7A1
%A7A1A7A1A7A1A7A1A77C7D767CA8FFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8
%CAA8FFFFA8FFA8FFCAFFA8FFCFFFCAFFA7A7A7CAA7CAA7CAA7CAA7CAA7CA
%A77C51FD05FFCFFFA7A7A1A8A1A77DA17D7D76A1A1A77D7D51A1A17CA8FF
%CFFFFFFFA8CAA8CAA8FF76A1A1A7A1A7A1A8A1A77CCAA1A7A1A17C7CA7FF
%FFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFFFA8CFA8CAA8CFA8CFA8FFA8
%FFA8A87CCAA7A1A7A8A1CAA7A8A1CAA7A8A7767CFFA8FFFFFFA87D7DA77D
%A77DA77D7D7CA17DA17DA1525176A7767DFFFFCFA75175517C767C527CA1
%A1A1A7A1A1A1A77C7CA1A7A17D767C7CFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%FFA8CFA8CFA8FFFFA8FFA8FFCFFFCAFFCFFFCFFFA8A1A7CFA1A7A8CAA8CA
%A7CAA7CAA7CAA77C767D7CA7A8FF7DA8A1A8A7A8A1A8A1A77DA7A1A77C7D
%4B7CA7A176FFFF7D4BA1A1CAA7CAA7767CCAA1CAA1A7A1CAA1A176CAA1A1
%76A176CFFD04FFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CFA8FF
%A8CFA8FFA8FFA8CF76A8A7A17DCAA7CAA7A8A7CAA7A8A1CA7CA1A1A77CA1
%76A1A7A77DA87DA77DA77DA17DA1765227767CA77D527CA74BA7A1A7A1A7
%A1A151A7A1A7A1A7A1A7A1A77C76A1A1767D527CFFFFCAFFCFFFA8FFCFFF
%A8FFA8FFA8FFA8CFA8CFA8FFCFA8FFA8FFA8FFCFFFCAFFCFFFCF7DA7CA51
%A7A8CAA7CAA7CAA7CAA7CAA7CAA7CAA7CF7C7CA7A8A7A87DA8A1A77DA8A1
%7D52762676A1CAA1A74B764B7CA1A8A1A7A1CA7CA1A1A8A1A7A1A8A1A7A1
%A74B7D76A17D76A7FFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFFF
%A8CAA8CFA8CFA8FFA8FFA8FFA8FF7CA7A87676CAA7A8A1CAA7A8A1A8A7A8
%A1A8A1A87C527D7D7DA87DA77DA77DA17C7C4B7651527DA7A1A77C762651
%A1A7A1A7A1A1A17CA1A1A1A7A1A1A1A7A1A8514B767C767C51FFCFFFCFFF
%A8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFFFA8FFCAFFA8FFCFFFCFFFCF
%FFFFA87CCFA175A7CFA7CAA7CAA7CAA7CAA7CAA7CAA7A7517D767D7DA77D
%A87DA17676527D7D7C7CA7A1CAA1A15251A1CAA1CAA1A7A1A7A1A8A1CAA1
%A7A1CAA1CAA15176A17CA151A1FD04FFCFFFFFFFCFFFFFFFCFFFCFFFCAFF
%CFFFA8FFFFA8CFA8FFA8CFA8FFA8FFA8FFCFFFA87CA7CA7C517DCAA7CAA7
%CAA7CAA7A8A1CAA7A8A7A1527D517C7C7D767D515276A17C7D767DA1A7A1
%A776517CA8A1A7A1A7A1A7A1A7A1A7A1A7A1A7A1A876264BA17CA17651A7
%FFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFFFA8FFA8FFCFFF
%A8FFCFFFCFFFCFFF7CA7A8CF7C5151A7A1A77CA17DA8A7CAA7CAA7CAA77C
%527C4B7D7D7D4B7C7DA17CA17D7D7CCAA1A87C7CA1A8A1A8A1A7A1A8A1A7
%A1A8A1A7A1A7A1A1515176A1A1CAA17C51FFFFFFCFFFFFFFCFFFFFFFCFFF
%CFFFCAFFCFFFA8FFCAFFFFA8CFA8CFA8FFA8FFA8FFA8FFA8FFFFA876CAA7
%CAA77C5176527C767D76A1A7A7A1A8A1A87D767DA15152517C527D7C7D76
%7676A1A1A7A1A1A1A7A1A1A1A7A1A1A1A776A7A1A17C7C76A17C7DA1A7A1
%A7A1A14B7CFFFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8FFFF
%CAFFA8FFCFFFCFFFCFFFCFFD04FFA1A7CAA7CFA8A77DA77DA17D7D7DCAA7
%CAA7CAA7CAA8CAA7A876A7A7A151514B517CCAA1CAA1A8A1CAA1A7A1CAA1
%A7A1CAA17C7DA17CA7A1CAA1A8A1CAA1A7A1A87D51A7FD07FFCFFFFFFFCF
%FFFFFFCFFFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFA77C
%A7A8A7CAA7A17CA17CA152A7A7A8A1CAA7A7A1A8A1A7A1CAA1A7A1A77676
%A1CAA1A7A1A7A1A7A1A7A1A7A1A7A1A7A17C527D76A1A1A7A1A7A1A7A1A7
%A1A77C7651FFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8FF
%FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFFFFF7DA1A8CAA7CAA7A77DA17D7C76
%CFA7CAA7CAA7CAA7CAA7A8A1CAA7A8A1CAA7A8A1A8A1A7A1A8A1A7A1A8A1
%A7A1A7A7A151A17CA1A1A8A1A7A1A8A1A7A1A77D7C26CFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8CFA8FFA8FFA8FF
%CAFFA8FFCFFF7CA1A7A8A1CAA7A8A1A77C527CCAA1A7A1A8A1A7A1A8A1A7
%A1A7A1A7A1A7A1A7A1A7A1A7A1A7A1A1A1A7FD04A14B7C767D7DA7A1A7A1
%A7A1A17C7D76764AA7FFFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8
%FFA8CFA8FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD05FFA7A1A7CFA8CAA7CA
%A8CA7D7CA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7A8A1CAA1CAA1A8A1CAA1A7
%A1CAA1A7A1CA517C7CA17CA7A1A7A1A17DA17D7D515176FD0DFFCFFFFFFF
%CFFFCFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCF
%FFA8A77DCAA7A8A7CAA7CA7D7CA1A8A1A8A7A7A1A8A1A7A1A8A1A7A1A7A1
%A7A1A7A1A7A1A7A1A7A1A7A1A77C517C7D767D767D767C51765176517CA7
%FFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFFF
%CAFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFCFA1A7A7CAA7CAA7CA
%7CA1A8CAA7CAA7CAA1CAA7A8A1CAA7A77DCAA1A7A1A8A1A7A1A8A1A7A1A8
%A1A151A17C7D76A1767C7CA7A7CAA8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFA8FFCFFFFFA8FFA8CFA8FFA8FFA8FFCAFFA8
%FFCFFFA8FFCFFFCAFFFFFFA8A77CA8A1A8A7A775CAA1A7A1A8A1A7A1A7A1
%A7A1A87C7CA1A7A1A7A1A7A1A1A1A7A1A1A1A77C52767D767D767CA8FD05
%FFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8
%FFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFD0EFFCA7CCAA7CAA77CA7CAA7CAA7
%CAA7CAA7CAA7CAA7A17CCAA7A8A1CAA1A8A1CAA1A7A1CAA7A151A17C7D7C
%7CA8FD19FFCFFFFFFFCFFFCFFFCFFFCFFFFFA8FFA8FFA8FFCAFFA8FFCFFF
%CAFFCFFFCFFFCFFFCFFFCFFFCFFFFFA77CCAA7A876A7A7A7A1A8A1A7A1A8
%A1A7A1CA7C7CA1A7A1A7A1A7A1A7A1A7A1A7A1A77C51767D767C76FFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FF
%A8FFA8FFA8FFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFCFA1A7CAA87C7DCAA7CAA7CAA7A8A1CAA7A8A7A17CCAA1A8A1A7A1
%A8A1A7A1A8A1A7A1A7517D76A176A7FD04FFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8
%FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFF7DA1A1CA767CA1A1A7
%A7A1A8A1A7A1A7A1A77C7CA1A7A1A7A1A7A1A7A1A1A1A7527CA151767D76
%76A7FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCF
%FFA8FFA8FFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFD0EFFCF7C
%CACA7C76A84BA1A7CAA7CAA7CAA7CAA7A17CCAA1CAA1A8A1CAA1A7A1CA76
%52A1A1267D7CA152FD1DFFCFFFFFFFCFFFCFFFCAFFFFA8CFA8FFA8FFA8FF
%CFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF7DA1CA7626517D52A7
%A1A8A1A7A1A8A1A87C7CA7A7A1A7A1A7A1A7A1A7A17D7C76277C767D527C
%FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%A8FFCFFFA8FFA8CFA8FFFFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFA7A1A7CA7D514B7DA7CAA1CAA7A8A1CAA8A151CAA7
%A8A1A8A1A7A1A8A1CA7D7652A17CA17D517CFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFFFA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFCF7CA8
%A1CAA77D2752A1A8A1A7A1A7A17C274B51A1A1A7A1A7A1A1A1A77651527D
%767C767C4BCFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%A8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFFCFFFFFFFCFFD12
%FFA7A1CAA7CAA7A776527DCAA7CAA1A17CA17DA17CA1A1A8A7A8A1CA7C76
%7CA17C7D7CA14B7DFD1CFFCFFFFFFFCFFFCFFFCFFFCFFFFFA8FFA8FFA8FF
%CAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCA7CA1CAA7A8
%A1A176767CA7A1A7A1CAA1A7A1A8A1A17CA1A1A77C76767D767D767D5151
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CAFFCFFFA8FFCAFFA8FFA8FFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFA87CA7CAA7CAA1A17D7DA1CAA7A8A1CAA7
%A8A1CAA7A7FD047D76A17C7D76A17651A8FFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFFFA8
%CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFA17CA1A8A1A77C7D7DA7A1A7A1A7A1A7A1A7A1A7A1A77C7D767C767D76
%7D5276A8FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFFFFFF
%CFFD13FF7D7DA7CAA7A77DCAA7CAA7CAA1CAA7A8A1CAA1A8A1CA7D7D7CA1
%7CA1767CCFFD21FFCFFFFFFFCFFFCFFFCAFFFFA8CFA8FFA8FFA8FFCFFFCA
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7D7CA1A8A1A7A7
%A7A1A8A1A7A1A8A1A7A1A7A1A7A1A1767D767D517CCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCF
%FFA8FFA8FFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFA17DA7A8A1CAA7A8A1CAA7A8A1CAA1A7A1A8
%A1A7A1A17CA1527CFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFFFA8FFA8FFA8
%FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FF7D7CA1A8A1A7A1A7A1A87DA1A1A7A1A7A1A7A1A7767D527CCFFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFFCFFFFFFFCFFD19FFA77C
%A1CAA7CAA7CAA8A77CCAA7A8A1CAA1CA767D767CCFFD23FFCFFFFFFFCFFF
%FFFFCFFFCFFFFFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7D517DCAA1A77D7D517576A1A1A7A1
%A87C767676A8FFCFFFCFFFCFFFFFFFCFFFCFFFFFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFFFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFFFA8FFCFFF
%CFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD
%05FF7C76A1CAA7A7A1A176A7A1A8A1A7A176767C7DFFFFFFCFFFFFFFA77D
%A7FFFFFFA7A8A8FD05FFCAFD0BFFA7A7CFFFFFFFCFFFFFFFCFFFCFFFA8FF
%FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCFA8517CA1A7A1CA7C76A1A7A1A7A17C4B7D76A8CF
%FFCFFFCAFF7C26527DA7CF7C4B26A7A7CFA1A7515176A8A7CF7DA8CFFFA7
%A87D2652FFCFFFCFFFA8FFA8FFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFF
%FFFFCFFD1AFFA151A7A7A77C7C517D7CA8A7CA757C7D7CA8FD06FF7C26FF
%5151264B2651265126514A4A26514A51262626CF7D4B264B76FD05FFCFFF
%FFFFCFFFCFFFCAFFFFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7C767CCAA1A17C7CA1A1A1
%A7A176517D76CFCFFFCFFFCFFFA87C7C7D517C767C517C767D7C7D527C76
%7C517C7D7CA8A8767620A8FFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFFFCFFF
%CAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFD04FFA776A1A7CAA7A776A7A1A8A1CA76767C7CCAFFCFFFFFFFCF
%FD06FFA8517C517CFD0CFFA7A7A87CCFFFFFFFCFFFFFFFCFFFCFFFCAFFCF
%FFFFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFF7D7676A7A1A1514B517CA1A7A17D527C76FF
%CFFFCAFFCFFFCAFFCFFFCFFF2651CF4B207CFD0451267C51515176512626
%51767626764B7DCFFFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFFCFFFFFFF
%CFFD1DFF76A1A7A77C7C51A17CA1A1CAA17D76A8FD0DFFA1517D51762651
%4B7651A1A8514A51517C26514B7C51A17C26A7FFFFFFCFFFCFFFCFFFCFFF
%FFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFA1A1A8A1CAA7CAA7CAA7A7A1CA7D7C7CFFFF
%FFCFFFCFFFCFFFCFFFCFFFFFCFA8FFCFFFA8FFCFFFCFFFCACFCFFFA8FFCA
%FFCFFFCFFFA8FFCAFFCFFFA8FFCAFFA8FFA8FFFFA8FFCFFFCAFFCFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%FD047C767C767C527C767C525251517DFFFFFFCFFFFFFFCFFFFFFFCFFD0B
%FFCFFD0BFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFA8FF
%A8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%A8582E522D522D2E2D2E272E052EFD040527A7FFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8
%FFA8FFA8CFA8FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD19FFCF7D5984FD04
%592E592E592E2E272E052E05050558CAFD23FFCFFFFFFFCFFFCFFFCAFFFF
%A8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCF7D5959585952592E59FD052E280527FD0405F8277D
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCAFFCFFFA8FFCAFFA8FFA8CFA8FFFFCFFFA8FFCFFFCFFFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFA15884FD06592E
%59FD042E272E052E052E052727A7FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFFFA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCFA758FD05592E592E52FD042E052E052E052E052626CFFFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCF
%FFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFD
%15FF51585284FD06592E592E52272E272E2E2E0551767C7CFD21FFCFFFFF
%FFCFFFCFFFCFFFCFFFFFA8FFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCF4A51265258592E592E592E2E
%272E052E282804517DA8A1767DFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFFA8
%FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFA776A17D51512E592E52272E2E2E272E2E2E277CA1CAA7CAA1
%76A8FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8CFA8FFA8FFA8FFCAFF
%A8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFF7C76CAA1A77651
%27592E2D2727262727272676A7A8A1A8A1A7767CCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FF
%A8CFA8FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD17FF7CA7CACAA7CAA17C27
%522E2E27512D2E4BA77DA7A7CAA7CAA7CA76A8FD1CFFCFFFFFFFCFFFCFFF
%CFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFFF7C7CCAA7A8A1A8A17576522727522727
%A7A7CA7CA7A7A8A1A7A17D76FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFFFCAFFA8FF
%CFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFF7CA1A8CAA7A8A1CA7CA7A1A151A7A151A1CFA7CA7CA8A7CAA7CA7D7C
%CFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFCFFFCAFFCFFFA8FFCAFFFFA8CFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFA876CAA1A8A1A7A1A1A1
%A77C76A8FFA7517DCAA7A77CA7A1A7A1A751A8FFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8
%FFFFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD16FF7CA1CAA7CAA1CA7CA7A1
%7C7CFFFFFFA8767CCAA8CAA7CAA7CAA17CA8FD19FFCFFFFFFFCFFFFFFFCF
%FFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA17CA7A8A1A7FD04A151CAFFFFCF
%FFCA7D52A1A7A8A1A8A1A752CAFFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8FFFFA8FFCAFF
%A8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFF7CA7A7CAA7A7A1A8767DFD04FFCFFFFFCF7C7DA1CAA1CAA151A7
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCF
%FFCFFFCFFFA8FFCFFFA8FFFFA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCFFF
%A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFA876A8A1A7A1A17676
%A7FFCAFFCFFFCAFFCFFFA77D7CA8A17C4B7CFFFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FF
%FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD16FFA1A1CAA7CA767D76FD
%0CFFA77CCAA7A151A8FD16FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FF
%FFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFA87CA1A8A17C52A1FFFFCFFFCFFFCFFFCFFFCF
%FFFFA776A17676527CA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CFA8FFFFA8FFA8FFCAFFA8FFCFFF
%CAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%7DA7A1A17676A1FFFFFFCFFFFFFFCFFFFFFFCFFFA87DA1A7A1A17676A8FF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FF
%CFFFA8FFA8FFFFA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCF
%FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFF517C517C767CA8FFCFFFCA
%FFCFFFCAFFCFFFCFA876A7A1A77D7D517CFFFFCAFFCFFFCAFFCFFFCAFFCF
%FFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8FFFFA8FFA8FF
%CAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD16FF7DA1A87DA1767DFD0CFFA77C
%A7CAA1A87D7C7CFD11FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FF
%FFA8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFA17C7CA7767D517DFFFFCFFFCFFFCFFFCF
%FFFFA851CAA1A7A1A152A1FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCA
%FFCFFFA8FFCAFFA8FFA8CFA8FFA8CFA8CFA8FFCFA8FFA8FFA8FFCAFFA8FF
%CFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD04FF
%A7A1A7A1A17CA14BA7FFFFCFFFFFFFCFFFFFFFCF7675A1A1A8A1A17CFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCFFFA8
%FFA8FFA8FFFFA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF76A7A1A77C7D764B7CFFCFFF
%CAFFCFFFCAFFCFFFA8A1517C7CA77D7CA8FFCFFFCAFFCFFFCAFFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8FFCFA8FFA8FFA8
%FFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD10FFA7A1CAA1A17D51
%7CFD0FFFA7A1A1CA76CFFD0EFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8
%FFA8FFA8FFFFA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA87CA1A77C7C51FFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFA77CA17CFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CFA8CFA8CAA8FFFFA8CFA8FFA8
%FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFA7A1A1A14BA8FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD04
%FFA7A17DA7FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FF
%CFFFA8FFA8FFA8FFA8CFFFA8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8
%FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF7CA77652A8
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8A1A176A8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAA8FFFF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD10FF
%CAA17C7DFD15FF7CA7A1A1CFFD05FFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCF
%FFCAFFCFFFA8FFA8FFA8FFA8CFFFA8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FF
%A8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8A1
%76A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA87CA77C7C7CFF
%CFFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CA
%A8FFCAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF7CA1A8FFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFD04FFCF7CCAA17C7CFD05FFCFFFFFFFCFFFCFFFCAFF
%CFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8A8A8CAA8A8A8CFA8CFA8CFA8
%CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCF
%FFA1A176CFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFFFA17C
%A77C76A7FFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8
%CAA8A8A8FFCAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFD09FF7CA1A17CA7FD17FFCF7C7CA17CFD05FFCFFF
%FFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFFFA8A8A8CAA8
%A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCF
%FFCFFFA8CFA8A77CA17D7C767CCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFA7A77CA7CFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%FFA8CFA8CFA8CAA8CFA8A8A8FFCAA8CAA8CFA8CFA8FFA8FFA8FFCAFFA8FF
%CFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFCFA17CA1A1A77CA17D7C
%51FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CA
%FFA7FD04A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FF
%CAFFA8FFCFFFA8FF7DA7A7A17CA8CFFFA8A8CAFFCFFFCAFFCFFFCAFFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FF
%A8CFA8FFA8CFA8CFA8A8A8CAFD05A8FFCFA8CAA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD1FFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8
%CFA8FFA8CAFFFD05A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8CFA8FFA8FFA8FF
%CAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FF
%A8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD05A8FFA8A8CAA8CAA8CFA8CFA8
%FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFA8
%CFA8CFA8A8A8CAFFA8A8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8
%FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7FFA8A8CAA8CAA8FFA8CFA8FFA8
%FFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%CFA8CAA8CAFFA8A8A7FD04A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8
%FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8
%CFA8FFA8CFA8FFA8CAA8CFA8A8A8CAFD06A8A7FFFD04A8CAA8A8A8CFA8CF
%A8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFF
%CFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFF
%CFFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CF
%A8A8A8CAA8A8FF7DA8A7A8A7FD08A8CAA8A8A8CFA8CFA8CFA8CFA8FFA8CF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CF
%A8CFA8CAA8CFFD0AA8A7A8A7FFFD04A8CAA8CAA8CFA8CFA8FFA8FFA8FFA8
%FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8A8FF
%A1A8A8A8A7FD08A8CFA8A8A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8
%FFA8FFCAFFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCAFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8
%A8A8CAFD06A8A7A8A8FFA8A7FD04A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8FF
%A8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCFFF
%A8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CFFD08A8FF7DA87DA8A7A8A1FD
%08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7A8A8A8A1A8A7A8
%7DFFFD06A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FF
%A8CFA8FFA8CAA8CFA8A8A8CAFD04A8FFA1A87DA8A7A8A7FD08A8CAA8A8A8
%CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8
%FFA8CFA8CFA8CAA8CFA8A8A8CAFD0AA8A1A8A7A87DFFA8A8A8A7FD08A8CA
%A8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAFD0AA8FF7DA8
%7DA87DA8A1A8A1A8A8A8A7FD08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD0AA8A7A8A8A8A1A8A1A8
%7DA87DFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Macho</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-08-13T15:04:07+04:00</xap:CreateDate>
         <xap:ModifyDate>2010-08-13T15:04:07+04:00</xap:ModifyDate>
         <xap:MetadataDate>2010-08-13T15:04:07+04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>212</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADUAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6rFHkGxFRpgVFRpiqIRM&#xA;CFdExVXRMCqqpiqqqYqqBMVXhMCrgmKthMVb4Yq7hiruGKtFMVWlMVWFMKrGTFVNkxVSZMVUXTCq&#xA;g6Yqh3TCqHkTFKFkTCqfcf8AnSaf8Wf8zcPRj1SOJMDJFRpgVExpgQiETFUQiYFVkTFVVUxVUVMC&#xA;qgXFV4XFVwXFW+OKt8cVdxxV3HFWiuKrSuKrSuKrCmKqbJhVSZMVUXTFVF0wqh3TFUNImFUNImKU&#xA;74/86dT/AIs/5mZLox6pLEmRZIqNMUImNMCohEwKromKqypiqqq4FVFXFVQLirz78yPzp8teR7lN&#xA;Pmik1HVnUSNZwFVEan7Jldq8eXYAE/hlWTMIs4wJYZpP/OVuizXCpqmgT2cBNDNBOtyVB7lWSD8D&#xA;lQ1I6hkcT2nQNe0bX9Lh1TR7pLyxnHwSxnoR1VgaFWHdTuMyIyBFhqIpMeOSQ7jirXHFWuOKWiuK&#xA;rSuKrCuKrGXFVJlxVSdMKqDpiqg6YVQ0iYqhpEwpTjj/AM6nT/L/AOZmS6MeqURpkWSKjTAhEomK&#xA;q6LgVXRcVVlXAqoq4qqBcVXhcVfIn/OQ3lTWNJ/MC91a5V5NO1crNaXZBK1WNUaInoGTjsP5aZgZ&#xA;4kStyMZ2Yd5Q8g6/5ouA1urW9jWhuWUkGnZF25H6ae+Mcdpt6NYad+YH5VTHU/LsrahYy0F/pkyc&#xA;lkArRqRtuR4rRh7iuWCJjvFEo3zUNR/5ye/MSTVra5igt9PsoyOen+jyWYA/EHlkq4/2BXBLNJiM&#xA;YezflV+Ymteeta1fUlQWvlqBVt7CzaN2l9ZCGaR5xGsVWRxWPmxH4m7HkMie5hKNPTKZa1tUxVoj&#xA;FVpXCq0rilYy4qpMuKqTLiqi64VUHXFUPImFUNImKprx/wCdXp/l/wDG+T6I6pVGuQSio1xVEIuB&#xA;UQi4qrIuBVZVxVSvb+x0+2NzezLBCCF5OaVY9FUdWY9gNzgJpQLQum+aNB1CRYYLrhcOSI7e4SS2&#xA;menUpFOsbsPcDAJgpMSE5AwsWI/mddaLFoNvaawIjZ313FG3rAMv7kNc/ZNa8vQ4f7KmV5SKbMY3&#xA;YnpeqxTmFbHTJ7WxaRoOc0JtjRY+aSqjAN6Z4ldwDWm1MqBtyEubVdcsLiSO/wBGmurSZnkkvbVk&#xA;mCkyMqoYCRKQsaruq/RWuCyEvJvzw8v3M13a+Y7ECTSmgWFuA4+kyu3VaAipahruD1wTF7sZBFf8&#xA;4zeY7qw/Ma205ZCLTWYZYZ4yfgLwxtNG1D+0ChUf62RwmpUwyCw+vaDM1odTFWKaz56tInltNIC3&#xA;t3Gxjlnr/o0LjYhmFPUZT1RPkzLkDPubIYiWLL5h8wwXak61I9xLVkt5o7cxPw6gIsaNxFRXiwPv&#xA;kOI97d4UU9tvzBaIBdUsJKD7V1Z/vk26s0RpKtf5U5/PJDJ3tcsJ6I21/MPyPdTLAutW0Ny5ottd&#xA;P9VmJPYRTiN6/RkhOPe1GJCfkAio6ZNCky4qpOuFVB1xVDyLiqGkXCqZU/51un+X/wAb5Lojqlka&#xA;5FKKjXAqIRcVRCLgVinmLzpfRak+h+W7WO91aEK17c3BZbO0DCqiUp8TyMNxGnbckZVPJWw5s4wt&#xA;BQx+bZPi1HzFO5O7QWcFvbQ/IEpLP/yVyHFLvbRALpLZY5I5EV7vUJWEFq9zK8r8pSBxEkhkZE/a&#xA;bj0AJpgTsAoRXGm6vBNbTRJK0R9O8s50qUkGxV45B2IIrTtjzZBkXkCzktjqMUMsjaajRJBbyO8g&#xA;im4lpVj5liqFHjPEbA1p1yzG0ZRu1+Yr0TR40sWu7hrtpIJI+ImVoIJJTHCWZKyTKhTjX4l5d6YZ&#xA;i0QNFJYri7eRFuLSSzZ4I52hmKetGZa0jlRGcK3EA0rlZBHNvjK0Ek+syXQX6ig08CdrjUzOoht/&#xA;RkKrHMvEyCSVeDIoU8uQp3oRElByAbJL57utPg8n6nNqagW/1dg8bUJLuOKoOvxFjTIk7Nh5PL/y&#xA;y8tyaQmj+Zj68V1Jzmi1BArQ2qsxhQMjK/NpORJJ+FV65VEUbYiNjd9QeStcvdUsbpL0h7mxn9Bp&#xA;1XiJFMaSKxA+ENSSjU22rQVpmVA24+SNFPbmAT28sBZkEqMhdDxYchSqkdDk2DxZpbTy9CujahNb&#xA;2V7YRiP0ZHSIPHGKCWMMR+7dVJU9uh3BGY3LZzYyBCaeXvLU3mbS9W1CJ680iby3fOrIiSgeo3Eb&#xA;c42ZEDP1ILp0rkoxsNWSdEIewuxeWcdwEMbOKSRN9qORTxeNv8pGBU+4wAt4Lr6xtL63a3uo1lic&#xA;UKsAf14VSTy95p1PyZepAJzP5cEyxXdjKxYW0bPxM1sxqUVK8mj+zStKHCDw+5onC3uLLl7jqLri&#xA;qi64VQ8i4qhpFwqmFP8AnXqf5X/G+S6I6pdGuRSio1wKiEXFUs8za+uj6eTAguNVuQ0emWIPxSzU&#xA;2r/LGn2pG6Ae9BkJyoJjGyx3y/o/6K0xLeSU3F5IzT392RRp7mU8pZT/AKzdB2FB2zHAclMDhVC+&#xA;XDLrHnONrcFtM0FZHubofYa+mQxJAp6MY4ZJGkp0JXvkobn3NeQ7Unl15HkkvppbTUWtLS5d5ZoR&#xA;EkkiySMXYxSMaKC7FqOj7nag2yRx7sRkIDINN021060W2tgeA3Z3JZ3alCzsdydv4dMmBTAm3mX5&#xA;nT63/im3t5nnu9Dihju4raxS2M1vOwlhLypcI3qpIpbjxNV3+HocqyA35NmOkFpesW8KNGllc21s&#xA;KtJc3fpx8nNB8KBqj3+FR4YIgthkAjmWS6lSe3057mZQRHMkLSlR0PxIrUH05PwyjxA89/M7SZfM&#xA;NiNPku5LWe1keQwAK0RZH9L94FPWtePxeOQlCzS8Vsg8s29o+haRpMLxotLW25OC6xs7BYiyqVLc&#xA;pANq71xro2E0Hsvl7QodF082yOZppXM11cEcTJKwALcamgCqqqKmigbk75bEU4spWbTTJMVKa2t5&#xA;6etEkvGvHmoaletK4qk/mXzv5T8seguualFYtc1FvE3JnenUqiBmoPGlMjKYHNIiS8s1jzJ5PGrX&#xA;Op+XdbsryzvmM97pLzpbXMc5Hxy263BiDiT7Tx1B5VK1JplBkLsFvxyI2KPsruK8tY7mIOsco5KJ&#xA;EaN6e6OFYfdhBb2NeYNO5Szxzpyt7oMD4FXFGH45PmGBer/l/rw1fy5bpPJz1KxVbe/B+0XQcVlI&#xA;8JVHMe9R1BycDs4s40WQsuTYqLriqHkXCqHkXFUdT/cDT/K/43yfRHVARrkEomNcVRCLgVhk2nw2&#xA;3nHV5ZCZbq6jt54ZXPJo7dk9L0EJ+yglt2kIG1WrlEx6m/GdkRHPHJJNGv2oWCOD4lQ4/BsizUNR&#xA;slvbR7ZpZYVelZIXKOKGtAw8e+JVBNB5qtrSC30bWItLhs97azt7KFbZtyeMyHk5DV34Ovj1xs9G&#xA;PAGXeSfN0mv291b31sLHW9MdYtRtFbnH8YJjmheg5RShTxruCCD0y2E7aZRpkuTYvMNXvPr2t6lc&#xA;huUaztbQ7bqtr+6df+RyyEfPIhk3o+uvo7tKun295OWPGZmaKVVPYORMOm1FVa98nGdKY2i9U/Mn&#xA;VLq0lttO02TT7iT4PrtxJE4jU/aeNIy5Z/5eVB3NehkcqBBgGoWEUFjcMpJZhGoLGtEjoEQE77bn&#xA;fuTmOObagfLInXyhqN1bsTqCXc8sdduMlpIFtwOu3GGNsg3AXF9D6df2+oafa39s3K2vIY54W8Ul&#xA;UOp+45eC4bHb/wDNDyTZ3b2a6gb68jPGWDT4pb1kPQhzbrIqEf5RGROQMhAlbH+aPk8o73E9xZRx&#xA;qWaS7tLmCOgFf7x4wg9gTvj4gSccnnWm20+o6ndeadWjP6Y1M8oo5NzaWo/ubZP5eKbvTqxOUjc2&#xA;XKhGgm+SZKS3CNdSW4B5xokhPakhcD/k2cCpd5inQQRw1+Nm5U8AAR/HJBEmQ/lJodxzu/MEjFLe&#xA;dPqlpH0EgjeskpHgHHBP9l2IycBvbjZZdHorDLGpScYqh3XCqHkXFUZT/cJT/K/42yfRHVAxjIJR&#xA;MYxVEIMCsS80IYPN+kz9I7uzu7dj/wAWRPDLGP8AgDKfoynJzDbiSTSr8zea9ftGUo1qtnwBP20k&#xA;jZvUA/1uS/7HKwdy2p4cKrDilKNS8t6dqF+l5cGYMsXoukU0sKyKG5J6giZOfAs1A1euAhaQd3qR&#xA;8rS27aNcSrf3DcYNNknlktpQCObSxyMyxovKrSLRgaD4iQpIsHZhOIpuwIW2WEy/WJYgBcXA6PKd&#xA;3b5ljU5eBQabVHwFklWqaxp+nxNJcyqlOxIG52Fa9MilheqazrWq31rZ2UHoLcFmWWdSAkaU5P6V&#xA;Vc7sF+LjudtsiT3MhFmOm+X4ND0S7tkmkuHnMlxPNLxq0roFJVVChV+EUGABuAoMe0/z55i1LQh+&#xA;XUfpiMyyWM08SutxBp0Mgfkz8yvxwFYx8I698EpGuFqEN7ZtZWNnY2yW1nAlvbxiiRRqFUfQMQG9&#xA;L9ftjqBtNLIrBcyerejxt4KMyf7OQopH8pOA77Km2SV2KsSvPMJt/Ot7YwIJCNPtmmk3IjcSzFVY&#xA;eJWSuAc2JO6HuBe391BZwP8A6fqU8drbyEV4vKePOnhGtXI8BkyxJ6voSw0+10+wtrC0ThbWkSQw&#xA;J4JGoVR9wy0CnEKowwoUnGKVBxiqHkGFUXT/AHD0/wAr/jbJ9EdUFGMglEIMCohBirHvzAs5G0JN&#xA;ThUtPos6agqjqYowyXIFOpNvJJQeNMryDZlA0WJa/ol7dXNtruhXEcOsW0ZjT1am3ubdzy9Gbj8V&#xA;K/EjD7J+eUEdQ5CHtPPESloNZ0280u9j2kj9J7qInxjlthJyX3YKfbCCtoiLzdYyvQW1ysfaV0RQ&#xA;ffiX5j6VyVLaaW11BdQLPA3KNiwBII3Vip2PuMUpV5l0QapZq0PFNQtSZLKU9OVKNGx/kkHwt9/U&#xA;DB5qRYYPG+twA6pa2t1FZUpqCyIYmjK7cwrEF+PR+IK0Fa7b2eIGnwytu9e1KZnt7N2mdOInmJKw&#xA;Q8/s+rIP2iDsg3PsDXCZDosYkuttLiikE87m5u+vrONlr1EadEH4+JORbAKTLQoba71T1oqSelRZ&#xA;pVqygx1IQsPhqC3TrgJZgJ5rn11rJoLKL1bmc8FLHjGg7s7eA8Bv4DAyKG8veW7XRo5nDevqF2wk&#xA;vb1gA0jAUUAb8UQbKvYe++ClApN8KVKOSCSaUrQyQH0pD3FVWSn3MDgVSl1K2jbgvOZ/5YUaSnzK&#xA;gqv+yIwraUazq/mZh9W0LSWadxQ314yRwR178Axkc+1APfI7oJQnl7yXJYrLNqFwbm9upDNfXJpz&#xA;lkPjTZVUbKo6DJDZAinv5YWC6p+YdzfBf9F0K2LR06C4vSUT/gYEf/gslHeXuacp2e0EZa0KbDCh&#xA;SYYpUXGKoeQYVRNP9xP+y/42yfRHVBxjIJRKDAqugxVVCgihFQdiDirADp7aBejR3BGnuSdGmP2f&#xA;SHxG2J7PCNlHeMA7lWpjmNFvhK1PU9LhvU3+CZR8En8D7Ygs6YzeaTfW1TJHyQftruP7PpyVsaR/&#xA;kq8WfQY4WUpdWjPDdxGlRJyLctu0gYOD4HIBmE7OFKxsVQUWm6fb2zWsFrFFauWLwIirGS+7VUCn&#xA;xV3wUli8/wCV/ld7310+swWp3k0yGd0tHPvEOnyUge2DhRTJYbe3toEgt41hgiAWOKMBVVR0AUbA&#xA;ZJk5sUrcVQerapbaZYvdz1YLRY4l+3JIxokaA/tMdv17YFJYxYC/uKRTyVuLmVpZwv2A7noPEIoC&#xA;ivYZICmHNmEMMcMSxRiiKKAYGbpZoYl5SuqDxYgYqx/XvM8MMS29qrz3FwfSghiUtLM56RxIPiJO&#xA;J2YmT0z8rPKF35c8vO2pBRrOqTG81FVIZY2ZQkcKsOoijULXxrlkI0N+biTlZZicmxWMMUKTDCqi&#xA;4xSh5BhVE0/3Ff7L/jbJ9EdUJGMglEIMCq6DFVVRgQp3thZ39q9reRLNbyU5I3iDVSD1DKRUEbg7&#xA;jEi0gsbu/K+pWgJspPr0A6QysFuFHgHNEk8By4mnVmOVGHc2xyd6U+qPWeCRWiuI93gkUo4FaVoe&#xA;qkjZhsexyLaDaQeYLYaWsnmCxAjktV5X8PSOa1U8pOXg0alnQ+NR0Y5GR6pTw5JKxsVU2xSgpZlG&#xA;pQQ1+J4ZnA9keIH/AIngVVbClTbFK3FWG+aVM3mqxWRiYrW0kmij7CWRwhf58AR9OADdjJ0M8sD+&#xA;pG3FgD8W2335YhkGk+U/Pmu20d3bLHa2Mw5RzXsrxM6Ho6QxJIxU9ufCvXpgAJ5NcsoCaw/kzrkz&#xA;1vNehhQgchbWpaSvekkshX74zh4T3sTlZj5V/Lryx5akNzZQNcak44yandt61yR4BiAsa/5MaqPb&#xA;DGADXKRLJ8mxaxVacUKbDCqi4xSh5BiqI/6Vn+y/42yfRHVCRjIpRCDAquoxVVXAheOmKW8VSXzX&#xA;osmpaW7WgA1S1DS6fIdv3g39Jj/vuXjxf7+oGRlGwyjKiwi4MOq6HIYgWhvrZuCsKNxlj6EHod8p&#xA;5hyUJ5b1SK98v6RcPIomvLSGUISAxJjUvQd6E4I8kpm2SVTbFKU3P/KSWP8AzB3n/J22wdVRzYUq&#xA;bYpQ95eWtnbtcXUqwwp9p2NBvirEfMdxC/mTS5425RXthOYn7MEkidad/syE4jmxkitE0+PU9e0z&#xA;S5AGjvbhUlQ9GijBmmU/60UbDJHuYSNB9CAACg6Za4reKuxV2KuxVacVU2woUXGKVBxiqv8A9K3/&#xA;AGX/ABtk/wCFHVCx5FKITAqsuKFUYFXYpbxV2KvOJrU6frWpabSkaym8tfeG7Zn/AOEmEiAdlAyg&#xA;ii5EDYeTan5a8xaDp9pY3qHVNI06v1DVNPX0762BNaPATxlWtKcW5e/bIxuPmzL0fQ9UstS0uC4t&#xA;Lxb5AoSSdRxJkUANzQ7o1eqncYbSEY2FLCtV82aBB5106Nr+ILBbXkF49axxPK9u0ayOPgQn0m6n&#xA;IE7rbKw6OodGDIwqrA1BB7gjJpWtilinnaTT5PqttIsl3doTLFp0bBEauwed6Hggod+p3ABxvuYy&#xA;SSPT7ia+j1LU5/rN7EpS3jSqW9ujChSGP3AALNUnCI9WLOPyhsHv/OF9qVK2mjW/1ZG7G6uiHanv&#xA;HCg/4PDHeXuasp6PZ8taXYq7FXYq7FWjiqm2KFJ8KUO+Kq9P9x30/wAcn/Cx6oWPIMldMVV1xVUG&#xA;BC/FLsVdirHPOWiXV5bxajp0Yk1TTw3pwk09eF6GWCp2DHiGQn9oAVAJyE42zhKixO2urXULT1I/&#xA;iieqvG6lWVgaMjq1CrKdiD0ytyGJz6W+la99ZsCYp5SocD7M8daBZV2DMOit1HyqCatHJk7QGaDh&#xA;dUbkDzRahTXsfEYGaimmabGgjjtYURRRVEagD8MVpSTTba3QrZqLUEk8YwAlT3KfZxTSW32rXlqJ&#xA;IZYgJyD6Uy/ZNejcT4eFcNItjkUKxl2qXllbnNM5q7sf2mP+YA2G2ECmKpFZ6tqN1HpujQfWdUuA&#xA;fSQmkca1AaaZv2Y0rv49BuRiT3c0E09y8k+UrPyr5et9Jt3M0ilpry6YUae4kPKWVv8AWPQdhQZO&#xA;MaDjSNlPskh2KuxV2KuxVo4qsbFCi+FKg+Kq3/Su+n/jbJ9GPVCx5BkiExVWXFCouBK/FXYq7FXY&#xA;qwzzV5Rulu31zQUBu331DT6hUugB9tK7LOB0PRuh7HISi2QnTGYJLTUnt76BuSRcwQRRlfYFWU7h&#xA;lNag9DlbeEY2LJQeWMSrET+8dWdV8VUgMfo5DFWmxSlPmCBXsjJT4oiCD7E0OEKWP2Gn6lquoxaX&#xA;pUYlv5xyHOojiiBAaaUjoi1+bHYYSega5Sp7d5S8n6X5asDBaj1byajX1+4AlncVoTToq1PBBso+&#xA;kmcY040pWnuSQ7FXYq7FXYq7FWj0xVY2KFJ8KVB8VVv+ld9P8cn0R1QkeQSiExVWXFCouBK/FXYq&#xA;7FXYq7FXm35laDcaZKnmnRwEYSKmq2n2Y5hIQiyGnRuVFZqeDfssGrnHq245dEDZ38WoWCXdmfhl&#xA;U8Q43VhsyuAeqsCGHjlbkMdv/wDEEXmjTkN9af6RBdpD/okvwgGF2Df6T8RPEUO1PeuRN2rIIlnW&#xA;ICd0kl/aaNSin5KWc/jk0sM1rVWvtZubdWpY6XRGp0e4ZQ7k/wDGNGAHuT4DGPNBL2L8uvK8OiaD&#xA;HNIoOqaiqXF/L3qwqkIP8sSniPerdWOWxDiTlZZBqmp2Oladc6lfzCCytI2muJmqQqIKk0FSfkMJ&#xA;NMQGM+WfzQ8veYCWhgu7G0aH6xb39/EsFvNF6npVSQu1Kt0D8SRuBTIRyAsjGlvmP82PJ/l/VjpV&#xA;7NLJeiKGbhbxmUH6xJ6cSAg7u1eQX+XfGWQA0oiSyVta0dUZ2v7cIj+m7GVKB/5Ca7Nt0ydhjSRx&#xA;/mb5Jm1xNDg1IT6g80tuUjjlaNZIEMkgeUL6Y4qN/iyPiC6ZcJTs65oqwpO2oWwhkJEcpmj4sV+0&#xA;A1aGnfJWGNK9zfWVtCJ7m4jggYgLLI6ohJ3FGYgb4bVj0v5i+XR5uj8qQevd6mQrTvbRGWGDmCV9&#xA;eRfsVp4UHemQ4xdJ4drZI2TYqT4UqD4qrf8ASu+n+OT6I6oSPIJV0xVXXFVQYEL8UuxV2KuxV2Kp&#xA;X5ps5b3yzq1pCvOa4s7iOJfF2iYL/wANgPJI5vIfJckb2+oqrVSS4WaMAkfu5beKjDw5Or/TlLlx&#xA;SvWY/LCeYdOaS4mlkDzRygTXU9CYi1AQz8acdwuVmrSymyW3Fqhty5hYVT1DIWp/z0+LJhLz02sy&#xA;LrEPAtPNe3nppT4mMsremB4khlAxjyLAvp4AAUHTMhxEDrui2GuaPeaRqCF7K+iaGdVNG4uKVU9i&#xA;OowEWKUGmA6x+Rthqel6Xp82v6hJDo8T2+npKts0cULxGIUSOKKsiLTjIxLAiuVHDY5sxN5XrP5e&#xA;aFa+cdQ0DQE1jWbjQYLe+1OWa/trRI1giCwxxu1s4LrHKOLVXiK06VykwF0L2ZiWzXkvQfye1LSB&#xA;qFzrNzp01lO1tFZ3YiujJFcB4oj6JtzzdwWKhQeJFaYwjAjmkkoubyX+RSW4mHna/Ed7Hc+iVTmS&#xA;pYmRqLbczuhBOxcDjWm2Hgh3ouXcrnyL+RstxcQ3XnCeWSX604QLwtoZSqyTNDWJo1KRIqlSxI27&#xA;0o8EO9eKXci/N17+Umqp5Z0P/EN+8Gm2t5GNSZPUhhhkQxO1z6qxsknIBYfTT4TxHEDjhkYGhaBa&#xA;P/KXXPy+8iaPdHVtaj/SeqTSypUS3EyWdofQiikKR1DRhCSpUfKgw4jGI3KzBL1zQfNfl7zCt22i&#xA;3qXqWMxt7l4w3FZQAeILABtj1WozIjIHk1EEJg+SVQfFVb/pXfT/AMbZPox6oSPIskQmBVZcUKow&#xA;KuxS3irsVdirsVdir5+/xVoOk3eo2ltZ3D2f1mdbaa2HOM24kYRelIpB4BPs7/LKvDkejYNTAbE7&#xA;pVdeZ/JLziafy9NcyivGWWCFyK9f716jHwJfzV/OYu9fF+ZPl2yRlttHntl2HGNLdAadPsPkxp59&#xA;33MTr8Xex+9/NvS4Nah1GCwl9W2uIZ+DiMhzCyk13O5VaA9voyf5ebXLXYyOr6I8j/md5P8AOlvz&#xA;0a8H1tF5T6dPSO5jHulTyH+UhK++JBHNYTEhsyvAydirHNZ/L3yjrN9c31/Ys13ewfVb2WGe4tzP&#xA;DQD05RBJGJAKCnKuQMAUiRSlvyT/ACxMyTjRQk0awqkiXN0jKLZBHEQVlFCqr16nqanB4Ue5PGUd&#xA;ov5W+QtEu7C70zSlt7jTDM1jJ6s7+mbheMpo8jBuS7fFWnbCMcRyUyJQdx+Sv5ZXNxJcT6KJJJTK&#xA;WDXF0UrOxaTjH6vBasajiBQ7imDwo9y8ZW3P5J/lpduZLzSnupjEtuZp7y8kf01pxHJpifhoKeGP&#xA;hRXjKOtPyv8AItncJcQaWPXSCa1DvLPITFcLwlDc3YEsnwcj8XGig0AGEY4oMijvLPlDy55WsXsd&#xA;CsxZ20j+pIvOSVmbiFBLys7miqABXbJRiByUklM3ySEO+Kq9f9x30/xyf8LHqgozkWSJQ4FVlxVV&#xA;XAheOmKW8VdirsVdirzX8yfOLO0vl/TZKKo46rcL/lD/AHmX3INZD2FF6k8Z44cR8nG1GbhFDmXl&#xA;l4KCg6ZmusSO874UJDqMgjjZz2/XioDFZoZJSW7d2OIZk0hbb9IW2pQS6XPJDqEbgwTxP6TI1aBv&#xA;UBHH51yrNOER6m3BGcj6X3L+XcfnmPyxbJ51e2l1ldmktjUlKCnq0AT1OteHw5hB2rJsKuxV2Kux&#xA;V2KuxVacVU2woUXOKVBziqv/ANK3/Zf8bZP+FHVBRnIpRCHAquhxVVU4ELxildirsVdirsVfPXmP&#xA;ync3fnDX18tXNxY2GnyxwkGQ3Ucl7In1m6ZkuGdv93qKKRvXKhMgmjTI4IzFkMZv5dZ02Qw65bCN&#xA;Oi38Ib0T/wAZFb4ovmar75lY9T0l83Bz6Ex3jukOsao9o/72LlCwqk6klfkwAJH6syTOubhxx8XL&#xA;mxm81FbyVY43V+R2VDUAdySMiMsSaBtn4JiLIpGaJ5d1LzHqaaXpYCihMlw2yqq05EfzEchsPH6c&#xA;hm1AjsObPT6U5DZ5PavLn5X6BommyW3D17idCtzOwBL16g1/Z/yen68wCSTZd1DGIigzn8s9cuLd&#xA;5fKWoyGSexT1NLnckmW0BA9Mk1q0JYDfqpHcNkoHo15I09AyxrdirsVdirsVaxVacUKbHCqi5xSo&#xA;SHFVf/pWf7L/AI2yfRHVARnIpRKHAquhxVWU4oXg4FX4pdirsVdiry6xie18xeabOUcZf0l9bX/K&#xA;hubeJkcfSrL81OY55lyIcnajbwTxmOaNZEOxVhXrhbQ80P5cWVxptw8N29owubtxHQPCqLcSBAEN&#xA;CvFKD4WyeLLKPJx8ukhPfqg7D8mdd1byYNa05Yp2tru9c2yFlnuoY2hi4RfCVDcoJyKk1JGETIJl&#xA;Ec2g4RQjI3T0XQNM8uXHlqzPl/jBDEfUtZgtJI51qGEqn4uW5WRTudxlPNzAKTWC6M6ESJ6VxH8M&#xA;8Va8W8VNByU/smn3GowhkkfmO8fSLiw8wxHi+l3CSynpWCtJ1PzhLj6cN1uiYsPasvcR2KuxV2Ku&#xA;xVo4qsY4oUmOFVFzilDyHCqJr/uK/wBl/wAbZPojql8ZyCUQhwKiEOKqynFVRTgQvGKW8VdirsVY&#xA;V570/wCp39p5ki2iVRYaqAOsEj1glP8Axhmansrse2VZB1bMcuiT3XQ5FyQxXVWl9CPSdNbne6hc&#xA;elFUVCyXExFWA/ZVnq3+SDiFkaD2rRdJtdH0iz0u0B+r2UKQRlt2IQU5Me7N1J8cuAoU4RNsf1n8&#xA;v7Se+n1XRbg6TqtweVyUUSWty/8ANcQVWrf5aMr+JPTISx3uGcZkMduH1CxuFtNZtfqdxIeME6N6&#xA;ltOetIpaL8X+Q6q3WgI3yBsc2+MgWM/mFdRLoFxaBWlubtGjhgjUuxqpFSB0UV3J2wHkyL22wvrW&#xA;/sbe+tJBLaXcST28o6NHIoZGFfFTl4NuGiMKuxV2KuxVaTiqmxxQpMcKVFziqHkOFUTX/cTX/K/4&#xA;2yfRHVLYzkEomM4qiEOBVZTiqqpxQvBwKuxS3irsVUbu1t7y1mtLmMS21wjRTxN9lkcFWU+xBxIV&#xA;5HqOoRaE82lao8zXlguz+lJI08AqIZwUUhjIq/FT9sMO2Y522LlwlYS38sjBc+ctNuL5ljdo7m7g&#xA;BIIN1ItBEDWh/dzSkf6uTj0YZeT3TLXHdiqjd2dreW0lrdwpPbSjjLDIoZWHgQcSFeNX9hc3Tarp&#xA;ttelbW1uZrJGnX1pOCEFTzDRtzWpHJiTsK/FUnHcuBsIfRPNOteR2jtiz3+hwqBLZueTrEuxltye&#xA;jACpj+y3ah3yQNDZhPHb220uoLu1hurd+dvcIssL0I5I4DKaGh3By4Fx1bFXYq0TiqwnFCmxwqpO&#xA;cUqDnFUPIcKouv8AuHr/AJX/ABtk+iOqVxtkEomNsVRCNgVWQ4qrKcVVAcCFwOKV2KuxV2KvM/Pk&#xA;Lzeb3W0mNrcpp1v9ak48+cbzXAhADbBoyshB/wArcEZTPm5GHkwfX7ONbsqhKcwsqMh4sjg1DKw6&#xA;MrLyB7HDzDZIPUvyr843nmjyybi9jP1yyneynu1XjDctFt68R6Ub9oDo1RkscrDizjRZlk2LsVeN&#xA;6vDqXl3zFrp1DT7kaNe3rXtpq0MZlt1WeNDIs3p82i4y8vidQvvmOQQS5OOYqkFrltDqekPJbusg&#xA;ZC0UqEMrKwoaEVBFN8IbS9b8pzxz+V9Ilj+y9nAadwfTWoNO4Oxy6PJwjzTbChrFVpOKFjHFVNjh&#xA;SoucVQ7thVDyNiqMr/uEr/lf8bZPojqlMbZFKKjbAqIRsVV0bAqspxVUU4oXg4FXA4pXYq7FWHef&#xA;tFXgnmG3FLiyT0r+n+7LOpYk+8DMZAey8x+1lcx1bcUqLzDXbC71jXbHQ7RmjuNTdLYzJ9qKKjST&#xA;yj3SJWK+9MgeVd7dM0910rS7DStNttN0+FbeytI1it4V6Kiig/tPfLgKcQlF4VdirsVYV5r8o2Vt&#xA;BPrGlxLbvGGmv7WMUjmQCryBBsJV+1VR8fRqniVrlHqG3HkrYob8vdbis5W8u3LhRI7zaQx6OrVl&#xA;liB/mQ8n+R/ycYFOWFG2e5Y0tE4oWE4qpscKVJmxVRdsVQ8jYVQ8jYqjq/7ga/5X/G+T6I6pPG2R&#xA;SiY2wKiEbFUQjYFVlbFVVWxVUBxQuBwKuBxS3iqnci3NvKLnj9XKN63OgThT4uVdqU64q8u/LWzj&#xA;m82G9kf1JrfTQsfLqTKYeTj3+Cn+yyqAb8p2erZa0OxV2KuxVZLGksTxOKpIpVh7EUOKvLPMGhnQ&#xA;NSs7OK4mWCReek35YetHNClHi5gCrcPiFftLyB2BrSRRcmEuIUU58ned9SuNX/QOr8bq5ZS1rfwp&#xA;x5BF5Ms6D4VbwZfhPSimnKcZHq1ZMdM4JybUsY4VU2bFKi7Yqou2FUPI2KoaRsKphX/nXq/5X/G+&#xA;S6I6pJG2RSio2xVEI2BUQjYqrK2BVZWxVUVsVXhsULwcCse1zzLqthqSWdppM10hQSG4CzGM9aqG&#xA;himVStKnmwPYKa1yEpEHkzjEHqw7V5/MPmS5FsLe7vuDAiyMEljYRsp2eZpgpcrseLO++6oDkDcm&#xA;0cMW/Lfl3zzpfnqxuruxDW7rLDe3tvLG9uIHj5cfjMctRKkf+6/45IA2icxIPVMsaXYq6oxV1cVa&#xA;JxVK/MOg2Ou6d9Ruy6Kskc0U0RCyxyRMGV0LBhXsaihBIOxwSjaYyo2lmg+SrTRtXm1Nbua6mkh9&#xA;BPWEQKqzBnqYkjDVKLTbanfBGNJlMlkJbJsVNmxVSZsVUnbCqg7Yqh5GxVDSNhVMq/8AOt1/y/8A&#xA;jfJdEdUhjfAyRUb4EImN8VV0bAqujYqrK2BVRWxVUDYqvDYquDYELgcVbrirq4q6uKurirVcVaJx&#xA;VaWwqtLYpWM2KqTNiqkzYVUXbFVB3xVDyPhVDSPiqa8v+dXr/l/8b5Pojqx2J8iyRUb4oRMb4FRC&#xA;PgVXR8VVlfFVVWwKqK2KqgbFVwbFVwbFW+WKG+WKu5Yq1yxV3LFVpbFVpbFKwtiqxmxVSZsVUnfC&#xA;qg74qoO+FUPI+KoWR8KU45f86nX/AC/+ZmS6MerGonwMkVG+BUTG+BCJR8VV0fAqsr4qqq+Kqqvg&#xA;VeHxVeGxVcGxVsNirfLFXcsVdyxVotiq0tiq0tiqwviqmz4VUmfFVF3xVRd8Kod3xVDSPhVDSPil&#xA;O+X/ADp1f+LP+ZmS6MerFopMDJFRvgVFRviqIR8CFdHxVXR8Cqqviqqr4qqB8VXh8Crg+Kth8Vb5&#xA;4q7nirueKtF8VWl8VWl8KqbPiqmz4qpM+KqLvhVQd8VUJHwqhpHxShZHwqn3L/nSa/8AFn/M3D0Y&#xA;9X//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:AC745D52CAA6DF11AA75DE9B6F5822C8</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:AD745D52CAA6DF11AA75DE9B6F5822C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5EFE6032C9A6DF118A26F933FBE5E206</stRef:instanceID>
            <stRef:documentID>xmp.did:5EFE6032C9A6DF118A26F933FBE5E206</stRef:documentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>209.921726</stDim:w>
            <stDim:h>255.764061</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>193</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>45</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>28</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>241</xapG:red>
                           <xapG:green>90</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>247</xapG:red>
                           <xapG:green>147</xapG:green>
                           <xapG:blue>30</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>251</xapG:red>
                           <xapG:green>176</xapG:green>
                           <xapG:blue>59</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>252</xapG:red>
                           <xapG:green>238</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>217</xapG:red>
                           <xapG:green>224</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>198</xapG:green>
                           <xapG:blue>63</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>57</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>74</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>146</xapG:green>
                           <xapG:blue>69</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>104</xapG:green>
                           <xapG:blue>55</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>34</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>115</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>41</xapG:red>
                           <xapG:green>171</xapG:green>
                           <xapG:blue>226</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>113</xapG:green>
                           <xapG:blue>188</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>46</xapG:red>
                           <xapG:green>49</xapG:green>
                           <xapG:blue>146</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>27</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>100</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>45</xapG:green>
                           <xapG:blue>145</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>147</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>143</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>158</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>93</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>212</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>90</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>30</xapG:green>
                           <xapG:blue>121</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>199</xapG:red>
                           <xapG:green>178</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>134</xapG:green>
                           <xapG:blue>117</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>115</xapG:red>
                           <xapG:green>99</xapG:green>
                           <xapG:blue>87</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>83</xapG:red>
                           <xapG:green>71</xapG:green>
                           <xapG:blue>65</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>198</xapG:red>
                           <xapG:green>156</xapG:green>
                           <xapG:blue>109</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>166</xapG:red>
                           <xapG:green>124</xapG:green>
                           <xapG:blue>82</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>98</xapG:green>
                           <xapG:blue>57</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>117</xapG:red>
                           <xapG:green>76</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>96</xapG:red>
                           <xapG:green>56</xapG:green>
                           <xapG:blue>19</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>66</xapG:red>
                           <xapG:green>33</xapG:green>
                           <xapG:blue>11</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=0 B=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=26 G=26 B=26</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>26</xapG:red>
                           <xapG:green>26</xapG:green>
                           <xapG:blue>26</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=51 G=51 B=51</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>51</xapG:red>
                           <xapG:green>51</xapG:green>
                           <xapG:blue>51</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=77 G=77 B=77</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>77</xapG:red>
                           <xapG:green>77</xapG:green>
                           <xapG:blue>77</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=102 B=102</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>102</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=128 G=128 B=128</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>128</xapG:red>
                           <xapG:green>128</xapG:green>
                           <xapG:blue>128</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=153 B=153</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>153</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=179 G=179 B=179</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>179</xapG:red>
                           <xapG:green>179</xapG:green>
                           <xapG:blue>179</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=204 G=204 B=204</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>204</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=230 G=230 B=230</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>230</xapG:red>
                           <xapG:green>230</xapG:green>
                           <xapG:blue>230</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=242 G=242 B=242</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>242</xapG:red>
                           <xapG:green>242</xapG:green>
                           <xapG:blue>242</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=214 G=149 B=68</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>214</xapG:red>
                           <xapG:green>149</xapG:green>
                           <xapG:blue>68</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=71 G=152 B=237</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>71</xapG:red>
                           <xapG:green>152</xapG:green>
                           <xapG:blue>237</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=42 G=81 B=224</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>42</xapG:red>
                           <xapG:green>81</xapG:green>
                           <xapG:blue>224</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=180 G=58 B=228</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>180</xapG:red>
                           <xapG:green>58</xapG:green>
                           <xapG:blue>228</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -725 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 725 li
595.054 725 li
595.054 0 li
cp
clp
[1 0 0 1 0 0 ]ct
574.281 679.482 mo
30.402 679.482 li
30.402 46.602 li
574.281 46.602 li
574.281 679.482 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[366.544 0 0 404.503 302.344 363.042 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .94902 .960784 ]
/C1 [.847059 .94902 .960784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .94902 .960784 ]
/C1 [.0901961 .427451 .490196 ]
/N 1.44015 
>>
]
/Bounds [.460606 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[366.544 0 0 404.503 302.344 363.042 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"g-f@SU)e^`1!
e'c[ld*U+ac-4ASb/q`F`l5m6_SO%&^:h1j\[],W[Bm0DYck11X/W%qV50l[TV%dFR[KP/Q'7AmO,]*U
M2-h=K7SN$I!^-_G'%bEDf'<*BP1md@UNMI>?P$-;c6Fe9M.lH770@*4Zkbb2Dd0C/hAJ#-6scX*ZZ1;
~>
<~o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()>@naZ/=nF5o8
mdBN1mHj0)lK[Wuki_-kjlPR`j5T%Vi8<DIh;$c=g"G$0f%&:"e'cXjcd'eZbK@rJa2Z*:_ns7*^V7Co
]=PP_\$i]OZa-g=Y-"e+Wi2hmV50l[TV%gHS!ob4Q^*f!P)t`bN/NRMLPCM8Jq8E#I=$9cGBS+MEcH#8
~>
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%@tLo^qeIoCMPD
o'u8>nF5o8mdBK/m-F!&lKRNrkN:pgjQ,@\io/hRhqm2FgtUQ9g"=p-e^`0uda?Ffcd'eZbK@rJa2Z*:
`5BI.^q[Us]Xtbc\@8oS['R'BYHG"/X/`.tVl$;dU7n6PSt2C?R@'>,Q'@GoOH5E\Mi*@IL4t;5JUi6!
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
595.053 725.004 mo
0 725.004 li
0 0 li
595.053 0 li
595.053 725.004 li
223.022 628.697 mo
223.126 628.697 223.23 628.708 223.335 628.731 cv
225.252 629.136 224.406 630.702 229.635 631.575 cv
230.551 631.728 231.441 631.797 232.304 631.797 cv
236.478 631.797 240.043 630.18 243.108 628.569 cv
246.171 626.953 248.744 625.337 250.921 625.337 cv
250.951 625.337 250.98 625.337 251.01 625.338 cv
255.661 625.434 259.28 628.897 263.179 628.897 cv
263.317 628.897 263.454 628.893 263.592 628.884 cv
269.505 628.506 264.987 620.442 262.575 614.124 cv
260.253 608.031 259.713 599.148 267.705 581.157 cv
274.554 565.749 281.574 561.762 281.574 561.762 cv
281.574 561.762 274.005 550.332 263.943 540.351 cv
263.943 540.351 262.467 536.76 263.196 532.89 cv
264.465 526.122 268.551 515.061 271.008 509.823 cv
273.773 503.905 277.675 496.433 278.824 488.639 cv
279.801 488.863 280.476 489.024 280.827 489.177 cv
280.827 489.177 li
280.827 489.177 li
280.827 489.177 279.279 481.32 279.072 476.118 cv
279.829 476.077 280.572 475.929 281.295 475.695 cv
281.303 475.727 282.91 482.391 284.616 489.897 cv
284.616 489.897 285.829 488.856 287.941 487.077 cv
291.922 492.851 298.33 500.68 306.918 505.152 cv
319.743 511.83 336.213 519.966 345.42 530.46 cv
345.42 530.46 341.604 548.793 346.779 560.421 cv
346.779 560.421 368.406 565.083 378.225 576.909 cv
388.053 588.726 383.328 592.353 385.29 595.602 cv
385.29 595.602 386.406 595.549 387.812 595.549 cv
388.736 595.549 389.785 595.572 390.726 595.647 cv
390.726 595.647 401.679 613.782 403.956 619.407 cv
403.956 619.407 405.9 619.165 408.25 619.165 cv
410.632 619.165 413.431 619.414 415.044 620.415 cv
415.751 620.855 416.406 621.042 417.002 621.042 cv
420.024 621.042 421.493 616.218 420.192 615.105 cv
420.192 615.105 424.575 607.851 424.062 606.231 cv
424.062 606.231 421.371 603.612 419.193 602.658 cv
419.193 602.658 416.691 599.13 412.137 597.222 cv
407.592 595.314 402.912 593.019 401.985 591.498 cv
401.985 591.498 404.127 588.924 401.544 586.818 cv
398.961 584.73 395.19 582.57 389.295 567.891 cv
383.4 553.212 386.937 540.711 386.937 540.711 cv
386.937 540.711 380.781 530.82 365.067 522.333 cv
365.067 522.333 365.589 518.247 361.782 514.17 cv
361.782 514.17 365.166 496.611 356.886 479.448 cv
351.056 467.351 341.851 455.298 336.924 449.237 cv
341.579 446.158 345.795 443.653 349.164 442.116 cv
349.164 442.116 336.753 431.361 316.341 421.551 cv
316.341 421.551 316.152 421.565 315.793 421.592 cv
313.828 418.692 311.688 411.201 311.688 411.201 cv
318.672 402.084 316.404 394.137 317.376 382.5 cv
318.348 370.872 335.736 354.06 359.784 332.136 cv
376.956 316.494 378.828 285.831 382.905 276.525 cv
386.973 267.219 390.438 262.863 414.279 260.919 cv
438.129 258.984 458.1 244.269 461.97 229.734 cv
465.849 215.19 476.082 184.545 482.67 174.906 cv
489.258 165.258 491.319 163.701 484.731 156.546 cv
478.134 149.382 474.867 133.398 472.932 128.142 cv
470.988 122.895 452.691 111.294 445.716 110.709 cv
438.732 110.124 424.287 107.721 407.034 99.774 cv
401.119 97.0495 396.943 96.0357 393.766 96.0357 cv
387.675 96.0357 385.257 99.7629 381.312 102.312 cv
375.3 106.182 369.189 109.251 363.753 113.517 cv
358.326 117.783 364.545 127.872 371.556 134.883 cv
372.385 135.712 374.112 136.117 376.367 136.117 cv
377.124 136.117 377.94 136.071 378.801 135.981 cv
378.974 135.961 379.161 135.953 379.36 135.953 cv
379.969 135.953 380.685 136.032 381.411 136.107 cv
382.151 136.187 382.909 136.266 383.587 136.266 cv
383.981 136.266 384.348 136.239 384.669 136.17 cv
386.028 135.855 387.441 134.856 388.629 134.451 cv
390.582 133.785 391.77 132.786 392.589 132.021 cv
395.064 129.699 396.801 123.885 393.39 120.942 cv
397.584 116.946 399.879 120.672 397.737 110.295 cv
397.726 110.242 397.732 110.216 397.755 110.216 cv
398.161 110.216 403.756 118.413 411.147 136.134 cv
418.465 153.698 433.327 153.999 434.339 153.999 cv
434.375 153.999 434.394 153.999 434.394 153.999 cv
431.24 155.416 428.243 155.893 425.236 155.893 cv
422.151 155.893 419.054 155.391 415.764 154.89 cv
412.476 154.39 409.001 153.889 405.15 153.889 cv
404.151 153.889 403.127 153.923 402.075 153.999 cv
392.193 154.701 383.391 179.307 383.391 179.307 cv
376.717 176.103 370.235 174.936 364.329 174.936 cv
348.453 174.936 336.753 183.375 336.753 183.375 cv
334.926 188.685 333.405 192.15 333.405 192.15 cv
326.916 191.196 322.191 190.341 322.191 190.341 cv
320.384 185.362 313.776 159.079 310.933 147.663 cv
311.114 147.668 311.294 147.671 311.471 147.671 cv
318.063 147.671 322.071 144.282 324.495 138.15 cv
328.194 128.835 323.748 119.943 313.47 119.196 cv
313.004 119.162 312.549 119.146 312.106 119.146 cv
312.036 119.146 311.966 119.146 311.896 119.147 cv
311.829 114.369 311.378 102.785 308.655 96.966 cv
305.829 90.936 301.239 89.118 301.239 89.118 cv
301.239 89.118 302.548 86.5956 305.897 86.5956 cv
306.534 86.5956 307.244 86.6868 308.034 86.904 cv
308.034 86.904 li
308.034 86.904 li
308.034 86.904 306.377 85.156 303.355 85.156 cv
302.024 85.156 300.429 85.495 298.593 86.472 cv
298.593 86.472 299.16 85.347 301.455 84.231 cv
303.912 83.034 306.936 82.71 307.557 79.938 cv
308.412 76.131 306.027 74.007 301.455 73.98 cv
301.455 73.98 304.389 74.475 302.958 77.409 cv
302.121 79.119 300.357 78.939 298.98 79.668 cv
296.163 81.144 296.019 84.231 296.019 84.231 cv
296.019 84.231 293.617 74.2323 286.306 74.2323 cv
286.182 74.2323 286.057 74.2351 285.93 74.241 cv
281.873 74.4325 279.056 78.4983 274.053 78.4984 cv
272.708 78.4984 271.205 78.2047 269.478 77.463 cv
261.324 73.962 256.158 64.872 246.447 60.363 cv
241.929 58.2706 236.472 57.065 231.116 57.065 cv
221.291 57.065 211.801 61.1187 209.034 71.19 cv
206.549 80.2168 216.206 89.8507 221.771 92.0768 cv
222.364 97.9539 217.591 111.995 217.332 114.228 cv
217.332 114.228 222.93 117.864 222.435 119.043 cv
221.94 120.222 216.666 128.916 216.666 128.916 cv
216.666 128.916 217.899 132.813 219.411 135.81 cv
219.411 135.81 205.416 186.39 204.525 190.44 cv
204.525 190.44 203.74 191.212 202.561 192.383 cv
199.621 190.842 198.752 187.11 192.87 184.914 cv
188.957 183.455 185.154 182.975 181.84 182.975 cv
175.466 182.975 170.91 184.752 170.91 184.752 cv
168.579 177.768 168.399 173.601 152.811 164.007 cv
152.513 163.824 152.244 163.745 151.972 163.745 cv
150.493 163.745 148.93 166.08 142.218 166.734 cv
141.386 166.815 140.604 166.851 139.869 166.851 cv
133.579 166.851 130.779 164.196 130.779 164.196 cv
153.144 157.95 151.047 138.609 153.954 131.778 cv
156.172 126.567 157.666 125.949 158.251 125.949 cv
158.432 125.949 158.526 126.009 158.526 126.009 cv
158.31 126.009 158.004 129.204 160.344 131.733 cv
161.919 133.443 163.773 133.875 163.773 133.875 cv
162.126 138.132 161.505 141.489 167.319 144.594 cv
169.642 145.831 170.901 146.243 171.858 146.243 cv
173.296 146.243 174.049 145.311 176.697 144.846 cv
182.709 143.793 183.42 140.427 183.42 140.427 cv
183.525 140.436 183.628 140.44 183.729 140.44 cv
187.649 140.439 189.189 134.163 189.189 134.163 cv
189 130.896 194.256 120.213 188.955 117.216 cv
185.373 115.2 172.197 112.275 167.355 109.62 cv
165.087 108.379 163.599 107.748 162.096 107.748 cv
159.36 107.748 156.575 109.843 148.941 114.165 cv
138.672 119.988 122.589 117.54 110.367 123.174 cv
98.154 128.799 93.645 138.87 88.794 147.708 cv
83.952 156.555 76.05 160.533 74.106 162.279 cv
72.171 164.025 75.717 168.345 77.499 177.12 cv
78.912 184.113 78.129 200.331 89.37 224.856 cv
100.62 249.381 116.469 257.409 137.799 266.328 cv
159.129 275.247 156.456 288.936 169.254 317.241 cv
182.043 345.546 222.093 365.274 224.415 391.059 cv
226.446 413.53 230.792 414.977 231.878 414.977 cv
232.039 414.977 232.128 414.945 232.128 414.945 cv
231.286 417.634 229.825 422.589 231.206 425.126 cv
228.441 428.328 209.443 450.398 204.957 457.686 cv
204.957 457.686 208.223 458.247 213.477 459.803 cv
209.616 468.267 205.971 480.257 209.736 491.553 cv
214.875 506.961 224.181 520.479 228.186 529.497 cv
232.2 538.515 233.001 539.631 235.575 540.792 cv
235.575 540.792 233.829 547.335 237.978 550.719 cv
237.978 551.745 li
237.978 551.745 234.756 564.129 235.242 567.477 cv
235.242 567.477 252.729 588.096 250.965 608.013 cv
250.965 608.013 249.39 610.515 241.002 615.672 cv
235.395 619.128 233.541 619.866 224.388 623.79 cv
224.388 623.79 222.489 623.529 220.401 622.8 cv
220.131 622.706 219.871 622.662 219.61 622.662 cv
217.852 622.662 216.082 624.645 211.41 626.463 cv
211.41 626.463 212.706 630.63 216.342 631.116 cv
216.591 631.149 216.83 631.164 217.059 631.164 cv
218.527 631.164 219.628 630.543 220.554 629.928 cv
221.484 629.316 222.238 628.697 223.022 628.697 cv
level3{
gsave
clp
[482.607 0 0 610.557 299.536 361.259 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [1 .992157 .941176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [.6 .560784 .580392 ]
/N 1.66691 
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[482.607 0 0 610.557 299.536 361.259 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr2orrr2orrr)forVcZlr;?Hh
qtg0cq>'j]q"OOWp@e1Pp%7nJoCDJBnaQ&:n*]T1m-O'(lKRQski_*jjlGL_io8qThr!;Hh;$c=g=b-1
f%/C$e'c[ld*L"^c-4ARaiMNB`l5m6_SO%&^:h1k]",>[[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1<
~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nr;?Kjr;?Kjqtp9fqtg0cqYBs_
q"XXYp\4CTp%@tLo^h\Fo'u8>nF,i6md9B-lg*j#l0.?ok2tddjQ#7ZiS`VNhVI#CgY1?6f[n^*e^W'r
dF$=ecHXSVb/qcHa2Z*:_ns7*^V7Co]=PP_\$i]OZa-j?YHG"/Wi;qpVPU)`TqJ$LSXc1;R$X,(PEM&i
~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:n*f`6n*f`6n*]W3mdBN1mHs<-
m-O'(lg*j$lKRQskih3mk2tgfjlGL_j5].YiSi_Qhr!;Ih;$f?gY1B7f\"g-f%&=#eC2jodEp7dcHa\Y
bKJ&MaiMNB`l5m6_ns7*^V@Lr]Xtee\[],W[C*BJZE^X;Y-+n.X/`.tVl$;dUS=HTTV%gHS=>t8R$X,(
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
404.557 411.889 mo
402.9 412.749 400.916 413.179 398.6 413.179 cv
396.488 413.179 394.619 412.509 392.992 411.174 cv
391.367 409.837 390.555 408.04 390.555 405.779 cv
390.555 404.283 390.941 402.911 391.719 401.657 cv
392.492 400.407 393.488 399.376 394.703 398.572 cv
395.691 397.881 396.824 397.349 398.096 396.975 cv
399.365 396.602 400.684 396.415 402.047 396.415 cv
402.271 396.415 402.49 396.419 402.707 396.428 cv
402.92 396.438 403.141 396.453 403.365 396.471 cv
404.133 396.526 404.883 396.663 405.621 396.877 cv
406.359 397.092 407.018 397.461 407.598 397.984 cv
407.896 398.245 408.111 398.54 408.242 398.868 cv
408.373 399.196 408.439 399.527 408.439 399.863 cv
408.439 400.554 408.188 401.184 407.684 401.754 cv
407.176 402.326 406.523 402.62 405.721 402.638 cv
405.254 402.657 404.842 402.577 404.486 402.4 cv
404.133 402.223 403.795 402.003 403.477 401.741 cv
403.254 401.558 li
403.029 401.349 li
403.184 401.278 li
403.338 401.208 li
403.711 401.003 404.037 400.785 404.318 400.55 cv
404.6 400.316 404.822 399.975 404.99 399.527 cv
405.063 399.317 li
405.076 399.105 li
405.076 398.788 404.943 398.545 404.684 398.376 cv
404.422 398.208 404.104 398.125 403.73 398.125 cv
402.721 398.125 401.822 398.526 401.039 399.331 cv
400.254 400.133 399.59 401.022 399.047 401.993 cv
398.824 402.405 398.623 402.816 398.445 403.227 cv
398.268 403.638 398.113 404.012 397.982 404.348 cv
397.834 404.759 397.693 405.227 397.563 405.75 cv
397.432 406.273 397.357 406.797 397.338 407.32 cv
397.338 407.474 li
397.338 407.628 li
397.338 408.319 397.473 408.964 397.742 409.562 cv
398.016 410.161 398.516 410.59 399.242 410.851 cv
399.506 410.945 399.771 411.016 400.043 411.062 cv
400.314 411.109 400.59 411.131 400.869 411.131 cv
401.08 411.131 li
401.262 411.104 li
402.422 411.03 403.523 410.622 404.57 409.884 cv
405.617 409.147 406.393 408.292 406.898 407.32 cv
406.953 407.221 li
407.01 407.124 li
407.064 407.04 li
407.121 406.928 li
408.188 407.32 li
408.748 407.543 li
407.607 409.581 406.209 411.03 404.557 411.889 cv
cp
.25098 .180392 0 rgb
f
421.193 411.932 mo
420.223 412.931 418.859 413.43 417.102 413.43 cv
416.99 413.43 416.871 413.426 416.752 413.417 cv
416.629 413.408 416.514 413.403 416.4 413.403 cv
415.953 413.346 415.521 413.235 415.111 413.067 cv
414.701 412.899 414.355 412.628 414.074 412.254 cv
413.887 411.992 413.756 411.72 413.682 411.441 cv
413.607 411.161 413.57 410.871 413.57 410.572 cv
413.57 410.346 li
413.598 410.122 li
413.635 409.75 413.709 409.375 413.822 409 cv
413.934 408.627 414.057 408.283 414.186 407.965 cv
414.205 407.909 414.242 407.816 414.297 407.684 cv
414.355 407.554 414.41 407.404 414.467 407.235 cv
414.504 407.161 414.537 407.078 414.564 406.983 cv
414.592 406.889 414.615 406.797 414.635 406.704 cv
414.672 406.572 414.705 406.437 414.732 406.296 cv
414.76 406.157 414.773 406.032 414.773 405.917 cv
414.773 405.75 414.742 405.614 414.676 405.512 cv
414.611 405.409 414.494 405.359 414.324 405.359 cv
413.99 405.359 413.672 405.502 413.375 405.792 cv
413.074 406.081 412.822 406.395 412.617 406.731 cv
412.504 406.917 412.406 407.092 412.322 407.25 cv
412.236 407.409 412.178 407.554 412.141 407.684 cv
411.934 408.227 411.738 408.772 411.553 409.324 cv
411.363 409.875 411.176 410.422 410.99 410.964 cv
410.859 411.338 410.732 411.706 410.611 412.072 cv
410.49 412.436 410.363 412.804 410.234 413.179 cv
404.879 413.179 li
410.178 397.76 li
415.559 397.76 li
414.832 399.865 li
413.43 403.926 li
413.822 403.722 414.256 403.54 414.732 403.379 cv
415.209 403.222 415.699 403.113 416.205 403.058 cv
416.297 403.058 416.395 403.054 416.5 403.044 cv
416.602 403.035 416.699 403.03 416.793 403.03 cv
417.336 403.048 417.859 403.142 418.363 403.311 cv
418.867 403.479 419.299 403.769 419.652 404.179 cv
419.896 404.442 420.068 404.727 420.172 405.035 cv
420.273 405.344 420.326 405.656 420.326 405.975 cv
420.326 406.161 420.311 406.343 420.283 406.521 cv
420.256 406.7 420.205 406.881 420.129 407.067 cv
420.074 407.254 420.012 407.446 419.947 407.642 cv
419.883 407.838 419.813 408.04 419.736 408.245 cv
419.662 408.431 419.592 408.623 419.525 408.819 cv
419.461 409.016 419.4 409.217 419.344 409.422 cv
419.289 409.534 li
419.232 409.674 li
419.176 409.842 li
419.121 410.04 li
419.107 410.179 li
419.094 410.319 li
419.094 410.412 419.115 410.492 419.162 410.557 cv
419.209 410.622 419.299 410.655 419.428 410.655 cv
419.521 410.655 419.615 410.641 419.709 410.613 cv
419.803 410.585 419.896 410.542 419.988 410.488 cv
420.25 410.356 420.504 410.17 420.746 409.927 cv
420.988 409.684 421.213 409.432 421.42 409.168 cv
421.549 408.983 421.67 408.796 421.783 408.609 cv
421.896 408.422 421.979 408.254 422.035 408.105 cv
422.092 407.993 li
422.148 407.852 li
422.205 407.74 li
422.26 407.628 li
423.66 408.3 li
422.988 409.721 422.164 410.932 421.193 411.932 cv
cp
f
431.02 404.965 mo
430.953 404.834 430.789 404.769 430.529 404.769 cv
430.436 404.769 430.342 404.778 430.248 404.796 cv
430.156 404.816 430.063 404.844 429.969 404.881 cv
429.613 405.03 429.258 405.292 428.902 405.667 cv
428.549 406.04 428.229 406.442 427.949 406.872 cv
427.744 407.169 427.563 407.463 427.402 407.753 cv
427.244 408.044 427.129 408.292 427.053 408.497 cv
427.033 408.553 427.002 408.647 426.955 408.777 cv
426.908 408.909 426.865 409.057 426.828 409.225 cv
426.791 409.358 426.752 409.491 426.719 409.631 cv
426.678 409.772 426.65 409.917 426.633 410.067 cv
426.594 410.179 426.57 410.301 426.563 410.431 cv
426.553 410.563 426.549 410.684 426.549 410.795 cv
426.549 411.076 426.594 411.309 426.688 411.497 cv
426.781 411.684 426.949 411.778 427.193 411.778 cv
427.734 411.778 428.215 411.554 428.637 411.104 cv
429.057 410.655 429.418 410.161 429.717 409.618 cv
429.885 409.337 430.023 409.067 430.137 408.805 cv
430.248 408.543 430.352 408.31 430.445 408.105 cv
430.67 407.526 430.836 407.021 430.949 406.59 cv
431.063 406.161 431.117 405.796 431.117 405.497 cv
431.117 405.274 431.084 405.096 431.02 404.965 cv
cp
437.523 411.959 mo
436.561 412.941 435.182 413.43 433.389 413.43 cv
433.318 413.43 li
433.248 413.43 li
432.65 413.413 432.084 413.278 431.553 413.025 cv
431.02 412.772 430.623 412.356 430.361 411.778 cv
429.857 412.244 429.281 412.622 428.637 412.913 cv
427.992 413.202 427.334 413.375 426.66 413.43 cv
426.422 413.458 li
426.338 413.458 426.25 413.458 426.156 413.458 cv
425.502 413.442 424.871 413.309 424.264 413.067 cv
423.656 412.823 423.119 412.412 422.652 411.833 cv
422.297 411.404 422.039 410.955 421.881 410.488 cv
421.723 410.02 421.643 409.543 421.643 409.057 cv
421.643 408.198 421.871 407.367 422.33 406.563 cv
422.787 405.759 423.373 405.087 424.08 404.543 cv
424.623 404.132 425.25 403.792 425.959 403.521 cv
426.67 403.25 427.398 403.096 428.146 403.058 cv
428.385 403.03 li
428.623 403.03 li
429.221 403.03 429.801 403.12 430.361 403.295 cv
430.922 403.474 431.426 403.75 431.873 404.124 cv
432.156 403.283 li
433.07 403.283 433.98 403.283 434.889 403.283 cv
435.795 403.283 436.705 403.283 437.621 403.283 cv
437.508 403.619 437.393 403.961 437.271 404.306 cv
437.148 404.652 437.031 404.994 436.92 405.33 cv
436.678 406.001 436.439 406.679 436.205 407.362 cv
435.973 408.044 435.744 408.731 435.52 409.422 cv
435.49 409.491 li
435.463 409.618 li
435.408 409.772 li
435.379 409.955 li
435.352 410.067 li
435.352 410.179 li
435.393 410.404 li
435.547 410.542 li
435.672 410.585 li
435.828 410.572 li
435.939 410.572 436.047 410.548 436.15 410.501 cv
436.254 410.455 436.359 410.404 436.473 410.346 cv
436.678 410.216 436.883 410.049 437.088 409.842 cv
437.295 409.638 437.482 409.422 437.65 409.197 cv
437.818 408.993 437.963 408.787 438.084 408.581 cv
438.205 408.375 438.293 408.208 438.35 408.077 cv
438.406 407.965 li
438.463 407.852 li
438.49 407.74 li
438.547 407.628 li
440.004 408.273 li
439.313 409.75 438.486 410.979 437.523 411.959 cv
cp
f
454.666 404.965 mo
454.666 405.077 454.666 405.18 454.666 405.274 cv
454.666 405.965 454.455 406.51 454.035 406.914 cv
453.615 407.316 453.152 407.516 452.648 407.516 cv
452.605 407.516 li
452.564 407.516 li
452.17 407.516 451.797 407.385 451.441 407.124 cv
451.086 406.862 450.834 406.442 450.686 405.863 cv
450.629 405.694 450.559 405.569 450.475 405.484 cv
450.391 405.399 450.293 405.367 450.18 405.384 cv
449.994 405.384 449.783 405.493 449.549 405.707 cv
449.314 405.922 449.068 406.216 448.807 406.59 cv
448.359 407.169 447.975 407.816 447.656 408.524 cv
447.34 409.235 447.059 409.955 446.816 410.684 cv
446.703 411 446.602 411.309 446.508 411.609 cv
446.414 411.908 446.313 412.208 446.201 412.506 cv
446.16 412.618 446.125 412.73 446.088 412.842 cv
446.051 412.954 446.012 413.067 445.975 413.179 cv
440.789 413.179 li
443.115 406.675 li
443.172 406.479 li
443.172 406.338 li
443.172 406.132 443.092 405.999 442.934 405.933 cv
442.773 405.867 442.594 405.843 442.387 405.863 cv
441.9 405.917 441.473 406.143 441.098 406.535 cv
440.723 406.928 440.416 407.347 440.172 407.796 cv
440.115 407.89 440.061 407.993 440.004 408.105 cv
439.947 408.216 439.9 408.319 439.863 408.413 cv
438.463 407.852 li
438.949 406.581 439.662 405.437 440.607 404.417 cv
441.551 403.401 442.734 402.854 444.154 402.778 cv
444.283 402.759 444.42 402.75 444.559 402.75 cv
444.701 402.75 444.846 402.759 444.994 402.778 cv
445.611 402.816 446.203 402.97 446.775 403.241 cv
447.344 403.512 447.799 403.918 448.135 404.458 cv
448.545 404.161 448.98 403.881 449.438 403.619 cv
449.896 403.359 450.367 403.152 450.854 403.001 cv
451.078 402.928 451.297 402.875 451.512 402.848 cv
451.727 402.819 451.936 402.805 452.143 402.805 cv
452.424 402.805 452.699 402.844 452.971 402.917 cv
453.24 402.993 453.498 403.106 453.74 403.254 cv
453.982 403.424 454.176 403.628 454.316 403.871 cv
454.455 404.114 454.555 404.368 454.609 404.628 cv
454.648 404.74 454.666 404.852 454.666 404.965 cv
cp
f
464.043 404.965 mo
463.977 404.834 463.814 404.769 463.553 404.769 cv
463.459 404.769 463.365 404.778 463.271 404.796 cv
463.18 404.816 463.084 404.844 462.992 404.881 cv
462.637 405.03 462.281 405.292 461.928 405.667 cv
461.57 406.04 461.254 406.442 460.973 406.872 cv
460.768 407.169 460.586 407.463 460.426 407.753 cv
460.268 408.044 460.15 408.292 460.076 408.497 cv
460.057 408.553 460.023 408.647 459.979 408.777 cv
459.932 408.909 459.889 409.057 459.852 409.225 cv
459.814 409.358 459.777 409.491 459.74 409.631 cv
459.701 409.772 459.674 409.917 459.654 410.067 cv
459.619 410.179 459.596 410.301 459.586 410.431 cv
459.576 410.563 459.572 410.684 459.572 410.795 cv
459.572 411.076 459.619 411.309 459.711 411.497 cv
459.805 411.684 459.973 411.778 460.217 411.778 cv
460.758 411.778 461.238 411.554 461.66 411.104 cv
462.08 410.655 462.439 410.161 462.738 409.618 cv
462.908 409.337 463.047 409.067 463.16 408.805 cv
463.271 408.543 463.375 408.31 463.469 408.105 cv
463.693 407.526 463.861 407.021 463.973 406.59 cv
464.084 406.161 464.141 405.796 464.141 405.497 cv
464.141 405.274 464.109 405.096 464.043 404.965 cv
cp
470.547 411.959 mo
469.584 412.941 468.207 413.43 466.412 413.43 cv
466.34 413.43 li
466.271 413.43 li
465.674 413.413 465.109 413.278 464.576 413.025 cv
464.043 412.772 463.645 412.356 463.383 411.778 cv
462.881 412.244 462.305 412.622 461.66 412.913 cv
461.016 413.202 460.357 413.375 459.684 413.43 cv
459.445 413.458 li
459.361 413.458 459.271 413.458 459.178 413.458 cv
458.523 413.442 457.895 413.309 457.287 413.067 cv
456.68 412.823 456.143 412.412 455.676 411.833 cv
455.32 411.404 455.063 410.955 454.904 410.488 cv
454.746 410.02 454.666 409.543 454.666 409.057 cv
454.666 408.198 454.895 407.367 455.352 406.563 cv
455.811 405.759 456.393 405.087 457.104 404.543 cv
457.646 404.132 458.271 403.792 458.982 403.521 cv
459.693 403.25 460.422 403.096 461.17 403.058 cv
461.408 403.03 li
461.646 403.03 li
462.244 403.03 462.822 403.12 463.383 403.295 cv
463.945 403.474 464.449 403.75 464.898 404.124 cv
465.178 403.283 li
466.094 403.283 467.004 403.283 467.912 403.283 cv
468.818 403.283 469.73 403.283 470.645 403.283 cv
470.533 403.619 470.416 403.961 470.295 404.306 cv
470.172 404.652 470.057 404.994 469.943 405.33 cv
469.701 406.001 469.463 406.679 469.229 407.362 cv
468.996 408.044 468.768 408.731 468.541 409.422 cv
468.514 409.491 li
468.486 409.618 li
468.43 409.772 li
468.402 409.955 li
468.375 410.067 li
468.375 410.179 li
468.416 410.404 li
468.57 410.542 li
468.697 410.585 li
468.852 410.572 li
468.963 410.572 469.07 410.548 469.174 410.501 cv
469.277 410.455 469.383 410.404 469.496 410.346 cv
469.701 410.216 469.906 410.049 470.113 409.842 cv
470.318 409.638 470.506 409.422 470.674 409.197 cv
470.842 408.993 470.984 408.787 471.107 408.581 cv
471.227 408.375 471.318 408.208 471.375 408.077 cv
471.43 407.965 li
471.486 407.852 li
471.514 407.74 li
471.57 407.628 li
473.027 408.273 li
472.338 409.75 471.51 410.979 470.547 411.959 cv
cp
f
485.965 408.455 mo
485.895 408.637 li
485.465 409.516 484.988 410.296 484.465 410.979 cv
483.941 411.661 483.193 412.235 482.223 412.703 cv
481.643 412.965 481.002 413.165 480.301 413.305 cv
479.602 413.445 478.885 413.515 478.156 413.515 cv
477.975 413.515 li
477.793 413.515 li
476.709 413.458 475.668 413.249 474.668 412.884 cv
473.666 412.521 472.85 411.936 472.215 411.131 cv
471.877 410.703 471.629 410.268 471.473 409.829 cv
471.311 409.389 471.232 408.946 471.232 408.497 cv
471.232 407.638 471.494 406.819 472.018 406.044 cv
472.541 405.267 473.213 404.647 474.037 404.179 cv
474.578 403.881 475.242 403.625 476.027 403.409 cv
476.811 403.194 477.615 403.068 478.438 403.03 cv
478.551 403.012 478.652 403.001 478.746 403.001 cv
478.838 403.001 478.932 403.001 479.027 403.001 cv
479.734 403.001 480.408 403.085 481.045 403.254 cv
481.68 403.424 482.23 403.712 482.699 404.124 cv
482.922 404.348 483.109 404.614 483.26 404.922 cv
483.408 405.23 483.502 405.555 483.539 405.89 cv
483.539 405.989 li
483.539 406.086 li
483.539 406.329 483.498 406.572 483.414 406.816 cv
483.33 407.058 483.203 407.274 483.033 407.459 cv
482.828 407.703 482.586 407.88 482.307 407.993 cv
482.025 408.105 481.727 408.161 481.408 408.161 cv
481.283 408.161 li
481.129 408.131 li
480.961 408.114 480.787 408.072 480.609 408.006 cv
480.432 407.941 480.268 407.863 480.119 407.768 cv
479.877 407.619 479.68 407.427 479.531 407.194 cv
479.381 406.959 479.289 406.713 479.25 406.451 cv
479.25 406.395 li
479.25 406.311 li
479.223 406.254 li
479.223 406.198 li
479.223 405.769 479.361 405.395 479.643 405.077 cv
479.922 404.759 480.268 404.543 480.68 404.432 cv
480.568 404.395 480.457 404.362 480.344 404.333 cv
480.23 404.306 480.109 404.302 479.979 404.321 cv
479.826 404.321 li
479.67 404.348 li
479.518 404.375 li
479.361 404.432 li
478.707 404.656 478.143 405.119 477.666 405.82 cv
477.189 406.521 476.865 407.274 476.699 408.077 cv
476.662 408.245 476.635 408.422 476.615 408.609 cv
476.598 408.796 476.588 408.973 476.588 409.141 cv
476.605 409.869 476.801 410.501 477.176 411.034 cv
477.549 411.567 478.166 411.833 479.027 411.833 cv
480.465 411.833 481.635 411.437 482.529 410.641 cv
483.428 409.848 484.164 408.862 484.746 407.684 cv
486.064 408.273 li
485.965 408.455 li
cp
f
493.701 408.567 mo
493.654 408.651 493.613 408.74 493.576 408.833 cv
493.277 409.432 492.949 410.011 492.594 410.572 cv
492.238 411.131 491.809 411.638 491.305 412.085 cv
490.836 412.497 490.283 412.823 489.637 413.067 cv
488.992 413.309 488.25 413.43 487.408 413.43 cv
487.311 413.43 li
487.242 413.43 li
486.717 413.413 486.217 413.309 485.74 413.124 cv
485.264 412.936 484.875 412.618 484.576 412.17 cv
484.391 411.889 484.254 411.59 484.172 411.273 cv
484.086 410.955 484.045 410.627 484.045 410.292 cv
484.045 410.198 484.049 410.109 484.059 410.025 cv
484.066 409.941 484.082 409.851 484.102 409.759 cv
484.139 409.497 484.189 409.235 484.254 408.973 cv
484.32 408.712 484.391 408.458 484.465 408.216 cv
484.576 407.917 484.686 407.619 484.787 407.32 cv
484.891 407.021 484.988 406.713 485.082 406.395 cv
485.176 406.096 485.273 405.796 485.375 405.497 cv
485.479 405.199 485.586 404.9 485.697 404.6 cv
484.492 404.6 li
484.969 403.254 li
486.176 403.254 li
486.268 402.974 486.361 402.699 486.455 402.427 cv
486.549 402.158 486.652 401.881 486.764 401.6 cv
486.857 401.34 486.949 401.072 487.043 400.803 cv
487.137 400.531 487.229 400.255 487.326 399.975 cv
487.941 399.881 488.557 399.793 489.176 399.708 cv
489.791 399.625 490.408 399.536 491.025 399.442 cv
491.324 399.405 491.631 399.363 491.949 399.317 cv
492.268 399.27 492.576 399.228 492.875 399.19 cv
492.764 399.527 492.646 399.863 492.523 400.2 cv
492.402 400.536 492.287 400.872 492.174 401.208 cv
492.063 401.544 491.945 401.885 491.824 402.231 cv
491.703 402.577 491.586 402.917 491.475 403.254 cv
492.986 403.254 li
492.482 404.6 li
490.998 404.6 li
490.867 404.994 490.73 405.391 490.588 405.792 cv
490.451 406.194 490.314 406.6 490.184 407.011 cv
490.033 407.421 489.895 407.83 489.764 408.23 cv
489.633 408.633 489.492 409.03 489.342 409.422 cv
489.305 409.554 489.273 409.68 489.244 409.8 cv
489.217 409.921 489.203 410.03 489.203 410.122 cv
489.203 410.292 489.24 410.409 489.314 410.474 cv
489.391 410.539 489.492 410.572 489.621 410.572 cv
489.736 410.572 489.863 410.542 490 410.488 cv
490.143 410.431 490.287 410.356 490.438 410.263 cv
490.674 410.095 li
490.914 409.898 li
491.268 409.581 491.557 409.225 491.781 408.833 cv
492.006 408.441 492.211 408.04 492.398 407.628 cv
493.828 408.3 li
493.791 408.394 493.748 408.483 493.701 408.567 cv
cp
f
501.342 404.432 mo
501.174 404.302 500.93 404.227 500.613 404.208 cv
499.92 404.189 499.322 404.452 498.818 404.994 cv
498.313 405.536 497.93 406.132 497.67 406.787 cv
497.574 407.011 497.5 407.235 497.443 407.459 cv
497.389 407.684 497.342 407.89 497.305 408.077 cv
497.529 408.059 497.762 408.031 498.006 407.993 cv
498.248 407.955 498.49 407.9 498.734 407.824 cv
499.443 407.638 500.094 407.329 500.682 406.9 cv
501.271 406.469 501.574 405.872 501.592 405.105 cv
501.592 404.788 501.51 404.563 501.342 404.432 cv
cp
505.154 410.824 mo
504.574 411.59 503.77 412.215 502.744 412.703 cv
502.125 412.984 501.477 413.188 500.795 413.319 cv
500.113 413.449 499.416 413.515 498.707 413.515 cv
498.594 413.515 498.48 413.515 498.369 413.515 cv
498.258 413.515 498.156 413.505 498.063 413.488 cv
497.613 413.467 497.174 413.417 496.744 413.333 cv
496.313 413.249 495.895 413.141 495.482 413.01 cv
494.398 412.636 493.506 412.067 492.805 411.3 cv
492.104 410.535 491.754 409.627 491.754 408.581 cv
491.754 408.319 491.777 408.053 491.824 407.783 cv
491.869 407.512 491.941 407.235 492.033 406.956 cv
492.408 405.834 493.164 404.959 494.305 404.333 cv
495.443 403.708 496.66 403.311 497.949 403.142 cv
498.229 403.106 498.504 403.077 498.775 403.058 cv
499.047 403.04 499.313 403.03 499.576 403.03 cv
499.967 403.03 500.352 403.048 500.725 403.085 cv
501.098 403.125 501.443 403.19 501.762 403.283 cv
501.916 403.325 li
502.068 403.367 li
502.611 403.516 503.121 403.779 503.598 404.151 cv
504.074 404.525 504.322 405.03 504.342 405.667 cv
504.379 406.675 503.959 407.47 503.08 408.047 cv
502.201 408.627 501.238 409.047 500.191 409.31 cv
499.613 409.458 499.051 409.562 498.51 409.618 cv
497.967 409.674 497.5 409.694 497.109 409.674 cv
497.201 410.346 497.457 410.867 497.879 411.23 cv
498.299 411.595 498.855 411.778 499.547 411.778 cv
500.947 411.778 502.125 411.384 503.08 410.6 cv
504.031 409.814 504.779 408.825 505.322 407.628 cv
506.723 408.273 li
506.256 409.208 505.732 410.058 505.154 410.824 cv
cp
f
521.441 404.965 mo
521.441 405.077 521.441 405.18 521.441 405.274 cv
521.441 405.965 521.23 406.51 520.811 406.914 cv
520.391 407.316 519.928 407.516 519.424 407.516 cv
519.381 407.516 li
519.338 407.516 li
518.945 407.516 518.572 407.385 518.217 407.124 cv
517.861 406.862 517.607 406.442 517.459 405.863 cv
517.404 405.694 517.334 405.569 517.25 405.484 cv
517.166 405.399 517.068 405.367 516.955 405.384 cv
516.77 405.384 516.559 405.493 516.324 405.707 cv
516.09 405.922 515.844 406.216 515.582 406.59 cv
515.135 407.169 514.75 407.816 514.432 408.524 cv
514.115 409.235 513.834 409.955 513.59 410.684 cv
513.479 411 513.375 411.309 513.281 411.609 cv
513.189 411.908 513.088 412.208 512.975 412.506 cv
512.938 412.618 512.898 412.73 512.861 412.842 cv
512.824 412.954 512.787 413.067 512.75 413.179 cv
507.564 413.179 li
509.891 406.675 li
509.947 406.479 li
509.947 406.338 li
509.947 406.132 509.867 405.999 509.709 405.933 cv
509.549 405.867 509.367 405.843 509.162 405.863 cv
508.676 405.917 508.246 406.143 507.873 406.535 cv
507.498 406.928 507.189 407.347 506.947 407.796 cv
506.891 407.89 506.834 407.993 506.779 408.105 cv
506.723 408.216 506.676 408.319 506.639 408.413 cv
505.236 407.852 li
505.725 406.581 506.438 405.437 507.383 404.417 cv
508.326 403.401 509.508 402.854 510.928 402.778 cv
511.061 402.759 511.193 402.75 511.334 402.75 cv
511.475 402.75 511.619 402.759 511.77 402.778 cv
512.385 402.816 512.979 402.97 513.549 403.241 cv
514.119 403.512 514.572 403.918 514.908 404.458 cv
515.32 404.161 515.754 403.881 516.213 403.619 cv
516.672 403.359 517.143 403.152 517.629 403.001 cv
517.852 402.928 518.072 402.875 518.287 402.848 cv
518.502 402.819 518.711 402.805 518.918 402.805 cv
519.197 402.805 519.475 402.844 519.746 402.917 cv
520.016 402.993 520.273 403.106 520.516 403.254 cv
520.758 403.424 520.949 403.628 521.09 403.871 cv
521.23 404.114 521.328 404.368 521.385 404.628 cv
521.422 404.74 521.441 404.852 521.441 404.965 cv
cp
f
523.516 408.047 mo
523.627 408.198 523.707 408.362 523.752 408.54 cv
523.801 408.717 523.824 408.9 523.824 409.084 cv
523.824 409.272 523.795 409.451 523.738 409.618 cv
523.684 409.786 523.6 409.947 523.486 410.095 cv
523.299 410.375 523.047 410.595 522.73 410.753 cv
522.412 410.913 522.086 410.993 521.748 410.993 cv
521.68 410.993 li
521.607 410.993 li
521.539 410.979 li
521.469 410.964 li
521.6 411.151 521.768 411.315 521.975 411.455 cv
522.18 411.595 522.402 411.666 522.646 411.666 cv
523.412 411.666 524.023 411.458 524.482 411.048 cv
524.939 410.637 525.17 410.03 525.17 409.225 cv
525.188 408.647 525.197 408.072 525.197 407.502 cv
525.197 406.932 525.197 406.367 525.197 405.806 cv
523.516 408.047 li
cp
528.869 411.819 mo
527.766 412.632 526.551 413.105 525.225 413.235 cv
525.057 413.253 524.893 413.267 524.734 413.278 cv
524.574 413.286 524.422 413.292 524.271 413.292 cv
524.084 413.292 523.889 413.286 523.684 413.278 cv
523.477 413.267 523.273 413.244 523.066 413.207 cv
522.523 413.151 521.996 413.021 521.482 412.815 cv
520.967 412.608 520.523 412.311 520.15 411.917 cv
519.889 411.6 519.697 411.263 519.576 410.908 cv
519.455 410.554 519.395 410.188 519.395 409.814 cv
519.395 409.609 519.408 409.404 519.436 409.197 cv
519.465 408.993 519.506 408.787 519.563 408.581 cv
519.693 408.096 519.955 407.716 520.346 407.446 cv
520.738 407.175 521.17 407.049 521.637 407.067 cv
521.791 407.067 li
521.918 407.067 li
522.045 407.081 li
522.197 407.124 li
524.691 403.646 li
529.99 402.301 li
530.047 403.292 530.107 404.288 530.172 405.288 cv
530.238 406.287 530.309 407.283 530.383 408.273 cv
530.477 409.824 529.973 411.006 528.869 411.819 cv
cp
f
372.301 392.752 mo
370.646 393.614 368.66 394.043 366.342 394.043 cv
364.23 394.043 362.361 393.375 360.736 392.039 cv
359.111 390.704 358.299 388.904 358.299 386.642 cv
358.299 385.146 358.686 383.773 359.461 382.522 cv
360.236 381.27 361.232 380.242 362.449 379.438 cv
363.438 378.747 364.568 378.213 365.84 377.84 cv
367.109 377.466 368.426 377.28 369.793 377.28 cv
370.016 377.28 370.236 377.284 370.451 377.293 cv
370.666 377.303 370.885 377.316 371.109 377.336 cv
371.877 377.391 372.627 377.526 373.367 377.741 cv
374.104 377.957 374.764 378.326 375.342 378.849 cv
375.641 379.112 375.855 379.406 375.986 379.733 cv
376.119 380.059 376.184 380.391 376.184 380.727 cv
376.184 381.419 375.93 382.049 375.428 382.62 cv
374.922 383.19 374.268 383.484 373.465 383.502 cv
372.996 383.521 372.586 383.442 372.23 383.264 cv
371.877 383.086 371.539 382.867 371.221 382.605 cv
370.996 382.423 li
370.773 382.212 li
370.928 382.143 li
371.082 382.073 li
371.455 381.868 371.783 381.648 372.063 381.413 cv
372.344 381.18 372.568 380.838 372.734 380.391 cv
372.807 380.18 li
372.818 379.97 li
372.818 379.654 372.689 379.409 372.428 379.242 cv
372.166 379.073 371.848 378.989 371.475 378.989 cv
370.465 378.989 369.566 379.392 368.783 380.194 cv
367.996 380.999 367.334 381.885 366.793 382.858 cv
366.568 383.268 366.367 383.68 366.191 384.092 cv
366.014 384.502 365.857 384.876 365.727 385.212 cv
365.576 385.624 365.438 386.092 365.307 386.614 cv
365.176 387.138 365.1 387.661 365.082 388.183 cv
365.082 388.338 li
365.082 388.492 li
365.082 389.184 365.219 389.829 365.488 390.426 cv
365.76 391.026 366.26 391.454 366.988 391.717 cv
367.25 391.81 367.516 391.881 367.787 391.926 cv
368.059 391.974 368.334 391.997 368.615 391.997 cv
368.824 391.997 li
369.008 391.968 li
370.166 391.895 371.268 391.488 372.316 390.75 cv
373.361 390.01 374.137 389.157 374.641 388.183 cv
374.697 388.086 li
374.752 387.988 li
374.809 387.903 li
374.865 387.792 li
375.93 388.183 li
376.492 388.409 li
375.352 390.445 373.955 391.895 372.301 392.752 cv
cp
f
384.158 385.619 mo
383.963 385.367 383.715 385.241 383.416 385.241 cv
383.229 385.241 383.023 385.292 382.799 385.395 cv
382.576 385.497 382.352 385.642 382.127 385.829 cv
382.033 385.904 381.945 385.988 381.861 386.081 cv
381.775 386.175 381.686 386.268 381.594 386.362 cv
381.164 386.867 380.816 387.441 380.557 388.086 cv
380.295 388.732 380.107 389.389 379.996 390.063 cv
379.979 390.288 379.959 390.506 379.939 390.721 cv
379.922 390.935 379.912 391.146 379.912 391.352 cv
379.912 391.463 379.916 391.605 379.926 391.772 cv
379.936 391.94 379.959 392.109 379.996 392.278 cv
380.053 392.595 380.15 392.879 380.291 393.131 cv
380.43 393.384 380.65 393.509 380.949 393.509 cv
381.416 393.509 381.832 393.347 382.195 393.019 cv
382.561 392.693 382.855 392.325 383.078 391.913 cv
383.135 391.819 383.191 391.73 383.248 391.646 cv
383.305 391.562 383.35 391.475 383.389 391.379 cv
383.09 391.174 382.859 390.917 382.701 390.609 cv
382.543 390.3 382.463 389.968 382.463 389.614 cv
382.463 389.502 li
382.463 389.417 li
382.52 388.856 382.729 388.329 383.094 387.833 cv
383.457 387.338 383.922 387.016 384.482 386.867 cv
384.461 386.288 384.355 385.872 384.158 385.619 cv
cp
392.078 389.993 mo
391.93 390.3 391.76 390.613 391.572 390.932 cv
391.217 391.547 390.783 392.113 390.27 392.627 cv
389.756 393.142 389.152 393.399 388.461 393.399 cv
388.182 393.399 387.914 393.356 387.664 393.271 cv
387.41 393.188 387.172 393.081 386.947 392.95 cv
386.221 393.547 385.363 394.014 384.383 394.351 cv
383.402 394.687 382.396 394.884 381.371 394.94 cv
381.131 394.94 li
381.047 394.94 380.959 394.94 380.865 394.94 cv
379.893 394.94 378.959 394.795 378.063 394.506 cv
377.164 394.216 376.379 393.783 375.707 393.202 cv
375.164 392.716 374.771 392.197 374.529 391.646 cv
374.287 391.096 374.164 390.54 374.164 389.979 cv
374.164 389.1 374.426 388.259 374.949 387.456 cv
375.473 386.653 376.164 385.969 377.025 385.409 cv
377.771 384.922 378.613 384.54 379.547 384.26 cv
380.48 383.98 381.443 383.838 382.436 383.838 cv
382.584 383.838 382.729 383.843 382.869 383.853 cv
383.01 383.863 383.154 383.868 383.305 383.868 cv
384.107 383.942 384.893 384.114 385.658 384.386 cv
386.424 384.656 387.098 385.064 387.678 385.605 cv
388.182 386.053 388.564 386.563 388.826 387.131 cv
389.088 387.704 389.219 388.295 389.219 388.913 cv
389.219 389.137 389.201 389.362 389.162 389.587 cv
389.125 389.811 389.068 390.034 388.996 390.259 cv
389.256 390.221 389.486 390.151 389.682 390.048 cv
389.877 389.946 390.068 389.783 390.256 389.558 cv
390.367 389.446 390.48 389.3 390.592 389.123 cv
390.705 388.947 390.826 388.745 390.957 388.521 cv
392.471 389.194 li
392.357 389.417 392.227 389.684 392.078 389.993 cv
cp
f
397.799 392.795 mo
396.881 393.796 395.545 394.295 393.789 394.295 cv
393.695 394.295 393.596 394.291 393.494 394.282 cv
393.391 394.271 393.293 394.267 393.199 394.267 cv
392.732 394.212 392.275 394.094 391.826 393.917 cv
391.377 393.74 391.014 393.455 390.734 393.062 cv
390.545 392.801 390.406 392.51 390.311 392.193 cv
390.219 391.875 390.172 391.558 390.172 391.24 cv
390.188 391.03 li
390.201 390.848 li
390.236 390.567 390.283 390.295 390.34 390.034 cv
390.396 389.772 390.473 389.521 390.564 389.278 cv
391.18 387.502 391.793 385.721 392.4 383.938 cv
393.008 382.152 393.611 380.381 394.209 378.625 cv
394.676 378.625 395.139 378.625 395.598 378.625 cv
396.055 378.625 396.518 378.625 396.984 378.625 cv
397.432 378.625 397.885 378.625 398.344 378.625 cv
398.801 378.625 399.264 378.625 399.732 378.625 cv
399.061 380.569 398.387 382.512 397.713 384.456 cv
397.041 386.4 396.375 388.342 395.723 390.288 cv
395.648 390.456 395.592 390.609 395.555 390.75 cv
395.518 390.889 395.498 391.006 395.498 391.099 cv
395.498 391.212 395.545 391.3 395.639 391.366 cv
395.732 391.432 395.881 391.454 396.088 391.436 cv
396.236 391.436 396.422 391.375 396.648 391.254 cv
396.871 391.131 397.105 390.959 397.348 390.736 cv
397.686 390.399 397.961 390.043 398.176 389.671 cv
398.389 389.296 398.592 388.904 398.777 388.492 cv
400.18 389.165 li
399.506 390.585 398.713 391.796 397.799 392.795 cv
cp
f
405.701 392.795 mo
404.785 393.796 403.449 394.295 401.693 394.295 cv
401.6 394.295 401.502 394.291 401.4 394.282 cv
401.297 394.271 401.197 394.267 401.104 394.267 cv
400.637 394.212 400.18 394.094 399.732 393.917 cv
399.283 393.74 398.918 393.455 398.637 393.062 cv
398.451 392.801 398.311 392.51 398.219 392.193 cv
398.123 391.875 398.078 391.558 398.078 391.24 cv
398.092 391.03 li
398.105 390.848 li
398.143 390.567 398.189 390.295 398.246 390.034 cv
398.301 389.772 398.375 389.521 398.471 389.278 cv
399.086 387.502 399.699 385.721 400.307 383.938 cv
400.914 382.152 401.516 380.381 402.113 378.625 cv
402.582 378.625 403.045 378.625 403.502 378.625 cv
403.959 378.625 404.422 378.625 404.889 378.625 cv
405.338 378.625 405.791 378.625 406.248 378.625 cv
406.707 378.625 407.17 378.625 407.637 378.625 cv
406.965 380.569 406.291 382.512 405.619 384.456 cv
404.945 386.4 404.281 388.342 403.627 390.288 cv
403.555 390.456 403.498 390.609 403.461 390.75 cv
403.422 390.889 403.404 391.006 403.404 391.099 cv
403.404 391.212 403.449 391.3 403.543 391.366 cv
403.637 391.432 403.785 391.454 403.992 391.436 cv
404.143 391.436 404.328 391.375 404.555 391.254 cv
404.777 391.131 405.012 390.959 405.254 390.736 cv
405.59 390.399 405.865 390.043 406.08 389.671 cv
406.295 389.296 406.496 388.904 406.686 388.492 cv
408.086 389.165 li
407.412 390.585 406.619 391.796 405.701 392.795 cv
cp
f
415.598 385.296 mo
415.432 385.167 415.186 385.091 414.869 385.072 cv
414.178 385.054 413.58 385.316 413.074 385.857 cv
412.57 386.4 412.188 386.998 411.926 387.651 cv
411.832 387.875 411.758 388.1 411.701 388.325 cv
411.646 388.548 411.598 388.753 411.561 388.941 cv
411.785 388.922 412.018 388.895 412.262 388.856 cv
412.504 388.819 412.748 388.763 412.992 388.688 cv
413.701 388.501 414.352 388.194 414.939 387.764 cv
415.527 387.334 415.832 386.737 415.85 385.969 cv
415.85 385.653 415.768 385.426 415.598 385.296 cv
cp
419.41 391.688 mo
418.832 392.455 418.027 393.081 417 393.566 cv
416.383 393.846 415.734 394.051 415.051 394.183 cv
414.369 394.313 413.672 394.379 412.965 394.379 cv
412.852 394.379 412.738 394.379 412.625 394.379 cv
412.514 394.379 412.412 394.371 412.318 394.351 cv
411.869 394.333 411.43 394.282 411 394.197 cv
410.57 394.114 410.15 394.006 409.74 393.875 cv
408.654 393.502 407.764 392.932 407.063 392.165 cv
406.359 391.399 406.012 390.493 406.012 389.446 cv
406.012 389.184 406.033 388.917 406.08 388.646 cv
406.127 388.375 406.197 388.1 406.291 387.819 cv
406.666 386.698 407.422 385.826 408.563 385.198 cv
409.701 384.573 410.916 384.176 412.207 384.007 cv
412.486 383.969 412.762 383.942 413.033 383.923 cv
413.305 383.904 413.57 383.896 413.834 383.896 cv
414.225 383.896 414.607 383.914 414.98 383.951 cv
415.355 383.988 415.701 384.053 416.02 384.147 cv
416.172 384.19 li
416.326 384.231 li
416.869 384.381 417.379 384.642 417.855 385.016 cv
418.332 385.391 418.58 385.896 418.6 386.53 cv
418.637 387.54 418.215 388.333 417.336 388.913 cv
416.457 389.492 415.496 389.913 414.449 390.175 cv
413.867 390.325 413.309 390.426 412.768 390.484 cv
412.225 390.54 411.758 390.557 411.365 390.54 cv
411.459 391.212 411.717 391.73 412.135 392.095 cv
412.557 392.458 413.111 392.641 413.805 392.641 cv
415.205 392.641 416.383 392.249 417.336 391.463 cv
418.289 390.679 419.037 389.688 419.58 388.492 cv
420.98 389.137 li
420.514 390.072 419.99 390.921 419.41 391.688 cv
cp
f
433.666 389.321 mo
433.596 389.502 li
433.166 390.381 432.689 391.16 432.166 391.842 cv
431.643 392.525 430.895 393.099 429.924 393.566 cv
429.344 393.829 428.703 394.03 428.004 394.168 cv
427.303 394.31 426.588 394.379 425.859 394.379 cv
425.676 394.379 li
425.494 394.379 li
424.41 394.324 423.369 394.114 422.369 393.75 cv
421.369 393.384 420.551 392.801 419.914 391.997 cv
419.58 391.567 419.332 391.131 419.174 390.694 cv
419.014 390.254 418.936 389.811 418.936 389.362 cv
418.936 388.501 419.195 387.685 419.719 386.908 cv
420.242 386.133 420.914 385.512 421.738 385.044 cv
422.279 384.747 422.943 384.488 423.729 384.274 cv
424.514 384.059 425.316 383.933 426.139 383.896 cv
426.25 383.877 426.354 383.868 426.447 383.868 cv
426.541 383.868 426.635 383.868 426.729 383.868 cv
427.439 383.868 428.111 383.951 428.746 384.12 cv
429.381 384.288 429.932 384.577 430.4 384.988 cv
430.625 385.212 430.811 385.479 430.961 385.787 cv
431.111 386.096 431.203 386.417 431.242 386.753 cv
431.242 386.851 li
431.242 386.95 li
431.242 387.195 431.199 387.437 431.115 387.68 cv
431.031 387.922 430.904 388.137 430.736 388.325 cv
430.531 388.568 430.287 388.745 430.008 388.856 cv
429.727 388.968 429.43 389.026 429.111 389.026 cv
428.984 389.026 li
428.83 388.999 li
428.662 388.979 428.49 388.937 428.313 388.871 cv
428.133 388.805 427.971 388.725 427.82 388.633 cv
427.578 388.484 427.383 388.292 427.232 388.058 cv
427.082 387.825 426.99 387.577 426.951 387.314 cv
426.951 387.259 li
426.951 387.175 li
426.924 387.118 li
426.924 387.063 li
426.924 386.633 427.063 386.259 427.346 385.941 cv
427.625 385.624 427.971 385.409 428.381 385.296 cv
428.27 385.26 428.156 385.227 428.047 385.198 cv
427.934 385.17 427.811 385.167 427.682 385.184 cv
427.525 385.184 li
427.373 385.212 li
427.219 385.241 li
427.063 385.296 li
426.41 385.521 425.846 385.983 425.369 386.684 cv
424.893 387.384 424.57 388.137 424.4 388.941 cv
424.363 389.109 424.336 389.288 424.316 389.474 cv
424.299 389.661 424.289 389.838 424.289 390.006 cv
424.309 390.736 424.504 391.366 424.879 391.899 cv
425.252 392.43 425.867 392.697 426.729 392.697 cv
428.166 392.697 429.336 392.3 430.23 391.506 cv
431.129 390.712 431.865 389.725 432.447 388.548 cv
433.766 389.137 li
433.666 389.321 li
cp
f
441.404 389.431 mo
441.357 389.517 441.314 389.605 441.277 389.698 cv
440.979 390.295 440.65 390.875 440.295 391.436 cv
439.941 391.997 439.512 392.5 439.008 392.95 cv
438.539 393.362 437.984 393.688 437.338 393.932 cv
436.693 394.174 435.951 394.295 435.109 394.295 cv
435.014 394.295 li
434.943 394.295 li
434.42 394.277 433.918 394.174 433.441 393.987 cv
432.965 393.8 432.578 393.483 432.279 393.033 cv
432.092 392.752 431.957 392.455 431.873 392.136 cv
431.789 391.819 431.748 391.492 431.748 391.156 cv
431.748 391.063 431.75 390.973 431.76 390.889 cv
431.768 390.805 431.783 390.717 431.803 390.624 cv
431.84 390.36 431.891 390.099 431.957 389.838 cv
432.021 389.576 432.092 389.325 432.166 389.08 cv
432.279 388.782 432.387 388.484 432.488 388.183 cv
432.592 387.884 432.689 387.577 432.783 387.259 cv
432.877 386.959 432.975 386.661 433.078 386.362 cv
433.18 386.064 433.289 385.763 433.4 385.465 cv
432.193 385.465 li
432.67 384.12 li
433.877 384.12 li
433.971 383.838 434.064 383.563 434.158 383.293 cv
434.25 383.021 434.354 382.745 434.465 382.465 cv
434.559 382.204 434.652 381.938 434.746 381.667 cv
434.838 381.395 434.932 381.119 435.027 380.838 cv
435.643 380.746 436.26 380.657 436.877 380.572 cv
437.492 380.489 438.111 380.401 438.727 380.307 cv
439.025 380.269 439.334 380.228 439.652 380.18 cv
439.969 380.134 440.277 380.092 440.578 380.054 cv
440.465 380.391 440.348 380.727 440.227 381.063 cv
440.104 381.4 439.988 381.736 439.875 382.073 cv
439.764 382.409 439.648 382.75 439.525 383.096 cv
439.404 383.442 439.287 383.784 439.176 384.12 cv
440.689 384.12 li
440.184 385.465 li
438.699 385.465 li
438.568 385.857 438.432 386.254 438.293 386.655 cv
438.152 387.059 438.016 387.464 437.885 387.875 cv
437.734 388.288 437.596 388.694 437.467 389.095 cv
437.334 389.497 437.193 389.895 437.045 390.288 cv
437.006 390.417 436.975 390.542 436.947 390.666 cv
436.918 390.788 436.904 390.893 436.904 390.988 cv
436.904 391.156 436.941 391.273 437.016 391.338 cv
437.092 391.404 437.193 391.436 437.326 391.436 cv
437.438 391.436 437.564 391.409 437.703 391.352 cv
437.844 391.295 437.988 391.221 438.139 391.128 cv
438.375 390.959 li
438.615 390.763 li
438.969 390.445 439.26 390.091 439.482 389.698 cv
439.707 389.306 439.914 388.904 440.102 388.492 cv
441.529 389.165 li
441.492 389.259 441.451 389.348 441.404 389.431 cv
cp
f
447.557 382.479 mo
447.258 382.712 446.939 382.885 446.604 382.999 cv
446.406 383.041 li
446.238 383.081 li
446.09 383.1 445.936 383.12 445.777 383.138 cv
445.617 383.157 445.463 383.166 445.313 383.166 cv
444.902 383.166 444.49 383.114 444.08 383.013 cv
443.668 382.91 443.305 382.736 442.986 382.493 cv
442.744 382.308 442.553 382.087 442.412 381.834 cv
442.271 381.582 442.201 381.326 442.201 381.063 cv
442.201 380.916 442.229 380.764 442.285 380.615 cv
442.342 380.465 442.418 380.326 442.51 380.194 cv
442.771 379.858 443.113 379.605 443.533 379.438 cv
443.953 379.27 444.389 379.167 444.838 379.129 cv
444.992 379.129 li
445.145 379.129 li
445.352 379.129 445.557 379.143 445.764 379.171 cv
445.967 379.2 446.162 379.242 446.352 379.297 cv
446.518 379.354 li
446.658 379.409 li
447.051 379.578 447.41 379.812 447.738 380.11 cv
448.066 380.409 448.229 380.774 448.229 381.204 cv
448.215 381.385 li
448.172 381.595 li
448.061 381.952 447.855 382.246 447.557 382.479 cv
cp
449.393 389.42 mo
449.344 389.504 449.293 389.594 449.238 389.687 cv
448.939 390.288 448.613 390.869 448.258 391.432 cv
447.902 391.995 447.473 392.5 446.967 392.95 cv
446.5 393.362 445.953 393.679 445.328 393.902 cv
444.701 394.128 444.051 394.258 443.379 394.295 cv
443.254 394.295 li
443.127 394.295 li
442.848 394.295 442.568 394.277 442.285 394.24 cv
442.006 394.203 441.734 394.136 441.473 394.043 cv
440.764 393.8 440.258 393.42 439.961 392.905 cv
439.66 392.39 439.51 391.822 439.51 391.204 cv
439.51 390.999 439.523 390.788 439.553 390.572 cv
439.58 390.356 439.623 390.135 439.68 389.911 cv
439.717 389.799 439.75 389.69 439.777 389.588 cv
439.805 389.484 439.838 389.375 439.875 389.263 cv
440.174 388.401 440.469 387.544 440.76 386.692 cv
441.047 385.838 441.342 384.982 441.641 384.12 cv
442.09 384.12 442.541 384.12 443 384.12 cv
443.459 384.12 443.92 384.12 444.389 384.12 cv
444.855 384.12 445.318 384.12 445.777 384.12 cv
446.232 384.12 446.686 384.12 447.135 384.12 cv
447.023 384.458 446.906 384.798 446.785 385.146 cv
446.664 385.493 446.547 385.834 446.436 386.172 cv
446.191 386.847 445.953 387.526 445.721 388.211 cv
445.486 388.896 445.258 389.584 445.033 390.279 cv
444.977 390.409 444.932 390.545 444.895 390.686 cv
444.855 390.828 444.838 390.954 444.838 391.066 cv
444.838 391.179 444.879 391.272 444.963 391.346 cv
445.047 391.422 445.191 391.451 445.396 391.432 cv
445.547 391.432 445.734 391.37 445.959 391.248 cv
446.182 391.127 446.416 390.954 446.658 390.727 cv
446.996 390.392 447.271 390.034 447.486 389.659 cv
447.701 389.284 447.902 388.891 448.09 388.478 cv
448.328 388.591 li
448.564 388.704 li
448.715 388.779 448.867 388.848 449.027 388.915 cv
449.188 388.98 449.352 389.06 449.52 389.153 cv
449.48 389.247 449.439 389.336 449.393 389.42 cv
cp
f
457.578 385.619 mo
457.383 385.367 457.133 385.241 456.836 385.241 cv
456.648 385.241 456.443 385.292 456.219 385.395 cv
455.994 385.497 455.77 385.642 455.545 385.829 cv
455.453 385.904 455.363 385.988 455.279 386.081 cv
455.195 386.175 455.105 386.268 455.014 386.362 cv
454.582 386.867 454.236 387.441 453.977 388.086 cv
453.715 388.732 453.527 389.389 453.416 390.063 cv
453.396 390.288 453.377 390.506 453.359 390.721 cv
453.342 390.935 453.33 391.146 453.33 391.352 cv
453.33 391.463 453.336 391.605 453.346 391.772 cv
453.355 391.94 453.377 392.109 453.416 392.278 cv
453.471 392.595 453.568 392.879 453.709 393.131 cv
453.85 393.384 454.068 393.509 454.369 393.509 cv
454.834 393.509 455.252 393.347 455.615 393.019 cv
455.98 392.693 456.275 392.325 456.5 391.913 cv
456.555 391.819 456.609 391.73 456.666 391.646 cv
456.723 391.562 456.77 391.475 456.807 391.379 cv
456.508 391.174 456.279 390.917 456.119 390.609 cv
455.963 390.3 455.883 389.968 455.883 389.614 cv
455.883 389.502 li
455.883 389.417 li
455.939 388.856 456.148 388.329 456.514 387.833 cv
456.877 387.338 457.34 387.016 457.9 386.867 cv
457.881 386.288 457.773 385.872 457.578 385.619 cv
cp
465.498 389.993 mo
465.348 390.3 465.18 390.613 464.992 390.932 cv
464.637 391.547 464.203 392.113 463.689 392.627 cv
463.176 393.142 462.572 393.399 461.881 393.399 cv
461.602 393.399 461.334 393.356 461.082 393.271 cv
460.83 393.188 460.592 393.081 460.367 392.95 cv
459.639 393.547 458.783 394.014 457.803 394.351 cv
456.82 394.687 455.816 394.884 454.789 394.94 cv
454.551 394.94 li
454.467 394.94 454.377 394.94 454.285 394.94 cv
453.313 394.94 452.377 394.795 451.48 394.506 cv
450.584 394.216 449.799 393.783 449.127 393.202 cv
448.584 392.716 448.191 392.197 447.949 391.646 cv
447.705 391.096 447.584 390.54 447.584 389.979 cv
447.584 389.1 447.846 388.259 448.369 387.456 cv
448.893 386.653 449.584 385.969 450.441 385.409 cv
451.191 384.922 452.031 384.54 452.965 384.26 cv
453.9 383.98 454.863 383.838 455.854 383.838 cv
456.004 383.838 456.148 383.843 456.289 383.853 cv
456.43 383.863 456.572 383.868 456.723 383.868 cv
457.527 383.942 458.311 384.114 459.078 384.386 cv
459.844 384.656 460.518 385.064 461.096 385.605 cv
461.602 386.053 461.982 386.563 462.246 387.131 cv
462.506 387.704 462.639 388.295 462.639 388.913 cv
462.639 389.137 462.621 389.362 462.582 389.587 cv
462.545 389.811 462.488 390.034 462.412 390.259 cv
462.676 390.221 462.904 390.151 463.1 390.048 cv
463.297 389.946 463.488 389.783 463.676 389.558 cv
463.787 389.446 463.898 389.3 464.012 389.123 cv
464.125 388.947 464.246 388.745 464.375 388.521 cv
465.891 389.194 li
465.777 389.417 465.646 389.684 465.498 389.993 cv
cp
f
478.604 392.795 mo
477.621 393.796 476.271 394.295 474.553 394.295 cv
474.439 394.295 474.328 394.291 474.217 394.282 cv
474.104 394.271 473.992 394.267 473.881 394.267 cv
473.412 394.212 472.965 394.099 472.533 393.932 cv
472.105 393.763 471.75 393.492 471.469 393.118 cv
471.281 392.858 471.146 392.581 471.064 392.292 cv
470.979 392 470.936 391.708 470.936 391.409 cv
470.936 391.259 470.945 391.11 470.965 390.959 cv
470.982 390.809 471.002 390.669 471.02 390.54 cv
471.076 390.241 471.156 389.941 471.26 389.642 cv
471.361 389.342 471.461 389.062 471.553 388.8 cv
471.57 388.745 471.609 388.652 471.666 388.521 cv
471.721 388.389 471.787 388.241 471.861 388.072 cv
471.881 387.979 471.902 387.888 471.932 387.805 cv
471.959 387.721 471.992 387.633 472.031 387.54 cv
472.066 387.391 472.1 387.245 472.129 387.104 cv
472.156 386.964 472.17 386.838 472.17 386.725 cv
472.17 386.578 472.137 386.451 472.072 386.347 cv
472.006 386.245 471.898 386.194 471.75 386.194 cv
471.563 386.194 471.348 386.283 471.104 386.458 cv
470.861 386.638 470.582 386.942 470.264 387.371 cv
469.814 388.007 469.432 388.694 469.115 389.431 cv
468.797 390.171 468.498 390.921 468.217 391.688 cv
468.105 392.043 467.992 392.393 467.881 392.739 cv
467.768 393.084 467.656 393.426 467.545 393.763 cv
467.488 393.888 li
467.432 394.043 li
462.219 394.043 li
462.779 392.399 463.34 390.759 463.9 389.123 cv
464.461 387.489 465.029 385.848 465.609 384.204 cv
470.824 384.204 li
470.768 384.372 li
470.713 384.54 li
470.629 384.737 li
470.57 384.905 li
471.002 384.663 471.484 384.452 472.016 384.274 cv
472.549 384.096 473.096 383.98 473.654 383.923 cv
473.75 383.904 473.842 383.896 473.936 383.896 cv
474.029 383.896 474.123 383.896 474.217 383.896 cv
474.758 383.896 475.275 383.983 475.771 384.163 cv
476.268 384.338 476.703 384.633 477.076 385.044 cv
477.318 385.307 477.496 385.596 477.609 385.914 cv
477.721 386.231 477.777 386.557 477.777 386.895 cv
477.777 386.969 477.771 387.053 477.764 387.146 cv
477.752 387.241 477.738 387.325 477.721 387.399 cv
477.701 387.493 477.684 387.581 477.664 387.665 cv
477.646 387.75 477.617 387.838 477.58 387.933 cv
477.523 388.119 477.457 388.309 477.385 388.506 cv
477.311 388.704 477.244 388.904 477.188 389.109 cv
477.113 389.296 477.039 389.488 476.965 389.684 cv
476.889 389.881 476.822 390.081 476.768 390.288 cv
476.711 390.426 li
476.654 390.624 li
476.6 390.75 li
476.572 390.904 li
476.529 391.043 li
476.516 391.184 li
476.516 391.277 476.543 391.358 476.6 391.422 cv
476.654 391.488 476.748 391.521 476.881 391.521 cv
476.992 391.521 477.1 391.502 477.201 391.463 cv
477.305 391.425 477.412 391.379 477.523 391.325 cv
477.748 391.174 477.977 390.983 478.211 390.75 cv
478.443 390.515 478.654 390.278 478.842 390.034 cv
478.99 389.849 479.123 389.661 479.234 389.474 cv
479.346 389.288 479.43 389.119 479.486 388.968 cv
479.543 388.856 li
479.6 388.717 li
479.627 388.605 li
479.684 388.492 li
481.086 389.165 li
480.412 390.585 479.586 391.796 478.604 392.795 cv
cp
f
496.602 385.634 mo
496.404 385.381 496.158 385.256 495.857 385.256 cv
495.67 385.256 495.467 385.307 495.24 385.409 cv
495.018 385.512 494.793 385.657 494.568 385.844 cv
494.475 385.917 494.387 386.002 494.303 386.096 cv
494.217 386.19 494.127 386.283 494.035 386.375 cv
493.605 386.881 493.26 387.456 492.998 388.1 cv
492.736 388.746 492.551 389.405 492.439 390.079 cv
492.42 390.301 492.4 390.521 492.383 390.736 cv
492.363 390.951 492.355 391.161 492.355 391.367 cv
492.355 391.479 492.359 391.62 492.367 391.787 cv
492.377 391.956 492.4 392.124 492.439 392.292 cv
492.494 392.61 492.592 392.895 492.732 393.146 cv
492.873 393.399 493.092 393.524 493.391 393.524 cv
493.857 393.524 494.275 393.362 494.637 393.034 cv
495.004 392.708 495.297 392.338 495.521 391.928 cv
495.578 391.833 495.635 391.745 495.689 391.661 cv
495.746 391.577 495.793 391.489 495.83 391.395 cv
495.531 391.189 495.301 390.933 495.143 390.624 cv
494.984 390.316 494.904 389.984 494.904 389.628 cv
494.904 389.517 li
494.904 389.432 li
494.961 388.871 495.17 388.342 495.535 387.848 cv
495.9 387.354 496.363 387.032 496.924 386.881 cv
496.904 386.303 496.797 385.885 496.602 385.634 cv
cp
504.521 390.006 mo
504.371 390.316 504.203 390.628 504.014 390.947 cv
503.66 391.563 503.227 392.128 502.713 392.642 cv
502.197 393.157 501.596 393.413 500.902 393.413 cv
500.623 393.413 500.357 393.372 500.105 393.287 cv
499.852 393.202 499.613 393.096 499.391 392.965 cv
498.662 393.563 497.805 394.03 496.824 394.366 cv
495.844 394.702 494.84 394.899 493.813 394.954 cv
493.572 394.954 li
493.49 394.954 493.402 394.954 493.307 394.954 cv
492.336 394.954 491.4 394.81 490.504 394.521 cv
489.605 394.23 488.82 393.796 488.148 393.216 cv
487.605 392.731 487.215 392.212 486.971 391.661 cv
486.729 391.11 486.607 390.555 486.607 389.993 cv
486.607 389.114 486.869 388.275 487.391 387.47 cv
487.916 386.667 488.605 385.984 489.467 385.424 cv
490.213 384.937 491.055 384.555 491.988 384.274 cv
492.924 383.994 493.885 383.853 494.877 383.853 cv
495.027 383.853 495.17 383.859 495.313 383.868 cv
495.453 383.876 495.596 383.881 495.746 383.881 cv
496.551 383.957 497.334 384.129 498.102 384.401 cv
498.867 384.67 499.539 385.079 500.119 385.621 cv
500.623 386.068 501.008 386.578 501.268 387.146 cv
501.529 387.718 501.66 388.309 501.66 388.926 cv
501.66 389.152 501.643 389.375 501.604 389.6 cv
501.566 389.825 501.51 390.049 501.436 390.273 cv
501.699 390.236 501.928 390.166 502.123 390.065 cv
502.32 389.961 502.51 389.796 502.699 389.573 cv
502.811 389.459 502.922 389.315 503.035 389.138 cv
503.146 388.961 503.27 388.759 503.398 388.536 cv
504.912 389.208 li
504.801 389.432 504.67 389.699 504.521 390.006 cv
cp
f
516.195 379.622 mo
516.355 379.918 516.453 380.228 516.492 380.545 cv
516.492 380.671 li
516.492 380.798 li
516.492 381.284 516.342 381.727 516.043 382.129 cv
515.742 382.531 515.295 382.788 514.697 382.9 cv
514.586 382.915 li
514.473 382.928 li
514.359 382.928 li
514.248 382.928 li
513.594 382.928 513.063 382.713 512.65 382.283 cv
512.24 381.853 512.033 381.377 512.033 380.854 cv
512.033 380.755 li
512.033 380.658 li
512.072 380.377 512.178 380.108 512.357 379.845 cv
512.533 379.583 512.801 379.369 513.156 379.201 cv
513.084 379.201 li
512.986 379.201 li
512.406 379.201 511.916 379.476 511.514 380.028 cv
511.113 380.579 510.781 381.191 510.52 381.863 cv
510.352 382.293 510.201 382.713 510.07 383.125 cv
509.939 383.537 509.836 383.863 509.764 384.105 cv
512.344 384.105 li
511.867 385.48 li
509.26 385.48 li
504.1 400.477 li
499.082 400.477 li
504.213 385.48 li
502.559 385.48 li
503.063 384.105 li
504.717 384.105 li
504.773 383.919 504.828 383.737 504.885 383.559 cv
504.941 383.381 504.998 383.208 505.055 383.041 cv
505.334 382.219 505.652 381.457 506.006 380.755 cv
506.361 380.055 506.939 379.442 507.744 378.92 cv
508.25 378.602 508.869 378.34 509.609 378.134 cv
510.348 377.93 511.1 377.817 511.867 377.798 cv
511.979 377.798 li
512.09 377.798 li
512.744 377.798 513.381 377.877 513.998 378.036 cv
514.613 378.195 515.135 378.461 515.566 378.834 cv
515.828 379.059 516.039 379.322 516.195 379.622 cv
cp
f
310.14 147.627 mo
317.529 148.104 321.912 144.684 324.495 138.15 cv
328.194 128.835 323.748 119.943 313.47 119.196 cv
303.3 118.458 298.638 125.919 297.432 135.126 cv
296.469 142.515 294.345 146.574 294.345 146.574 cv
294.345 146.574 293.949 153.027 294.345 155.043 cv
294.75 157.059 298.161 176.751 298.161 176.751 cv
298.161 176.751 308.619 147.528 310.14 147.627 cv
f
309.618 142.362 mo
309.618 142.362 319.869 183.942 322.191 190.341 cv
322.191 190.341 326.916 191.196 333.405 192.15 cv
333.405 192.15 334.926 188.685 336.753 183.375 cv
336.753 183.375 358.776 167.49 383.391 179.307 cv
383.391 179.307 392.193 154.701 402.075 153.999 cv
407.187 153.63 411.624 154.26 415.764 154.89 cv
422.262 155.88 428.004 156.87 434.394 153.999 cv
434.394 153.999 418.725 154.323 411.147 136.134 cv
403.335 117.405 397.53 109.314 397.737 110.295 cv
399.879 120.672 397.584 116.946 393.39 120.942 cv
396.801 123.885 395.064 129.699 392.589 132.021 cv
391.77 132.786 390.582 133.785 388.629 134.451 cv
387.441 134.856 386.028 135.855 384.669 136.17 cv
383.796 136.359 382.581 136.233 381.411 136.107 cv
380.448 136.008 379.503 135.9 378.801 135.981 cv
375.372 136.341 372.663 135.99 371.556 134.883 cv
364.545 127.872 358.326 117.783 363.753 113.517 cv
369.189 109.251 375.3 106.182 381.312 102.312 cv
387.315 98.433 389.781 91.827 407.034 99.774 cv
424.287 107.721 438.732 110.124 445.716 110.709 cv
452.691 111.294 470.988 122.895 472.932 128.142 cv
474.867 133.398 478.134 149.382 484.731 156.546 cv
491.319 163.701 489.258 165.258 482.67 174.906 cv
476.082 184.545 465.849 215.19 461.97 229.734 cv
458.1 244.269 438.129 258.984 414.279 260.919 cv
390.438 262.863 386.973 267.219 382.905 276.525 cv
378.828 285.831 376.956 316.494 359.784 332.136 cv
335.736 354.06 318.348 370.872 317.376 382.5 cv
316.404 394.137 318.672 402.084 311.688 411.201 cv
311.688 411.201 314.478 420.966 316.611 422.514 cv
318.735 424.062 234.783 428.049 232.065 426.114 cv
229.356 424.179 231.156 418.05 232.128 414.945 cv
232.128 414.945 226.746 416.853 224.415 391.059 cv
222.093 365.274 182.043 345.546 169.254 317.241 cv
156.456 288.936 159.129 275.247 137.799 266.328 cv
116.469 257.409 100.62 249.381 89.37 224.856 cv
78.129 200.331 78.912 184.113 77.499 177.12 cv
75.717 168.345 72.171 164.025 74.106 162.279 cv
76.05 160.533 83.952 156.555 88.794 147.708 cv
93.645 138.87 98.154 128.799 110.367 123.174 cv
122.589 117.54 138.672 119.988 148.941 114.165 cv
160.767 107.469 160.956 106.119 167.355 109.62 cv
172.197 112.275 185.373 115.2 188.955 117.216 cv
194.256 120.213 189 130.896 189.189 134.163 cv
189.189 134.163 187.569 140.769 183.42 140.427 cv
183.42 140.427 182.709 143.793 176.697 144.846 cv
172.287 145.62 173.133 147.69 167.319 144.594 cv
161.505 141.489 162.126 138.132 163.773 133.875 cv
163.773 133.875 161.919 133.443 160.344 131.733 cv
158.004 129.204 158.31 126.009 158.526 126.009 cv
158.526 126.009 156.861 124.947 153.954 131.778 cv
151.047 138.609 153.144 157.95 130.779 164.196 cv
130.779 164.196 134.271 167.508 142.218 166.734 cv
150.165 165.96 150.894 162.828 152.811 164.007 cv
168.399 173.601 168.579 177.768 170.91 184.752 cv
170.91 184.752 181.431 180.648 192.87 184.914 cv
199.548 187.407 199.764 191.88 203.886 192.879 cv
254.826 191.223 li
304.677 144.45 li
309.618 142.362 li
f
246.651 423.985 mo
246.651 423.985 li
260.45 423.985 282.67 423.264 297.602 422.436 cv
282.672 423.264 260.45 423.985 246.651 423.985 cv
246.544 423.985 mo
239.724 423.983 234.983 423.804 234.239 423.372 cv
234.983 423.804 239.726 423.983 246.544 423.985 cv
234.207 423.351 mo
232.922 422.43 232.657 421.021 232.833 419.467 cv
232.835 419.475 232.837 419.482 232.839 419.49 cv
232.857 419.31 232.875 419.13 232.911 418.959 cv
232.907 418.965 232.905 418.971 232.902 418.977 cv
233.155 417.446 233.765 415.813 234.207 414.387 cv
234.207 414.387 li
236.211 410.016 236.638 409.494 236.729 409.477 cv
236.738 409.488 236.746 409.499 236.754 409.509 cv
236.754 409.509 li
236.754 409.509 li
236.754 409.509 li
236.754 409.509 li
236.754 409.509 236.754 409.49 236.745 409.481 cv
236.573 408.968 234.084 401.302 233.667 388.485 cv
233.667 388.485 232.584 382.488 217.38 366.288 cv
216.503 365.042 216.081 364.374 216.081 364.374 cv
207.543 358.222 178.157 327.919 177.526 327.269 cv
174.982 323.738 172.777 320.105 171.072 316.332 cv
158.481 288.486 161.181 275.04 140.193 266.265 cv
119.214 257.49 103.545 249.57 92.484 225.441 cv
81.414 201.312 82.044 185.571 80.001 178.857 cv
77.805 171.657 75.807 165.087 77.715 163.368 cv
79.623 161.649 89.082 154.791 93.852 146.088 cv
98.622 137.385 101.106 131.886 113.121 126.351 cv
125.136 120.816 140.364 120.816 150.471 115.092 cv
156.88 111.462 160.108 109.892 162.829 109.892 cv
164.399 109.892 165.799 110.414 167.544 111.366 cv
172.314 113.976 183.546 117.639 187.227 119.304 cv
191.484 121.239 188.343 130.275 188.046 133.83 cv
188.046 133.83 187.641 138.267 183.852 139.554 cv
183.839 139.558 183.826 139.561 183.815 139.561 cv
183.316 139.561 184.357 135.454 184.779 132.903 cv
185.175 130.581 185.544 128.88 185.859 128.331 cv
186.057 127.984 186.094 127.842 186.024 127.842 cv
185.867 127.842 185.181 128.544 184.554 129.276 cv
184.554 129.276 184.149 135.522 182.52 140.121 cv
181.764 142.236 178.767 143.127 176.661 143.532 cv
176.66 143.532 176.66 143.532 176.66 143.532 cv
176.527 143.532 177.942 139.725 178.713 137.178 cv
179.28 135.324 179.532 133.632 179.775 133.335 cv
179.974 133.087 179.658 132.945 179.274 132.945 cv
178.824 132.945 178.279 133.14 178.362 133.587 cv
178.92 136.548 176.193 142.821 175.941 142.929 cv
174.524 143.531 173.497 144.064 172.089 144.064 cv
170.869 144.064 169.362 143.664 167.067 142.56 cv
163.395 140.796 164.385 139.95 164.772 135.648 cv
164.881 134.456 165.795 133.676 166.658 133.676 cv
166.935 133.676 167.207 133.756 167.445 133.929 cv
169.947 135.711 168.354 138.537 168.831 138.654 cv
169.02 138.933 li
169.02 138.933 169.617 134.724 170.568 134.287 cv
170.551 134.287 170.533 134.288 170.514 134.288 cv
169.756 134.289 167.747 134.033 167.553 132.282 cv
167.344 130.394 167.221 129.789 167.13 129.789 cv
167.05 129.789 166.996 130.276 166.932 130.761 cv
166.871 131.248 166.802 131.735 166.684 131.735 cv
166.68 131.735 166.675 131.734 166.671 131.733 cv
164.007 130.77 157.599 131.526 160.101 122.247 cv
160.101 122.247 155.43 124.731 152.568 131.454 cv
149.706 138.168 146.754 157.248 127.584 163.728 cv
127.584 163.728 134.272 169.14 141.578 169.14 cv
142.036 169.14 142.495 169.119 142.956 169.074 cv
147.016 168.677 148.775 167.994 150.329 167.994 cv
151.769 167.994 153.033 168.58 155.79 170.523 cv
162.297 175.095 169.263 180.675 170.316 196.74 cv
171.081 188.622 li
173.434 187.588 178.363 185.932 183.969 185.932 cv
186.705 185.932 189.601 186.326 192.438 187.38 cv
197.937 189.436 198.979 192.022 201.552 193.386 cv
198.313 196.614 193.427 201.538 192.204 203.085 cv
192.204 203.085 201.591 214.524 206.838 224.586 cv
206.838 224.586 217.629 218.691 219.402 218.097 cv
219.402 218.097 li
219.402 218.097 227.052 227.763 230.301 229.734 cv
230.301 229.734 233.367 226.892 238.427 222.846 cv
242.436 224.491 246.383 227.077 250.457 229.01 cv
254.097 231.012 258.289 233.337 260.271 234.504 cv
260.656 234.73 261.106 234.836 261.615 234.836 cv
265.968 234.836 274.683 227.15 284.74 221.775 cv
284.829 221.739 284.918 221.691 285.008 221.632 cv
285.567 221.337 286.129 221.049 286.695 220.77 cv
286.695 220.77 286.181 221.008 285.3 221.406 cv
289.377 217.757 294.027 193.332 295.893 190.512 cv
295.894 190.511 295.894 190.51 295.895 190.51 cv
299.984 188.748 302.507 187.68 302.769 187.38 cv
299.65 171.151 li
300.442 168.838 301.115 166.694 301.682 164.761 cv
304.167 158.415 308.085 148.703 309.63 146.493 cv
309.908 147.852 310.302 149.769 310.776 152.059 cv
313.061 165.345 318.829 205.391 308.523 221.413 cv
307.485 222.264 306.891 222.705 306.891 222.705 cv
329.103 208.647 335.448 195.966 335.448 195.966 cv
335.448 195.966 li
335.448 195.966 li
335.448 195.966 339.21 189.387 340.524 186.219 cv
340.524 186.219 351.294 177.776 366.55 177.776 cv
372.167 177.776 378.392 178.92 384.912 182.052 cv
384.912 182.052 395.604 159.093 405.333 158.526 cv
406.074 158.481 406.845 158.463 407.64 158.463 cv
409.56 158.463 411.622 158.571 413.748 158.679 cv
415.885 158.787 418.091 158.896 420.291 158.896 cv
426.862 158.896 433.389 157.925 437.94 153.063 cv
437.94 153.063 421.722 152.478 413.325 134.352 cv
405.37 117.169 400.669 108.908 397.118 108.908 cv
396.925 108.908 396.736 108.932 396.549 108.981 cv
394.965 109.404 397.476 110.331 397.305 114.084 cv
397.161 117.297 394.506 118.485 392.517 118.953 cv
391.878 119.097 391.347 119.232 390.87 119.385 cv
390.856 119.389 390.841 119.391 390.827 119.391 cv
390.583 119.391 390.356 118.82 390.186 118.242 cv
390.012 117.667 389.895 117.097 389.868 117.097 cv
389.863 117.097 389.861 117.118 389.862 117.162 cv
389.934 120.6 389.394 121.428 385.956 121.86 cv
385.542 121.914 388.53 122.382 388.764 123.147 cv
389.016 123.948 389.709 125.937 389.223 127.035 cv
389.22 127.043 389.219 127.047 389.22 127.047 cv
389.24 127.047 389.935 125.902 390.582 124.821 cv
390.726 124.578 389.268 121.617 389.394 121.428 cv
389.592 121.113 390.519 120.771 390.582 120.762 cv
390.598 120.761 390.615 120.761 390.631 120.761 cv
392.247 120.761 394.423 124.246 393.381 126.162 cv
392.085 128.538 392.247 132.183 387.792 132.183 cv
386.874 132.183 380.997 124.821 381.429 122.526 cv
381.235 122.467 381.026 122.418 380.79 122.418 cv
380.448 122.418 380.051 122.523 379.566 122.859 cv
379.269 123.075 380.43 123.912 380.997 124.821 cv
383.427 128.709 385.722 131.823 385.722 131.823 cv
386.04 133.764 383.653 134.852 381.821 134.852 cv
381.215 134.852 380.671 134.733 380.304 134.487 cv
378.954 133.587 373.14 126.081 372.654 122.769 cv
372.576 122.241 372.309 122.077 372.003 122.077 cv
371.501 122.077 370.892 122.52 370.836 122.526 cv
377.955 133.488 li
377.655 134.456 376.827 134.831 375.845 134.831 cv
374.263 134.831 372.279 133.858 371.457 132.831 cv
365.742 125.631 361.917 119.628 365.472 115.803 cv
370.404 110.511 375.174 107.838 381.096 104.022 cv
384.979 101.516 387.872 97.8621 394.206 97.8621 cv
397.519 97.8621 401.772 98.8614 407.601 101.547 cv
423.481 108.86 436.071 112.726 443.254 113.661 cv
448.647 117.125 452.733 121.67 453.924 123.597 cv
460.215 133.794 453.771 143.982 460.26 151.029 cv
466.74 158.067 468.135 159.21 468.135 159.21 cv
471.762 181.728 445.59 192.771 445.59 192.771 cv
443.071 191.482 440.715 184.769 440.248 179.758 cv
440.24 179.452 440.233 179.163 440.226 178.893 cv
440.118 174.879 440.802 171.981 440.802 171.981 cv
437.94 177.66 440.226 181.476 439.65 194.265 cv
439.083 207.054 426.87 214.182 418.572 218.385 cv
411.443 221.988 406.074 219.261 399.122 222.216 cv
393.564 223.501 387.243 225.478 379.188 227.799 cv
374.096 229.265 368.875 233.793 364.368 238.96 cv
365.512 237.399 366.444 236.134 366.975 235.359 cv
369.261 232.029 370.98 219.429 370.98 219.429 cv
370.98 219.429 368.694 227.25 367.164 231.444 cv
365.972 234.738 358.216 245.066 354.919 249.377 cv
354.946 249.314 354.96 249.282 354.96 249.282 cv
351.81 253.431 349.947 256.005 349.947 256.005 cv
349.092 265.59 351.666 296.64 351.666 296.64 cv
331.622 310.252 321.328 320.351 317.345 324.664 cv
314.738 326.868 312.276 329.007 309.978 331.065 cv
309.978 331.065 293.215 324.334 279.382 319.343 cv
279.409 319.351 279.423 319.356 279.423 319.356 cv
279.423 319.356 li
279.423 319.356 li
263.592 311.949 li
262.251 250.146 li
260.892 311.949 li
247.196 319.125 li
241.358 321.704 238.365 323.82 238.365 323.82 cv
238.365 323.82 248.83 319.338 262.879 319.338 cv
263.392 319.338 263.907 319.344 264.429 319.356 cv
312.741 320.499 312.417 362.304 312.417 362.304 cv
291.816 387.315 298.377 401.175 300.564 407.376 cv
305.208 420.534 300.357 418.914 293.868 420.246 cv
292.859 420.453 271.174 421.694 253.933 421.694 cv
242.71 421.694 233.371 421.168 232.839 419.49 cv
232.668 421.029 232.929 422.433 234.207 423.351 cv
184.305 305.345 mo
184.659 305.534 216.524 322.677 216.9 356.445 cv
216.9 356.445 220.437 335.412 233.928 325.107 cv
224.199 328.392 li
224.193 328.386 224.188 328.381 224.182 328.376 cv
223.749 327.75 214.982 315.424 185.679 300.843 cv
185.679 300.843 181.404 269.982 178.461 260.82 cv
178.461 260.82 168.579 251.838 162.54 240.273 cv
160.47 236.313 163.233 221.418 163.233 221.418 cv
163.233 221.418 li
163.233 221.418 li
163.233 221.418 li
163.233 221.418 li
163.233 221.418 159.115 219.656 154.355 219.169 cv
152.959 218.959 151.622 218.87 150.331 218.87 cv
146.892 218.87 143.778 219.498 140.724 220.122 cv
137.663 220.753 134.652 221.387 131.421 221.387 cv
129.03 221.387 126.518 221.039 123.777 220.086 cv
114.993 217.044 101.664 209.475 100.395 196.731 cv
99.414 186.93 101.592 184.473 96.561 173.601 cv
96.561 173.601 98.631 178.758 98.901 182.772 cv
99.162 186.777 99.558 190.053 96.561 196.353 cv
100.072 210.1 108.456 216.776 115.748 219.954 cv
120.968 226.683 131.395 238.685 141.696 242.136 cv
158.713 247.827 171.008 256.63 175.309 259.978 cv
175.882 260.826 176.385 261.611 176.796 262.305 cv
178.2 265.905 179.46 271.215 180.234 277.947 cv
182.304 295.902 181.287 304.272 181.287 304.272 cv
181.287 304.272 182.388 304.626 184.305 305.345 cv
302.637 422.134 mo
307.012 421.849 310.34 421.56 312.017 421.29 cv
310.34 421.56 307.012 421.849 302.637 422.134 cv
230.009 383.419 mo
227.539 379.74 224.126 375.13 221.782 372.148 cv
224.906 376.034 227.98 379.922 230.009 383.419 cv
376.704 255.294 mo
376.704 255.294 381.141 243.306 384.912 235.647 cv
389.168 226.984 396.626 223.323 401.91 221.8 cv
403.83 221.313 405.453 221.185 407.323 221.185 cv
409.365 221.185 411.702 221.337 415.044 221.337 cv
415.044 221.337 li
415.044 221.337 li
415.044 221.337 416.216 221.468 418.235 221.468 cv
425.608 221.468 444.271 219.716 458.352 203.409 cv
457.119 209.421 453.681 224.622 451.953 227.799 cv
441.846 246.429 418.554 249.273 397.296 252.873 cv
391.086 253.926 376.704 255.294 376.704 255.294 cv
277.671 224.74 mo
279.287 224.016 280.663 223.433 281.833 222.951 cv
280.58 223.5 279.161 224.113 277.671 224.74 cv
325.569 203.948 mo
325.551 203.885 li
326.789 202.28 328.574 199.939 330.03 197.922 cv
328.563 200.052 327.064 202.063 325.569 203.948 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.882353 .807843 .721569 ]
/C1 [.811765 .698039 .631373 ]
/N 1.41221 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.811765 .698039 .631373 ]
/C1 [.811765 .698039 .631373 ]
/N 1 
>>
]
/Bounds [.569697 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~iS`YPi8EPOi8EPOi8EPOi8EPNhr!>Khr!>Khr!>JhVR,GhVR,GhVR)Eh;-oCh;-oBgt^]?gt^]>gY:K;
gY:K:g=k97g=k96g"G'3g"G'2f\"j/f\"g-f@SX+f@JO(f%/F&e^`4#e^`1!eC<!te'ldpe'ldodaHRl
da?IidF$@gd*U.dd*L%acd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`
cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`
~>
<~cHXVYc-=MXc-=MXc-=JVbfn;Tbfn;SbKJ)PbKJ&Nb0%lLb/qcIaiVZHaN2HDaN)?Aa2c6?`l?$<`l5p9
`Pod6`5KU3_o'C0_SX1,_SO()_8*k%^qd_"^V@Ls^:q=p]tM+l]Y(nh]=Y\d]"5J`\[f8\\@B&X\$riT
[^NWP[C*EL['[3HZa7!DZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdA
ZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdA
~>
<~\@8rV\$riU\$riU\$riU[^NWQ[^NWQ[^NTO[C*EM[C*EL['[3I['[3HZa7!EZa6sCZEgdAZE^[>Z*CR<
Yct@9Yct=7YHP.5Y-+q1Y-"h.Xf\_,XK8M)XK/D&X/i8#WiE(uWMukrW2QYnW2HPkVl-DhVP^5eV5:#b
Unjf^Una][US=KWU8"?TTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
221.148 90.099 mo
223.839 93.645 217.629 111.672 217.332 114.228 cv
217.332 114.228 222.93 117.864 222.435 119.043 cv
221.94 120.222 216.666 128.916 216.666 128.916 cv
216.666 128.916 217.899 132.813 219.411 135.81 cv
219.411 135.81 205.416 186.39 204.525 190.44 cv
204.525 190.44 194.076 200.718 192.204 203.085 cv
192.204 203.085 201.591 214.524 206.838 224.586 cv
206.838 224.586 217.629 218.691 219.402 218.097 cv
219.402 218.097 227.052 227.763 230.301 229.734 cv
230.301 229.734 246.609 214.614 266.094 204.48 cv
285.588 194.337 302.076 188.172 302.769 187.38 cv
296.199 153.198 li
296.199 153.198 295.578 146.016 295.776 144.441 cv
295.974 142.866 300.042 124.551 298.764 115.299 cv
297.477 106.047 295.506 87.147 287.631 82.917 cv
279.756 78.678 271.395 82.818 263.322 76.905 cv
255.249 71.001 240.579 64.998 233.784 71.595 cv
226.998 78.183 221.148 90.099 221.148 90.099 cv
.25098 .180392 0 rgb
f
207.693 190.629 mo
207.693 190.629 li
207.695 190.584 207.698 190.538 207.7 190.492 cv
207.698 190.538 207.695 190.584 207.693 190.629 cv
207.693 190.629 li
207.693 190.629 li
207.703 190.443 mo
207.705 190.412 207.707 190.381 207.709 190.349 cv
207.707 190.381 207.705 190.412 207.703 190.443 cv
207.713 190.296 mo
207.715 190.265 207.718 190.233 207.72 190.202 cv
207.718 190.233 207.715 190.265 207.713 190.296 cv
207.725 190.141 mo
207.728 190.095 207.732 190.049 207.736 190.002 cv
207.732 190.049 207.728 190.095 207.725 190.141 cv
207.742 189.94 mo
207.745 189.911 207.747 189.88 207.75 189.851 cv
207.747 189.881 207.745 189.911 207.742 189.94 cv
207.757 189.777 mo
207.76 189.746 207.763 189.715 207.767 189.684 cv
207.763 189.715 207.76 189.746 207.757 189.777 cv
207.774 189.611 mo
207.777 189.584 207.78 189.558 207.783 189.53 cv
207.78 189.557 207.777 189.585 207.774 189.611 cv
207.798 189.394 mo
207.802 189.36 207.806 189.327 207.81 189.292 cv
207.806 189.326 207.802 189.361 207.798 189.394 cv
207.818 189.218 mo
207.822 189.19 207.825 189.159 207.829 189.13 cv
207.825 189.16 207.822 189.189 207.818 189.218 cv
207.842 189.022 mo
207.844 189.008 207.846 188.995 207.848 188.982 cv
207.846 188.995 207.844 189.009 207.842 189.022 cv
207.904 188.563 mo
207.905 188.552 207.907 188.54 207.908 188.529 cv
207.907 188.54 207.905 188.552 207.904 188.563 cv
207.929 188.382 mo
207.93 188.378 207.93 188.374 207.931 188.371 cv
207.93 188.374 207.93 188.378 207.929 188.382 cv
207.953 188.221 mo
207.956 188.198 207.959 188.176 207.963 188.152 cv
207.959 188.175 207.956 188.198 207.953 188.221 cv
207.991 187.965 mo
207.997 187.927 208.003 187.889 208.009 187.85 cv
208.003 187.889 207.997 187.927 207.991 187.965 cv
208.023 187.762 mo
208.029 187.722 208.035 187.682 208.042 187.642 cv
208.035 187.682 208.029 187.722 208.023 187.762 cv
208.053 187.573 mo
208.059 187.534 208.066 187.492 208.072 187.452 cv
208.066 187.492 208.059 187.533 208.053 187.573 cv
208.182 186.805 mo
208.184 186.791 208.186 186.778 208.189 186.764 cv
208.186 186.778 208.184 186.791 208.182 186.805 cv
208.215 186.615 mo
208.219 186.591 208.223 186.568 208.227 186.544 cv
208.223 186.568 208.219 186.591 208.215 186.615 cv
208.276 186.274 mo
208.28 186.251 208.284 186.23 208.288 186.207 cv
208.284 186.229 208.28 186.252 208.276 186.274 cv
208.309 186.094 mo
208.316 186.055 208.323 186.016 208.331 185.975 cv
208.323 186.015 208.316 186.055 208.309 186.094 cv
208.355 185.844 mo
208.361 185.813 208.366 185.783 208.372 185.751 cv
208.366 185.783 208.361 185.813 208.355 185.844 cv
208.395 185.63 mo
208.398 185.615 208.4 185.603 208.403 185.588 cv
208.401 185.602 208.398 185.617 208.395 185.63 cv
208.512 185.023 mo
208.515 185.008 208.518 184.993 208.521 184.977 cv
208.518 184.992 208.515 185.009 208.512 185.023 cv
208.554 184.81 mo
208.561 184.774 208.568 184.738 208.576 184.701 cv
208.568 184.737 208.561 184.774 208.554 184.81 cv
208.615 184.502 mo
208.626 184.449 208.637 184.394 208.648 184.34 cv
208.637 184.394 208.626 184.449 208.615 184.502 cv
208.667 184.245 mo
208.679 184.188 208.69 184.132 208.702 184.075 cv
208.69 184.132 208.679 184.188 208.667 184.245 cv
208.718 183.994 mo
208.732 183.928 208.746 183.859 208.76 183.792 cv
208.746 183.861 208.732 183.927 208.718 183.994 cv
208.772 183.733 mo
208.81 183.55 208.849 183.365 208.889 183.178 cv
208.849 183.366 208.81 183.549 208.772 183.733 cv
208.892 183.161 mo
208.91 183.078 208.928 182.993 208.946 182.909 cv
208.928 182.994 208.91 183.077 208.892 183.161 cv
208.958 182.85 mo
209.017 182.577 209.077 182.3 209.138 182.019 cv
209.077 182.3 209.017 182.577 208.958 182.85 cv
209.159 181.925 mo
209.177 181.843 209.195 181.762 209.213 181.679 cv
209.195 181.761 209.177 181.844 209.159 181.925 cv
209.215 181.671 mo
212.87 165.154 221.787 135.639 221.787 135.639 cv
220.329 132.732 219.519 128.331 219.519 128.331 cv
219.519 128.331 223.524 119.952 224.01 118.809 cv
224.487 117.666 220.473 114.138 220.473 114.138 cv
220.744 111.803 221.269 100.918 223.783 93.8198 cv
223.778 94.2752 224.283 94.4781 225.146 94.4781 cv
228.803 94.4781 238.893 90.8445 243.837 87.435 cv
247.197 85.1195 249.999 84.2551 252.468 84.2551 cv
258.742 84.2551 262.875 89.8298 268.623 91.341 cv
271.02 91.9721 272.743 93.1549 275.053 93.1549 cv
276.498 93.1549 278.173 92.692 280.386 91.341 cv
273.132 109.134 294.615 112.113 291.06 126.945 cv
290.492 129.307 290.012 131.623 289.616 133.919 cv
288.416 135.723 287.048 137.707 285.887 139.37 cv
269.908 146.066 259.18 149.208 246.609 149.715 cv
245.541 149.756 244.491 149.775 243.462 149.775 cv
238.42 149.775 233.868 149.326 230.049 148.878 cv
226.235 148.432 223.141 147.984 221.008 147.984 cv
219.179 147.984 218.057 148.313 217.791 149.256 cv
214.937 159.178 211.256 172.45 209.215 181.671 cv
level3{
gsave
clp
[101.384 0 0 101.384 196.728 148.315 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.882353 .807843 .721569 ]
/C1 [.811765 .698039 .631373 ]
/N 1.41221 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[101.384 0 0 101.384 196.728 148.315 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~iS`YPi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EMMhr!>Khr!>Khr!>Khr!>Khr!>JhVR,GhVR,G
hVR,GhVR,Gh;-oCh;-oCh;-oCh;-oCh;$f@gt^]?gt^]?gt^]?gY:K;gY:K;gY:K;gY:H9g=k97g=k97
g=k97g"G'3g"G'3g"G'3g"=s0f\"j/f\"j/f[na,f@SX+f@SX+f@JO(f%/F'f%/F'f%&=$e^`4#e^`4#
e^W*ueC<!teC<!te'ldpe'ldpe'ldodaHRldaHRlda?IidF$@hdF$@hd*U.dd*U.dd*U+bcd0q`cd0q`
~>
<~cHXVYc-=MXc-=MXc-=MXc-=MXc-=MXc-4DUbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)PbK@uMb0%lLb0%lL
b/qcIaiVZHaiVZHaN2HDaN2HDaN2HCa2c6@a2c6@`l?$<`l?$<`l?!:`Pog8`Pog7`5KU4`5KU4_o'C0
_o'C0_ns:-_SX1,_SO()_83t(_8*k%^qdb$^q[Y!^V@Ou^V7Fr^:q=q^:h4n]tM+m]Y(ni]Y(ni]=Y\e
]=Y\d]"5Ja]"5G_\[f8]\[]/Z\@B&Y\$riU\$riT[^NWQ[^NTO[C*EM[C!<J['[3HZa7!EZa6sCZEgdA
~>
<~\@8rV\$riU\$riU\$riU\$riU\$riU\$riU[^NWQ[^NWQ[^NWQ[^NWQ[^NTO[C*EM[C*EM[C*EM[C!<J
['[3I['[3I['[3HZa7!EZa7!EZa7!DZEgdAZEgdAZEgd@Z*CR=Z*CR=Z*CR<Yct@9Yct@9Yct=7YHP.5
YHP.5Y-+q1Y-+q1Y-+n/Xf\_-Xf\_-XK8M)XK8M)XK8J'X/i;%X/i;$WiE)!WiE)!Wi;tsWMukrWMuhp
W2QYnW2QVlVl-GjVl-GiVP^5fVP^5fV5:#bV5:#bUnjf^Unjf^USFTZUSFTZUS=KWU8"BVU7n9STqS0R
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
230.668 208.865 mo
224.225 208.866 217.127 207.588 211.464 203.364 cv
212.895 200.502 216.306 195.876 216.306 195.876 cv
210.87 199.845 207.846 201.501 205.74 202.788 cv
200.827 202.717 200.14 200.61 201.237 198.078 cv
204.3 194.519 207.693 190.629 207.693 190.629 cv
207.693 190.629 li
207.693 190.629 li
207.695 190.584 207.698 190.538 207.7 190.492 cv
207.701 190.476 207.702 190.459 207.703 190.443 cv
207.705 190.412 207.707 190.381 207.709 190.349 cv
207.711 190.332 207.712 190.314 207.713 190.296 cv
207.715 190.265 207.718 190.233 207.72 190.202 cv
207.722 190.181 207.723 190.162 207.725 190.141 cv
207.728 190.095 207.732 190.049 207.736 190.002 cv
207.738 189.982 207.74 189.961 207.742 189.94 cv
207.745 189.911 207.747 189.881 207.75 189.851 cv
207.752 189.826 207.755 189.802 207.757 189.777 cv
207.76 189.746 207.763 189.715 207.767 189.684 cv
207.769 189.66 207.771 189.636 207.774 189.611 cv
207.777 189.585 207.78 189.557 207.783 189.53 cv
207.788 189.485 207.793 189.44 207.798 189.394 cv
207.802 189.361 207.806 189.326 207.81 189.292 cv
207.812 189.268 207.815 189.243 207.818 189.218 cv
207.822 189.189 207.825 189.16 207.829 189.13 cv
207.833 189.094 207.838 189.059 207.842 189.022 cv
207.844 189.009 207.846 188.995 207.848 188.982 cv
207.865 188.846 207.884 188.706 207.904 188.563 cv
207.905 188.552 207.907 188.54 207.908 188.529 cv
207.915 188.48 207.922 188.432 207.929 188.382 cv
207.93 188.378 207.93 188.374 207.931 188.371 cv
207.938 188.321 207.945 188.271 207.953 188.221 cv
207.956 188.198 207.959 188.175 207.963 188.152 cv
207.972 188.091 207.981 188.028 207.991 187.965 cv
207.997 187.927 208.003 187.889 208.009 187.85 cv
208.013 187.821 208.018 187.792 208.023 187.762 cv
208.029 187.722 208.035 187.682 208.042 187.642 cv
208.045 187.619 208.049 187.596 208.053 187.573 cv
208.059 187.533 208.066 187.492 208.072 187.452 cv
208.107 187.241 208.143 187.026 208.182 186.805 cv
208.184 186.791 208.186 186.778 208.189 186.764 cv
208.197 186.715 208.206 186.665 208.215 186.615 cv
208.219 186.591 208.223 186.568 208.227 186.544 cv
208.243 186.455 208.259 186.365 208.276 186.274 cv
208.28 186.252 208.284 186.229 208.288 186.207 cv
208.295 186.169 208.302 186.133 208.309 186.094 cv
208.316 186.055 208.323 186.015 208.331 185.975 cv
208.339 185.932 208.347 185.888 208.355 185.844 cv
208.361 185.813 208.366 185.783 208.372 185.751 cv
208.38 185.711 208.388 185.671 208.395 185.63 cv
208.398 185.617 208.401 185.602 208.403 185.588 cv
208.438 185.403 208.475 185.215 208.512 185.023 cv
208.515 185.009 208.518 184.992 208.521 184.977 cv
208.532 184.921 208.543 184.867 208.554 184.81 cv
208.561 184.774 208.568 184.737 208.576 184.701 cv
208.589 184.635 208.602 184.569 208.615 184.502 cv
208.626 184.449 208.637 184.394 208.648 184.34 cv
208.654 184.308 208.661 184.277 208.667 184.245 cv
208.679 184.188 208.69 184.132 208.702 184.075 cv
208.707 184.049 208.713 184.021 208.718 183.994 cv
208.732 183.927 208.746 183.861 208.76 183.792 cv
208.764 183.773 208.768 183.752 208.772 183.733 cv
208.81 183.549 208.849 183.366 208.889 183.178 cv
208.89 183.173 208.891 183.166 208.892 183.161 cv
208.91 183.077 208.928 182.994 208.946 182.909 cv
208.95 182.889 208.954 182.87 208.958 182.85 cv
209.017 182.577 209.077 182.3 209.138 182.019 cv
209.145 181.989 209.152 181.956 209.159 181.925 cv
209.177 181.844 209.195 181.761 209.213 181.679 cv
209.214 181.677 209.214 181.674 209.215 181.671 cv
211.256 172.45 214.937 159.178 217.791 149.256 cv
218.057 148.313 219.179 147.984 221.008 147.984 cv
223.141 147.984 226.235 148.432 230.049 148.878 cv
233.868 149.326 238.42 149.775 243.462 149.775 cv
244.491 149.775 245.541 149.756 246.609 149.715 cv
259.18 149.208 269.908 146.066 285.887 139.37 cv
284.39 141.516 283.239 143.127 283.239 143.127 cv
288.304 145.61 li
287.781 155.605 288.731 166.015 290.862 178.893 cv
290.862 178.893 272.637 197.163 247.419 206.226 cv
245.199 207.022 238.406 208.865 230.668 208.865 cv
level3{
gsave
clp
[101.386 0 0 101.386 196.728 182.048 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.772549 .752941 .709804 ]
/C1 [.701961 .643137 .560784 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[101.386 0 0 101.386 196.728 182.048 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`Pf^5`5KU4`5KU4`5KU3_o'C0_o'C0_o'C0_ns:-_SX1,_SX1,_SX1+_83t(_83t(_83t(_8*k%^qdb$
^qdb$^qdb$^V@Ou^V@Ou^V@Ou^V@Ls^:q=q^:q=q^:q=q]tM+m]tM+m]tM+m]tM(k]Y(ni]Y(ni]Y(ni
]Xtef]=Y\e]=Y\e]=Y\d]"5Ja]"5Ja]"5Ja]",A^\[f8]\[f8]\[f8\\@B&Y\@B&Y\@B&Y\@8rV\$riU
\$riU\$riU[^NWQ[^NWQ[^NWQ[^NTO[C*EM[C*EM[C*EM['[3I['[3I['[3I['[0GZa7!EZa7!EZa7!E
~>
<~^q[Y!^V@Ou^V@Ls^:q=q^:q=p]tM+m]tM+m]Y(ni]Y(ni]Xtef]=Y\e]=YYc]"5Ja]"5J`\[f8]\[f8]
\[]/Z\@B&Y\@B#W\$riU\$riT[^NWQ[^NWQ[C*EM[C*EM[C!<J['[3I['[0GZa7!EZa7!DZEgdAZEgdA
ZE^[>Z*CR=Z*CO;Yct@9Yct@8YHP.5YHP.5Y-+q1Y-+q1Y-"h.Xf\_-Xf\\+XK8M)XK8M(X/i;%X/i;%
X/`2"WiE)!WiE%tWMukrWMukqW2QYnW2QYnVl-GjVl-GjVl$>gVP^5fVP^2dV5:#bV5:#aUnjf^Unjf^
~>
<~[C!<J['[3HZa7!EZa6sCZEgdAZE^[>Z*CR<Yct@9Yct=7YHP.5YHG%2Y-+q1Xf\_-Xf\\+XK8M)XK/D&
X/i;%WiE)!WiE(uWMukrWMlboW2QYnVl-GjVl-GiVP^5fVP^2dV5:#bUnjf^Unjf]USFTZUSFQXU8"BV
U7n9STqS0QTV.sNTV.pLT:_aJT:VXGSt;OESXl=BSXl:@S=H+>S=?";S"#n:R[T\6R[TY4R@0J2R@'A/
R$a8.Q^=&*Q^=&)QBmi&QBd`#Q'IW"Pa%DsPa%DrPEV2oPEV/mP*1ukOcbcgOcbcfOH>QcOH>NaO,o?_
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
218.715 128.405 mo
218.715 128.405 219.366 137.754 227.413 138.08 cv
235.46 138.406 238.183 129.604 238.073 127.972 cv
238.073 127.972 227.702 126.947 218.715 128.405 cv
cp
.25098 .180392 0 rgb
f
219.905 128.919 mo
219.905 128.919 220.19 136.549 227.249 136.835 cv
234.307 137.121 236.98 129.971 236.884 128.54 cv
236.884 128.54 227.821 127.871 219.905 128.919 cv
cp
1 1 1 rgb
f
222.974 128.262 mo
222.945 128.473 222.918 128.685 222.925 128.905 cv
222.992 131.039 224.777 132.713 226.911 132.646 cv
229.045 132.579 230.72 130.793 230.651 128.66 cv
230.646 128.439 230.605 128.23 230.562 128.022 cv
222.974 128.262 li
cp
.25098 .180392 0 rgb
f
213.229 144.942 mo
213.229 144.942 217.504 154.029 229.347 153.431 cv
236.887 153.049 240.22 149.997 240.22 149.997 cv
240.22 149.997 239.934 138.362 233.735 140.746 cv
227.535 143.13 222.498 142.669 219.142 142.654 cv
215.787 142.637 213.229 144.942 213.229 144.942 cv
cp
level3{
gsave
clp
[26.9907 0 0 26.9907 213.229 146.942 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.882353 .807843 .721569 ]
/C1 [.858824 .756863 .678431 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[26.9907 0 0 26.9907 213.229 146.942 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~iS`YPi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPNhr!>Khr!>Khr!>Khr!>Khr!>K
hr!>Khr!>Khr!>Khr!>Khr!>Khr!;IhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVI#Dh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oBgt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^]?gt^]?gt^Z=gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
~>
<~cHXVYc-=MXc-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Pb0%lL
b0%lLb0%lLb0%lLb0%lKaiVZHaiVZHaiVZHaiVZHaiVZGaN2HDaN2HDaN2HDaN2HDaN2HCa2c6@a2c6@
a2c6@a2c6@a2c3>`l?$<`l?$<`l?$<`l?$<`l?!:`Pog8`Pog8`Pog8`Pog8`Pod6`5KU4`5KU4`5KU4
`5KU4`5BL1_o'C0_o'C0_o'C0_o'C0_ns:-_SX1,_SX1,_SX1,_SX1,_SO()_83t(_83t(_83t(_83t(
~>
<~\@8rV\$riU\$riU\$riU\$riU\$riU[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWP[C*EM[C*EM[C*EM[C*EM
[C*EM[C*BK['[3I['[3I['[3I['[3I['[3I['[0GZa7!EZa7!EZa7!EZa7!EZa7!EZa-mBZEgdAZEgdA
ZEgdAZEgdAZEgdAZ*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR<Yct@9Yct@9Yct@9Yct@9Yct@9Yct@8YHP.5
YHP.5YHP.5YHP.5YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-"h.Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
221.097 143.226 mo
230.243 143.046 234.927 140.125 234.927 140.125 cv
232.495 140.984 228.036 142.033 221.813 142.104 cv
215.589 142.176 210.892 143.774 210.892 143.774 cv
210.605 144.418 212.895 152.716 225.056 153.86 cv
237.216 155.004 241.794 148.781 241.794 148.781 cv
241.794 148.781 221.765 158.223 214.111 144.418 cv
214.111 144.418 217.449 143.296 221.097 143.226 cv
cp
.25098 .180392 0 rgb
f
229.563 167.827 mo
233.053 164.029 240.75 157.341 252.966 156.519 cv
265.183 155.697 273.84 153.917 276.997 151.352 cv
276.997 151.352 273.411 171.361 260.5 174.111 cv
253.783 175.542 248.337 172.805 242.086 170.718 cv
236.118 168.725 229.563 167.827 229.563 167.827 cv
cp
.290196 .239216 .207843 rgb
f
231.254 167.165 mo
234.498 163.636 242.624 158.048 253.974 157.285 cv
265.325 156.521 271.356 155.111 275.628 153.087 cv
275.963 152.291 269.787 170.408 259.697 171.751 cv
253.375 172.593 248.614 170.98 242.891 169.549 cv
237.22 168.132 231.254 167.165 231.254 167.165 cv
cp
1 1 1 rgb
f
284.666 154 mo
283.808 151.352 li
283.808 151.352 283.597 154 281.785 158.676 cv
279.42 164.777 276.369 169.072 276.369 169.072 cv
276.369 169.072 282.091 162.015 284.666 154 cv
cp
.25098 .180392 0 rgb
f
226.017 222.705 mo
226.017 222.705 215.541 212.805 210.393 204.723 cv
210.393 204.723 215.829 214.02 219.402 218.097 cv
226.017 222.705 li
f
219.551 114.168 mo
219.551 114.168 219.905 111.37 234.283 105.075 cv
234.283 105.075 235.332 107.436 236 108.58 cv
236 108.58 227.945 109.495 219.551 114.168 cv
cp
f
238.503 100.878 mo
238.503 100.878 241.139 104.971 241.174 106.124 cv
241.222 107.65 240.847 108.977 240.792 111.37 cv
240.792 111.37 241.866 108.508 242.509 106.124 cv
242.509 106.124 242.7 104.598 238.503 100.878 cv
cp
f
257.293 100.306 mo
257.293 100.306 256.968 103.454 257.618 106.83 cv
257.616 106.83 270.715 108.411 274.914 111.37 cv
276.916 112.228 li
276.916 112.228 269.978 105.075 258.142 102.697 cv
258.142 102.697 257.567 101.494 257.293 100.306 cv
cp
f
256.339 91.3398 mo
256.339 91.3398 255.266 96.2998 250.902 102.881 cv
250.902 102.881 253.859 106.41 254.813 107.65 cv
254.813 107.65 252.81 103.834 252.524 102.69 cv
252.524 102.69 254.782 98.2163 256.339 91.3398 cv
cp
f
284.643 87.12 mo
281.493 90.054 277.128 98.568 283.923 105.075 cv
290.718 111.582 296.973 120.105 292.437 129.357 cv
291.06 132.183 283.239 143.127 283.239 143.127 cv
294.804 148.797 li
294.804 148.797 299.88 133.758 301.527 129.825 cv
303.165 125.892 307.755 121.5 311.904 121.284 cv
311.904 121.284 312.138 104.409 308.655 96.966 cv
305.829 90.936 301.239 89.118 301.239 89.118 cv
301.239 89.118 303.093 85.545 308.034 86.904 cv
308.034 86.904 304.596 83.277 298.593 86.472 cv
298.593 86.472 299.16 85.347 301.455 84.231 cv
303.912 83.034 306.936 82.71 307.557 79.938 cv
308.412 76.131 306.027 74.007 301.455 73.98 cv
301.455 73.98 304.389 74.475 302.958 77.409 cv
302.121 79.119 300.357 78.939 298.98 79.668 cv
296.163 81.144 296.019 84.231 296.019 84.231 cv
296.019 84.231 293.535 73.89 285.93 74.241 cv
280.782 74.484 277.632 80.964 269.478 77.463 cv
261.324 73.962 256.158 64.872 246.447 60.363 cv
233.64 54.432 213.309 55.629 209.034 71.19 cv
206.1 81.846 220.086 93.348 224.289 92.511 cv
231.084 91.152 238.77 84.024 243.369 80.892 cv
251.352 75.465 256.104 76.536 260.964 80.469 cv
265.833 84.402 271.836 93.843 284.643 87.12 cv
f
310.122 146.034 mo
316.701 146.466 320.607 143.415 322.911 137.601 cv
326.205 129.303 322.245 121.383 313.092 120.717 cv
304.029 120.051 299.871 126.702 298.809 134.901 cv
297.945 141.489 296.055 145.107 296.055 145.107 cv
296.055 145.107 295.695 150.849 296.055 152.64 cv
296.415 154.44 299.502 170.406 299.502 170.406 cv
299.502 170.406 308.763 145.953 310.122 146.034 cv
.811765 .698039 .631373 rgb
f
316.426 124.627 mo
316.426 124.627 306.317 120.671 304.313 131.775 cv
304.313 131.775 309.582 128.17 313.284 132.634 cv
315.921 135.813 311.903 140.424 311.903 140.424 cv
311.903 140.424 317.733 136.448 314.232 131.662 cv
311.755 128.272 307.842 128.919 307.842 128.919 cv
307.842 128.919 308.032 123.387 316.426 124.627 cv
cp
.25098 .180392 0 rgb
f
315.333 326.97 mo
315.333 326.97 324.63 315 351.666 296.64 cv
351.666 296.64 349.092 265.59 349.947 256.005 cv
349.947 256.005 351.81 253.431 354.96 249.282 cv
354.96 249.282 351.576 256.725 352.287 273.033 cv
353.007 289.341 356.103 297.828 356.103 297.828 cv
356.103 297.828 332.37 310.896 315.333 326.97 cv
f
260.892 311.949 mo
247.149 319.149 li
247.149 319.149 257.886 316.143 261.873 315.531 cv
265.851 314.928 279.423 319.356 279.423 319.356 cv
263.592 311.949 li
262.251 250.146 li
260.892 311.949 li
f
353.439 251.298 mo
353.439 251.298 365.643 235.647 367.164 231.444 cv
368.694 227.25 370.98 219.429 370.98 219.429 cv
370.98 219.429 369.261 232.029 366.975 235.359 cv
364.689 238.698 354.96 251.1 352.98 257.247 cv
350.955 263.511 353.439 251.298 353.439 251.298 cv
f
181.287 304.272 mo
181.287 304.272 205.092 311.922 224.199 328.401 cv
224.199 328.401 215.757 315.81 185.679 300.843 cv
185.679 300.843 181.404 269.982 178.461 260.82 cv
178.461 260.82 168.579 251.838 162.54 240.273 cv
160.47 236.313 163.233 221.418 163.233 221.418 cv
163.233 221.418 158.283 239.805 161.253 242.559 cv
164.205 245.313 173.502 256.734 176.796 262.305 cv
178.2 265.905 179.46 271.215 180.234 277.947 cv
182.304 295.902 181.287 304.272 181.287 304.272 cv
f
384.908 181.725 mo
384.908 181.725 374.797 200.604 373.461 207.853 cv
373.461 207.853 376.102 193.322 382.542 180.671 cv
384.908 181.725 li
cp
f
329.562 303.214 mo
330.93 304.699 334.619 302.57 338.197 299.264 cv
341.775 295.958 343.239 291.75 341.87 290.268 cv
340.499 288.785 336.647 290.016 333.234 293.894 cv
330.015 297.55 328.192 301.732 329.562 303.214 cv
cp
.431373 .352941 .305882 rgb
f
205.935 304.692 mo
204.815 306.307 200.976 304.751 197.084 302.046 cv
193.193 299.341 191.215 295.484 192.336 293.872 cv
193.457 292.259 197.337 292.928 201.144 296.205 cv
204.736 299.297 207.056 303.08 205.935 304.692 cv
cp
f
335.448 195.966 mo
335.448 195.966 329.103 208.647 306.891 222.705 cv
306.891 222.705 322.092 211.41 333.36 192.771 cv
335.448 195.966 li
.25098 .180392 0 rgb
f
320.049 192.915 mo
324.054 208.485 li
325.782 204.723 li
322.056 191.196 li
320.049 192.915 li
f
304.317 153.999 mo
297.801 168.948 li
298.701 169.704 299.322 170.811 299.331 172.071 cv
303.084 161.343 304.317 153.999 304.317 153.999 cv
f
290.268 190.413 mo
289.557 191.016 288.783 191.322 288.027 191.403 cv
280.521 208.647 li
285.597 201.582 288.846 195.408 292.068 188.685 cv
291.267 189.666 291.204 189.603 290.268 190.413 cv
f
243.936 225.441 mo
243.936 225.441 256.374 232.209 260.271 234.504 cv
264.159 236.79 274.626 226.719 286.695 220.77 cv
286.695 220.77 266.922 229.923 262.638 229.734 cv
258.345 229.545 243.936 225.441 243.936 225.441 cv
f
395.559 224.181 mo
404.361 218.196 410.274 222.579 418.572 218.385 cv
426.87 214.182 439.083 207.054 439.65 194.265 cv
440.226 181.476 437.94 177.66 440.802 171.981 cv
440.802 171.981 440.118 174.879 440.226 178.893 cv
440.334 182.916 440.379 191.214 443.943 197.208 cv
437.157 218.07 419.625 221.337 415.044 221.337 cv
405.873 221.337 404.271 220.194 395.559 224.181 cv
f
154.467 219.186 mo
149.301 218.385 144.954 219.258 140.724 220.122 cv
135.396 221.22 130.221 222.327 123.777 220.086 cv
114.993 217.044 101.664 209.475 100.395 196.731 cv
99.414 186.93 101.592 184.473 96.561 173.601 cv
96.561 173.601 98.631 178.758 98.901 182.772 cv
99.162 186.777 99.558 190.053 96.561 196.353 cv
102.591 219.96 122.985 222.714 127.557 222.714 cv
141.795 222.705 142.542 219.069 154.467 219.186 cv
f
232.833 419.467 mo
232.789 419.309 232.807 419.15 232.902 418.977 cv
232.874 419.142 232.851 419.305 232.833 419.467 cv
.196078 .141176 0 rgb
f
232.839 419.49 mo
232.837 419.482 232.835 419.475 232.833 419.467 cv
232.851 419.305 232.874 419.142 232.902 418.977 cv
232.905 418.971 232.907 418.965 232.911 418.959 cv
232.875 419.13 232.857 419.31 232.839 419.49 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Yb@/_TocLPOKbF?Yb7)]TT?:LO0>4;YFglZT9$1JNio"7Y+CZVSrTtFNNSk4Xe(NSSrBeBN3/Y0XIP6N
S;aP>N3&M,XIG-LRu=A;MQE;)X."pHRYe)5M5lu#WgJXCR#.f/LoH_sWL&F?Q\VQ+LT-SoWKi4:Q%c0$
KrC5iViuh4PD,ltKVjocVNQS.Ob9KmJu+Q\V3$;*OFj<iJY\?XUlL#$Ne!maJ>8'QU5XSrN..L[I\MaL
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~U5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJp
MghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCY
I\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaLU5OJpMghCYI\MaL
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.569697 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~YHP.5YHP.5YHP.5Y-+q1Y-+q1Y-+q1Y-+n/Xf\_-Xf\_-Xf\\+XK8M)XK8M(X/i;%X/i;%X/i;%X/i;%
X/`2"WiE)!WMukrWMukqW2QYnW2QYnW2QYnW2QYmVl-GjVl-DhVP^5eV5:#bV59u`Unjf^Unjf^Unjf^
USFTZU8"BVU8"BUTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
~>
<~TV.sNTV.sNTV.pLT:_aJT:_aISt;OFSt;OFSXl=BSXl=BSXl=BSXl:@S=H+=S"#n:S"#k8R[T\6R[T\6
R[KS3R@0G0R$a8-Q^=&)QBmi&QBmi&Q'IW"Q'@MtPa%AqPEV/mP*1ukP*(lhOcb`eOH>QbO,o?_O,o<]
NfK*YNK&pVN/NUPMi3LOMi3IMMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
~>
<~O,o?_O,o?_O,o?_NfK-[NfK-[NfK-[NK&pWNK&pWNJrgTN/W^SMi3LOMi3LOMi3LOMi3IMMMd:KMM[1H
M2@(GLkpkCLkpkCLkpkBLPLY?LPLV=L5(G:KnY56KS5#3KS5#3KS5#2K7ef/JqAT+JUrB'JUrB'JUr?%
J:N0#It)rtIsuiqIXZ]nI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6Nl
I=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6Nl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
246.651 423.985 mo
246.615 423.985 246.58 423.985 246.544 423.985 cv
246.58 423.985 246.615 423.985 246.651 423.985 cv
246.651 423.985 li
297.602 422.436 mo
299.395 422.337 301.082 422.236 302.637 422.134 cv
301.082 422.236 299.395 422.337 297.602 422.436 cv
444.672 113.814 mo
444.226 113.777 443.753 113.726 443.254 113.661 cv
443.09 113.556 442.925 113.452 442.759 113.349 cv
443.436 113.595 444.073 113.764 444.672 113.814 cv
.196078 .141176 0 rgb
f
246.651 423.985 mo
246.615 423.985 246.58 423.985 246.544 423.985 cv
239.726 423.983 234.983 423.804 234.239 423.372 cv
234.228 423.365 234.217 423.358 234.207 423.351 cv
234.207 423.351 li
232.929 422.433 232.668 421.029 232.839 419.49 cv
233.371 421.168 242.71 421.694 253.933 421.694 cv
271.174 421.694 292.859 420.453 293.868 420.246 cv
300.357 418.914 305.208 420.534 300.564 407.376 cv
298.377 401.175 291.816 387.315 312.417 362.304 cv
312.417 362.304 312.741 320.499 264.429 319.356 cv
263.907 319.344 263.392 319.338 262.879 319.338 cv
248.83 319.338 238.365 323.82 238.365 323.82 cv
238.365 323.82 241.358 321.704 247.196 319.125 cv
247.149 319.149 li
247.149 319.149 257.886 316.143 261.873 315.531 cv
262.126 315.493 262.419 315.475 262.745 315.475 cv
267.363 315.475 278.619 319.096 279.382 319.343 cv
293.215 324.334 309.978 331.065 309.978 331.065 cv
312.276 329.007 314.738 326.868 317.345 324.664 cv
315.955 326.169 315.333 326.97 315.333 326.97 cv
332.37 310.896 356.103 297.828 356.103 297.828 cv
356.103 297.828 353.007 289.341 352.287 273.033 cv
351.993 266.297 352.398 261.075 352.975 257.264 cv
352.976 257.258 352.978 257.253 352.98 257.247 cv
354.5 252.528 360.588 244.121 364.368 238.96 cv
368.875 233.793 374.096 229.265 379.188 227.799 cv
387.243 225.478 393.564 223.501 399.122 222.216 cv
397.982 222.7 396.799 223.338 395.559 224.181 cv
398.19 222.977 400.171 222.241 401.91 221.8 cv
396.626 223.323 389.168 226.984 384.912 235.647 cv
381.141 243.306 376.704 255.294 376.704 255.294 cv
376.704 255.294 391.086 253.926 397.296 252.873 cv
418.554 249.273 441.846 246.429 451.953 227.799 cv
453.681 224.622 457.119 209.421 458.352 203.409 cv
444.271 219.716 425.608 221.468 418.235 221.468 cv
416.216 221.468 415.044 221.337 415.044 221.337 cv
415.044 221.337 li
419.625 221.337 437.157 218.07 443.943 197.208 cv
440.618 191.616 440.356 184.018 440.248 179.758 cv
440.715 184.769 443.071 191.482 445.59 192.771 cv
445.59 192.771 471.762 181.728 468.135 159.21 cv
468.135 159.21 466.74 158.067 460.26 151.029 cv
453.771 143.982 460.215 133.794 453.924 123.597 cv
452.733 121.67 448.647 117.125 443.254 113.661 cv
443.753 113.726 444.226 113.777 444.672 113.814 cv
444.672 113.814 li
451.539 114.39 467.946 124.839 469.854 130.014 cv
471.762 135.18 475.758 148.941 482.247 155.979 cv
485.035 159.007 486.273 161.176 486.263 163.417 cv
486.25 166.393 484.04 169.496 480.339 174.906 cv
473.859 184.392 462.159 213.327 458.352 227.637 cv
454.536 241.938 434.691 256.626 411.228 258.534 cv
387.765 260.442 385.29 267.12 381.285 276.273 cv
377.28 285.435 372.321 317.673 348.471 339.03 cv
324.63 360.396 316.809 371.655 315.855 383.103 cv
314.901 394.542 316.809 401.409 309.942 410.373 cv
309.942 410.373 li
309.942 410.373 li
309.942 410.373 311.085 419.346 313.182 420.867 cv
313.207 420.885 313.221 420.904 313.223 420.922 cv
313.237 421.039 312.814 421.162 312.017 421.29 cv
310.34 421.56 307.012 421.849 302.637 422.134 cv
301.082 422.236 299.395 422.337 297.602 422.436 cv
282.67 423.264 260.45 423.985 246.651 423.985 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
315.333 326.97 mo
315.333 326.97 315.955 326.169 317.345 324.664 cv
327.553 316.035 339.998 306.405 353.619 296.676 cv
350.658 280.674 350.082 262.017 352.188 257.202 cv
352.266 257.023 352.354 256.831 352.449 256.628 cv
352.232 257.969 352.104 259.034 352.244 259.034 cv
352.341 259.034 352.565 258.53 352.975 257.264 cv
352.398 261.075 351.993 266.297 352.287 273.033 cv
353.007 289.341 356.103 297.828 356.103 297.828 cv
356.103 297.828 332.37 310.896 315.333 326.97 cv
.196078 .141176 0 rgb
f
279.382 319.343 mo
278.619 319.096 267.363 315.475 262.745 315.475 cv
262.419 315.475 262.126 315.493 261.873 315.531 cv
257.886 316.143 247.149 319.149 247.149 319.149 cv
247.196 319.125 li
250.884 317.495 255.707 315.682 261.63 314.1 cv
261.727 314.074 261.852 314.062 262.005 314.062 cv
264.091 314.062 271.228 316.4 279.382 319.343 cv
f
352.244 259.034 mo
352.104 259.034 352.232 257.969 352.449 256.628 cv
354.199 252.907 358.723 245.432 364.368 238.96 cv
360.588 244.121 354.5 252.528 352.98 257.247 cv
352.978 257.253 352.976 257.258 352.975 257.264 cv
352.565 258.53 352.341 259.034 352.244 259.034 cv
f
395.559 224.181 mo
396.799 223.338 397.982 222.7 399.122 222.216 cv
401.024 221.776 402.839 221.417 404.601 221.153 cv
403.802 221.307 402.894 221.516 401.91 221.8 cv
400.171 222.241 398.19 222.977 395.559 224.181 cv
415.044 221.337 mo
415.044 221.337 421.911 218.475 427.635 215.424 cv
433.359 212.373 441.945 200.736 440.604 192.771 cv
439.272 184.806 440.235 176.751 440.235 176.751 cv
440.134 177.617 440.144 178.646 440.248 179.758 cv
440.356 184.018 440.618 191.616 443.943 197.208 cv
437.157 218.07 419.625 221.337 415.044 221.337 cv
404.601 221.153 mo
406.32 220.822 407.528 220.748 407.88 220.748 cv
408.014 220.748 408.023 220.759 407.889 220.77 cv
406.806 220.857 405.714 220.986 404.601 221.153 cv
f
442.759 113.349 mo
440.038 112.362 436.662 110.135 432.432 109.386 cv
436.088 109.855 439.629 111.407 442.759 113.349 cv
f
295.9 149.201 mo
295.829 148.096 295.767 146.949 295.745 146.026 cv
295.843 145.741 295.946 145.439 296.054 145.123 cv
296.042 145.319 295.925 147.27 295.9 149.201 cv
f
262.774 229.737 mo
262.727 229.737 262.682 229.736 262.638 229.734 cv
258.345 229.545 243.936 225.441 243.936 225.441 cv
243.936 225.441 246.939 227.075 250.457 229.01 cv
246.383 227.077 242.436 224.491 238.427 222.846 cv
245.039 217.56 255.056 210.221 266.094 204.48 cv
273.645 200.551 280.745 197.219 286.651 194.565 cv
280.521 208.647 li
284.463 203.161 287.303 198.211 289.884 193.125 cv
292.135 192.132 294.156 191.258 295.895 190.51 cv
295.894 190.51 295.894 190.511 295.893 190.512 cv
294.027 193.332 289.377 217.757 285.3 221.406 cv
284.445 221.793 283.244 222.332 281.833 222.951 cv
280.663 223.433 279.287 224.016 277.671 224.74 cv
271.966 227.139 265.224 229.737 262.774 229.737 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
229.725 225.441 mo
228.798 224.878 227.439 223.85 225.983 222.681 cv
225.983 222.681 li
227.439 223.85 228.798 224.878 229.725 225.441 cv
229.725 225.441 245.367 212.562 264.258 202.743 cv
283.14 192.915 297.441 186.048 298.116 185.283 cv
298.116 185.283 li
298.116 185.283 li
294.678 153.045 li
294.678 153.045 294.588 150.859 294.543 148.669 cv
294.804 148.797 li
294.804 148.797 295.174 147.702 295.745 146.026 cv
295.767 146.949 295.829 148.096 295.9 149.201 cv
295.882 150.566 295.91 151.921 296.055 152.64 cv
296.303 153.881 297.849 161.86 298.784 166.693 cv
297.801 168.948 li
298.701 169.704 299.322 170.811 299.331 172.071 cv
299.404 171.861 299.477 171.652 299.548 171.445 cv
300.038 181.872 301.059 186.624 301.059 186.624 cv
300.852 186.858 298.918 185.949 295.895 190.51 cv
294.156 191.258 292.135 192.132 289.884 193.125 cv
290.627 191.662 291.348 190.187 292.068 188.685 cv
291.267 189.666 291.204 189.603 290.268 190.413 cv
289.557 191.016 288.783 191.322 288.027 191.403 cv
286.651 194.565 li
280.745 197.219 273.645 200.551 266.094 204.48 cv
255.056 210.221 245.039 217.56 238.427 222.846 cv
238.31 222.798 238.194 222.751 238.077 222.705 cv
229.725 225.441 li
.196078 .141176 0 rgb
f
229.725 225.441 mo
228.798 224.878 227.439 223.85 225.983 222.681 cv
226.017 222.705 li
226.017 222.705 215.541 212.805 210.393 204.723 cv
210.393 204.723 214.611 211.937 218.058 216.442 cv
215.707 217.374 208.458 220.959 208.458 220.959 cv
206.073 216.666 196.731 203.409 196.731 203.409 cv
197.439 202.515 199.27 200.365 201.237 198.078 cv
200.14 200.61 200.827 202.717 205.74 202.788 cv
207.846 201.501 210.87 199.845 216.306 195.876 cv
216.306 195.876 212.895 200.502 211.464 203.364 cv
217.127 207.588 224.225 208.866 230.668 208.865 cv
238.406 208.865 245.199 207.022 247.419 206.226 cv
272.637 197.163 290.862 178.893 290.862 178.893 cv
288.731 166.015 287.781 155.605 288.304 145.61 cv
294.543 148.669 li
294.588 150.859 294.678 153.045 294.678 153.045 cv
298.116 185.283 li
297.441 186.048 283.14 192.915 264.258 202.743 cv
245.367 212.562 229.725 225.441 229.725 225.441 cv
level3{
gsave
clp
[101.386 0 0 101.386 196.728 182.048 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~R[/r%QAh5sN1#riR?WYuP`(omMO9TbR$3AnPDPWiM3jB]Q]d/kOb]9cLR4*WQB6fdOG0!^KpIgSQ&gT`
O+W^XK9VCJP`:9ZNImCRJWl%DPDk$UN.@+NJ!5e>PDamRMLL_GI?KG8P)4RKM0tGBH]a/3Obe@GLjG/<
HB<o-OG8"AL3Sf7GE@N&O+he=Km&N2G)h5uNeDP8K63-+F,bfnNIl52Jocm&Ef>TiN.Gu-JT-QuE/]<d
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[101.386 0 0 101.386 196.728 182.048 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~R@0J2R@0J2R@'A/R$a8.R$a8.R$a8.R$X/+Q^=&*Q^=&*Q^3r'QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&
QBmf$Q'IW"Q'IW"Q'IW"Q'ISuPa%DsPa%DsPa%AqPEV2oPEV2oPEV2oPEV/mP*1ukP*1ukP*1ukP*1uk
P*1ukP*1ukP*1ujOcbcgOcbcgOcbcfOH>QcOH>QcOH>QcOH>QbO,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_NfK-[NfK-[NfK-[NK&pWNK&pWNK&pWNK&pWN/W^SN/W^SN/W^SMi3LOMi3LOMi3LOMi3LOMi3LO
~>
<~Q'IW"Q'IW"Q'@MtPa%DsP`q;pPEV2oPEM)lP*1ukP*1ukP*1ukP*1ukP*(lhOcbcgOcYZdOH>QcOH5H`
O,o?_O,o?_O,o?_O,o?_O,o<]NfK-[NfK*YNK&pWNK&mUN/W^SN/W[QMi3LOMi3LOMi3LOMi3LOMi3IM
MMd:KMMd:JM2@(GM2@(FLkpkCLkpkCLkpkCLkpkCLkpkBLPLY?LPLY>L5(G;L5(G:KnY57KnY57KnY56
KS5#3KS5#3KS5#3KS5#3K7ef/K7ef/JqAT+JqAT+JqAT+JUrB'JUrB'JUrB'JUrB'J:N0#J:N0#It)rt
~>
<~N/W^SN/NUPMi3LOMi3LOMi3LOMi*CLMM[1HM2@(GM26tDLkpkCLkpkCLkgb@LPLY?LPCP<L5(G;L4t>8
KnY25KS5#3KS5#3KS5#3KS4u1K7ec-JqAT+JqAQ)JUrB'JUrB'JUr?%J:N0#J:N-!It)rtIt)orIXZ]n
I=6NlI=6NlI=6NkI!g<hI!g<gH[C*dH[C*cH?sm`H?sm`H?sm_H$O[\H$O[[G^+IWGB\7TGB\7SG'8%P
G'8%PG'8%PF`hhLF`hhLFEDVHFEDVHF)uDDEcQ2@EcQ2@EcQ2@EcQ2@EH,u<E,]c8E,]c8Df9Q4Df9Q4
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
284.74 221.775 mo
284.83 221.727 284.918 221.68 285.008 221.632 cv
284.918 221.691 284.829 221.739 284.74 221.775 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
296.069 145.08 mo
296.587 143.566 297.219 141.728 297.876 139.843 cv
297.072 143.035 296.188 144.844 296.069 145.08 cv
.196078 .141176 0 rgb
f
223.783 93.8198 mo
223.784 93.7598 223.793 93.6959 223.812 93.627 cv
223.957 93.0682 223.985 92.9776 223.995 92.9776 cv
223.998 92.9776 223.999 92.9828 224.001 92.988 cv
224.005 92.9939 224.01 92.9998 224.017 92.9998 cv
224.044 92.9998 224.106 92.9252 224.289 92.511 cv
224.112 92.9296 223.944 93.3673 223.783 93.8198 cv
f
289.616 133.919 mo
290.012 131.623 290.492 129.307 291.06 126.945 cv
294.615 112.113 273.132 109.134 280.386 91.341 cv
278.173 92.692 276.498 93.1549 275.053 93.1549 cv
272.743 93.1549 271.02 91.9721 268.623 91.341 cv
262.875 89.8298 258.742 84.2551 252.468 84.2551 cv
249.999 84.2551 247.197 85.1195 243.837 87.435 cv
238.893 90.8445 228.803 94.4781 225.146 94.4781 cv
224.283 94.4781 223.778 94.2752 223.783 93.8198 cv
223.944 93.3673 224.112 92.9296 224.289 92.511 cv
224.289 92.511 li
224.289 92.511 li
231.084 91.152 238.77 84.024 243.369 80.892 cv
247.223 78.2719 250.324 77.1663 253.048 77.1663 cv
255.966 77.1663 258.45 78.4348 260.964 80.469 cv
264.617 83.4195 268.908 89.4697 276.231 89.4701 cv
278.67 89.4703 281.444 88.7995 284.643 87.12 cv
281.493 90.054 277.128 98.568 283.923 105.075 cv
290.718 111.582 296.973 120.105 292.437 129.357 cv
291.998 130.258 290.903 131.985 289.616 133.919 cv
level3{
gsave
clp
[101.384 0 0 101.384 196.728 148.315 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Yb@/_TocLPOKbF?Yb7)]TT?:LO0>4;YFglZT9$1JNio"7Y+CZVSrTtFNNSk4Xe(NSSrBeBN3/Y0XIP6N
S;aP>N3&M,XIG-LRu=A;MQE;)X."pHRYe)5M5lu#WgJXCR#.f/LoH_sWL&F?Q\VQ+LT-SoWKi4:Q%c0$
KrC5iViuh4PD,ltKVjocVNQS.Ob9KmJu+Q\V3$;*OFj<iJY\?XUlL#$Ne!maJ>8'QU5XSrN..L[I\MaL
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[101.384 0 0 101.384 196.728 148.315 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~YHP.5YHP.5YHP.5YHP.5YHP.5YHG%2Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-"h.Xf\_-Xf\_-Xf\_-Xf\_-
Xf\\+XK8M)XK8M)XK8M)XK8J'X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i8#WiE)!WiE)!WiE%t
WMukrWMukrWMukqW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYmVl-GjVl-GjVl-GiVP^5fVP^5eV5:#b
V5:#bV5:#bUnjf^Unjf^Unjf^Unjf^Unjf^Unjf^USFTZUSFTZU8"BVU8"BVU8"BVTqS0RTqS0RTqS0R
~>
<~TV.sNTV.sNTV.sNTV.sNTV%jKT:_aJT:_aJT:_aJT:VXGSt;OFSt;OFSt;OFSt2FCSXl=BSXl=BSXl=B
SXl=BSXl=BSXl:@S=H+>S=H(<S"#n:S"#n:S"#k8R[T\6R[T\6R[T\6R[T\6R[TY4R@0J2R@0G0R$a8.
R$a8-Q^=&*Q^=&)QBmi&QBmi&QBmi&QBmi%Q'IW"Q'IW!Pa%DsPa%DrPEV2oPEV2nP*1ukP*1ukP*1uj
OcbcgOcbcgOH>QcOH>QcO,o?_O,o?_O,o?_NfK-[NfK-[NK&pWNK&pWN/W^SMi3LOMi3LOMi3LOMi3LO
~>
<~O,o?_O,o?_O,o?_O,o?_O,o?_O,f6\NfK-[NfK-[NfK-[NfK-[NfB$XNK&pWNK&pWNK&pWNJrgTN/W^S
N/W^SN/W[QMi3LOMi3LOMi3LOMi3LOMi3LOMi3IMMMd:KMMd:KMMd7IM2@(GM2@(GM2@%ELkpkCLkpkC
LkpkCLkpkCLkpkBLPLY?LPLY?LPLY>L5(G;L5(G:KnY57KnY56KS5#3KS5#3KS5#3KS5#3KS5#2K7ef/
K7ef/JqAT+JqAT+JUrB'JUrB'JUrB'JUrB'J:N0#J:N0#J:N0#It)rtIt)rtIXZ`pIXZ`pI=6NlI=6Nl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
226.017 222.705 mo
225.983 222.681 li
222.505 219.888 218.475 216.288 218.475 216.288 cv
218.363 216.325 218.222 216.377 218.058 216.442 cv
218.058 216.442 li
214.611 211.937 210.393 204.723 210.393 204.723 cv
215.541 212.805 226.017 222.705 226.017 222.705 cv
.196078 .141176 0 rgb
f
294.804 148.797 mo
294.543 148.669 li
288.304 145.61 li
288.509 141.691 288.94 137.835 289.616 133.919 cv
290.903 131.985 291.998 130.258 292.437 129.357 cv
296.973 120.105 290.718 111.582 283.923 105.075 cv
277.128 98.568 281.493 90.054 284.643 87.12 cv
281.444 88.7995 278.67 89.4703 276.231 89.4701 cv
268.908 89.4697 264.617 83.4195 260.964 80.469 cv
258.45 78.4348 255.966 77.1663 253.048 77.1663 cv
250.324 77.1663 247.223 78.2719 243.369 80.892 cv
238.77 84.024 231.084 91.152 224.289 92.511 cv
224.289 92.511 227.628 80.37 234.207 73.98 cv
236.25 71.9983 239.026 71.1913 242.118 71.1913 cv
248.995 71.1913 257.431 75.1853 262.827 79.128 cv
270.648 84.852 278.748 80.847 286.38 84.951 cv
294.012 89.046 301.896 107.739 299.691 127.089 cv
299.45 129.208 299.245 131.247 299.079 133.202 cv
298.973 133.759 298.883 134.327 298.809 134.901 cv
298.56 136.801 298.225 138.453 297.876 139.843 cv
297.219 141.728 296.587 143.566 296.069 145.08 cv
296.06 145.098 296.055 145.107 296.055 145.107 cv
296.055 145.107 296.055 145.113 296.054 145.123 cv
295.946 145.439 295.843 145.741 295.745 146.026 cv
295.174 147.702 294.804 148.797 294.804 148.797 cv
f
298.784 166.693 mo
297.849 161.86 296.303 153.881 296.055 152.64 cv
295.91 151.921 295.882 150.566 295.9 149.201 cv
295.925 147.27 296.042 145.319 296.054 145.123 cv
296.055 145.113 296.055 145.107 296.055 145.107 cv
296.055 145.107 296.06 145.098 296.069 145.08 cv
296.188 144.844 297.072 143.035 297.876 139.843 cv
298.225 138.453 298.56 136.801 298.809 134.901 cv
298.883 134.327 298.973 133.759 299.079 133.202 cv
297.942 146.564 298.626 155.912 302.109 159.064 cv
298.784 166.693 li
.635294 .545098 .494118 rgb
f
299.331 172.071 mo
299.322 170.811 298.701 169.704 297.801 168.948 cv
298.784 166.693 li
302.109 159.064 li
302.11 159.064 302.111 159.065 302.112 159.066 cv
302.112 159.066 299.412 168.111 299.502 170.406 cv
299.517 170.759 299.532 171.105 299.548 171.445 cv
299.477 171.652 299.404 171.861 299.331 172.071 cv
.196078 .141176 0 rgb
f
280.521 208.647 mo
286.651 194.565 li
288.027 191.403 li
288.783 191.322 289.557 191.016 290.268 190.413 cv
291.204 189.603 291.267 189.666 292.068 188.685 cv
291.348 190.187 290.627 191.662 289.884 193.125 cv
287.303 198.211 284.463 203.161 280.521 208.647 cv
f
260.111 231.583 mo
256.762 231.583 253.571 230.487 250.457 229.01 cv
246.939 227.075 243.936 225.441 243.936 225.441 cv
243.936 225.441 258.345 229.545 262.638 229.734 cv
262.682 229.736 262.727 229.737 262.774 229.737 cv
265.224 229.737 271.966 227.139 277.671 224.74 cv
274.966 225.951 271.592 227.555 267.399 229.734 cv
264.872 231.048 262.453 231.583 260.111 231.583 cv
281.833 222.951 mo
283.244 222.332 284.445 221.793 285.3 221.406 cv
285.203 221.494 285.105 221.569 285.008 221.632 cv
284.918 221.68 284.83 221.727 284.74 221.775 cv
284.738 221.776 284.735 221.777 284.733 221.778 cv
283.949 222.094 282.993 222.473 281.833 222.951 cv
f
201.237 198.078 mo
202.377 195.449 205.441 192.362 207.693 190.629 cv
207.693 190.629 204.3 194.519 201.237 198.078 cv
f
320.049 192.915 mo
318.383 188.331 313.373 164.601 310.776 152.059 cv
310.302 149.304 309.978 147.699 309.978 147.699 cv
321.543 191.635 li
321.161 191.962 li
321.118 191.974 321.082 192.005 321.054 192.054 cv
320.049 192.915 li
320.049 192.915 li
f
308.523 221.413 mo
318.829 205.391 313.061 165.345 310.776 152.059 cv
313.373 164.601 318.383 188.331 320.049 192.915 cv
320.049 192.915 li
323.53 206.447 li
317.223 213.965 311.291 219.145 308.523 221.413 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
308.52 221.418 mo
308.521 221.417 308.523 221.414 308.523 221.413 cv
311.291 219.145 317.223 213.965 323.53 206.447 cv
324.054 208.485 li
325.277 205.821 li
325.782 207.738 li
325.782 207.738 314.613 217.809 308.52 221.418 cv
.196078 .141176 0 rgb
f
324.054 208.485 mo
323.53 206.447 li
320.049 192.915 li
321.054 192.054 li
320.344 193.287 324.054 205.812 324.054 205.812 cv
324.054 205.812 324.406 205.364 324.967 204.641 cv
325.277 205.821 li
324.054 208.485 li
321.161 191.962 mo
321.543 191.635 li
321.604 191.868 li
321.453 191.896 321.306 191.927 321.165 191.961 cv
321.164 191.961 321.163 191.962 321.161 191.962 cv
f
332.37 194.373 mo
329.018 192.984 325.762 192.657 323.44 192.657 cv
323.092 192.657 322.767 192.664 322.464 192.676 cv
322.214 191.769 li
322.957 191.669 323.783 191.621 324.635 191.621 cv
328.617 191.621 333.168 192.665 332.433 194.265 cv
332.428 194.276 332.422 194.288 332.417 194.299 cv
332.402 194.323 332.386 194.349 332.37 194.373 cv
f
325.551 203.885 mo
322.464 192.676 li
322.767 192.664 323.092 192.657 323.44 192.657 cv
325.762 192.657 329.018 192.984 332.37 194.373 cv
331.603 195.59 330.821 196.773 330.03 197.922 cv
328.574 199.939 326.789 202.28 325.551 203.885 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.03 197.922 mo
330.821 196.773 331.603 195.59 332.37 194.373 cv
332.386 194.349 332.402 194.323 332.417 194.299 cv
332.097 194.976 331.164 196.351 330.03 197.922 cv
.196078 .141176 0 rgb
f
324.967 204.641 mo
321.604 191.868 li
321.8 191.831 322.003 191.798 322.214 191.769 cv
322.464 192.676 li
325.551 203.885 li
325.339 204.16 325.142 204.414 324.967 204.641 cv
f
321.054 192.054 mo
321.082 192.005 321.118 191.974 321.161 191.962 cv
321.054 192.054 li
.152941 .109804 0 rgb
f
324.054 205.812 mo
324.054 205.812 320.344 193.287 321.054 192.054 cv
321.161 191.962 li
321.163 191.962 321.164 191.961 321.165 191.961 cv
321.306 191.927 321.453 191.896 321.604 191.868 cv
324.967 204.641 li
324.406 205.364 324.054 205.812 324.054 205.812 cv
f
261.823 357.299 mo
261.823 357.299 261.395 374.18 261.823 383.91 cv
262.252 393.637 264.112 410.091 264.112 410.091 cv
264.112 410.091 264.828 391.062 264.112 379.474 cv
263.396 367.886 261.823 357.299 261.823 357.299 cv
cp
.25098 .180392 0 rgb
f
246.086 373.895 mo
246.086 373.895 255.72 371.176 262.634 371.034 cv
269.549 370.891 277.99 372.464 277.99 372.464 cv
277.99 372.464 264.255 373.037 262.038 373.037 cv
259.82 373.037 246.086 373.895 246.086 373.895 cv
cp
f
247.636 390.031 mo
247.636 390.031 257.294 387.401 264.21 387.321 cv
271.125 387.242 279.552 388.892 279.552 388.892 cv
279.552 388.892 265.813 389.338 263.596 389.318 cv
261.378 389.297 247.636 390.031 247.636 390.031 cv
cp
f
250.696 406.15 mo
250.696 406.15 258.99 403.694 264.944 403.565 cv
270.897 403.436 278.164 404.858 278.164 404.858 cv
278.164 404.858 266.339 405.375 264.43 405.375 cv
262.521 405.375 250.696 406.15 250.696 406.15 cv
cp
f
246.571 411.386 mo
246.571 411.386 253.675 409.783 260.521 409.099 cv
263.031 408.849 262.727 406.687 263.752 402.348 cv
264.112 409.441 267.867 408.805 269.351 408.87 cv
275.926 409.149 282.592 410.093 282.592 410.093 cv
282.592 410.093 267.085 410.612 264.582 410.612 cv
262.079 410.612 246.571 411.386 246.571 411.386 cv
cp
f
312.421 362.306 mo
306.008 370.881 300.88 384.911 300.45 391.349 cv
300.021 397.788 300.594 409.974 301.452 410.68 cv
301.452 410.68 297.59 403.305 298.019 390.03 cv
298.019 390.03 298.913 376.469 312.421 362.306 cv
cp
f
216.072 364.905 mo
222.489 373.482 231.957 383.364 232.38 389.799 cv
232.812 396.243 234.459 406.647 236.754 409.509 cv
236.754 409.509 234.099 401.76 233.667 388.485 cv
233.667 388.485 232.524 382.149 216.072 364.905 cv
f
238.073 127.972 mo
238.073 127.972 238.026 125.485 237.549 123.196 cv
237.549 123.196 237.559 126.457 236.887 128.022 cv
238.073 127.972 li
cp
f
252.668 127.748 mo
252.668 127.748 253.521 136.307 261.837 136.947 cv
270.153 137.586 273.031 127.021 273.031 127.021 cv
273.031 127.021 261.3 125.104 252.668 127.748 cv
cp
f
253.742 128.137 mo
253.742 128.137 254.504 135.214 261.944 135.786 cv
269.383 136.358 271.958 127.488 271.958 127.488 cv
271.958 127.488 261.276 126.249 253.742 128.137 cv
cp
1 1 1 rgb
f
257.816 126.947 mo
257.778 127.171 257.743 127.397 257.743 127.633 cv
257.743 129.92 259.597 131.775 261.884 131.775 cv
264.172 131.775 266.027 129.92 266.027 127.633 cv
266.027 127.397 265.991 127.171 265.953 126.947 cv
257.816 126.947 li
cp
.25098 .180392 0 rgb
f
252.668 127.748 mo
252.668 127.748 252.644 126.057 252.668 123.577 cv
252.668 123.577 252.874 125.03 253.742 127.622 cv
252.668 127.748 li
cp
f
175.309 259.978 mo
171.008 256.63 158.713 247.827 141.696 242.136 cv
131.395 238.685 120.968 226.683 115.748 219.954 cv
120.978 222.233 125.647 222.714 127.557 222.714 cv
141.569 222.705 142.516 219.183 153.909 219.183 cv
154.093 219.183 154.278 219.184 154.467 219.186 cv
154.467 219.186 li
154.467 219.186 li
154.429 219.18 154.392 219.175 154.355 219.169 cv
159.115 219.656 163.233 221.418 163.233 221.418 cv
163.233 221.418 158.283 239.805 161.253 242.559 cv
163.837 244.97 171.283 254.022 175.309 259.978 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
176.985 261.333 mo
176.985 261.333 176.408 260.834 175.309 259.978 cv
171.283 254.022 163.837 244.97 161.253 242.559 cv
158.283 239.805 163.233 221.418 163.233 221.418 cv
163.233 221.418 li
163.233 221.418 li
163.233 221.418 159.957 238.149 161.919 241.749 cv
163.872 245.349 174.402 257.715 176.985 261.333 cv
.196078 .141176 0 rgb
f
127.557 222.714 mo
125.647 222.714 120.978 222.233 115.748 219.954 cv
113.589 217.171 112.32 215.289 112.32 215.289 cv
112.32 215.289 120.9 222.506 128.846 222.506 cv
129.392 222.506 129.935 222.472 130.473 222.399 cv
138.825 221.265 142.587 220.293 149.373 219.24 cv
150.247 219.104 151.14 219.046 152.03 219.046 cv
152.812 219.046 153.591 219.091 154.355 219.169 cv
154.392 219.175 154.429 219.18 154.467 219.186 cv
154.278 219.184 154.093 219.183 153.909 219.183 cv
142.516 219.183 141.569 222.705 127.557 222.714 cv
f
216.9 356.445 mo
216.524 322.677 184.659 305.534 184.305 305.345 cv
191.306 307.969 209.199 315.464 224.199 328.401 cv
224.199 328.401 224.193 328.392 224.182 328.376 cv
224.188 328.381 224.193 328.386 224.199 328.392 cv
233.928 325.107 li
220.437 335.412 216.9 356.445 216.9 356.445 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
224.199 328.401 mo
209.199 315.464 191.306 307.969 184.305 305.345 cv
184.303 305.344 184.302 305.343 184.302 305.343 cv
184.613 305.324 184.927 305.315 185.244 305.315 cv
197.944 305.315 215.456 320.162 224.182 328.376 cv
224.193 328.392 224.199 328.401 224.199 328.401 cv
.196078 .141176 0 rgb
f
233.518 414.506 mo
231.567 414.506 226.033 412.082 224.316 385.344 cv
223.92 379.179 214.326 366.165 210.465 363.312 cv
206.604 360.45 181.98 334.242 177.516 327.258 cv
177.516 327.258 177.52 327.262 177.526 327.269 cv
193.772 349.805 223.843 368.035 225.819 389.97 cv
227.945 413.568 233.373 414.392 234.121 414.392 cv
234.177 414.392 234.207 414.387 234.207 414.387 cv
234.207 414.387 li
234.207 414.387 233.95 414.506 233.518 414.506 cv
f
234.121 414.392 mo
233.373 414.392 227.945 413.568 225.819 389.97 cv
223.843 368.035 193.772 349.805 177.526 327.269 cv
178.157 327.919 207.543 358.222 216.081 364.374 cv
216.081 364.374 216.503 365.042 217.38 366.288 cv
216.955 365.834 216.52 365.374 216.072 364.905 cv
217.829 367.254 219.815 369.701 221.782 372.148 cv
224.126 375.13 227.539 379.74 230.009 383.419 cv
231.367 385.759 232.257 387.926 232.38 389.799 cv
232.81 396.22 234.447 406.572 236.729 409.477 cv
236.638 409.494 236.211 410.016 234.207 414.387 cv
234.207 414.387 li
234.207 414.387 li
234.207 414.387 234.177 414.392 234.121 414.392 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
236.729 409.477 mo
234.447 406.572 232.81 396.22 232.38 389.799 cv
232.257 387.926 231.367 385.759 230.009 383.419 cv
231.592 385.778 232.788 387.755 233.064 388.674 cv
233.782 391.035 234.429 405.552 236.736 409.477 cv
236.735 409.477 236.734 409.477 236.734 409.477 cv
236.732 409.477 236.731 409.477 236.729 409.477 cv
221.782 372.148 mo
219.815 369.701 217.829 367.254 216.072 364.905 cv
216.52 365.374 216.955 365.834 217.38 366.288 cv
218.305 367.601 219.734 369.557 221.706 372.051 cv
221.731 372.083 221.756 372.115 221.782 372.148 cv
.196078 .141176 0 rgb
f
236.754 409.509 mo
236.754 409.509 236.751 409.499 236.745 409.481 cv
236.754 409.49 236.754 409.509 236.754 409.509 cv
level3{
gsave
clp
[409.314 0 0 409.314 76.9492 260.922 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[409.314 0 0 409.314 76.9492 260.922 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
236.754 409.509 mo
236.748 409.499 236.742 409.488 236.736 409.477 cv
236.739 409.478 236.742 409.479 236.745 409.481 cv
236.751 409.499 236.754 409.509 236.754 409.509 cv
236.754 409.509 li
.196078 .141176 0 rgb
f
217.44 452.151 mo
213.264 459.423 204.597 476.136 209.736 491.553 cv
214.875 506.961 224.181 520.479 228.186 529.497 cv
232.2 538.515 233.001 539.631 235.575 540.792 cv
235.575 540.792 233.829 547.335 237.978 550.719 cv
237.978 551.745 li
237.978 551.745 234.756 564.129 235.242 567.477 cv
235.242 567.477 252.729 588.096 250.965 608.013 cv
250.965 608.013 249.39 610.515 241.002 615.672 cv
235.395 619.128 233.541 619.866 224.388 623.79 cv
224.388 623.79 222.489 623.529 220.401 622.8 cv
218.313 622.071 216.774 624.375 211.41 626.463 cv
211.41 626.463 212.706 630.63 216.342 631.116 cv
218.178 631.359 219.483 630.639 220.554 629.928 cv
221.607 629.235 222.435 628.533 223.335 628.731 cv
225.252 629.136 224.406 630.702 229.635 631.575 cv
234.981 632.466 239.409 630.513 243.108 628.569 cv
246.213 626.931 248.814 625.293 251.01 625.338 cv
255.825 625.437 259.533 629.145 263.592 628.884 cv
269.505 628.506 264.987 620.442 262.575 614.124 cv
260.253 608.031 259.713 599.148 267.705 581.157 cv
274.554 565.749 281.574 561.762 281.574 561.762 cv
281.574 561.762 274.005 550.332 263.943 540.351 cv
263.943 540.351 262.467 536.76 263.196 532.89 cv
264.465 526.122 268.551 515.061 271.008 509.823 cv
274.86 501.579 280.917 490.32 278.667 479.376 cv
276.417 468.423 217.44 452.151 217.44 452.151 cv
.25098 .180392 0 rgb
f
231.25 629.937 mo
230.454 629.937 229.653 629.869 228.852 629.721 cv
224.163 628.857 224.73 627.642 223.11 627.264 cv
223.004 627.239 222.902 627.227 222.802 627.227 cv
222.146 627.227 221.602 627.727 220.923 628.227 cv
220.231 628.729 219.397 629.225 218.166 629.225 cv
217.941 629.225 217.702 629.208 217.449 629.172 cv
214.2 628.695 213.399 626.751 213.399 626.751 cv
218.181 625.779 218.813 624.248 220.035 624.248 cv
220.25 624.248 220.483 624.295 220.761 624.402 cv
221.805 624.8 222.936 624.888 223.729 624.888 cv
224.352 624.888 224.766 624.834 224.766 624.834 cv
232.92 620.973 237.618 620.469 242.775 617.4 cv
250.326 612.9 252.234 608.238 252.234 608.238 cv
253.809 588.636 237.933 566.748 237.933 566.748 cv
237.501 563.454 239.787 551.583 239.787 551.583 cv
239.787 551.583 240.527 552.418 240.705 552.418 cv
240.83 552.418 240.677 552.002 239.787 550.584 cv
237.645 547.146 237.357 539.847 237.357 539.847 cv
235.071 538.704 234.072 538.56 230.49 529.695 cv
226.917 520.821 218.043 507.519 213.471 492.354 cv
211.152 484.678 211.985 476.673 213.857 469.71 cv
217.071 469.923 224.585 469.813 236.502 475.038 cv
264.537 487.341 272.25 488.655 272.25 488.655 cv
270.612 496.521 265.374 505.737 262.971 510.804 cv
258.966 519.246 253.944 520.74 252.81 527.409 cv
252.162 531.216 248.139 540.468 248.139 540.468 cv
257.103 550.296 259.902 557.163 257.535 576.909 cv
255.582 593.136 255.42 607.707 256.185 611.433 cv
256.95 615.15 256.527 617.535 253.287 618.588 cv
251.154 619.272 247.932 621.36 244.413 624.024 cv
239.401 627.82 235.822 629.246 233.918 629.678 cv
233.533 629.744 233.146 629.799 232.758 629.838 cv
233.023 629.838 233.411 629.793 233.918 629.678 cv
239.489 628.723 244.675 625.149 248.29 623.836 cv
246.616 624.445 244.604 625.542 242.379 626.643 cv
239.033 628.29 235.189 629.937 231.25 629.937 cv
248.334 623.82 mo
248.365 623.809 248.397 623.797 248.429 623.786 cv
248.397 623.797 248.365 623.809 248.334 623.82 cv
248.577 623.735 mo
248.594 623.729 248.61 623.724 248.627 623.718 cv
248.61 623.724 248.594 623.729 248.577 623.735 cv
248.8 623.662 mo
248.81 623.659 248.82 623.657 248.829 623.654 cv
248.82 623.657 248.81 623.659 248.8 623.662 cv
level3{
gsave
clp
[63.9419 0 0 63.9419 212.058 541.76 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.9419 0 0 63.9419 212.058 541.76 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
263.115 626.121 mo
259.488 626.121 254.907 623.448 250.614 623.349 cv
250.589 623.348 250.564 623.348 250.538 623.348 cv
250.027 623.348 249.455 623.46 248.829 623.654 cv
249.454 623.46 250.025 623.348 250.536 623.348 cv
250.562 623.348 250.588 623.348 250.614 623.349 cv
254.907 623.448 259.488 626.121 263.115 626.121 cv
264.048 626.121 264.397 625.639 264.388 624.859 cv
264.397 625.639 264.048 626.121 263.115 626.121 cv
248.29 623.836 mo
248.305 623.831 248.319 623.825 248.334 623.82 cv
248.319 623.825 248.305 623.831 248.29 623.836 cv
248.429 623.786 mo
248.478 623.769 248.528 623.752 248.577 623.735 cv
248.528 623.752 248.478 623.769 248.429 623.786 cv
248.627 623.718 mo
248.685 623.699 248.743 623.68 248.8 623.662 cv
248.743 623.68 248.685 623.699 248.627 623.718 cv
213.857 469.71 mo
212.731 469.636 212.133 469.522 212.058 469.125 cv
212.031 468.978 212.519 463.798 213.854 459.915 cv
214.81 460.202 215.829 460.52 216.903 460.874 cv
215.805 463.507 214.721 466.498 213.857 469.71 cv
.196078 .141176 0 rgb
f
232.758 629.838 mo
233.146 629.799 233.533 629.744 233.918 629.678 cv
233.411 629.793 233.023 629.838 232.758 629.838 cv
233.918 629.678 mo
235.822 629.246 239.401 627.82 244.413 624.024 cv
247.932 621.36 251.154 619.272 253.287 618.588 cv
256.527 617.535 256.95 615.15 256.185 611.433 cv
255.42 607.707 255.582 593.136 257.535 576.909 cv
259.902 557.163 257.103 550.296 248.139 540.468 cv
248.139 540.468 252.162 531.216 252.81 527.409 cv
253.944 520.74 258.966 519.246 262.971 510.804 cv
265.374 505.737 270.612 496.521 272.25 488.655 cv
272.25 488.655 264.537 487.341 236.502 475.038 cv
224.585 469.813 217.071 469.923 213.857 469.71 cv
214.721 466.498 215.805 463.507 216.903 460.874 cv
224.355 463.325 234.468 467.44 244.809 474.048 cv
258.982 483.1 269.853 486.439 275.862 487.939 cv
275.043 496.186 270.747 504.014 268.074 510.327 cv
265.887 515.484 262.242 526.365 261.108 533.034 cv
260.976 533.807 260.926 534.569 260.928 535.293 cv
260.94 538.132 261.774 540.378 261.774 540.378 cv
270.738 550.197 275.607 560.979 275.607 560.979 cv
275.607 560.979 270.171 565.749 264.06 580.914 cv
260.723 589.207 259.833 597.557 259.836 604.029 cv
259.839 609.392 260.455 613.466 260.802 615.15 cv
261.37 617.909 264.362 622.616 264.388 624.859 cv
264.397 625.639 264.048 626.121 263.115 626.121 cv
259.488 626.121 254.907 623.448 250.614 623.349 cv
250.588 623.348 250.562 623.348 250.536 623.348 cv
250.025 623.348 249.454 623.46 248.829 623.654 cv
248.82 623.657 248.81 623.659 248.8 623.662 cv
248.743 623.68 248.685 623.699 248.627 623.718 cv
248.61 623.724 248.594 623.729 248.577 623.735 cv
248.528 623.752 248.478 623.769 248.429 623.786 cv
248.397 623.797 248.365 623.809 248.334 623.82 cv
248.319 623.825 248.305 623.831 248.29 623.836 cv
244.675 625.149 239.489 628.723 233.918 629.678 cv
level3{
gsave
clp
[63.9419 0 0 63.9419 212.058 541.76 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.9419 0 0 63.9419 212.058 541.76 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
283.851 480.681 mo
286.128 484.308 294.093 498.474 306.918 505.152 cv
319.743 511.83 336.213 519.966 345.42 530.46 cv
345.42 530.46 341.604 548.793 346.779 560.421 cv
346.779 560.421 368.406 565.083 378.225 576.909 cv
388.053 588.726 383.328 592.353 385.29 595.602 cv
385.29 595.602 388.35 595.458 390.726 595.647 cv
390.726 595.647 401.679 613.782 403.956 619.407 cv
403.956 619.407 411.84 618.426 415.044 620.415 cv
419.337 623.088 421.749 616.437 420.192 615.105 cv
420.192 615.105 424.575 607.851 424.062 606.231 cv
424.062 606.231 421.371 603.612 419.193 602.658 cv
419.193 602.658 416.691 599.13 412.137 597.222 cv
407.592 595.314 402.912 593.019 401.985 591.498 cv
401.985 591.498 404.127 588.924 401.544 586.818 cv
398.961 584.73 395.19 582.57 389.295 567.891 cv
383.4 553.212 386.937 540.711 386.937 540.711 cv
386.937 540.711 380.781 530.82 365.067 522.333 cv
365.067 522.333 365.589 518.247 361.782 514.17 cv
361.782 514.17 365.166 496.611 356.886 479.448 cv
348.615 462.285 333.549 445.212 333.549 445.212 cv
283.851 480.681 li
.25098 .180392 0 rgb
f
415.334 618.629 mo
412.998 617.479 409.096 617.326 407.193 617.326 cv
406.507 617.326 406.08 617.346 406.08 617.346 cv
403.983 611.721 391.293 594.549 391.293 594.549 cv
389.106 594.36 387.288 593.694 387.288 593.694 cv
385.479 590.445 388.341 587.781 379.278 575.946 cv
370.215 564.12 350.19 557.064 350.19 557.064 cv
345.42 545.427 347.706 530.46 347.706 530.46 cv
339.219 519.966 322.533 510.525 310.707 503.847 cv
303.104 499.553 297.353 492.7 293.656 487.389 cv
295.641 485.092 301.795 478.349 310.446 472.455 cv
327.348 460.926 332.82 458.622 332.82 458.622 cv
336.843 458.829 344.205 465.894 350.379 480.42 cv
361.062 505.557 353.25 518.346 353.25 518.346 cv
358.587 521.361 361.062 530.433 361.062 530.433 cv
376.326 537.417 384.912 576.144 396.594 587.061 cv
398.907 589.23 403.128 596.601 407.322 598.509 cv
411.516 600.417 416.547 604.944 416.547 604.944 cv
418.554 605.898 411.894 611.595 411.894 611.595 cv
412.38 613.215 416.907 615.033 416.907 615.033 cv
417.976 617.028 415.717 617.803 415.334 618.629 cv
level3{
gsave
clp
[132.427 0 0 132.427 289.435 532.137 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[132.427 0 0 132.427 289.435 532.137 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
416.921 619.08 mo
416.476 619.079 415.976 618.959 415.431 618.678 cv
415.332 618.633 li
415.333 618.632 415.333 618.63 415.334 618.629 cv
415.367 618.645 415.399 618.661 415.431 618.678 cv
415.976 618.959 416.476 619.08 416.921 619.08 cv
418.413 619.08 419.302 617.73 419.29 616.546 cv
419.302 617.73 418.413 619.08 416.921 619.08 cv
292.968 488.205 mo
289.96 485.382 li
290.442 484.978 290.952 484.552 291.487 484.106 cv
292.106 485.093 292.829 486.202 293.656 487.389 cv
293.204 487.912 292.968 488.205 292.968 488.205 cv
.196078 .141176 0 rgb
f
416.921 619.08 mo
416.476 619.08 415.976 618.959 415.431 618.678 cv
415.399 618.661 415.367 618.645 415.334 618.629 cv
415.717 617.803 417.976 617.028 416.907 615.033 cv
416.907 615.033 412.38 613.215 411.894 611.595 cv
411.894 611.595 418.554 605.898 416.547 604.944 cv
416.547 604.944 411.516 600.417 407.322 598.509 cv
403.128 596.601 398.907 589.23 396.594 587.061 cv
384.912 576.144 376.326 537.417 361.062 530.433 cv
361.062 530.433 358.587 521.361 353.25 518.346 cv
353.25 518.346 361.062 505.557 350.379 480.42 cv
344.205 465.894 336.843 458.829 332.82 458.622 cv
332.82 458.622 327.348 460.926 310.446 472.455 cv
301.795 478.349 295.641 485.092 293.656 487.389 cv
292.829 486.202 292.106 485.093 291.487 484.106 cv
301.105 476.091 319.053 461.466 333.769 451.365 cv
340.001 457.862 349.298 468.628 354.096 479.43 cv
359.462 491.504 360.254 504.094 360.252 510.505 cv
360.251 513.212 360.108 514.818 360.108 514.818 cv
360.108 514.818 li
360.108 514.818 li
362.016 516.627 363.735 523.305 363.735 523.305 cv
378.234 531.792 383.67 541.899 383.67 541.899 cv
383.67 541.899 383.146 543.722 383.149 547.172 cv
383.153 551.082 383.833 557.082 386.721 564.885 cv
392.157 579.573 397.215 584.937 399.6 587.034 cv
400.602 587.919 400.894 588.834 400.895 589.596 cv
400.897 590.641 400.356 591.399 400.356 591.399 cv
400.356 591.399 li
400.356 591.399 li
401.22 592.929 406.179 596.745 410.373 598.653 cv
414.567 600.561 417.816 603.801 417.816 603.801 cv
419.814 604.755 421.821 606.474 421.821 606.474 cv
421.851 606.575 421.865 606.698 421.865 606.839 cv
421.871 608.96 418.77 615.249 418.77 615.249 cv
418.77 615.249 li
418.77 615.249 li
419.119 615.576 419.285 616.046 419.29 616.546 cv
419.302 617.73 418.413 619.08 416.921 619.08 cv
level3{
gsave
clp
[132.427 0 0 132.427 289.435 532.137 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[132.427 0 0 132.427 289.435 532.137 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
231.543 424.737 mo
231.543 424.737 209.799 449.82 204.957 457.686 cv
204.957 457.686 224.442 461.034 244.809 474.048 cv
265.185 487.062 278.739 488.268 280.827 489.177 cv
280.827 489.177 279.279 481.32 279.072 476.118 cv
281.295 475.695 li
281.295 475.695 282.906 482.373 284.616 489.897 cv
284.616 489.897 330.246 450.747 349.164 442.116 cv
349.164 442.116 336.753 431.361 316.341 421.551 cv
316.341 421.551 247.581 426.708 231.543 424.737 cv
.25098 .180392 0 rgb
f
263.317 481.947 mo
258.378 479.563 252.394 476.063 245.619 470.853 cv
226.224 455.949 208.89 455.733 208.89 455.733 cv
213.471 448.29 232.065 426.114 232.065 426.114 cv
234.274 426.385 237.612 426.501 241.705 426.501 cv
256.967 426.501 282.706 424.889 299.429 423.715 cv
299.353 424.143 292.892 459.907 271.269 464.022 cv
268.669 464.517 266.286 464.717 264.064 464.717 cv
259.012 464.717 254.792 463.682 250.722 462.726 cv
250.722 462.726 258.651 468.333 261.63 472.752 cv
266.438 479.894 263.448 481.866 263.317 481.947 cv
289.431 479.781 mo
289.431 479.781 290.007 460.593 306.747 447.426 cv
314.078 441.664 320.532 440.044 325.47 440.044 cv
331.807 440.044 335.646 442.71 335.646 442.71 cv
335.646 442.71 299.097 468.126 289.431 479.781 cv
308.079 423.091 mo
312.469 422.765 315.261 422.543 315.596 422.517 cv
315.262 422.543 312.472 422.766 308.079 423.091 cv
level3{
gsave
clp
[135.694 0 0 135.694 208.889 454.928 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .670588 .658824 ]
/C1 [.501961 .670588 .658824 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .670588 .658824 ]
/C1 [0 .192157 .211765 ]
/N 1 
>>
]
/Bounds [.0242424 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[135.694 0 0 135.694 208.889 454.928 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~J:N0#J:N0"IsuipI=-EhH?sj^G^+FVG'8"NFEDSFEcQ/>E,]`6DJj<.Ci!m&C2.HsBP;$jAn>OaA7K+Y
@UW\Q?sd8I?<piA>[(E9>$5!1=BAR)<`N.!<)Z^n;,L.d:JX_\9he;T91qlL8P)HD7n6$<77BU46UO1,
5s[b$5<h=q4Zkhg4$#D_3B/uW2`<QO2)I-G1GU^?0eb:70.nk//M&G'.k3"t-n$Gj-71#b,U=TZ+sJ0R
+<VaJ*Zc=B*#on:)B'J2(`4&*()@W"'GD,m&eP]e&.]9]%LijU$k!FM$4."E#R:S="pG/5"9S`-!W`<%
~>
<~X/i;%X/i;$Wi;trW2HPjVPU,bUna]ZU7n9RTV%jJSt2FBS=?":R[TY4R$a5,QBmf$Pa%AqP*1riOH>Na
NfK*YN/W[QMMd7ILkphAL5(D9KnP,3K7\]+JUi9#IsuipI=-EhH[:!`H$FRXGBS.PF`__HF)l;@EH#l9
Df9N2D/F**CMR["Bk_6oB4kggAS#C_@q/tW@:<PO?XI,G?!U]?>?b<8>$5!1=BAR)<`N.!<)Z^n;Gg:f
:esk^:/+GV9M8#N8kDTF84Q0>7Rfg86psC06:*t(5X7Ou5!D+m4?P\e3]]8]3&iiU2E!EM1c.!E1,:R=
~>
<~W2QYnW2QYmVl$>fV50o^USFQXTqS-PT:_^HSt2FBS=?":R[KS3R$a5,QBmf$Pa%DrPEM)kOcYZcO,f6\
NK&mUMi3IMM2@(FLkgb?L4t>7KS4u1JqAQ)J:N-!IsuipI=-EhH[:!aH$OXZGB\4RF`heJFE;MDEcH)<
E,TZ5DJj<.Ci!m&C2.KtBkV0mB4baeAS#C_@q/tW@:<PO?XI/H?<piA>[(E9>$>'3=BJX+<`W4#<E)pr
;c6Lj;,C(c:JX_\9he;T91qlL8kDTF84Q0>7R]a76psC06:*t(5X7S!5<_7o4Zkhg4$,Ja3B9&Y2`EWQ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
256.383 465.597 mo
260.253 470.322 272.421 476.487 279.072 476.118 cv
285.714 475.758 291.294 467.172 291.582 464.742 cv
291.582 464.742 285.786 474.687 276.003 473.616 cv
266.22 472.536 256.383 465.597 256.383 465.597 cv
.25098 .180392 0 rgb
f
360.868 515.791 mo
360.868 515.791 354.386 518.248 350.095 520.822 cv
350.095 520.822 356.844 515.392 360.194 513.387 cv
360.868 515.791 li
cp
f
305.53 472.627 mo
305.53 472.627 314.522 484.974 327.346 498.505 cv
327.346 498.505 311.434 481.008 307.016 471.443 cv
305.53 472.627 li
cp
f
256.168 480.321 mo
254.022 480.321 253.594 502.439 253.594 508.017 cv
253.594 508.017 252.316 477.147 252.313 476.137 cv
252.313 476.137 253.45 478.461 256.168 480.321 cv
cp
f
236.5 539.421 mo
245.799 540.136 li
245.799 540.136 247.954 538.954 249.429 536.464 cv
252.313 531.6 252.313 526.735 253.287 517.104 cv
253.287 533.701 250.421 538.233 248.136 540.47 cv
248.136 540.47 251.324 541.329 251.856 543.904 cv
248.747 539.85 241.08 540.809 237.502 541.76 cv
236.5 539.421 li
cp
f
239.414 549.9 mo
239.414 549.9 242.509 553.156 246.372 552.155 cv
246.372 552.155 248.47 550.608 249.173 549.457 cv
249.271 549.296 249.342 549.145 249.376 549.007 cv
249.662 547.862 248.803 553.442 246.372 553.584 cv
243.939 553.727 239.751 552.938 239.414 549.9 cv
cp
f
363.733 523.302 mo
363.733 523.302 361.198 525.004 358.392 527.405 cv
358.392 527.405 361.778 523.827 363.733 522.254 cv
363.733 523.302 li
cp
f
349.62 526.745 mo
352.289 530.169 356.276 531.651 360.015 529.694 cv
364.407 527.393 365.444 524.168 363.733 522.922 cv
365.444 524.168 li
365.444 524.168 363.733 530.741 358.011 531.584 cv
354.966 532.033 351.744 530.811 349.62 526.745 cv
cp
f
278.163 487.341 mo
276.93 486.81 271.584 485.937 263.313 481.95 cv
263.313 481.95 263.315 481.949 263.317 481.947 cv
271.586 485.939 276.929 486.806 278.163 487.341 cv
278.163 487.341 li
299.429 423.715 mo
299.43 423.713 299.43 423.711 299.43 423.711 cv
302.709 423.483 305.641 423.271 308.079 423.091 cv
305.641 423.272 302.706 423.485 299.429 423.715 cv
315.596 422.517 mo
315.618 422.515 315.63 422.514 315.63 422.514 cv
315.63 422.514 315.619 422.515 315.596 422.517 cv
.196078 .141176 0 rgb
f
278.163 487.341 mo
276.929 486.806 271.586 485.939 263.317 481.947 cv
263.448 481.866 266.438 479.894 261.63 472.752 cv
258.651 468.333 250.722 462.726 250.722 462.726 cv
254.792 463.682 259.012 464.717 264.064 464.717 cv
266.286 464.717 268.669 464.517 271.269 464.022 cv
292.892 459.907 299.353 424.143 299.429 423.715 cv
302.706 423.485 305.641 423.272 308.079 423.091 cv
312.472 422.766 315.262 422.543 315.596 422.517 cv
315.619 422.515 315.63 422.514 315.63 422.514 cv
315.63 422.514 li
334.935 431.793 344.583 441.225 344.583 441.225 cv
326.7 449.379 286.371 486.198 286.371 486.198 cv
285.517 483.869 285.135 481.446 285.14 479.202 cv
285.146 476.39 285.759 473.858 286.811 472.14 cv
289.577 469.435 291.42 466.111 291.582 464.742 cv
291.582 464.742 286.362 473.697 277.471 473.697 cv
276.992 473.697 276.503 473.671 276.003 473.616 cv
266.22 472.536 256.383 465.597 256.383 465.597 cv
258.81 468.561 264.503 472.091 270.051 474.22 cv
277.993 477.497 278.163 487.341 278.163 487.341 cv
325.47 440.044 mo
320.532 440.044 314.078 441.664 306.747 447.426 cv
290.007 460.593 289.431 479.781 289.431 479.781 cv
299.097 468.126 335.646 442.71 335.646 442.71 cv
335.646 442.71 331.807 440.044 325.47 440.044 cv
level3{
gsave
clp
[135.694 0 0 135.694 208.889 454.928 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~A;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YH
KnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoi
K4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[gA;,YHKnEoiK4K[g
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~A;,YFKS!WaJ7!kW?@RE/IXG@IHWb]@=*f*lG^!,2F]3F(;0-bSEc=cmE(k1f8o8B9ChlOUBgl`M6t^.!
AS"/<A3XO45%7t`?sl'&?9):s2d9KE>$Egc=Yj,\0i_7.<)bJJ;_1aC.o/tj9i!029dWJ+,tU`S84b!p
80C>j*^`@:6:;bX65i$R(Hjtu4$F?>4VKe:&N;`^2)l(&2[hH!$SaIE0J`te0a90_"Y22-.4kTL/-%"H
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0242424 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[135.694 0 0 135.694 208.889 454.928 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@q0"Y@q0"Y@q&nU@:<SP?sd8I?=$rD?!LW=>?b97=]nj/='&F'<`W4#<)cdp;c?Rl;,L.d:f'q`:/4MX
9MA)P8kMZH8P)HD7n6$<77BU46psC06:*t(5s[b$5<h=q5!D+m4?P\e4$,Ja3B9&Y2`EWQ2E!EM1c.!E
1G^dA0ek@90JG.5/hS_,/1W5$.k3"t.4?Sm-mpAh-7'ra,pX`\,9e<U+sA*P+<M[H*ZZ7A*?6%<)]BV5
)AsA/(D[c%()7Pu'GD,n'+toi&J,Kb&.]9]%LijU$k!FN$OR4I#m^eB#R:S="pG/6"U"r1!s/N*!W`<%
~>
<~KS5#3KS5#3KS5#2K7\]+JUrB&J:E&tIXZ`oI=-BgH[C'bH?sj^G^+FVGB\4RF`heJF)uABEcQ/>E,]`6
Df9N2D/F**Ci!m&C2.HsBk_6oB4kggAS#C_A7T1[@U`bS@:<SQ?sm>K?=$oC?!U]?>?b97>$>'3=BJX+
='&F'<E3!t<)cdp;Gp@g:esk_:JOYZ9h\5S9M8#N8kDTG8OuBC84Q0>7R]a7779O26UF++6:!n&5X.Is
5!;%l4Zkhg4$#D`3]T2[3&`cT2`<QO2)I-H1c$pC1,1L<0eb:80J>(3/hJY+/1W5$.k3"t.4?Sm-mpAh
~>
<~JqAT+JqAT+JqAT*JUi9#It)rsIXZ`oI=-EhH[C'bH$OXZG^+FVGB\4RF`heJF)uABEcQ/>E,]`6Df9Q4
DJj<.Ci!m&CMR["Bk_6oBP;'mB4kggAS#C_A7T1[@U`bS@:<SQ?sm>K?=$oC?!U]?>?b97>$>*5=]nj/
='&F'<`W4#<)cdp;c?Rl;Gg:f:esk_:JOYZ9h\5S9M8#O91hfJ8OuBC84Q0>7R]a7779O36pj=.6:!n'
5sR\"5<_7p5!;%l4Zkhg4$#D`3]T2[3&`cT2`<QO2)I-H1c$pD1GU^?0eb:80J>(3/hJY,/M&G(/1W5#
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
279.036 474.759 mo
270.027 474.21 li
270.035 474.213 270.043 474.217 270.051 474.22 cv
264.503 472.091 258.81 468.561 256.383 465.597 cv
256.383 465.597 266.22 472.536 276.003 473.616 cv
276.503 473.671 276.992 473.697 277.471 473.697 cv
286.362 473.697 291.582 464.742 291.582 464.742 cv
291.42 466.111 289.577 469.435 286.811 472.14 cv
287.256 471.414 287.779 470.833 288.369 470.439 cv
279.036 474.759 li
.196078 .141176 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Diana) ()
%%Title: (Macho.eps)
%%CreationDate: 8/13/2010 3:04 PM
%AI9_DataStream
%Gb"-6l],5lFXHt"!PUr#&Kp&*$Tmbg_SH8YZ78!qBM2/p[KaaE6*i"s1V>Qsh=BblrE8$h7)[rmZ`;Yo[uECYZ77@LGK,Zd]!(cq
%ro+a'msfTVc0KS'^4$$rIsq*t*aJ8k<9p6DqWs,Ir8PK)rnXXDf%6.UlDk<&ntt!(l1/lTIEM1"HESn1+1ut#nqX]XhL5FY&+<l>
%qX1uEq`!t.I.usEl#/63*WGTJTBVm_L]@A=c("J-I^jgtioU37cQ)sKI=6SCk10;+LUSqN5NJ;f)oL;*iBM][T:uhb\$l>8]9dGb
%pu^+Fl1;*mq>7Ynrce98q3kZ<p$2GCC".6+*msHUmWKYqY7D"*Ieg1^HhHRRhgPO``V6Rn^\]+f_PP;fcZ7L<?@D];hOr/m++!jJ
%hE9T,qU:?EhL$uO3K1$&cgQ@+5SsIPiA]YgjZEH@VAhOE/GbH0Y4`'HI-L-M>^#oZrq;+dLiT-Frq6irn8^g$%PcAc?9d@#DLe$[
%nfY2l^OPqMgG^e"J&Qd#gN&L9CPV!!9u,Ul[+NE4T8XanFtjt?]SX?;VM:1I4LC2g6L:<]"S(c\Y@%8*Y7L[#eVe?PIF*C,Ie`oC
%fDdMkDeeNK8YI,]Va$Inklnj!iQ\D6IsC_aHem!-h`'5_Ish:@X#JVL*M)*#^o#H$`kV2(hnSsUk?$OS=hfIX"*Wn[LUu,bs7F4`
%k:ci.lGI_-hgG=dh='8$1Cs<)5dLUd+.?Deph:7+nV:<FB'+2SqPS5AG)i0@O56L;s*dUoqO8#!s8;`LYAK*WlbE>dqO9dak[&`.
%1iDUNe*KRp96:.4qcE6&ps+A;qT%"4ZJ>B<=*fqbs5f$Fs7Ym"CTQ>Y?$kRV%-X"eiSE=Jmp?Vde<g@*e,MVerp>'p/_Z:4"T6O_
%^K\VEe&bc\^iKd+2[$c4K"QFoo>fs&3TIE8nLA0VQ8:/:q0]VG>Ji>#iL379puAL8ZIWt4rk`SYFunTfdg7*ZSaaqhKPSkG]R)j*
%bTB'AEP_H%+-Jq5OC^h#:O*`u[J*%]O5gP5@:&_gb:kT=Xh9E\iA[pUV!sl:DTa1F`k:d[Y:qF'7TZltdPWA*h`Q,\JS*+6GEk%N
%&`>E<%DQo-q2@5d,p'_#[&g)T'n4=rAbIk[)8;&)ma$NpXg1U\+"kGNnJbcU7`rs:4l&*qJ]f`;gM'e/q(Urehfsh]$6A'6%N\@>
%NQX"Gr0GSAEfn>+&`B6M$Tr[/,hk?tU9$L1PJsl9OkIn\GjmIF\[1pFgEr9>5?rgI)NA3Xr,J.8]T"r22_GbI`uJYrjMUbPCG8'N
%\5BeVOt<6\6R^d3fndZ3NX%3_,=Gs6@XBW+0B88(QTNCMn_e7oCjn-e>\<_sm\L#2?iK<JKi*Q0Aaa2]Ul.&/'2fn,0;"r!)tsh+
%Zc*i1+I$b+0IW&J5,cR_J*aVGp"0_4ad/,T5*j-ACI>Nl9?6U#k8+&PB,-\,s*689NG&&'UV%YonrGu+Ou//2q,`Hd*maD\<d@td
%^O+L\a.p:)T&nksXh5_$nrGt`G:-,F=oR77bNn[Ls-EX[jZN5J^L_oV[Cq`9bgFI09]s$a*p`'8XE^8\o(Vr2J"JBC:.IFi"s(,9
%/:[+Pn,Ds?c^.g:j">[C-b6huPWj&qn:8\&9u-!(*bBh9I.oA-CX:U^pu;ljEjb4QG8ZJNrE/,N-@cKgpZ9c0':o$.NS.IWeZR!9
%5HnS.?!,_LnLLq/b25>>,>B<(?HCF]jGM00]0Xo$kF]pDI!"HlhNe*1^"uQ:VGMBAXq/8%S^6jRJ)IgXo)?tBFH<cKFd@=:P.ckA
%Cc$"aG1M)MOk[>r'_1TZ[$NRtQut(e?26cVO3uV_*;AumV]3[GG%D!kZ-jrAqudu5,aiip)n294c;%qWq.Nq*nB\`T=#TIqgt"E%
%bL_/pN_4#>G:!fCg<BNljug!qkHXU@o8e12b&R$MmEaRPeBt]-I.b"HSbHbSpFX;@kI_\WRf?I;jrn'cB<2Qmodss,B9@U('A/Rm
%f/=#O92<d]:N@Xpj;n6pe$a"PWJkL4T;`\>,5IIc?pW=kg&?f'UPFW*la'sb-b4$YYeM^#1k0qK[WW5E?I%_hD7Ss`[*(5d6kd]4
%83aTYb9j(;gb%cc3Gr1>Y,odHgP%_T4l^3%lQ25Q19#?VaiHZne?Ep\$';..d5,(OAGO$&kH/:4lm]TTg9MpSS!)L%[\q20AJlEs
%AjmZI?sZ?)m`Jh-kn7p&h^/s+KT1=\H#8B2dNes>?.Zed[V7H*C`<i@M4m6fYUY(+q'EL'W3=qo&)"=ZT.UA4FOa*\O56tDYT$_8
%1Wi3X$WQ>FW)'"K2^5(Nn!;]O5kXP@fsX&d>aksgk,n9[PrEo/h4'MJcj$$`<sqag,eEts,U'H!-,Kt2fCV#jDD!=57-tBX,cY(,
%$f.m9F'X#(f2U;2Mi<RR_a\'@(a9DgaKi%I:IM-.)#5':ZE_H%cd9_cHE0D^mZQsWDgKFl+p]:J/6P`Z0-l+;`:NrkNJ+_%61R;:
%'humdR>jX97u<NqR#a:@oW943/PBD.DVn-VpjLCingp;R>oKZ;*LifEn2OBa6fsqMBmEl^=fMbF10<G2E>J"1'o=RH/'Gn5M+^gp
%A`A\2blkR)(:R7g[OE]H?/7-;$S>]Q$X;us9KI4g'n76`Wbe%rQ)rY(PM#=Y7_Usj,0phULKW;GgO3*6mS[S#HI.l)V#kXdlNY8T
%*DaO#@nVi_f7VhB?tEPRm`GCU!jdPeo<=#CG]\Qb=_VDL)eN4<$PYcuZO<nD_f`t=Bl)UK^)5+^K\iX5+c1Y$&eU9*Po7WRgYWJV
%Q;AMId5fL,b57(:*E,8O)&A]%hE_D0:5t=Gs$ifNgSSk];B1l/cd4WY4)r;G<eY[\lS@1JJ=5G>j_8.274-cCP8FK[X2rT\j`BEQ
%M.F.IGt5d>Eh:C-#<328;N@r/gG#ES7W]HrG/"\rcB>;'',"_>.t/8b@U1p4gf4g(\pdHU3bH[0jP<8GCWh!-@C`[*KP3gI:>Ei/
%=7W_WjO'OE7W0jPGZ:E5*;0sp:EO$:paHtBVB_gUkS2l;%`CJdl]c'qc+W7!h2/`*3"]G#s'>'qSl;[VV^6mH-nJA%o'lr/V0(U>
%KSX/5k;I)H%Us!i^opt-+uCD&3+2pL1k%WX>[s&L6tOI+LH31$cZ?cm:?Q`.J5,Lj&.$+P5r-VOX@a6E3:1Y4MRTae1#;Sli^>cq
%MWa%oL!?J=)c8-uZ#m"VFeeGg$u=n1CI@.BnS#NWdUoW/`:V0"i>usc1i>*fbgr'rmb]_JCgDQBL0Z_gB431H"19TG`1)moF\1?>
%pS^-sD&#K"g#a;T-EXq;leH''ERtd9NoRk8DJ"3RBBY]20T(#-MWhRE_W"<NN.7#R%4nB^fZJ1[0ahRO4P;]`V)*\$RTu9SU!;?1
%XB$:M@UCj[KU(%DXMZUU5@Qd4KUL7]`bA3@S*To6hMN^0S<u-.leQ.*YRSWaGm;H&(!>?qGt>uXVg8sO5\NmYNH-uLi7LYa$H!b'
%C9'n27^l7(0U%o0`'GMd`F]jR>\>\F\E%i//pG.q$dWQ,5M4M+]=Mi2L$p^NV#7sWDsO#e<EPtiA\[GQR+sm+lg6C<P'K-%S,-Y]
%LY5ei]@3V#dJUU].`6&7GhtAS`fCO32"-kLALb"VP*H(bh2)8?D'7(CdijG,-\BUI_7E3S4K!7jGS"..LCTPKVteC]40YpQcC6g)
%!C"0;'5P"o/9u@O=_-;B:NgGNKfhYo,'/D>Kr6&9\q@@&T'B&&V.)=O#+j=n\DY3j<_hVfb8IM>*mo[X.Weu2/Q4R>>)p6e8W>F/
%-:"&44L*<mWY8+<nf[XTC<7@u<)q(bIp>QMDW-=YB2u$.2VX=mo0/(n\eV7OqfjG[-<K])&?;a"d;)aYJ![V;4D93*YDSiYbEe!,
%]5dO\#5Ml^CUpe78I,jl`pmqY[MZ>co:b9HD,h4n-_/9taHC_pk.At)cNt?MhQLc80]^>f1aqbF#21Epi4!O$%R<._3`I')c5H\D
%%FLV)arqn!3VEHHj[mYG[C2PaY4$VG]G/Peq4KK]h($A!\*uA5F-$&rcH)d_S]:&1K?SYUN1tD?Q?hLKEb+?'GC",-9e*G>P]4Y`
%Hnb>7*o=gtX0!hp7+1a9hn0U5IS[9;fQJ)-9i\"7Ukj9N=+q81oBKC`fskfIn[]:f&?VCSo8nl4OFr'9`Pk1GOuJ<*JBV&k@5]+'
%!]\*F3:BOKT*$I9oR+BeFf.5l>gtT3Dkb,5hYL/P[W98Z/#%a"V#Jm1YptNe#Se`77^WoAfP]6RK/Dh:OX.:/WRL*O]ZVm2YPdgL
%38SB[aH&l&Vcp?1MMmPR\P#eF]\'IQ=ZqVL)gDs<=nA)`apu6/H`U+j9l8'iJL>M7YDm/U7;dCr-?M[iY1#H'm,]Inebd@OF>8J`
%j6H-kf"BT,gkeDSI01dAZ"ojl<2R+i#&[Rc`G,'[(EZ_Cq:N9dNpFhsk-9nP/(6\Q/3@h6g5`g-YLic:H'ITsOfW6%Q/:=?)td5a
%f)Ch`FPSOGqEV.Q.87,=j.=CUp,q`S)Bp;s]@3U@;cD?X`BeV_;FEVO%^_Pf2Z3_/ZaY@012murgTo,ufg9V?A2?NbiM&@1EQLN[
%0sN;Es1MZMQ\X8XC97!BXV3TR1X..6agPsGTZ<mT\nW#Oi5l6lejI;+A<IQ%h!M3CnT*I;FVg)OX<dGVq1[G8od4Di>@lF#@r'5&
%BF&sh%CgiIcf@Z7epT?NICe4AXOMta6Dq`A]$NSTKVPhjC\"`NcI`YIa!=^_&U2"`4B(&]/tQH@>_Lup4&jJ5.4>4*!h,L3bg6E(
%jQO%2@t>22`&OP)Dbh0:I-c-bEI3D%Qb0A:GKpT:Pn>%tJb^qc//E^og"JT,-iAEKQ,?Yg*VF`i0!`b=/G$e0b-<S\A4365$"kBm
%-+Pc6CsYU,Q/,,dQ2+psbk*]jaR.,77H6L$Zkf_,HZ5kt!+#1EbK,u8USrY+7bY;VCAg8OMl/bb)X#e^:hj2Woe>V;eQF>]lNJFB
%(^XdsR$Q]%WSRA[(hQC=?+8Y8%r@euc(,6*`#DJ>'aoAEZTAP7T>ZUV2r<q[Vu8Tl-NF(0T?5,&Qhl+LZZCabG^Q"K55O\'iU#e&
%a-^CUj`fUF,jJ\U@E=)[J8;r37'<-Pr.ndih8$/"q^BAKnlZUho3V,-eaXj)@n+9Och/RSe*m8\oLg,H0/p.+*SuE;$d8c^Sd=X.
%h:OX;]p='MngMmXObs^-Aua=9SOn'5.p]U7h>,4NO5.EUqPXJK.&k7cDt@cOF:$ju^nS/5,W/J%JWA_&q:?:Zp2X^::Icl5j<27`
%h/,cbT[Ur^MJ%;"4ERHs"Qj(Rg"t-k=IiOm.(/)uGN,ob>G#Krig`SDTAS,''%O37oHcG(263XSMF"Un%Pr9/dAOr%G9"AJRSRZ^
%<NCT=!Yrb[Usr\S$2B?IPeZ5rYOOSlJf!%(;<bWXJ%qjXIMBtIei?ko=`aUZh5Ze"#h[tA=@2p(9eL":T4Q,;806fZeCWBZ8D_`I
%CK\!A]EcVB;5<J@:E.?bLa)J&`pr,_#htl(['umlI2"GJ^ZB>nS[CGSSG)B]U%sIQ@Lk3;HL@88M&Hd%>DC)/8QkeGSCG31>Ujqe
%bqr3EK)R%;-D=2]+qlPH<p$d^STXK[Q!p!/S^s3NAhcCHFO\f`Q2!$<*^E8^7$dcA;,YA:)TD&`CYebc?@;a_0MXgW20j^`e8Ld5
%TGHodVYGO&?iRW,]T'G^&Y19!Z2463(-g&$q%<&1r%'ZHKqGK-7\5`dZkCaA%S2`7i$Ue+jZ;`3]-dQ+ZToU@h=/H`p%QT*48el#
%r[Ihq8cBbEUZ\AnQL!DGa+_*Jbeg:=AgEg<1uE&daM;eTL9<aNfLs(+0hPtl:CW;f(](WsK"[d^%iU(q8#7:\j'ikB]rtO-=jD*]
%@U2+`4qDYgK?9<mP<#8-CsS/TOuAS,4_%[.nsI\7k58/*Gq@&6+!%]a(c?jW34A-6+aKL,1aW(\Sl#CUhSdDCHpBPO&FQBU]7bKE
%U+nkj7#$`8i1G?)3bc$;p9Uq>jLZ=S1Qndq^\o<EaT`Z'5[F!E1WG7,$UYIu`$D0.:.c.K'Z[>*p7iN]`QNqg'<#h3pQ'B674QR7
%9V#8bIdDS<(9Q&sMr?rbrN<bVhm14%4^@Qt8#cm#D:L'LlbXIp_`MfsYsXXd[])_FAlcD<l%[l_@b>_@`:&a8La"]Q]i^akd%&gO
%%AD#jm=qW46UgW`387G[dG'NCp=8ZMVUC*;?E1'hWXh)H9M.a&M`7?KCO2E05k<qDo?c<kFl2rXFQFSV8.RmK)tif'W2);@C5?*J
%<pF/<.CAAnC#qSAY+*%1:tan>4om&(0Vc\uZn-(2%U!f08V&/+apo`D4YicO+8U!#l6/V7P;8X$p^"cJ6T8-.<^t,)W'rYt"[/E:
%lS=@r"T*I3FiUcD:M62qaE]5,iUrM2+XGP!],s&>k[s@L]Nt*u/G"Cg29D]&V#<#a1H?\nc:$t+=@l8RPp#\\in7&>c,W"djuu]^
%ch?>X>0d"dIun@K_cV'=:AS3Fg/p>+k).>0BUQo/ANX<:Ae-W@Z""+dFt:DKds714#eHW]hI#UA-o]PjO3oZ5M3e%IW&YjG%I@m/
%nSZlJ-20U9pA2fOAs%uYk2V>84u$[";:!pgD>TZ7`aE%U5M?iU0CGk2@5\Yi2tGDC*)nlcm7mr0ib=.>P4pW[`*&"]7Q=`lk'E-b
%ktJD=`,,j.qU+C;%<H0m)AQ]'-dN2'cF)BmWOPYlE4+sMP@\3k+2]uI)J039RR+U`/5t$=ZFT9@[e\V;@<^Dd+^jPq2p>BT==1E<
%"(;i2It1QB=Uac_2Y"B!m^ZmEH!UXnnb`+>R4DA$rYX++0&ZB4.#tF:knJ8^"tA,>`,:pr]0FFha,>Qa\u:",C&1l@j_XT=::s:Z
%b\.O5kC/_NU=J\(_DiXJnll<EP5F-ZNlJ7mqh#tlUrqqJ[i:ccQuPkA4h?2E?5Et['D$ohAVNAj#P2mN'!%7X5ZKsjY=lmgBGm;?
%R:VF6d-f[2AY>7:6[aV<Ud?9/Dt,'Zbiq*qn<%\I@gr!'%PHZZn"$e[8D*0s:X-JZrYN#fa0!+E`"0!IPomn4k!<@8s%)[E@(*8N
%^cPKJ>Q6n^O3t+?.A*C_`&rG\a.57@=0eu<12OF=,HMrTDjQ!D/Q<8W@5YFZI(^"Vo5:)fnC/kkfH)8`:p*OOTreus2tce;p2*oF
%h^%?*%Z6gZ;'aqoTO'SG`&@Y06\,d8`3[Jo@I$k%^@KF8B>mJVc1#%>f06rF9bt(GY']<1ClD9`RE&(hHdUG]S'AsSl$TZ'PUUV_
%qI+i"kkPN(G<P"tQ&YaPg52^K4;_iHQ!<+..'3WA<$^%1N3a2WhL3,*^a,lQm'kI+W4@=gg@sX1Dr7*i]m_YQZW7E[;j`4QLUcDq
%UaI4(]"@OF,3m=s6[%9!!]&*)*@uTK""#4(Jm-j7%uZ1Uh0?4YZi@\l\>r;EZ#Pt)\s]PqotWSI(Z**N.&ch1V.$eMkVZst<7[W:
%g!AtYgW]VI:##Jh@-'WPGsA"2[s?Tdr32B^9m`Vq]:AasXGW(_%U>R?/2"Ndf\a?4.1M$FDG`O7H_6DNfh.aIfg"J#4R7d$l^?*1
%*oDD&DVn&g4huDGSnCWAQ+-Gk52CY6ebmr$o2].Te3E4"s+DA9q=?k9pgND?qt*Q:@N4i^buB(<mS=U^rSuM=DX[!Ls-l`p3YJ((
%`YG2PT#-6I5#tfN0lD&,LhqIkorM6EfGU\FQ!59jrKp^B1CSJMgs^cHADLj=/pHG;TC&uaVMQB0X*gonoe@E[+<sTkF&g*ODjn0_
%!G<GI`6J.sNLRP/bdoco9u7BW,_I,kn1gE?8+R72fE42/US>])j-Z"6O/0/LN3%=KpE!b>/'5`-5(=!a*&fG/VSVjZr8R_32u"jc
%rU][\/\V5t?_f&VZhN2bn)(eXZbAM-n9\NUqYl7gT?0"sEl6N/oU\89qAm;nn(ANW,k'9eJ,A@5HLpSh]`6sF^OQ!UpWpSKjmei7
%s7YaIgDAcIj`(+Ze[ob6qpe!ejQ/Zk6ESR@s4&$+?G-:2=-%J!e_f6_g\Wq5^O+]sS6PjI:[.0=+'uUUGoV;)Du]FZbO=]Eg+`O&
%lA+!K^NrLR^Vr,QIX(UVG;A1h5CE3l_scKtJ("Y%([,(Oo#D9ub@ggtgn\;iG6<0_^M`54(N80Crptm]hu;a1bJ!n!hX<D7o%Bqr
%pAF'lLKC5uIS%k8_XirsqBbUahMBd%oik[MikNK]YYfmrrU(X$#W'b.q=egB`Rji*^A?$2DpaLocdS.T)?8Nn5J@*dG+oF`]moe.
%=)ZrF4)I6$GsOCeQPUaXI1g>/H1C=ALBG<=qe!tBgD;.&2U[K;7^qVtP+8jhr:8$D?e!!\]301Rh1lg(]I(JllbbCUnF#+j\$*M+
%r)oL!Nr%FE4Y-hf\GbRC(]X?uMuW\-([e)[4+>u6j31jSY]rYKr\?]a!;;M^6F>19dGmcY>CW@P.S.m1"S_8@s+gKJGAd*04+>t?
%"n0pXLDU*kjH/T'ntUonE!ggJ5+KMN0%&'@@n\Vt&o2=RB`5rd&,Zh-IaY:dW,sUs8O']Vq_k&0E>S*>k8`s>_IpmI&a4lBQW)jl
%([h.Vl!qQim`^`=Ic0+?*k1c$d\G3bdK@H*R3%2+nW(W8F*2[7artTBVgElc"8R/!;V"dA8*,t14sbNn;o!.q?7`SKgO$LH?$L^C
%Hb=4)osWZ<gN4BQ_l^CsWO;:YL#:.&"g5[AFPX'oa)\d3cc:BYgu5-N>Q0AqG*LILnhD0F1!mf[AaA@7(LQ'K@-Uj3>k9S5_fFel
%i``3D6?KA@q6jW-Q0=:al4WSl]pUdf"<t%V*)aLb\J=ak0BW60-gC!k4!)p=f0m3gj[p5D*pG+#l)8nP/,ZZ:)Y$=kgZCsGATn6F
%VTYi&I<&[3e*YuL=l[UOo;RZFS4`2HIFs0RQgI"]jl-(]d)2Hm&m(,^4T\QGq,-?Qq9eDGjN$Y.>42.dN]8\)m[h2gP9++D@T:@j
%AU5%\guKqJ)Ej2"\6V[m=g!ht:q7cJ7:Z`NMTC^&Q6m"#$!dmPO]Yd$HAJp^H#^%Y_Qd&O=eIO&*[1X1$loED'Al%O+r,D(c#ZO*
%GF.a^EMb%$1mC6I:])6KKa=F7,B;8U)",65pUdIjefLkVp&G2P])J\4J(>X%4_VD3fELWZ#uZV'@Cm25p;+pYd/&gZW;KSl]sqV[
%O.S5sL.HRB$^'q4G+l3HQ^tW68T&m[W9d:W,Q!"`,O`Ub88jreVk*=i)e175=W[0@d/#D$#%u"bhMYn$NNj9kp7\\ih8SE'of/!;
%Y79((lW;U@VHKTrr%4rajD[hkW)'0uqH\CF)Z;ipoR)Q0"('"]YN28>N3fT6XVOqPhh*Gj;q<kRg=cl]79[($72tR7>?YlMEF/*\
%?>ZD9^`6`E+C%b9EN>OL`=;J"VHl_uO/aO<rJ9:>leLH`5HlZH1I_&8?D[Ztr:g6g*j<cSQ,L-(5B$SXY9%odEU&ThI2r(1oMPEM
%de[54Onk.'&buG@9[#L.27!tR!<6F9_3uPE"?+5IUIV.NTguiCA4/_R&lF2oM3QP\;H%=t;8\2&'5BFu^fCgRT8Y*PTC+%iWNsXQ
%B/#aqF?>maPL7>2&=Z#4^;/"D'\XHl!#I3!8G=sR;nHm:I-%f>s4ugWg0&,ol`o<sepFaWUku7V\8LOE<d\(h&fbZ)b)-_I<Qs#A
%XnTt'V7!2nQh?BMh@@\Af0J.tmCq#WejLbS>4ZK)CY`_UAF$'->9NJ"g/>O+I9s@C2$;X[s3u)(=6l@-cdkqEO]G-+;H?`I;cZlK
%e>V"19(''6YMU>6EXSIeZ0N7NY(8V=/!o2B+m:FOlRt(Y;u',Mla:*'rcr)K2q\48s1C8f2\\LM6$M>*0js=7m$:]:0/A,tRb@C/
%9R8IUdg^^f*hjn6^A;8Ys+o!YfhZ?>H$BP@XDr7\\XT(BXRZ^Z!^A-oIJa+A_M\ZXQJ(R'jK:]"kYH?Ykbn-6dEa.-kQZ+pmW`2>
%U3)`,bR$"uO-=Xfm^JR'SsW)D3N(\jBbB%2aDBKD27$`H_7Vk0\IB3^\EF;2Ka\Ba%5TbIAr+PfN'8un`;LGb!sZb]r/(5nKM2Wc
%,SJLdO0HUu5Su<"M]1\lQIFlSpm%X(g!5To,4_)fj\e\Soo`k+WRJf=cb:f?ZE%EaH*W'#V2f;mXWGT<4qYilf/$RbYk1%P3YL-+
%7YTKf&NbLl:6<-U9Hjk&98j2Wig;T"hMB!cM:!FNm_O3[[l\';5`5WG4>W1%lKCctHQj5[1cdF&HS"Q@er^^JdjcUI)N08Q((YU7
%.aBH]UPIms$m\`T<"Ld<`(ab3F3DGa6p_4>l27lTD6rioq)M-/B:'b&p7r(oLI@:dT;=V6'q0[oTS=!^]0YQ\D;A(dm>#1DVS0L:
%ObfsJVejeN;hUcI2<rFT'iY*<h:.]-:RjD"_6S*O3(g*b@k6sSl7@Lmnqs?$0SgB<B!uoYh6GXNr00%><I7gUgiVP+eo5B?;lRC;
%CS&+;[u.[F0C2kf=q#@LQlKCN'fbKE3U2VbMKl.":n&M+K*00.47YB)^VjPDl(6`$htO^'E*nG@Q[9@?kIu_03b\ujT2QO80!0dD
%U@+fCV!M[WTa#P_BYTV@TC\)#RjO/a3bUYV@Jf??4bJB!c<1m@p.D2c\F[.%e2of)@!7Pnr=0b(9IrgKi%44Cdhl)R*`pe^:A95%
%],rB/%5^n-E7:?A4-?QhH1/[HOT6cX"HKAdPFT$WB4BSn9HS;Bae03la=X?D.-O(MNs8$T$8:\)H_m6_ml]Rl`,[k\3l5rLH9.Lb
%rp2]F([]W?%rq@XK8Aj_@@@7Q,/nouOJTo9\2pV-*qFUt4LAL]Kai`_H]ZAuLs>5=NU,"eCbrEBe.uOU.$M6aj??@O2]PIF]uBb)
%o6WC2c05PP"RehTE.;8MZO=\`H&KX+2%Di4TX.587esADf]I]e0(.-@0K1@Nh'@=%e+-lZ[q(ZKKk0-V[WE/849=I.fb_$B$[\WB
%>X"2L+0!.]n1U"('Zp-&!-G$*c`@TD=>LqRT.BMWB$Lo2&Y=CO]tuPb`)>[;d\X1dM&]9B6s:_,=Dls#*c!=S1+.#B90U9ac]Ep`
%(N4"2)U$FM3]+'W?.anFk>9h`9BF;/40]KT[U,WA=mk1Q7]<J3pX)bI[sIC$PRfj=[#sE5RR@&g2fdf<>e-"cjl/so!(iY.Id9gJ
%?-;bm>=g`m<SF%Dqi\CseD2\-6r^nF1\jf'7cEA!?de_<au'/a<,V-eRaMGC90cl]qb6I2if?e'7.Wh.7eKCJD#"UQT.,8er>"uU
%r=]EX$;.?h>WkE'lquH%^A&dId$DDs@>[_3H6c$9!^K\W@N2=lR(CiL$^)>;;qNRE0duAhq+2:m.$a111M8_ZQD?q1';_hml%[cR
%dYuapYL+99,cIh<f;nNj1:F:J/SsY<^>/,:<f,+bj;Ab%,GLtR@p)^i?q=KaSg=NU)+TeR+m'^lh)U8dM*4FTV3[J[NZiC9*T@Tf
%KK,SJ3a+(Q)nfN-/NXQ1T;&ej%C5cb&<$Qn!V*]%iod7j=>RlCG4^8nj[7\^c`lM,jU9=NY!S2d"maO1"<U.tnP7nM%[S$kBHB60
%6(-c1VSH>ZF.5DE^9,^VN,*=%.M&$RBI#:<c#R$%dt4%_#ep3^DY(lAlcf.6A+O6=h"t>'VeBW!N+ob(U#!A7AL0BYgS_KJ,eI4s
%f0)-HZsrC;=qb^#KMC`eY'+3s"gNMibQ:OnB$.!iP3L=$rr-X.'/oU%r"'ckT32ga_Q6mt.aS5sn$lTaAF<tLdO02/aip=M\N=`_
%Rq(u"MSr.-IRN-b$m&"GnTTc`4)KGpke"di-2NYomQ1'UNP%pNrCeL*R/@&k6K6(u`SIGj47j@o^_V'R*-EnN;0S#1hjmno6AKl?
%FclHl#;#SCG'qiY,9FmCn)&<9'Y@I.Y!ns$"m[qA@kXo<@5DpTWnqsCCF#&ZVqao#af@s5-#d0:Z@>hGIJ*hW=,sA*E=U<_6U/Yn
%5aEV+,5IM@)&Cu[Hd/h:mUCZWGNh%hgU>G;liGP_g3QHS5pMhHYJSa_79_O*0b]tuh)7bkUCZ_Q`Ds@FC<l$D^E<<dSE4seRo`B@
%Ya(i*G&7$h%GO!VVXdrt8igV./U@%>U3[W<C#!`'*0N`\ZlZV4oh+k[8L6J?WuFpI;;*B$AYYd^?K,s8!'?1J-]Q&%/Jl#t;qS>]
%S?u*g9O>h_3&P1RB/ORp<_:qY&QkJMoNmHi&kAQ5BD_*W)\K^Y,NVE_72@Q*Z@]eU>HS0r&s*]!7l1gP*Es'JZ7M;QOfT/8)H!RJ
%_jVfPDMhb?m#(VXU0!\dX51j^`3$12XcRQ$po"qj4!NiR*9Tr^3Ko%W$Y$3&1M;Q&$B]Js-Gtk$m.&$7e7A;lD`*hIIP%aO<1il)
%Xe3>]ID%YQ40A;>H@OG%heHcb@b#Ta`_+GY5''\G?An2cSCX`<M=)]4J(]gVg3R#,a<_#<RQUIV6\Ul-Z:B\:ldAjhf#+Gke)R82
%eBCh4X-s:!pRQsKL<h(Cac>'Gj80Bd-e[[r)+g#rPe+P-Q;h;.A:!f]U\Ge"nhc`+TX.EOHV3$MH`23Cl>S,-af-bY"RQmf5igk)
%WPts$Jn)<]+p$\o'IJL]b:ZOoT71"Q`1HnfSQgpkr:/Q*EB!^H_u!c.j?"Eh0)71c]fNQ?-Y:D.FV;(bh@7iSY/gHS*IXBs]J66I
%WLH\[WO`W%WLpFXT-IL2Yrk6p7-bJf*3Z..c7cnWFnkq4_nZ*QcpcsRFi2G<bOj]Fs)$.0QV>!.T"Nj.RofFVXTq)bd1Yd@lZ]NL
%kU8$MkI,(LWHs6?Za1j9b3Yq>5ri_c^n,<s4!t%iZ_LT^W]+Pq`>n/719k'kP?]#dZps^8*/(ho_sJ.nF*<u?,]9MTAl.*bF@Z.[
%'TfniDWO?*h;mNOR_*5c@Spdbaq74gPO.;'6k5,G@)TAWL`@I-*)eB$7'Ua17"Q_o/4-.;n_QkRC"jF6T#a8%5MOgAMPQIkWIQH:
%=K*9FZ,a+6p`K1-=i+Cf4na\eQHNXR3aHr?`JMj12J,Y:rDZNI8kB5Hgp0,VlT.k(:;`()Um*a^C`o3.]b!F)#AD-%@@&%BfS3\o
%E`R5QVbk@@S97Yjd?.<>V\DW]Ws)cgj>$l`DO$gU0Z583PtkD?$068_@"btMSlb2t'86aP%4W#PZVr(QXW8dHdg%mEVp47>rV.e0
%\5f!-mh0,r)(V[P1bn(29G(k?m8Lqa9/'!MhlZC9,3HCb[n]t4\@W44E%5gUO=#o9;@d!VJN*e7B"AN[PIMU,BY\A[N;F?$X92EH
%/6+=$j,PFHd)V539;dhD$:to%$sK&IL)kE3Rl0RQNGAG'-mdXVg2.4nkE)6,4N9R&-/MD,D@4ss6Zl.^OgAdg'Ns7m%[8/Ia]P*:
%MFB-34Yik*3E2M.7!HhN_2`1?J`):2HD7hj_)\6q*h4IDBdfA3@X/[02ql)0dP-\<8Kr1lU`)c;S/*lC,DY,-n:#Smk;)dN7p;H#
%`<,G9)Iu?g>sdlA5#980HcBRO1?tkpc73g2%Z53@0"AIPnsUd>e.aO/M2G/7'V0DFS.nhqU84M-Um@%$1,lbfNq-`CmhkjSh3"#5
%R`"\<&YA=I-sH'pQ1jSKk<:X4qKQE9@frDmAX<RJT+hPW:0<3:Y6RBYe&5mfpe2?nC#VFI=G9;'<m#,)E=*F>%3G+N-W^&JTDVjI
%o&%i%0A`ecnnlkT!@+5mo$;4LB=IfF>Q3;-s6Q&$G0<+^je(B"cfXq6([NqPI&;bH2"C1LjZgm^rjeTqO)W:WqTFd-h]?[m]Qj7e
%%fcJ'cgP1g0;S]]m51m5U^D\!hYUsSrNl7tfmEbc]mob45C;jk^%]k0qe)u-Z`!Mb-9fnsB:ATko\SOX_bElb[=msXY?TsMCJ-6<
%5$_K.bocE-[r@O&&cYDjhELmoLVNFT4cb!&=ciCM]<r1aq"FB9(N7%J3.V!bj,_Yeg;1<=1'mHe/J/HN:a.dXN;<CuJ+6sir:o=0
%jRkaahuAmDs8<K>s*4=js03QXH%u#WrXSC8H[e+9l5^A\GnW+1h6^>jchDbI`cj20hoH#_UcT-,n:6ikhg!n9A;:mVH2EZtP.@cE
%]dYi66b[8c9IC^[23popp!(KFYA+MJ>-3G?HbFI[T7l]ofVu'lZ5elHo[IQ,O;(-ua?^0+*_aW/3CX_g=]ZWRoB?J3Q]Q,8n[o:c
%)L\CF(>;p[DLduAji.J8aLOQX>5RWP2?gB0o=/P/`Pc671jm,7=@5V<W@YkLVleA(eEh,lXT^HR+k$!Sb44k4[o..+cXBYPj`-]K
%3lW+/dd=90g<73VbDii,-2IX=N7\Mc*/4N6WZ@10E)A]h6<DI?)g]7?;C*B$[WK45djco6#EL+JEL^#T0h0VB2^r4+g7YM)DTFmV
%QSf&@&plkA[GHm-AW8^tp<j$8?4)ZQcu/TI=bGMR`mcZJ;>6*ZPFEBW7hJoLl=dFBB\,dpa^SDBb;YjEksM5V&dcq1h2pOB%[GUs
%S>-"O#>p>3;t@W,ORS5tG1MM`ef4-lH5f#6&.d>^E7irp++5S2X(0Pc5()a+1S&6*PV_X`berm%A&3XW$60!I,g#$&8atCUjoqdL
%`\fHA]*U&:-lSFCCjAkH'(NOILR3#&8kHGH1u^b!%&>&[G!<s!O#Z]a-X.2nM['\B^+X6'OW,*?`C';WMhdfR2\C]%&(.cK2-ul!
%Knq7#/_1,;<#^g^Um3IAH+5NpbE?sI^QPE:fh)ZF_d6fZW</I=pl72mE2\>B:Fo+132.ESen99!]rlU\7.,UF;kZ-a=,7k8"BQ`7
%'H\Omk1>W@e7f?1&N<)0kU1Wa`""L8Vc+gcguUd;A[6ap%XN:AG4@M%0%#VL[CDHd[c1#TnIYL.pEa&hI1YH6":g>YVNm#nH\R'G
%rSkAL*6kj%KgilgXL1EhqaH<Hq@(J3?L:)X7@Fj;#%23p]*R(^)\k/QO\&RqLi:BteCtOi5[MjbL_\A^=&N4D>>gZ&8Z[J0,t]:k
%R#BE(d=$BfM+D[t,ZYEZ3XFH18?nJ6f4;+29F-d,Bh<"E9T6>L`,)`RFN^,P2en"+GfYSn5`CJ,6h&Gp1b:kI[HRUOaJ!B\FTN.1
%Y/uB(P7kZ199Jrf]a_(l_hPf2:`_Q`aTis8b+aNsg#KIkhn4)$N<R<@-mJGbPgG).$gT,T(nMEDQC/#rK0M]!V53i%CpPfm`"t.=
%oRmCf7:[T@ca7d#(K76-Y@r-*?8Cq:qaU9I_3os55.ZL*@u6dJTJ@J%#aL*BcE";WCfiq]*@fWs(n&qYLBq:fFOu97bp4':U;oMa
%?_f!h@+M:i3E4]F>%UZe]Q/i+!-XeR7u35$_pl#O^k>Csq+MpC7\k^hOnOIjL?L*(O!qMHl7L7KiW:\ERJR58`k8mr6)9]P.5X:q
%E>9'o!Yn$De$ah@W.>3X_If68\Z$1R6j1kQ8t[<I'SHH;G-?uj#\*;-'Hg$a@BcGVBi.G=<A]kHpR"j1O[DKTd!uR`9lc2!8)phW
%Y1R2q9E#'+#4,m@$Gt24a:Sc@jLg.\E+ga;!1J`aTc9_re>4"E,&tofHUBa(;KUqSP+<X.B`6S!]A$!/f[<='hV=fK6Mj2,I_(k'
%W4elllBh1CBKt7N%=JRU_YVWE$\[Kn<F[-RPuro(XYCELIUnA+Urmr\;Pe`^@5QtZ>aD5Z:ASb>PK6R;"PI8Fek$uV`R`b6m'Vq<
%%`]K)\CScF:-X=&!-]elfe0S$<W&##]Ks=MXb!<.20dR9i$2:'fW`H*4n/`p[Lrg:)"Q(Z2SP=J$(K^=RL7_4EJ]6.UAK26GA]*_
%gn<'ZFq*H&m874n)g\BJ%$_pfJ:Y-k$$d((7NAN;rE>m"+_F:]"\<]jrWU:_<fFBtlr1G6Z$n1hQ:0VtK#q;-WX+^$%B>:L9fHQt
%?t.dmejO%#7[$B_8m/6&&)3?p-gYAIXGDk2BmH9\>:DB_,YV6jc&7^W)L+5>)9/\V?q9?iKC*/0R&gtWR99jj*^qR()APDs8e#(&
%3fM%A*\a/M4Nn,:9tO;W[j7<@<opA;WDc`r0#CS]O0/'>=6;/tDb?M?VUo&,1gDD$\A2Z`cQHZ!lp5+t@tK6a>:/?lf$*XKlbk8n
%?DhVQgH(J.b.4W4e)j="2\alUe-SJ[n2P:%).<RP+e(/Z2W)[+7!^`Z7aE:nkJq-hPPL^T7qMi2H3kEn#]\k5&3\2@QTL[?UDHeG
%4u!p<T_AU.X@9CFm'S9N%s-5=@=PY`Qi:0+eSQ#-7IoBYN]U>b&S<+9BYBPA*\KL.A$(0pf$/AA5Cl3Ihfbu0?uh=I4@Zmk:;n?J
%Sdab/BJ?L/b_(re(2r[`aMOV]Q"!Jnab:.-0Tn+6[hip/=W.#H&^;K$N7XIK5MQQWd7a.MaPP!?9W7j.K]uTk6!ViREZfYAA6Lh_
%LksttJOQllWNF""U1Z"i#1MN)cmjdU[\PDK+gd"ms+,f9%I,p'38o4GkT`^m4Sie:#<UpQn'd<H87I4Q2"E[7_?Vg#j$P.]`4BpO
%`@RNaM0:&JfubKffJ;h826[eUS%$<d'l331#qnUuH%\1.=P(G.N/`n*!hI^UJqS9jSGMLXs88hR_;HEh9>22s0h\XX\lYtO8Qa@1
%-S.)k;EV1U7=4gUB&=c!7A%d0:VileGYRHF$iW(B/GPs(-&,Fl6Rg1DIo_Ur)M9l0!M2T9ZlTCn[_E;]=e2p4O4t7`n;#pb@t0]K
%BUP2nl%0MM67\+[p6dR\_t.FE_dPnT@(0qBf3pdiF:a%7,jdHY'jOc1S5tZ@T`c="%HBq?1T'JGq`!_*&dfb:>0Jd`&ueDUE"=e`
%%-o&KA)Oo7W?aBu'dR:hG0q!3R8sX.<oAlU=:5MrU_@]_Ub/;M;iUt'(*4AC:L7&\8fBoBS"A$J63[bP\04m]jr$7!.7h7:Hn8/*
%!BkYi,mD#f>H;<0"QX0IYW*[Ke-FsBE+=XtTJ7#(nS8XgX[VdRacp>(27b#X&\qLjA#@_ag;o!gm<Cn3UOfEP7mgK(j+L_t(,@S7
%A,CPY(8:hG&](8`FgrLR)KFt8["*cU@Lih).&c(d@XkM7#]10Vm2$@u_Gs!c-,NW7GXBIa6-?oSllnbmEh"Eug'_\L@pdpLj&#2A
%llqJ_LhTGh+l.kn$P-IaEA0GYk997+,]?pii"k[jIZ@UZ$X.!$3eYg5W^+0(01k?(0@e=H2^n^jf-#Y*ahENRa&]R"p)n2b&Eq6T
%b[2Ph`;ZIN*LpHgBYJJR&#SF,lCWM,J&*ed(G'q^mN0'%'gXp7Q+TkUND&IfKW)PP`&`D(*#N7T(KhMh&W7C/^dSQ^r*4CRfYW,P
%'5,5%o=$7n=QB2b/if6@[^69namEM;oY"\Ioa"TF8P`l?(S"[`0Xj%PQmIWa[mRA([Nojtj+IGq*%&35.2$J#\UZ9MQY*K,&kHst
%MUOFk3>%qH$h%h_32Vc.2Q[GO#c<=%$'OM"P@</f(_o=Qh&E-P`W>Q[VCA\#oZ+ZrDV]qF0ZAGP2he#,Ea)`IJ0:kY+d/6=k"Cb:
%@@<PpS<*20T9.uAC\u7g!A#e]jCD<1C`e:NQq0ira,$/l?WI`FJiBlT06d#X2EGu-*'Q(9\X\5G4bf^M@=<pR]`b&eQt<E*N,^W`
%jMB3[f"c>o/-hIMm34LM!%&*5[*=U3U(anDi("V:DbU4Wlm'bqJ_9.J^nli<Gi6*I(oqInZ!;Y/NHFs6Th/8pee3a-K/n,`kh5L3
%[iV=D%i<K<9RGd'@W\.dZo(q<E-U5g=kMLY*&:l?CSD8RY_5o-")j0pF-fMu\ohMdm:J$%*0E_M9/)6G;DiLGDe0A@?cXJWQh?b[
%58R6;?3T2[SZ*Ut*T7KD9un=hED'IEnhi30d5B$(VQ%Psm3/HU/'Z0p,/V:2cUJBNm*b@s;Dir3)dP7YedLQ,"BY5-f$F_[#LtKn
%PK>;I[^2GMcIpFa(28I/p"!<?.?`s2\BcG$.WV5Q^4RQ)M0X8=L0mG[#pE&YAAa[\HKp5Y$],jd4<Sh3pZbWq`N+d,W)hn_@?on^
%i%QYdY?PpiBn6Z1qYF4]i=^I!*:n>_5=J2H87n88&*KG$^@Lda8F@U^8!X1hN[P']Ba88VEF)C$_Cm;UU&m>O+.Ra^Qjlq,@tY/q
%5s[RB-]pQf$5t'CF0A\1d#oTm_dZr:klSbZ)G$b1B4AEf6_IHZ1;U"?m&?)Saa2)sH/aET33V?R*IHK.()IJA\YAZ%'\3KZ1!j3X
%&!8hI?m.TeH5Co%9.q9FJ:L#p`@$=m%Fse(7#JJl7h%Jk9X4[7R)P'CZ]K`uZ3@e"=m@`ZCEQcr66_;.$u6[Q=G&Hme1V()HW&WD
%LC(ATR@taiEgBB:HVI9'<M9OR5qABO`)(/h6kkn.pgcZ!<b.00iYI1uZg_;=JflKYf!u.n-`i16KhL:q$$0qn4;A@IE<fLO./"`P
%5bS5SYR2;sHn&)EnL9Ku[;Z\^!*l$B"Us$Cj9)0S(dU%hX%s0uDPKSI$dWA>)Z,\#)#8%Cj28a9@O<YaaNTZ?c5[DJGal#@j,O_L
%><kN;?,=!^rNZ/frY0qhCoW]H!:Q0D_jEZO3V5MU*Rn\;+S,rlb_`Hg`>O?t((hHrPFMPB=VU9s;sF`gL,9#WW5_jXmjLLG$.FLN
%chDJnr"*`kV9BR64pMj8.l-U\NJSSsDFp"YV+Ne3&Pfu/c6G=Z:m9R$2N*rSLqR7Kb7nQ.Ya,i58m$KN[Ba(q'H.o-0MJ,?8GKT%
%/g6E*Os%jZ2c('i`e1.l@>_Ad7iTI5:@bs:$,qSp+makJq9le8K?4gLbM#(rG'A@XC)g^*,eq<5F<$G$a=OqV&Fd'2WUjY]T0%^q
%kd/*0<ece@E*^"fK[gmUF6(EhQHB=GW-0qe;\`3u';n,ToYqi*b7Y&!VNN(1qQcT2R\8OH$_0EDBuPa&\04E<![6cb/2f(/D."1j
%(Yf`D"EV'd=i^',>2d7p59<su*5s*Y\_J+*:Y%'[fG(4jF30HP*ONQ&1O!e\REghfCe`K<f/5nF,UNaS8[)G*?Bqgr;1Rg?JP+\:
%)e9OWN\2G@KlA/&83dnh1pO551tkEjqHA>fY(i7-/#M1WpfP$M?GRojn5A5!jedpQM>($>AGl=i\_"J0Ust`nOsJW<e1m,!#b$>h
%fuKs2(O_9b:iT%QX<Ji+LEZtbgu=M9ZV=(W,&/*R#S?XQNk);:(C(\0gHa],=hL%OFdWLMe=PBL:kc5R6sLjeLX\MET9(e+!cd5i
%rm8b%,(5T4*F#=.;Z0/+^b.mMZjE+4mAYL]H4b$<L_u!B+MMtijHRO*71*:I>RM37#pFXL#Y'TD$JH27S!^$Kp<ggt+OZ648XXYX
%d7#HLe;phhP-t&c^A>]L5e`FNK3aX^-`@SF3K@WTjKE1V,)-57XEf+B-n.Rha(]k2-6i"n=aF3@>jsZuko2C=E0_:P!N;doYJW+!
%-Ze5RmK6hGJo/GM*+?i<@46[;OXT<N"6k]%/0oYbcOO,3ESrU`+Os8njZuf?0aM&oI6c.M!3h0-#U:f16'':!Y=cp#q5:1C6korH
%H\1".:(dJa8RBTU;&<)SG$LMm<TO(&@F86iSOZSOJYL]'UfCo5':k4@D0a&J=fFq\;%CGV@BjBtlp+kq\suJ-P!KIQ0:Z\<=S?C[
%%(L:_XUoD-;OAraXjAUN7+\e4*)`b,2?XMPEWVQHi.Jt%7hXf3V7l.>=NUr^\%7%iMA'b1o*.*;Zn't]ZVTj*q258^Ji(Xa&.j[Z
%-AGnT)hQ&A5-U3.4"uRD/CQmr,m\@,Lu-H]C<,$,;8p54Z]2m]ice^L#X)k@1<ZXkl9/Kb`n+Qd-73fA4C#!Id]!/rU,`4V>N>Ke
%RQcS()oiA.cN%bdntnKA59^`ME=KNWkB..in<_dUK02E_)e7uk?I7]A=Y#R9J/BI-b$iis7=n+YM66)':JY7>4MumnB\5rqVI*tq
%4]EOJ<IV(h$BU*,Jcr48O_5&"AKltM[][07\<WVDBG@FlB)+?:-<3C[#R#-TOQ0]-A+(Qt;>CscQj>c!Vp2$r/&Ptk$E:S_LEl^j
%SEp;(=HIKWZA%*/%\!r*^(j1XP0i<J[^Xu3rW7t`0L\t,6,VYC!YBWGQ!h]2U#G-@@tpV_3XMf,JuBeA:j#2_/7DF9\OsdTH':Z*
%@CAl0WhPGg2AT^PNKH`I/jK^c.eu"<iP73X@N<gK#fjC]ZQhduo?Y!//P91Q<G*T,HpsXP1BX<n'h',3hHX#-]cok*&kjl^6c#4d
%iPT,YnqQX>(9Wna)EsAUX1<Z\pD(u0'qXbiH:8n,(hHZP7&YLe>7T/&&/MI_&4ToNEDtcq+ZiKh.(K9(F8\!)m(,_=Jd@&Tnu"cd
%0GZ-=SM-3>d&^+B%,kNf'Z-T'#J!d;0H17V*T:QD_E+ra;Uj-HTQ8am,PdJTqFmjFS4MI/3/%f:P8@>@:9,,g%(quDVBN)\7VQRP
%*3*P]mH$GTf!9DX<XjugFUj$HH,1P$-r>/o:eaV&N\0X\R5]b?6+mE2&C.uNRff#57u7I-aR=frYS@<ikUfcuDHSDqZJH8J-i>P@
%W5>h-4;*Eg@mKOKaD:;c@.Q&d\ZQYG*MW%(T8rc9W0pA_0dD8#dSPR]/^qMl>YjJU0qe/p\n@)?`h<<2J_WMNQ]pO0R$8dk1.=UV
%o_L*&%H0&ke7#'LG1C7T;2;>J'#)Bj,Fk&F6-ji+\NVE5'YpdjQ(plr/tnarXF1ouU@sUW27.#bYbUYr>$EEA\NotXM8F!c75[pR
%XRmdB/kqT1n1%3Nb4JgPR6>YE3><X@g2-hc'h*5(dX^2A`%]hepBe5.k^#OKIp",XAR@&IY!>bqrfKGg;ac?R%X3KQheWp$VPD^Y
%UIMulQf1dg%_jTs3ad+IWU2rh=Xsc!PTm$Y]e,DU5s:PbD7I'FN.H65g/I3G\DJ_0k*.Rd2b&hCI33?Rdt3$J2C5>*jmX9?d%C_l
%+Iqj9-?ih=N(_nc46`S>T!fatWNtn'\]fPS.-gU_$WhA"5Nhn$Fe]!j92^i(^M%Mn7r_X.ARr2.g/]NrP8-%X99.eNJYC%__17(Z
%82dbA?@a5tOgBB=Jq-"YX32WA;D(6HV6*#peZD(JW(ar+6(l/.#!kN':EToG9eSaC0RFp4'Eg]o>Z?<,+KW#uS5r*F=D=J&+Ac3s
%>r*25Wj'iH&9q,=&"Ml7d&(N-+Q,m=[f_5\Ba4cl6N%c)JRQkI#ch=nh@'QrjbnkFYj+YE6*,q[%0_<j;l?4NVa)-D-j\\AYff.g
%W?uGKLM.iB&>_*WA_m`GGq?M?AfcK0&5DB4",hKE4H4V6CmZShrNI6b,86H3#PYi@*`VXSbQI0W`B9,/-#AqRF_B3.*8KR7jAlKZ
%+<;0J5(k4!OGBfDRp\Lu`2A`*TQ\T^N!'5Q+4hqL9e[]/l^_2+4i;g6&s7/".>GbYL+lL6J./PY$lu=a^b2\O;PZqH*)Gch'rUS5
%7B3k/&#mF2QD#O'4GOMR8#eu6_6?5*+C+uJ9<frP;Bga%=;<IfnLO?(Ypq0k$C8:[X@hEhJEp=&0-+j,g;,7)#9ft-JQ3Pf1;GAW
%OasNa<D\jc9)'Nf_>)bF\d;o-P=@ICfKNTR`AZtWY7gZa`&@Y2QI4ZX^H2;_?duI<.:mU;LET7*Z.L?nIL?mYhR!i'bfJ27M_2KH
%)E"<+9'_3AgGQhFp`_"5(/"`]dJ1Uc0[4*1=lFGWd!PqcoYSU$A36dhJ4r3Ca38S,#hdm?>07R'DHN*gEeW<[[%X=$TqO):Xq8QN
%aqaZ'P.$T*i*2Ns=4j\aLTWMr8sI4^4?_d54!M0Hg1TY:(,e[q/`THDPf8Jj>bU%-1TjaD"FJ-'*ni+($L8'sh,VH0aWDoIbIGEC
%;qQ\#`P7UV/HRTh=k@+opc[rsjBemg/$,Z6Hd\2X]9Fl2>1-a*Q$-Z.FCi]Z-XC.!KPpQ9@&LqL0aB8Vq;U%5@I]-dC08IIH6f[N
%SV6P^L2h6V=P#^!^IDOjmBe?g/sHnR)M:!SDFOm5PZSn'cs&2!8#?C=BCK5H4dR:a?BL/JUIA[EJ5l\Ei0h3s8Ho^TnpFnd1JAPP
%ar64WN<[CXLJJPm_sA&gk&8'18.!/RZUStn;A)(mb=-ck6K24E!V+PD<lG(4M33s@%DsR-?_CN'd=uEbr9^#OZAtQoEC(QpVn<5m
%pI<-IVaVHQYk9_CRGA4$+(4+[[5T;Z#jl#jo[blChAQh^Dk.`LhX7b&hqN+Od=uG-D!*W.foMj]UqU>p.qlK$)/PnnnZd7>4^t=l
%`AR?1!RbPdTf`TL;V$W:SjDn[9nDoiKu3-B/i3(T7\XaJnCk]j1-\'mO:>Z**^k(EcQ.9A1Q_.)MS+]m+k(`H]gi&A5SA_+e*@1&
%&-fg<J9jL"CPL\eBl%`/HLF\nSTBSCo7stc614mgetp:S3AjWSLYcN-N3^0JhE*8tNbdiAHGPrC)t`")UCSAjcWS0<f#W3fIO=8@
%`QpoIqG96D*pEcSamCDF*pUDGZpEQdCn&5=i[Ujd]LS5`:2(0pB#n5V*I?VE'8>;,`PhF/1\<l8ZPa#?*`rV13Q%$V,\;Z=L>.QY
%U(GMPpF+M`V%2uX/Ml#M:>l"&@B;t,PmmPV\0a41cp-M63K%Jls%lVNI-g?L<f&,GpcXAYG1$&Wa0G^R-E_,T*@ls@,]$J5$GoJs
%FTiKW1*Uff>J\<D>pK#&*@FCApMC?Q`"llD_16Ym81BkSiV1uW[QQXe@Ls--P8Omk4>U&DO$#37G>3AF"]"+^(`W]@/Zl88>YEt:
%i#iI5$7c`/[*@c;bXc[e3AkfR\6K8=jBdY)$WTb2d:_6a*YKG!NT/MKE,@E'2@:ju16/Y*`DUMiN<)PRZq\>T,iUr!p!uP`^L!V>
%H_Wj8XUg&-gPo56E#Xcog'"40c#e\.7gm!#(&#6u.Vp%]X:VB9lc.UGDM.ka(+44?N<2%^]o2l9`a`4_7t,5$#3qNOXDm&T'Pk(L
%=r5rhqujS=M9$fD1l<85-n\,L0sc+q>jS,%jE-U3CWn`c^K$L3B-E@S7g@'Hhrr#%q(;d=*DdpqEX.!0r[Fdb'>/NW+>1/]gm`jf
%20Q>co&SJJX>bbBK_Yl&47LX(V*hrLJgVFS:iAfW8>5\\lHOLNDel.-OF'EXiDSXc,Q_U<Dh&:i&MISL#VdrP8jZ$n_o+tM`,s93
%j5oEE<e;%FDBRel(:'UfSseU9Ht5i$,/\c7d"cR[A-tiYVB]"V7l)0RK$R[g]4'/EAn/i(7prHcfV.,Og]c3Z.C'ogEN]:84"IW=
%G2(G=_,jq]K6>qs>b\fHRO_4Dc#XAPEi%J('ZGiV:..%g3(SJ;F'FjfYQH(;.<V.=YjHIs_8()<`";NRjFHCV_Hp"$C2G^/[WPsh
%D8"$ua)(p`7NJCLZ(B'5+Ij;KA"[d6a8euCUtd-K&<:(iapd7+f.OY?L2\BL(ZBZiKH'/?,T$s,bscGh%**m;,=i1-7j6Zt6'R6b
%L2[CIV_;lriMOVVQ>@+MW;6^c[6hCV#sirHL2_K'"/L)K2]$KdYsZ#%1h&l9>Wd]a@58`_J/c'JPEDO=DFE['W@ItX7oD"i%cE?I
%Sd!a9gF-Z"DJTL6#$_J?bg>*@mdMS4]aZ3d/ad7;DaS@$?E9/8@P-Xr)gE;s%$:-4n2>$G@LaEkNRFFGV6L-8c1U'VFRZ`f&$<Y%
%E3$KGZ_j[$.L:2GGe:_^_;!>>>UZf6D>7JpKaut:2<IY8f^7$rN%=*MZl4tr<9X%!5s?GTb>n87I@d.e5)CYccu!r&S+"^@eA*8r
%Z@Zs!-a'U;[o(?'UeIDSgF*.30!1i%0J'l$#;UDU_`M\F6ar2lY%`OEL'q.[Gb21pbUtMllo'&#l5I;%OEF)7]$4U_.>[0X*O*fJ
%o+#j]7Q`0O=3tdplsLcT$4%H2c/#)JZkO+KgR$9(n0PSZ"l0YkN%os&#HjM/*P)[dPf2APfq@)MKY`=E+h&'4ia[8@*Wq3#5rB#_
%2BcSp#Ei:(WAsU%@0tA<Z?/k:.r[RC+o2PSc(80U*OUm&1m6"9g.'aF%\d3Z[\:s0S0GlXHB*nPh]^aq^f89bGJlBX)&]K*mHgVm
%>G0V,Tc(#(P%7DV&em:ff"p'rdd``*1KKtt@WeG:D0d'rFeq@jm96,G?%jII!=O#Rdj>)3@1!oF)ma#f;*ip8oi(NE7N9DT-U%f;
%$77#f6L58#<7A]c=<Y$b'R7hBTFJgBa/B]ESO#bdissDtK&FUjF>ab!flq6j30s_91GkT2BOQ:E,."W,%iI,ao0EJ-%Eq<;#R\<T
%Q^n]Bp<@!u^d"XKG#6kKBB.U:m)2oTZ"('QWqPOZ-?]J/KRq4a)NgTKg#TRGAB-$I"iFjA%CM^s&N@e<V7&j'-Tr$Z^t9JgVns1-
%%29:MV(4)TW_F;(1kT7-45r\jfUurmd0.DMM8dnofIY+1d-KI3'5q-nYTZeNIjk^D:/u&3K<QTka^k^/SP"Yf$j8Hqc_,"^J;k/N
%RQLM;DO.Q)/,1u\;n/`[^?.B)CkQF50uYI:XOq:os$`R\"+"gD#+:LM4D:]]W^DnZeI$L0UDSHe2+#)$(1NielP1&D2_&.f3\`n-
%h.[&)[c(=uT7_<mS^VN[,"*#&A;4>nUEQf!nHWD*OIDA*0lQR4!4%_e3a0)8*PaAJ>C3N!8o"PdCA,<UDV<7>?49AApKGD8D+)t-
%VkIMamBjldOcTa'Xe=5K8RG'$Z!'Cm=-e4M-Yp4A=3lE^N`XAdUGJQcA:&:rXbkXGQn']R1FcC/nf;AfBd#Y+);.[<$+!p2XD'YJ
%/K/Ke8g'Am.a33#Vk5/]&g_D)6<SAcMrDC%ZM"]c8KD@Oa3'7H0N.lM4TQCo-u53AEH*"1*E^"`29MB+PkdQQZ;+7>J;1=h-uT;f
%CPGr4,pV)i*Fb!f;G=JcX?fu^NbaG.TM`+^Nj)!q;ZM7:+\9u&B*M')l@;J:&nZm%p8Cesn?)J%OPDk8282+(&tfoLC,h!m68rj@
%'$;k>E-5Qpb&qY\;J0rQ%9so]6Luo3;kbAJEfrNfkP6?[Bi=0IC3lN@F:#((o)_4a6<;!d%5\Y#<eINaHp_o(J?33#/n*9a5*=Q$
%TrKp.i_ll(Fk?*miS>?LRObe(hn`9%Q_4smOD8G:'T4K93eFd#Zo!e97K>l)^'^f.5aVG]),D9A!&b9]%G_kbmqD!gs#4_hIunK]
%a*Q'6C07Tce<WA!@6UFlg7Zr`U!@)+UdcX<G/8^Yn;44B;,M):"Wf\AW9MRGa4=,;H'-o=&@GIULGaf)Fe"P1$DE2U"=qADeE.mt
%)!^/bRV38t"Hml@,H+HI$,^>.TIpKN$-&52eF;-&75Xpa637?]Qd"r5E+<l.4:TJd;d>cA`6$8?<6W_Rb#uJeaD'.A!R5Grl%G3Y
%f@IHGN"j*MK2"]F^e-<5F99V!`?!Gb5_1r62/!p)(d=^'VI<)B"e]8Y:`2^'gOY_]5)"",$CHj(E-^(*dc_D=fa9>@^gCuaUSYd0
%r*$qb>kjEO)Cl9'fL^?)ZY_5p`\XPMbd'[;_$3du+E=j.Ng'`'NmE/NTQFA512)B*:/T<=2je\ROcb7X*Fm4D8A'UI_s>UiX^TYo
%M^NEsBh24]C^_Y]2!oOEP"nSD2d1d.&OLL>ZfJ^1["or;&F$-<pe-E"C'Zh!]r<06-kr%`#hbuDC']HV?>jQa@7TpWGV_NEBS,+1
%d>4_Rif5deP[4TL7;_SB%`#^Cf(`nmGB!)&ihP2?Qae$qCf"#&T)8p:m>>$:#*4M&K\$Ehjt^>`0FiIe'Uscp)'=k'\LM701Hl_t
%%j88:_kW@d5Qo'ad0O.TRQEVMhHF14)BK>#QF!G+*=Y@H'nD%!k5)A!fB?noBSBpZB[fa1mSD6X=>4,TAp![3I-^p4a>@gpin$/\
%@ZG+:=(+gKC\Ykhd]o=(:t7*UGVnY#QdQcnN@5b,;6T40_U"AJA@F[A<I3N$k_&uP78>X$)Dr&HD]:g-O'PAW_kS53+dY&K)MJJ;
%7^h?h!pY)8LIXH*n-0oX2bb;5>reJ*dF$%5,8@CL8#$p?F_nDe&c1.bd>2"IL2+^t#L2$B=9tgW,2LtXdCep^%kCU)Wjfi7,8#]o
%EPk7eOg]$G)\"$J9Xl*Z2"hk"[M>;M!E@[ebb!Fn(ml0Uf07fY"j@B'?kb8/J=/u8-?p^=Aql&V74U&J6W2;kK:*DM1o5hmTsVKI
%'b'.8!]_j!24/YNOACC*DS7\ZWpk.s*Qef4%e4:1At[TI*4H;$1Zj?Ug'Yn0lN;\T__D7j#HajWAsfj-%k^`'=cWr[6-OV:ZXOZe
%S8iMBpDq*ZZOF7pQO%3Ar,>-d$t)OmPE504r%a%d9'btXE01NJ#JHXr31qeo1-g`l672jg_mNsk6*\U)%n"+M/jgITd@gZSbhqDJ
%pFtqhH[4:em'>.)r$OarE?#p:j"'=K9Mi0h'tT>(QC+<I\JuG"S2t[N#QelI>_Yb*JJiDEEj<Qe"tjD"fQ%bc1?pUpX\dq2.KE[e
%CZ$tT,R/,$AQ1?pZ&P<E`e?*Y=p(,#1]=+Z"&LNc=28CfVp6/tRGD=4(Q/B]39:C2ljC5g3!e\/DOCmQ>j8b0!0E]NhD_rU<o\H-
%>].@$QdgT0<K#N=\6M$KRb#8cfMX\RdX]Jf1hnQ4CYBN4"'ihij4K;JE1+4i`JO\_3Ft@(b;;&]6dcH`):F!Hg).V:!2\=B<8]MR
%C&m<V".):ma?<lSQV!pU/NEp"K-FV1\4fBIK"/AmQdK"hIL!BA*-u@8gbN]3dS\1/?hNE+7kK'O5UNR0b6[#bE<i=r$JFl%oGp],
%JkL+b>3>]P^BQ87_%/)UTp?8mMLmNpe?\9+7s$hkAV?\ge=d<#Ec9HD+P1)D_+6lt<ANa(W+>s3W`312cuR_/#,WVKpksmh,?j"]
%>acgTXL"G<YrYg;e]`E<$D3X3cVspQnIi'rouh:kf3,43$`B*V!ahL`F_"=EDh[/fr7t[@TNu_[dMfJ#+"%<uQpJ?8F$$pbG,5Tu
%msoRaV^RM#@s4'-JT$WU"=m_t*O,tsV$Y@c!-Sr*85&/k?$JF7`M3dl[;bC<XUAdTaHj1-Jb-ufXB=;s`S"r7eO:49L;15<(c`]d
%eOL$+KR;I2>6B#qLcD!bFL.PRC+rp1.Ic[V;7a2(.qGM/OT@7TM%#_b9=0:^g(G8Qe!A'?RC5L69VsD(5r*;6%$>6sZiXdl&fDb>
%QH8Q_[R;W*VCbY8A(hh=(t7("&rUH9aV>N=,*Ii%["tLY0mc=Z!f(J%aYaLU6BW@CBhW%c9T)JKJhXTI@>2ONI"Z-C(ecP'j\os%
%NYUP@J?B!-M0`q3)@"'sqQeGK+AA^d=Lp9m'BRF=N1_"]5\`sX&58=#4(!.RQl*s)nf!)dGUl[[MSKA/DBT&/&X\BM_jasU0G-BK
%6L>%P"Mr&IA9EP66;-taJ-k*M6XBpl(gATtag)D-+]W;B>Y_MIoa(WBh.e2@I6GK/,<bgb(du1LJ-d8_m-545aT[dOXl5U_*r3*&
%aUC!]SR`L4&Td3:2[6mj2>@ek]tiTG!FMQD'>%]292!7Ji(M83)#2N70a>A!9[!ikBpfeA?Wner^mC@D=b/4X'4]ZfbJY7idP<O-
%jJ?Es%!cQD(dhV5,%cPAZp]iR0.dcG\4]K5XC.B\Lb[PY-"7:+Bo/2lm*ZM$MRp0*N.EU.11nO2=u&Q%Q^3OabbaE1<hN+/`>Iac
%E\Rd/Zs:f^E>_T3(fLZEU?<e/;oq?;WH"0i?32aijLV`Vi"G0)Vm@(UM*NJ`Jd/]CI%Fd%6!L)WL2iS:g+kHFa*4a61ffq+Uj.q.
%P-o04C:WG)H@>fe^6\Wph)G2,eB`U1G?\-on+OX0hu0DGoufS4HhZOeX)COZrotAH6I3AJ%Y+ENB4(SPs4?.6^&Q@-o"ER\P&En_
%,2Ik>X7DD+p<,_E08C:%p?11RW.Vlm#<d48gGjM(LXH#(?TOc_?20r]X;)2t]\e;s9(</^aZ)!_Ac+1NTa)i0aO5T#4S92s9P!BV
%NVo>R#pB:J]HSLpN=-SkNt"RS%Yo.R8]&87WbRL]-"beKFG?hSDBRu=&\<_?CAYu"j5o4i'phu<=2]:6(]TaRL9lJ1>N]EoI&-jQ
%R+$ReX/rWhE=^O;-k[ZU[I2Vf2a4CbTNgu-4(+l!CYI!-0E0^L.E9?U]'71`jcuGRfnQcc%NFoV`mN;WUF2Yt*:sK4HfC;JeN_1c
%gjGdg/Q7$"8!'9.nu&4H5Jq`%aqU[),Z+:2QJVUgduO$P+d8O:qRP0@p%-Y;#2arICn0epTXkhuI`_:"[s1<-j>(6LUbO&/\/mKL
%(FpG9g)adfk]?9?0o=+"N=3mjp[0XqN.pi$#gpg_&<m=O&ZkQ9YctIUn3Wlc(s'Z[n."o1SRp3_ldE)!%c>`k'U#huQ;K;i4Y8gi
%X@o^,pKf2+UXHLSS8ti5*<TuGg@2M1fupcl<t,0b"P@gIaQS]qf^=_[?AI!$Sm-QXT`qJS_AA1-WiHR":`F+C[-(!2Re;X5@*8bq
%K/CI2csZoIUl@>=:W?5M3mo(2)q1@<<A3JgSb>m]LZYTp&sM#N4"XNt0iV:`2"magq^Z?T6P)WIMi_B9+a@3b2S#Ga44g`X4/<qO
%K$^8tl]Ne]@a$_j`eA*HH;5QkV])oEXsK/f*)!8jbsjV;%H/htK8O+L1hQPMH.i(pMiNCl72m1?a*M-\ZAt:)6lUc<$Y^mR@'L2>
%.T6QQ5r,:oV<Z$)O<Jg8Jkd4'W)agXl,sI<a*Ph*16]`1G_<M&-q%pROhX_Q?!naD%lA(^_PL;f+HS/b@mW6jU,8$])f3M[g\;<b
%^<j:Aknccf`c>lgp5[81eq&LK>E=IqRNgLOkM[-eW')Dq1thukQQZGfoA&'q`#KXdCf*8;s3t(%#&@b*MY$n`ZM0m@GLW4(BI(b8
%><HU.>rJuRf1*PDAIR7jQ+uJ1k/Vq+goUkho/q\T]TZHamV(gJ7UXd?@mLS<NUR7<E=irtNChnWST2*/p.6IA10stPV6Ssk8m1p5
%I,ssiO^nl7mX`1nE\Z!SBZs@%,)n3TD.M*]mY+Bd*r+e@Ds]io9aFF/4368h=2B)<pC>i8(02p%TNkJ5FO:uqO%+MF[bZh->^Imq
%4et1CeM(Zq`l`h1+8V6`L5[bdl90gIeI`Gmd[3r^[^o,[`YLYN5Ss)7)A6X4aam?E?tttVR#Re/;p65,d2o<dA!pWQIB/P3AQ^IA
%\JYM=f,F9&\@P?d"q!Y1SHBS'O.>l?:o>KF%/3@HFSPPNSQlu4keM'`@KS3<<lcP*i.<is_*54A4TC_,]7$o1[D>'W'\U7)D&S]3
%&@a(@\97&fqI&WSBRp-=Y2sJbl64L'!,RdY[M-%_D'W8$$lJh%ns:1Rj2%NYF*_lZUn&@gBKX+?VK^CQ?t-ou?8?&Z^$d:D.,#M1
%d0Y0W<ubV0i0jtC+@?,qg2GOS$!a`#9LNV+RcPDj5T8>>QN9H$8Rl";rRO'O^0;/17*i!+Z]/F3TJU!D#+_sKR.JmK)5^-;+9L0N
%Rg#Kd!A`!KA?T-6>[c->=]/a\UZ<V0a;Ca1Q6g^BTaRA9#q3tQ31_`Lqp`\?AZ$?N5Gu[LFs;8%B!i5IS)?ZR,Bg0oNdks69OQ;?
%KOmM+".L$X=F#^lF</;t^@\!7e1O-$`C(4BSJV_gp-KZh8ugHPCJK5t@Ps1N8RmUc5&<,K@pQ*K2j?5n*]RXkoVOIF!Pf-(D.%0X
%X&L-e"Dj&V/m?2l%$iN-*YrP`[IhK*7Lr,[/.meCi^d;h=!m6-)AsGR(/l-X\)$4.]\[^5>h\OA&a_,4G\`5F<\qDNa[og*f2?Gs
%Gl@t&EauuAd9-'GAYh,(nu6Y1K(^>\K><;LND&mTc8MV5*-n"KkTRsCKP%Z45jlII^T<W483lAMfGE'JE3cmR!db='aN#sT\7f6N
%0mL;F,."rf>!-Zbo.-f&o8M7QRGhE"AV,rC"JlA&/p,Q0Cf'B8iWWf,C-/0;)-6gJgH-h:3l#/eH>S3T/\T#jP=B\OGS2<]*k9.1
%A\J4%mB&,%0I:Go09FQ"?#1[pBZ\ngeZ(M3A!Wq!+QLP622:P,Eg/e(%r@l3d8(sV%"bL=__TBF)Ejd"$kT<eK#So9_\%dFMfjam
%]]-%jnT3FPboSGJm*Dds"qr>bjeS$6V_U.MUT][1HJmLIm5^WaaV/Ak-W5OJB':6dc0-ScT+c@debgLe1cC$:Cj?pc]%ZA-VXonK
%%&EXP8`0u3ZLskK4R2Z>1(J&=RY7^g9.YmL*g/*B&@6sM0]EJXMF)$RZQ8=!M42P&"JIT'M_K3"^?.lqeXNegW+gP6gOo#hD'I7.
%3]F6q1bP>U-M%u>8?d3uP-u&k;*%SS";Th=A9AB]N"2T7`?o;k>C0\f7*F8!-UeI>Gr*ko^q%t+pT37/cbdKP0Y$IaCm$]BfOs",
%:UGadA0MS&BZql0kd7ohD&dB5,c*Y7o;ODJ=>FPX?It"]>d[\p:fCrOd!I2'LN3nT%>oOYK&08$Vb/90OIk/,.Z[:HEB[A@QYu_D
%/d+_tBT`hXd6f^LP8K%mNP9HWHPOsGRZU>o?/22<>AT:9/SS`PoT8FfaG.#N1>dFlEfPnD5S_`YN@rr1!t(]\_60l$=1njYo-tQ%
%]3']S./#t/M]1%gB6"D4,!@()+05]'JcUj,`^2"FeFM!k/S0#h6G,h"`!g+VX]b#'+OXAl$()Do)a,l-D[;rtf$5T#Wm#!oJAQu4
%jQjI'5:HAF(26#G^37_U0LT,&d:L,1F=W/!=D:IZ`*>ZO6$kj00BULj:t$`=dr>dag=5Y"X&HC753JB(?<k(LPLSD^r7)*CAkO'`
%E'?T)Vg,gX2YiMVM1#YAd;j2L)M78pi,&a)>:iLCmQ;E"#2l?H4_V'd3C)@_+JiQaP,WZKP$!O9bJOHRSCq=7Luq.6fs7"-c/OS$
%]%RSiju^1qq+^'H.'/$?(i0HreNa2DR;GqHe?fGp;46-Tpl^[#efMGo9);,6JSGf*[:RSjUbm@ed5a.3Nnm'Zat>q22;=iBIFLaI
%"X_sP*Y@Q((:`Zj'nChOL(Aj3l*<+F09Wi^VbRrV45O6?]XN*rk-26ML1Wd&ioqk"_UkIEjLRF)dgs$hC)R2laKA2d=msnYRH1?s
%d0#Sab4&lH$XK#tFmO>]SNA4HPNDS\Q*m+Rql>IEPK)/gEZ(GVas*Cq-?9^q*fV=d]r.?,ONofN#l?W.kg!a>pDpKIA?=E?#F12-
%9eQd9i=7[$C:DH^c;cG"7\dN>E^P?m_'?(][7IZ.jg?LI%*Y1PT0e"*VJd55\&]p$XG/js_a3&"dZ$XS7(n6.eP"0;L60$5B$I<a
%$>-6B8F8QR,S2405O*N4mku<sT@#jPnecE7:;XB(,6kt`g$d!.BPZ"!TqQ,n:`;4\aMqTS,ckA++mg0L89Ke@O>okdaG2N!Z$.En
%N^W.(hP6=77k&)fCuSL<fWs/RN.<b*[lLcH";of=!pUeAU(?W&i6jS93qKIOZ_.PM7aX+$`P6l,q'"oF(N\Af)n@k/Y4UT='o)er
%LoM=*)VYl-`baj1UU`$mF8+"i@Ud>X3'0b@+C>C/,E;U)NEa"$mG4.D2?kN6Z0I!RBsR3AJ<NC!p>AC"%#Y.Gr1-ohdXhUW;3+gR
%">e#3#H3!UI@'G.k!OKS4)GR,o%BcIZ0Mh$*acLM'Cgq!Cf2`r`XUI:IAdh"EE-9!GgrdPH/R,\%-K!^".&9:Wm\X4,3O"3B)&CR
%I.*>O"Xm7seoME``tbLY)kB$Q3D%2o1la[<0((d.p1sL!Yeb2)=BZ7)$jhqDC[]/_\*)=+d0L-_D:eVi2'c^YBPY'HaqIoRNK]BB
%i9eWInC9-l\]WgOf4F?4XOkgi4]XtaK9VjJXLa`/EE[I4/=2@"rp.bn>u*2Li3=4:XAPToH]4hF3a_AZ!bUnU?p.^6AD=F.m3j(h
%b<OTRX0/?#:b85c#R_uMp4.3gSJ%3*IT\36#]/`L<*>N4`]0f"3^C;<72VK"^d)=X2]/Yg'WWWB9$^YY7cA8XZ^r=&:V?uBq)Uf"
%94MqgUm+=d$_L"'%bh7@i1T2e\Q1:jI$%cn7dletU;hfVkJo-"%qa][!NKfD)CfcJbb6jKP#%oO(`f!'5-:ZjX<E=kNXeYuFV8RE
%/\q,-\l*D(S+Y];%%Bi`*nSr(>OQ!0B#O).>J'#i-cX,aHOMC'UOWA,9/oW0Jte&LBnp9NHOdTa$!#WOB?NSTJfC?.QKVb=g$+(6
%dr9r-DF%3iI-&csjZ&6YWEc=ZU+L@W?.>i4>55.6NT&ghBFeP"]GBd&7;JgO:4>1mX]qVc9XACqHC9^eJe\g,&N]!VqFo^hm[B?[
%:qER+e,ph70TK*#XFs/3KOOEc`<3(^ml_LZ>-a%#+5.UEqQ;TVID2Oi2q-i;#sAOU<]^m=B#O(KZPVi8lDEN4UN\W#gf4Q9WAOeD
%HH$*$eh18c6HI-m@i;o)=JD=^VYa]ei`qd%?GrYY\#\%e6^WZQG)HYD0+!2p34$9o<!>d<B3VSP,feNUoh`f*YppGU4#:;)D6AlK
%>]i"'ero*M&@igWgiI8?O`dhb"4_L9/<.\WfKNc,2333g(rZ*q3IE9WP'POk-(:RMS7NBUPrs32YBpQ$l'XookbCu[DdpJ,CR-;<
%RTQ/!D@s93gC7*&BD$Pq@a!#$WOaf"YpigNdZV#02C;)D=>#?(G])n\lFWXB_)DF1DT5h<!,_[P,<Jm"X9H5.`m2pJD/Hjdb#UF9
%P.qs<pu^VU*1epbefrdji@&3-/E`#86>2n!'VT>CXkerR[g)#3lD&N<Wt[9*F>Y?a>4`2F<n:.t;X^OKIE7m%kFUlkJmQX,dREIh
%9>S'3%$QG"M\IIHE_E_^A2eU?Zpos:\2dcFT">XJ_`YKgi)i0nD\q!e@4D'7KO)?.a*"]VX>0k7Mcaij3B(bU#2R\6lG7,&>gd]o
%TBpD%aBUQDgV_1Xf"Hi)J<hoX\#n?N6FMHA/hUa^#B\e#a5WehG4XJ]9%fq-W+u,<_lV/"!1\&-$]LiW]#U=-Vq8I_YZlNM/0@`L
%2Wi$35&'*!o>u<%`PV7B@o)kX^0YX>[Cie%$($R40Msq>8M./DPIDU51HWfQ!fGQgN=D-olI'0<A+/\<)+H1MUsYo]/,H4i:@H+=
%PfB4e9Sd`MYLq'2-+e%(n5icHc@mghBO,p*g^-SV)S$hSp3m-Q\-JcMX-KZ'*,V1)l0BMnRbE1Rh?*jre64=[i&lV7>1$G4m9j[:
%jI:./Ngnr//p8#f[`CW"eM@QfW'.X>J86Gj(#Q32U!p*79N?#1p-;dLJ\M7V<NNNt@)l1u<d29XM52%BQdJ0B]n\'MWV42&2fa'9
%6J0X2@[nd=AP;B0Gah*WVWFmSVQ,h1RlPMIQ&iC3$(?04[R0/F&4bPeDq:pq(,NdER&aA1Q6*6DkPGruTJuMV^>0*Go!u/lH8F*H
%NZ*5pR-HABWfmO^ACX.4C'AEuXme%Nhe$Xo7o2oY1+mm3baUV,fE;UUj(qK-/D=t,N`2q+gjCp>@'Z>A=*c\o1gforoNU^6bhdu+
%Na+6QXo)aEAm6-cpkad'WgXh+G;go!a=$UBJJndAR#<P6)R2?1]:kqZg*la-Q%H"q9\d))F]5mr=&q7p!+.n=b^^3B4i;(tZZ%d5
%mpToGG>B,dWX?%4;35X78$6>ocX:nDdW6GZpEd/)PSre#XA*KmAf9^l/;[Al2?m4,SMRIIL9Ao=2:?,G#371Aj0)kU"W,!5Je,B$
%&5b_)bgPnq]6G%&=euREO-s6V5bU@!]]!0r",r$o3qM"K%B4_oU:H\eb_n)cR([Bkkf4#A]h.*VdRh/V9,.#oo$X>\fq4GI.<U_P
%AYlPu<cM2gq/*lPdi.VB,fDIJ=N:t)-5T2I%6[Z88^!=V@P'GV/oXO*_McbtapiY-WK(q`&le.JD\DbX$Gs,G+(IhW,[6H,=ETXC
%>584<SL'@bm:KSI''$-9<2ColM05TA(0>[fE2/9mhp8m0:6MV#L[-\[.VkGEMaeb\,)0dli&0+aX5Ibo<`m=L7on=u"i4uFP30TF
%7?q=;@A2(9M&,I:K$rLCCVB:Biu.&()eYUhO"39o\RF:Fg%L*W;AI\.43T?=3E/ZG)L.5c<Ku*=dQEIj+YGCdWmV,o"kQ6HS2FO1
%AnB]+fXA,/jbA*4*k+Xd8%:F?i$e<.,1gS<S-HeD0JlHMI*Sa[PNGIU"JJ,D\.i9g2*7rEo?op/%/shuI;\GIPg0MRf:%ne%HV'l
%;&`7J1^e\oP\:R3Z/`pUF))k^amkeHh@$Os'@kUV(rbji8/lF;$U'm+34s"a\PXm0e94ZeJQRX$$KVb\9?Od^ZSUr?)=T`[ljZ$c
%Ku_HPZ?WMuD@hRD=4>sSK*l\&B.rT4S.I+dX;"U+Z#uJjgf3/E<F0,?P,[FJpLYX@#)Mi`@]f<T;Ui0/ID2_WE342i1/%t"AVWRG
%LCU?C4GqQY.QRVI[+iP,"jf4CGXFO:e?=okguthS5.D@hZ.dW$@)^.9/Eu/3"&*@3*'SS_p3[b[R't`9X<%N%JZd)+MNag8aVioh
%$+a-+*5Si\)H:$V*EH'?"2opM1s/dabMR8UJ.u<OD9O"&iOgnYVYg-\2i1-K%-D2[]#s!+19N=lB/3^<&%hSOV:f@6T3JpoZ=S-`
%F@BSs[?GkfZ;/h-)-Fk"23uM*?T(`t]$WG]]k+L1Z2fN"JX\AK[%CeqlgSNZW*eBBC,UuK5uPZ9m8hQ?)SqgR?,^_aW`4UA@qrHh
%>asEk8,h68dIW^a\[^K`'kpkgJP#-?HVP!0CGMUIi8$U>Y-2g-e2(!$#+Fj9GHY.VZj`Z&4;cHYIai%h>_e3rmjHM0N=HNU=?<h?
%pGdsUNg;."?$sak)[#G+Z1CH_8?/'nrQ;nsjmcp0)[=Or,J7'?%aF9.&3H,.7pF.X\F]ZZ<n;ldj'pY(/e7YSig7d*k60Pt:i*A-
%`MgZt0>?Xn>4FEn`%Kg*7L9mJbS!j[G%idh?BoTXV3-f`eo&s$0Mqp`WIjO:;DLWpAR!@/dteW\a-CL6H`Fo?CV^Fj^5LOa/1A2;
%/?R[&p1^L(Oms`1Kps>Bd'<'%I-,@Ie5:2?V!"H%UKqW<+%=Vh`aC<j=l^b-9'LW>kE,L7[[`j-rfV?`K7M0$6oKHJQ3ed)K-LgO
%>_%[LCjC=/,hJV8j`B.]0&%ZC\`glaE`R+t%;H]RER\jPKfWR"W]tK&Rt?U",ZUI@4+H^cc8o*n7LiFF2Qm0F2]KZ!"%/W7RXeC5
%#5XKu9a2gg9ATokmpXU5Op,Ks'dG[/89(`,,0A!+]Ppd+-_p(n#W.mJ>A*bVS0I06#`D17EJfaM61M?nj7@/fH:!>I/\,Jl"f!m\
%*TGF"nL8EgS*GgZZ,+-'D]D2=Rgtb:WN=:GU_]hjK,E%Kh;ZTWO1dJh9-[R]LS*2]]&l)9>nb36(RIN$0d\4c2>^ho:l,I2,r7P7
%rh'.gH`O<hXZaFe,B0$<ADj>b\s@\MWi5t&VdSiW^IZuKLKY2_OWecK7ki+^W6dF8kBr+:>G5(Ai8Uh'<[%/[>Tssj9c1HqYH)4c
%Y/As+\AqV8Th\Y(qdtP3HBR`6'8=dQN!rEbXCC6%`!lS)RY[&!0`p'0/=<"GRD,M/GY!Mr"LLK].*TW#`rpNQ=[jbZ)ZY+6Zsn%=
%%;omXHpn%@G8Gd<(^_92eO2Iq*\a,u"lRgs5kpil.T@@+3G:er/WUI*ct,r`l=pDc@\CZ@!N<!?Z]/DrbEmb^bE;?&0'n0=8@]/A
%9i'7?,A@6e.4"-;"lt"5TU4RoQUHP=2A]t=P^RLnY&KPL.[BNlE(Y!ZPSYY;8jo*1(js+nb+th^)m3q3V:^^$JN-f'1Q6H^!r#ji
%!mkpt&ZcluQ!l*<PL:F!4H?6m9,>%;N,'j#dWetc85:A."NK%O#K$1$R/s3F_mJJI+F?T10ui3u!*bW8TJ7ClSuiH\8E[I/[_Dbf
%,#_@"?r7nrFUG9(dLckOo3@P$CZ?kl-3Dti(5N$$0ENY:%3=Dk%[S2'U8!`"3ZdFgY+,TW<bU']6/=`TKgB2Y6GSQiPSRte3h5CZ
%(#U7c\aTk_^%%/?O:(=tNDm7uX()D`jj51$fB<5T9=$gOI/a1?:m*VWZ"5%'S>b0r1ARhVC7JoEGA"jGAR\?k)\cT:OP8q.GCtPL
%b:ADdgQCR'5[/F2_nD+IC5$8?4M4sVQ/YVA<re>qbDEq:,>`5G9")Rl/*mcPafD\CiL\"Y*'p$dL-(\@LKo6?JlsTOc^C;B2`-4=
%jSgNUTL[i>KT!-gf`7TLDGEM'$\T/>XO&LS&Y4PU6J@jc*&V>`Y8,FMj`l8\_-bC7^4o0+R92)?#u%S;gr#B3DT+_j8$F;Ga"[/3
%hsg85/q8cSID1iPmEPiP8)j3'Mi>H$j@KA:ng&,;b/G8gILj3r>9!j]^7#D<QA/r`5<jo\R9ns<O\@rMS*mCi\?@Dq3&;Y)brQ(k
%dQZb`kJP>0j;2]&ep5-l"A_/!8M1n]"0)<V6dlX>'`<l-/&L?bacgA$mJJGs"aWYLIVd3(B)'+2?mmBYnr,[@%&OStSJjC&Of_nO
%n<SO!UNaX'L3k9::hM@i8fe(_8UFnR_EaA"#V>ML32-ahH;5*UM^3`u)11PEY\)+>m5i@adBf#<N?l=Rr!GK%);htj5Yl#7)V']Z
%*Kpba`)Ibf8d@.V/;\rfbs>,9Os)#@>n0-M4O\7RVWUV+(-(V*MCX6In-i-FVF5F3)^1'?C-+GQllM$'ZUali*0TQSGr?L837DiV
%0U>)@SFILqYa+66^*F:^XO&lu%WFMn4<'?b;8L75G=t%)ai+RZ.6'd0dEpZ*9)<oq6):Ofc33RU]"00:`?ggiEs;C^[OrFe5J`??
%Xu4EJn7-p!)sQ:';?Z;T3jUH\;[&hB5rGnd;;qkf!>:<n=naG?`q+8ukD$0"P$f'jph(KdlT7-mle9eV8DJp_?J;u$S1V:mn^>T"
%s-)bED2WkuHacji1t>EPr+eTJc7Q&7+'rftDV+1K\^[SO)sp\&qtlhSQ?"d2SMaX:a*BPYDW>]_YP2XMF/iZBgT:mnWLbr8[;N[3
%/Y(V5AuhR%#_2MsGO"t`N,;].Aoe?,C=(OO]$[]RF24nQlAahfr[$si1.uG\AfqQG7X@(E2JW2S%'/?1\$_SS9DL*U1B&3Z-2c&m
%K\s8JKYlk;U"MH**8&jrV,>F?(2.eoMeO:4W)rl8p7PDaF"FaQ6Q]f48'&=![Mo*NL;fumcXg>'W:@h*TR/Y3em$]$ot*T)Y2'jV
%poQ.3qPA<"]g4F^PF%$5[2eB+[Bp-NgXUc7=$6r:RZ26$9s++q^X95k-C'Odos!8$UR>h5WReO*"nIt/rPB$p]m@4ns#Eo?QUN50
%[Elp1/mEmTeI&HlP4ee>R"d?gX3Y4-=[]$-)==7'*43:/>ha$)]%-XH\'d9N<3rYSdt2IU4dSpj=@Bc"moK;PDMFu59lHG+f%Oc-
%G-B<>7P=_f/5TK[IKBnRqGD-EC<DOoEi,_h-nSk49K@$+b5H7GE_"rCdd3I,gPt(>R(I;l[r'?#+N:<72d44+#"R=qQCHTK;d4-S
%b=uias3UQ2-Hh^u[%&kUjlW*?Yi`5C@eB&u@f9BA\T^rN[K$0:"*ER:mi44jQgqk21_*%W5b!0'`.%tiVq8,;lG"5PQqo&]^heJC
%>/3U=d-EP=XlAG%38/\"qrjt[mp@gJE?q4d86=!Ok%hHIkHh65MnH1JU;5$nR;]s[DNiY\O]9>`b'T\*FaJ)\grGPqS"SP(IU]_@
%Cj-]q4Ls5[98T+pbq.^HDDsRtF">GTOT3ZHFH7p%qHgRmm9EQ6Dp>So1+Z*rgn7g7Y5d$d\*C(H,^$iEXXu7(qUXB&?GCNUod*n`
%eDQ_g/Lpo1N4Ll_>FCd3iqBT3l8($Ph\haMmp"BuG1qpVIk."DC[Rga`ZC?/(/*>[dPDM.cOF.^,9Q6mHpT']l:drmUW<J)NW)\L
%EN*t6N\')m,W##PT0^^ac*E/S>?jN"c/\H%Ff*_tO7kTD=k;Mkp,QC?;G4..]5@(%3MHIF\'[E#X7rqOk'pPoNh[26PJG#EG^*TG
%]>o'HaU-RB-M'A!d90/LI&:%1(G<b"Ub!TP_cfOcXdKL17bjtGfK<8O\!t?S^&II/@BF8"`['&NAFSiCNLM,MIra&$G-Vacm!OO<
%"M0k%@uuE$Uu?0mVUfE]Z3:*GdB%`GmWM@Zc1Z,]+Z4j`a<VL8ALT&GFZ)-h?;ouDAR8LG5(bM9I(7cRgtjnQ$-BiJ8e]7_-TB%J
%YS1+UJ!`YWNX`bGYaCR9=.,HDW9[Y*13]W4'_'gGjFVslZnoCgi&3I9b;(ImQ;`in!`G=?R0oJa`Zd/X6n`>8aR'au'J]f`ekR]s
%<kZ%FDq:uBm/-B[DJO[4)'X_m?f1Z3[k)AgNF&McWRfD\Xo>@nB.QKs=[`dd+k/CkQ;.WK_"c!s8[s`*b/qE/F!'f!a6OP"+1#Y8
%dVu!^L,!]0X?l+;X/hW+B_/^N$tef"Y_3FC)0qO0M6DoM/t/X5otPHWaf&(k;9!.BUIMSX/Rt](MmDY(=_#$9i2&nGga(D;[[*)-
%DtMdee@YEFPMB$EI?k&=Yh<lqUXK(HniHqg.:L]/F>Je#C3aUYQ!l\\/=.GUX4pfIX51q6].2@ri,!@$FP^8`g%`"APsGtLbEI^r
%`arDi_K>\0>%G+&VKdjgeS:(mj&`+Sl)(qtWb/#+Y@K&QWE,J<=7%Or&4Y,Q[4Ef0``XW$Res!p0EDur<@94/--KaehRJu7VO8j-
%jM%!nU5Y7b[Q7!J-s7<Ao)'sNdiE^H9Es\M1_k_r2Bo+Kdha*d\G3$u;D(Qg?9S.q-s=i+.WYM-Mo_RR:NKC1\L>p3PlKEAPj0OU
%U1@ENa:"ST&l9o2(F>9f0IG)8ER.(Q:/W]:QGneF9?>''7U6fNO^+,jLsh5l:/*'%)\W]FhO!D:9#$je`;&.i0g5j4O3Z`CB/!3W
%(D\n>8pGj+_;FU`)b9]]Bf?f?nV^1]RCRa,fF;beRI[bTn?lZHf-ZK\AN8*e?^pVo$0>sg>m6XrCQlfi-:qLD"-QEig6AYoN2o[<
%[>EpYPGG9S\_<:Kh2&,"&YXil3AY(`R9PCtpn%ln:<D_^A/%e\.)Qfoa_4:9_dp.'poE9,Bi][)9L8cTDrpm*q/:A4]9uRTN4-4'
%Wp.-L12KjtIb)6?/q/+lbH3@-!\XteZQ.:.g_aM`lm9]pftR=;b,ITulEg?eP56=\6!;,>H8A0g<N@3!>*m!p2aq#CHDOukKTem[
%gKN<R!d]1QbCrU$oc%7a*Ot_&qF+-PNA%'()BEF9L%X*ZmUobLaP/2.p%$)$qdHjW5dc$kC%mjpYW^(sqXh&O"ZMI#NI7"=7d`2"
%r8?!0Nd4<7:$?9W\\KKH^32kH3q>re_qCPl=iBPVXs&E>p@PY5VUf.9p,QBDU6So745/k:=U[3r#4M9:E&6lmjFq*?gZY9"eb`KK
%QN(YB3KAZH)p6fIV;JZ.D^=>WPAh]+2#`tJiACO\iQb-W^XMuH2#b\R&gG,O[?Qep:1M#eR.!8HZt[a.4Cc+S[sVGeockGG(`N_K
%2!-lODQIQrGI2W\X`8G>aR]1eZ!da&=#BK<?p_`C)=EaT%D#&%le0I-Tm3U5D6<,J^"I6%H2Z`kNT65:C+s"KgKcTdDn*]efru>F
%=<b2]G"^NCXXrht>`TJ'*O2oO=IEop;(dis31,$5VB3&C(B$tK4&ni\/0/s#p"#9=g%D12X4B7J0E#XmS+ZbY[pE9RG:Tdg@o?7W
%g!k0<hf-DBcpFW/ZO<*Xoq+tWB,=.D-poheo'aTOTRYWfmS[^F/T2$?Jdfi%2q>BrSf4Bk/\>^h%5]uOJ-XqGDG#beT.OZp@u9om
%:;*[gFEb$j"=D(?@Sa#57B+[ultXX_CeT'=Is%"LS]TQ*^<<W10S=2(g"sN6FM>rJnM57"9H>ed$]Z$HZ]O4$]eJZ"R6"ZONgHa*
%Aa4N.3aO/_n^>(eNZY/!s3uTVFWfLZ,(".q9Kbokk<YQD!qRA%d`=MiVO(#9+t%%^qE't^V66D0A-:NV%nE5qA@WLaeF/dGE^.I?
%h_C8T*2[pRr3o)ljLf#7HHF)b#ffNJL$==ajiC*9kq,T(+X*bm0TCg?bc];gL#\s7a)R'Iha"VFDdSsi^3!Rm>1bsi4/p``Inmq_
%GG^]@A_<dbX3.'9EqTnXTM<V_Dio:u7n:7=+/[qtf.nQ+fT9!c[p[cB]S7.?NUdu?'+:csr,m@%q"n"/Dj0=mO_"G-D1MY>=cCP'
%hTQfR[?LCkrTrQc-rULj*%Wr$[2rS6TdTMLR7"RED94]jbHdX&)mr?WC#&-b(,Kn+)&AE)h7,mj,MOEJk^Bq=p*G0H8[q*5lGo:g
%0uht/&PW-?,HUrAZl^N]!'`r=2,*rc;a8:#15g-4eYsX#ljm[m`u#%G#$>R;8u?-cWI6Z2p=W<P;XIPSYM5$f`<t,`g5XLtho_+^
%)4V(EUEsPUbfE^lol&-Z)VM`<>(a.u78CTQ>p<]8^9'i3g3`cf^Nu:a2rt<qG5I82VR<7(hq$egI"qN_%P,5=\Qf(oW4/d0bfujT
%A'4Kml_:)#LA+@5gK=Y\Hc32^W7sMZEZWm"[T5/7[j=biAP(?tK?!<8TIf):H>V#_9:K6,oT)"^DK9U@5NV[n+*8"u9goiXlkGt[
%HU9J*WhXIl9s4ft#:Xhj*2U)$=UAH'Q89io?Wi[MioscPQ8&0W?AXJ%\?+tASD9L\J3nubl<gHTNE\@C(,S;XKa]C\;_L&4D+)%h
%f#YA+VmbC\KIrOMj\;kfWAQWBjt=N8WAQWBjsJfNbFjqjXgq$-jsDcFCr5PL$s+lOmCCWMk;"%1e=<"sF&R-4]o8pN2`9bRg->RI
%R<+d^1FD8>]KH9"?+*1\^.J(5h6%cB.p4jte=N-4HZ$^'A&qca4R/k,BeP^l@,O`IPo-i*nZh$ZmAk+)(alI?^$'N`6,qg.]`+K1
%12\JY38:Kta+dN(>gLJIWhZFH,O!+tMhfPLolMWQTQ[52D=i<2Ao`1jqS/M&U'KKAQH?'6$QMehqB$:J2n]?,j?:"9]JX\G6MNuM
%^,P=hcI="#MYo'tRodXbWF^RGm&3k^hlfZ0:,R8#D._-XW`8;2eOh`r-Ir%&f(J2tV@r/@^NG#).Rn<YDRdT$XY7RL1e_\#m8gDt
%\b$&K.FWCK`sAl/3*B:X9XW.oP=A7b+R2\<*D3c0Ja6;7h)H?aM?<(/\$_eM_f\TEVYZV+6Ys-CAbE%P5XquC/\4(=:JM$Qdh[#^
%Z..oRoVUQOdHIHRcr:Oe9g'm,mhN]Ds/XUdeMCo+kIZ\W.O:4kJYmY*b;_"@;k7U%'E.Ca7!hVF;l+0gPbL`B]=uZANP)DQF`rfi
%-]f.s:CnJdmd2'D(6ChRT4V6Ekq0%]K._Ru=e!nZm*S"PbAJ_#Xhc%F2-cGZO]mB]gEM)e&m[$D7fVPNT':Y@;rK\NNrNseEo[C7
%(?%%6!\t-n*d%LOjW(-!Eg0\W<&RL/C`GqUo(6LGj0/)Kk'?m"ZPZ>oR(te2Y.\4R*-M/#HFN\AF_TlZ1"#WbfhpqnB,*:/L3jBL
%Jqn9ChRtGfK#Wq,gGt2l^$(Z7>eabGR"]TP_f:dVj.^L%S^jdABPk-0`.Z_89pU5b]d%$oM.h7!b@KclBR1nQ\&A1i>V7b!0!m@I
%A-1PtE%(UIF\V@T_Tp.DIWtr>@cTCuBnkHBo7IHoKO_n2DT:j/Sp9TQDbluTe@/+B+-,XBEhb]f/t[Va!f^\d\6h8?Z41=&STJli
%iYT,_G?J3oWReQ&:!/)hFa#Cia<Vp350R0?8Op+H.@T'NRb<nNb_ilu*.fLIPW\DY/$7Z*Q8^7O+O7kSaN6VS3nfS:%S#=DEAM0P
%jK5njlXLY)!N*LERa$>:'9&]?F&NQ/0)k]e9<nDMAoPYS+?_,hg=F)dX/96YKJ4K5#Huma*An11pG1(a@f<ga14T,[?`uOH%fX!4
%qs:QCUps5aVp<!SkNj9kY40KHXPARqs7k1G5&@:7nkn=uStE@[Tc6&,0?GMc4,P$0ce5i>'kf,N-QdfT[hn>Y%gDhdkN-%35(Bt\
%2)Y5ch*:lr+%Dshm(7-f$>_dG`HI>)6[7t[SN$h`jlC8?E,o.c\+=e,70!ki[M'33[f(U7L!Jdf43.Z@n"(J0#d0fbf_HY/D2+[T
%V1Keg9fu6_dSDZN#7!'V<o1]CN+4FT$e=P#Cq&4r>^Htki'7hPpt+9DL(`9>LZRqP$E\MV]B[I`r@X,9051(;^re5Cg[/UQl$<^O
%k)D[%`^Kd`^c=V%gmlj\)aj.kinVaom_aAbjVUko6[XgU\"2YHrOn2/c;@,6W3m0%\RKd043>19Zms,hDJm'j;`&LMO#d&ZXjV#D
%N_.RVVYb*U(34l,e'I1aXlF$,[_RmQ*cJO;_G?C&4:`iYZsPnoFK=e$o6acKeUBpnqKa`k%^o)ASCSKgF*V)dg6V@4s+/G+AAtc#
%k*fp;3QtS)L)0^Mj+%!qIs8mKD'_kO[[a5+OF,^`Q<3*IWl%.urWT`?1YYbPDYl_Y++,_B^[cBuMU0q#-cpnNHC=fTPg/eaXUe4_
%Z'$!B,h1%W:0D6%T58mK^SqP._):mK-+mTng4-R#)t8uX4hSpAEMM-#OsJiuTD;L=/J_/s*40J&qt8l`)Qau:.C57j'eF<n\Vn)e
%odeSACUt62]gam0#PR`R:(D_eDKiY]glMl?(>&!CeuNZ,*btI#2<6XWZAU#F;hO$pjQ;[<T.u)KnlS$o"EJBgVpas>\?*)]X#=Y`
%03_;bo7(ud_p=!!\u*Z9];F]2gKo=,=1u"Ij1Da-i++LMBq$O&e@r3KLR(;3XN/)l"r!i!]'W6f:u"f!G/j;3?YOTr%1pd`-?Z#:
%RFDKMqi-%\"+FB(8uoXC($BDpQ#<t5>H]m")QXLs[Od![.c&Rsp+d_9Z).4r4pWB/koK90ntSa(Lb1[uoZ$l;\%,RWP)8JG[-1ge
%;Io%U4-`8oV:ltK>D*/P(CR%rYBm[-%X?Firql6g]_os`UFeCiXkNdYOV_tiRo@),=31_L/kP_=s/THH^g-(nH"#qK)ucqs'kN8O
%2*(25j/g^'3:Wi@[<iQ<.GP&!Cr$aciCg9QV2LL-L2=D,8F9BFFer6h13O.G0^kFUVKViZ(:W5>^L?HV5Q(&TSa&Yu2"Mc,dH$p<
%6<*6SQ/"t9cH!3<0g\6JA#nFF@Vuu^.scfd((kWo][."13_&_%ok"jg.dhj.P#5.P2nF-C<(]g@%b6YO@%j#6CXqh(ITM]pBS3j'
%S-<;u)79IU4W&FT]d%k9.:"D1oPBK[YEZo[l;r'DRn(cEOlaTeZS>0Jm=Y6?IL0F6R"aohYm5W9X,oVKCh6piXLN8Q\Dm>+2SsE.
%ZKpdC-qdUe:]nOp[\]S]_$A:eUWS[Y)lb'P8.Fef`X.C)Z3Kj'onMO;cW>at&$DL1H7T6S=Ga0=Z$aP-[;psm*ZmB1L/0=!A'p.t
%Z!^nHqHFD@)2#JYQ4]a>0l0$=bZ#Z(=)#:L*m9=a_*j23I[obo691Z^ab>4h0Jpf`R)0s#69U\<)s6.?\]O)V2rf9oP.Y4cd*U-A
%2K$7hV8r-aIH_u1NT,YIZ=+6f?Z<oh@$*1f.rYqIVCCG*FJR:6JKoia"=kJG3ZcMcc&ZZu<p1ht+s%048sf`4eIH8EN-.H,4;L]8
%K=qeY]b_HIG@d-6^,r?u6V-3>Y\sLd.PjT%@+5%,$:7i7F^r^N2@kkOf1F`5"1b"0VJR8>#sMLD:S+-k@$tguE.1ggd&&k/KOZ/`
%+K=k+i%r\:@Ask*XY3%eKWd'_`sIq--g$ci2+,8Unc7>V^QLStgP+l[;6oYZ752VZ#7/8<1Y@L8r5k8EI'PN>5Rm,>69U_V+bM"$
%_l*lH#BgSH(CG+q:n[k7!8n\df/nbp$"[=m$$qnDJqn)m`(bn!/0IeI&X[!IXI^V!4#6W-"['h<j:sQu]Zm?Adc;,Mla=EZ]SINc
%\chmfUC@q*=@@'[mC%u87qsSWFDNWB@Xg(rSu>t<7/Y9a7[g2d,`_5$CbeZ.AKBX9PXJmkRJ.8r;?F\R,B<'<i3D@fbQ"!["BRFO
%-``29`8V%O,$?<lTp%t-6j*\uOJu"D)@/R^ooN?EK3L*gq6I4iZOO`f/\$JU\1,7jL`Za9*,]9q/1;)9c3;GYnfAlihUO0<cc%%c
%bl^HiAYeA%5JNJdQ<Td^)'KY?*sdP/9Q)PVOQ&Jq3=0&8opH0Q$>H?PbiFG%1HaYWYR#=Vaj:(8[uE^'EfuQ=B5'7Ga_p;GM29Rf
%@l]_c;(/+H%d=<XlJ:!Rf+i^)pob</R[p;d&<IY2I%knb;^1$K5u(,bH@&mK:$"ntF.Zsp$ej]QP<Cqm:aR+&!=#8gMA-_\&*aAi
%Bc\*MfgYTc6rlDQ8'T7YUK+L>Pr`-K2=OB76r-UY;iA[]i5ME/CUedJQmf5Y'-)6u2,Imsk(/<BVe0)7eEXUCG)gBnl\8$@^3#*V
%-^AQsLW2aM?/rEuQI*$L?eC2V0sfJGF=YVmCha+LpTlU0f3H@0r1=fk,]A6J)H)OY,ga2`#u<?O>I:'^&&O5*8K>N06OO/f3WpW@
%7*t"C9m?Gp.!2+ZpqV^`KVo&AYJ*]O(]&)>4`Ig'2Y;P*%[$6G9+MKW.E7"$:?S.`Ud]CST9R-G^O_k#4NH(/9U=riJrj,q9PaEU
%%.,146j#sXS^=TQ_SWWImV<j`kW`bfjL[blc..^c<Qn$.MbrOnr':Mr8PGjj&LL1@.poA;k&"^b^i&cd5nqL0q%#SlrLK<8_W&Pa
%eq2Jgic?3K-=EOD"'Fq92OL0mMA79V?jN?@qZ#9J6T)i8F&mc<CR)Tb\nhL29)>,[JQOrY85;h*.M+*$W0[_9GoV$r&!Qr:,crdY
%:)RXe.c<M9dnT<m&u6+\K!flt'gYnZpI&AC77X/t-V*32O+T@\E*tsXGuR2m0%^fQRJ7@(-EGoN-CuON5It"QA#n#CVjqQpi8_Hp
%M]2UIJTD[nru6ie&'%ASbn\Rb`K]*,_3pHcV+SLS6"'dj4Et9o5\t&.>k%@Hq&L;jjp[=NehDU&;_C_]8>=iTVIDYIR!I?L*W2pZ
%HV;t&dAY(S_mNXHH8`J/f<O55<kEL&Y*!JNCfaEuf=nQpB-L(57Ugq(NE/bJq"f>7<*P&4HhIAR>YTs,Ra(k-V"h]Cb*BM0%h>m^
%70Bhf1/UN,PJ20-\2dJir0<g)5hj[OGZ\U$d-J0e7Y(I9UF<_+X$B>fA>l6?m$RY,TUWX\Y:00acY'OS\Td]/#iPFoE:R>A;4S[b
%Y&&2N]$q$'QS/02T&kB.3"p!e')^LFeH1/1=^JSQ59%#rh`QZ-iKb^n]_PBlVTQcgDKXRfX[@.HO]<k-4!-n2E:'s6^%Vd[nU"6$
%-(.)dY33%F=,P!urM[KeD&cniP(8`Vhe?VC$=oH%Ki*LS^!TY+PcPg\H(<F^Q($.0reAP5s6%MZX0Khn'@%JtWVbj[oibjEQJ8P9
%g<BZ]+mFObS$nm:4rL1Z%6D%?','P6oknZF>OU,>3Q(EWZ+[f82[]X]$_-6DZRKCsX*8pU)=#g^g&_d_mRWCED)OGcC)[lA^N/0,
%Z0ET&&Get!^Y,Gfl1OAuq-Wf0^YR-T<gjc91)'OeQTV-.kVjH_HELWTX+/BQ3j@?+YBmAMX5<5o40*R"%iN$8l*S,3VIJ`L4E@@%
%G4ei-a;oKZK?i"a)sXLSrHdlC1A2XUL.u9p3r-(c)<Y>VHRH@0gm#gn0pBg@Aa\P]W@lqXIRd,kRSH[GP+4h.X*"5om7OjR_fm`r
%Cc*l*T8q=%&!abt8f-nE<m,=/EkTK-lWFHU`b[B\%NNfO/oU*D1Usm\N<\fcQd2uP:7Bn9A)%Yag/gh3>H]p\Q,?(td2-e8HO5.n
%UV<j&lZc5dY30u^*K;D;0b#I*+MKde$4NEYWrK(X7=q&YACD`6YMOY5l)TSW[B#Q>OEM-R>V(DIC\@IKGI*NKC];$Y`YUa@eekoZ
%X(O#">cY5\<I/uu;Oj5YX*'=qV,eP4P-[dLFEkuUST]LmS_BC$8H:`0>,RK)g.ujSh./6oc!4](DenXJJ@EJ-%b+-"]KR8kc,qF2
%;FF(\Tlh*>om1Jih0EWeq=K`@0jO_D/h$8Pce:k@BXSXSgoYc)c!E03FRLF=,\HcspcZ_T*]fL+H,qFFO)qFH_Cfnh(34N"f$,Um
%S=J=-X(75^>hF917)p4(Nnm>s#I^J8>^/aoUR72^.<\>.-*j,CZtdflYN2Y3$f_+]@"Z.Skg/qE,)=cop+gOh[D$)tc8XTlBsj:j
%<p#E>]Bi`km;KXMe1JS8A\^^(qEgoH06E6#:@j6klKt@Ar1I+m]E^1+Vbb0#>F5:I7o31>XQ+BNH[kH\]m_bEUTkC1lU'nRNsj4C
%SY<AqdC)t8;u0e+Q$jF=g9m]=b;<q4%jn]@SSl/]VPI&&WH_:KQMn6_.kp?rkN^W(_\Ec/G!<X;4kW_7c(k]+s(q;/WRnL=)/aY9
%>CX!je[G/ia"<M"4.!=mF$4&,lH1idAc&FRXCl6LkoD\YB9gb"D5gBVR!pZ&?>XlWeTM>#>sNF:2-jmqRJS/Y'3rqp>KaLf^]u@@
%bs8[!;N+9#et<;\YSi=]$Ui[Y#HLuc/"QT0eqUrBQlg@13n>3V9hs?&kfGg1/)%"ul9d:l4?W*-(LfP7<?r%/g@T)b3n]OfO@JQ7
%I9jIf;06ha>LZpg/)B'Ie=U3YfCFeul\&VUBPau4%*_`+,.P#Y=f$K!)k)&,f#c,l1cB!<U%pC74*NYSXa\"8lu\<BXXf7;e'!@r
%VKbGrRa^]d'dj-Z[\_]Le!eOYIs(><F%cd<Jr?'=BAuF]+g[rNM1.l\1:OG(ZWlbhL+(]gB^;poR.J#J'b@L>ji'AZ4o9XR+&#kH
%q^;()<BIAe&[@BISd^T\]Oqk\-H!>sYbo8<1J0)om&$(1r1,?\)o#9pGRX='1m0@WELLrS-A^u%b!*S4cjCd$=7TFSK'?uT.*b)O
%\lM:BO#%%SeOY@L;%l%H$u\#RUKuXD.^;CD3mHsYX7-fB<Em-e[o>6M2k#S1ku&\Oe&A%_1d\?lXZ5Q[VKpS%M6!IKkJB^%_4b2)
%HSIHp)W$P`.B9<<-*Si$Ar<_eE<Rs0\;nTZD6A"UUS\L%\>&/70cC$:5,m&sh0SN>VUZiUAMC4T,5"O4bI!&s17m39>bt`+(@=li
%.a8$!oWHmKCf)-^Z\4)p?:32[_$@+-Q-985<E_!A.(Z/+[1$1mGQU`ShWFS'\bGbaAVO:_MLU)CfmCKIo49iSbIPj2":8L?!#HLf
%WY&?j%IM5Dd`t;NZkT<IcLe['fWTPF[;rO5^q-W#rcsX.Rg_C+X\0ZI(QZFML5/n[2T-\6fN[+cN;QSe$F)tneU+b'nFMk*pFD;j
%.NdeZ\.?(3MlYZnZ]iAget!W=4**3=ef'g$msad"q0I!uEV8_=doYD4`N:eS?EJAUeZc^S]S[c_Sp/MdHDM^[j#QH)lI*0>j438%
%:2dQ7dTKD-=^Bame!3reqShLXDmi]5^&$ShA*%F4Pg;QT552.\g.1hOYZ-(U(k13&Q[X<6HCs?_$>8b.?=@oYJ+DZ7E,SQ*H2$24
%Il&7`4[l1llc%h:UYQI@U[[*/cX.%VC\`1@5LjSZpiU`T[/>&hZ'R\%;OVqd.*l_Zi6j".YO_F?m6U"#lhdp=>]"pl4=Zrpf1s1Y
%G%sO]5:fh%Xe2Z;cQ9ctJ^gKBCYt/e[FM115>.KRbr`o?kf<Y=hYb&&:#\O:2GfHkJ':$SY#kQ\1M\Ap_:!A_Jc"q.nb(]3-`_$D
%hNldYK?$dF]sr9l<391riD\dYqU*k#4kd=[.Uff+s8-9cgP]7?q;Br$q<jG"K>Q3r_k4/`g!uo8-a%bhYk7ALC8"XUFS98,e^?d/
%p1:'4L't[>\'V6pg.tH[D*;F;oV2(Tm9KFb*klj#g1"Q/TqW%MI^Lpe5?BKr_jrSe_oJkaX)"3JpYN+"`BN&q:tkgegj9sB[D+k-
%ITQEZkT&IVMW6m;4]"dt)Eb_=a7;68+1u=(<]r%+c3Em!T^QW"QMpL5X3s=Gq-j*EP>>J/9E7;)_bmXpHAlukGLOG_:S*l=q:"p3
%op=0WD/T;6NTPV12AHFGYb!t*\j#;ASfP$(5jqd?QYJ`kJ&Bab1KNOQ(O^RfC/oYTVslR3Jj$HG$a&\8_YcL7dK+60WSW!a"eUAg
%e\Ze"a-4s!_TSS;Q-,m!`Sg7QS)rh0K;XG%PA7k:F2.ROYj])P!ep.0a*XgbmF1oen';2aQO%k8f_Xtl)(fUc]?fTc5.4*SHg<QE
%;Di?'p;td19CM,0?tAqto`P*5];#&Y7<u;q4aH?F^3]ef:FYiRh*@Ohj1-PVG5Q3%2q(DY[pHM#%MsjtO'-e7170MWRWd))i@h4G
%2QR)loJAODY:f5:mhYV(oEXQ'F6GH?Xd@N:d(KOcIGeg(o8UWV<Xj64H?nX]B6NYff_r1+BIuG$e[sWtX1kpGUh<"UU:4WJUN#_>
%7\!\Ss'>nmI@2a*rWk$u"mAp\]q8pj$esQrYKCWN0-\SgGuuT#e]p?&-b\FX2N#aejaAn/d,/%&<.)E0De3Spl7m#pp$L2Il%?Qn
%esg5Y2Qh20pqD0*^;K?<lI0!fUN?/`Nh7kJYD;g^Bi>nrCQ2XF5h7sqH,l>d\+r-hf2@%eiL-G)h-!"K=&2k'I!Qr34oV1#R]Cmc
%Yk<79Io&3Wm!X@\>%k"]P\GZC8'ch)ri>b_lF[#>8pNRGo0GNOq2)NY7INc[IBNP&.6e4V5H'2V`9Yt&T+C#i81;^iZ0@%9+)NH5
%\al]'g[%$\gV'RK=01nR([dkWc50f9ghWn0(`Zg"*3AR`&%C0!IdYr>&b>^*l)=+8>=p1-QHKN>G><*#M?13OMR<<!TjIs,TYY>7
%neg1)/$Z\5?D#uUY,I>-o3RRSL\jl=XopBV>1f<KD65Z6DecMd44%NQo^_,8q==*f5E!;9C5sCFW;Z^reHa(U$S)bNof42F0RD;p
%m&du`>R5PF^Y6(+^V)5/&+A:\G@p;n>I-9>[T;A9;haK0MH)lGHtL^LX?G%:Vs6#$:=Ktdn?iNAEXdBTf3iO?Gltga@!DR&21QEU
%W5A+Q3V;K-]?\6jc8mdb"qD+0!E.@l.RL2fa[#J8G[PiV<B^;Y]#PFAJa)OZS8]+F)Dt?B-3Gcp28ce/KD#>SKVKiS_(g[g#pt)J
%;t6o))@X0ChGERG"M`q_SgD!?NF@";OfdZ?2gQ/2E(fk6QHdr*-i!>Vo?DY"6RSQK1NXJ`$2,ke*#F32Q/7W<>Z^J2LXM7?81(#O
%P<R?k(EqY#a$Q!0:O6==eDr,ig4eaQ!B6\AQ<mXE0>j1#X1<>e<bSU+6*_^caf;')p-nj>7'c)4H5fq?<iWW?0g3O_oQ8ZI^A.$@
%;rqg.!]9BnFgOpXjMf-C)2/GhAk>d<8$`do<F/B;pCbNk]%t@OY!a2`F[,u[90N(!Mmso_:=JFOO:ffl2f2\^!GAq^7/#t*I\J(6
%CCPo?q'3l(J%.$8j$KfNHZ]0`.@`%Q6h7"Vs6aI!]P?3!l7j4g2@e6FpbRJpYmfJO==t]fpE-Rk=Z^i!XM=Z%>\)UeI7)%/1kf?o
%b%q:g%<_h&2+f>_0oS%Q<X-gl@dlqQKX7:(27LH!:Kuq4H[>\q=paF>4[J[*4XOpYYep)/\Ke<Mo%?gbHqa('?J',^]e/UD2p^'I
%Cb<l,Ir1KQis-U03Hf$Ko8K9Fq0E!Q@=,,dK:36b?"^.M;._:kBBcfB)G%A;ICi\h^V&2N^$%ZZIaJ-!s7t9k_TV[l5_nL4]mXk2
%dG(gJ=XVu3MFs+_a_T?LJ$j!1[9\>5LR8i2=r>!P>(9[9HILVQB^C+I.eWYa2,_G"kO.N6XeeZb-1r,(>"T>@(.X,SLVe5Fo],nd
%>2r,WY]P!\i)ltmO);9V:VV\DDQOASRnqN\eo:AP?^%/`Tm=#e1-C0/g2ZVhF?DebN1TOYIJR4uE8-H):7ci<>A--)=lf0HDcOqZ
%3E=_(0.5=+n20_VG+R_+W2I6$^rrrN\Bd-LbiCOKj5Ep'pOj$"Si=LT8Bc^nD.$$p5-;S);bO,R.=XR,)OE?GL.BC$?["&6_g=7'
%m[H;E?\WA6`jBl6nFnl<UUO#W'\=t(SCuUWOWp7#+;/-m@c*InSmFln@JS[0a7maBXhf5E6$sFS$7sNZ?hbUpeZBY,2`n'T2':.N
%ZQilInNl-Ylb.N(dVMX,88u<AcjEPRLHF)<bJR(a8Imm1S56&%2JX[ImOUPI\oD[3q"6MJN\UR>Gl$]^;Z(a!'&m1"YKXK8WO$Um
%q*@(NXMrmrdfPs.)E.LliYMWjn:IS<h2c.OlEs4%Sc"s)ce_ZNaqOKdeYSTSmj]"BjA($jmD@^Lm>!`lQ*.Iip.gS0J;:?a1N;W0
%GXqN2n?cgU]`F^Hr'mqnopBY429()`rLdXBXtID9PW,+INo.L]F>VYG;:pA&q5BmhfX/e.<a@SRkOY-D&%am<T@PR&O"S<h>;t@S
%1,_YG8B,Pi$$eBS>>A">=??*>He4Fc0bY\i@mK8KlqVW$>k1*>:S*%5qY9uM)8$!i\6B.T(UjlLE(f/+Sd$hPV>P4JIWb2RO&IX:
%p4L!=ef&lK'ai61I^U2lKb$hWZDEWI$RbUchdK0)4M-U$$FA4U.m?LQVg,ZK'Z=0I*I7#e[g2=K[GAI.od>fQ,=@,1fEVZsgqWS>
%>$ZOUZa"WEr:"rRnO(tLMYK,uq!fO&Tg=Phc[?4nj5>YSkGHgh1?\O7FbZNS9(gL'(?uaQ]e/[o^mrirrE"3,kD/Mp>Ph%`4hJIX
%@(!_7NqQ-(+C:[U^D[gae\^MBl:uDD8;gqqk4+(&`EhN9@;k,t]>FQu.aVZfIt%7;1TT@-GYm&G?22"`p_FmL;h+facGn4W83X.,
%.(n5ZXONOhDp&AY-O[gfFe8Rp;^[!@BD(GoC-D@nc>-74%Qh^Vqt[iaL8eYe4`15uch[-*4.[Jhbs'q:FHSAcaG!4#ShE"JX<WEU
%Vk8R=Mq]=TQTDC"IW=-QcUKc$UGqS\QaXaXMm_9tcgsjpc'PO,e"cJ;4ZG%[QR[0`);U3%BC9DBF`I:Q'+`>u2Wo#cUDk`6&"aU,
%P[5)JpK)j98!&)2[Dp@ihWeSG5p^akI+VPJ^%Ul^<Z;.'2rSePqRNt9h;'N+n"'Hge,OU[NY3\iS+=d]B3Xot0BGAJaF'(pKl/Pr
%V3goa8#>6m?bLE`P@%6\;WDaP'WH^=g/5Nm\G(8opAT[H5k=%0_hCmWZs$4GMtS7Lh^]f(HaotSpuKWp[ibPu\h26Hksg1$YkWH4
%4_F67'DHQVJ,eJu'ZrPmeDkGO;i>X*Mcd94rGi414MOs(.st@.j6@t9#KrsSI:'T(Btj+O@=>m%`k09rpUtgKQ<CRID$"aO!k-VF
%Hu!V,X)6!SgOJtaFERCn#JrmJB$5LF_&2k)l(e69UA+3GgZL(o]LSC@b5,I[PaVFcI*Cj;CLs*=[nQo4<ne`=?\!c./_G:9.1>-6
%S;a^d7sA:+B0YhV$SO`u2<1Yd043='[Bk*1(%G+ARo)k/qt)l,`l+%phbSWPA9I6kf^G$Um2r1"pdMN2ppfi:hYQ)7/f0tY]BDU&
%65i)i#RE&s?<d2&HMMT,JTNm7c/*hnh*.8V0,Aa"b,N+I;1`2*+]p00Secq`*P\saBg+MsMOHW5C3RD[!b9KA?>eU'8(S:u/^FlL
%5*f9Prdd-*em\C"j#L>s\Sn0?lmN3]^FOVX()c/DO(W(H!"J\?D\E%QI4uAPj*b#ZcYT0fifc%!n!-O-YP-*L3hG=en*A#pDXipW
%&1)*^l;OF$@3DccmbM(tW'AU0QfmtH(I&+-4kp#bo,#qlh*"PMpJ)+Q9_%NH9^hI$n.^4o^T?;I-ThN#_=Ja%J'?bMd@!/O^MjVY
%d>Jn[eh7EuPO6DfBlt04,5,fIn4Ec/If%G.6%JQI8sR)L0,kE[^.&HD:'X8Kr`8iq6@m\aW1RIr'6WMHoi3HUIBmZ3n'b[I?%+mt
%(F\[lH_;pLeL&9eQg/S`*QR]%(N7R+R_FYl:3gRADIVe$a#$_ZGA9Y0R?nktH.%MSDnb"Z+.@ns_p/i3PYQ2l\9N0UqI(dKX3Wjl
%20gP>"s<Hn?*8iRDmjisH\8fQGlcrL9:KRRSs!U&1H!-`;#^IZ6%$4DYe@OTNiock[B4clT=H?g;;>KVXrk*EcX5.=s5EjYl]pq.
%GDg*0*Z?e<A"'*T4F@#m*I#EB!uMs$+M`&6"T`[dTFUPgj.ApahgDP[1c!N%h+&R0%gSYOd2Ndb.ARAm_fWpGB/>ZZVtp!tn]-]]
%e^A's9u$=0Au6",e4kf_'q1CDe<nha%l`suUL-92o`DgMlQYGV2;IW5)IVH-iQ^Bb,r;T7[`P%H%/SQ;kDeRHZB3Tb[ACILq"ib(
%T`"bXEsA#olIc"^';8Il77.sn`R@REYYID5=n,ptFS)eY0Bg1;YETQdq1\HN)W0\;eVWo>LPt&]lp4&(amdunZRo6-$!sId4aPV<
%mIr7M$IM>H%s\FQdG(aM=RF@^\6F:Tip4ogIJMXRjNtslq!KT9IFM,ajNBloGe!]+CNnt]/*lNsoC>3Il[4!N;11YLd0l%BR+[;O
%YbS#elMO5L*]UX6nL<2lZ@9;jG[EN*+#\j5R:]pF^U2oGQGpnMNlM1R%hQlg48HPeZWu-cm4?!:%GGN7@M&IEj5!UUX`@TkgfUM0
%bO0\)rR90V\oqdsP<DA3HY&:=PsR="^C+A3%HLp(Bfhs(rU8&Kb,%B)_jbS/)Y.RU<,NFW.>bW#><H1pSnGHBBZO]&m.LY\[3QWC
%3$St1k&/S=/OQ,SH>Tp/Cp6ZPY^_^XR^_a&@CNrC4a?gEp=(q#@@N19QFGH.^)$19^<Tm@d`)/_deHH;2XTbTa"L&?+6pIqm%-Du
%pit0]NXSjMd3ZE.%u<B,.uKnDQgY+62p\*FL$4q6fIq^iEDG5alF`PL"'-uYDg,q(MIbViPonX7b.<&.4'-`JkK#F15`IjKnF#I:
%!@:/0_,e'*1q7E3Qr\\2l*s_SC4CY`Ni!1)hotnS&U9T82[9*'\&-<aZVc;UOAbR]]fN\#/_Y[Am`4bNMl$!\gq1Pae`_SXf@rZe
%4?_'c[H!JA,D`$`WCcCV3l+:ZrNis5.3mTDYDnV;;PEQ4'eI(t]R,o[6-@i/UNGNtj[U7#b0SD@h4uU#p\49U(JjJpk+eFEqs2eM
%\Jh=k]Q]r%q!@E93;iqUjH`_.nuq$;d^T$<@=Kjk:mPfi)<)%qPsW)Z0.4*$;;@SVdd#94\&GSZ\SmhK*e/=J0<j&5?'*GJle&0c
%6>S3R25dh2p%$"[X\P&EPeZfDIMW,?)TT\nr5VUYqORHA_F^e/\K;p.n#FJnLZ6UR^"0^bq%:uuPK24G-0tPX$UqdZBC2t+9STmc
%ar#AM\,l$K#IaO0SgJ`::@:RJ0XokhCs64gKQeMK.`&_Z)dB=M]9Ut;e[7,6m0)mp1Kn+LGmWkaViAu1ZdLnJVB&Z424I\.N^C'i
%rE$\eX1.U>I+^uRF^8)4"_E@PIf7.U9srZDXeU%hH.+/a*_P8T<*C*)G@,;1(X8i)3c4TeC-mPofqb+>di;WTC!MB=6a]iBEt'VK
%/[YmBL.c_bXEg@/eWjCc]umPTX$O)LkVVUZTre^?fJ:oFc-\-o'#.i!(Dj-fqU?Dn?F=#)l:JI5<\Ll\Csc6tk:01Z9VK2:ob/,b
%%4hf45^+hG!I_#`6]&R^<BKS[6g+#I=;`A7fZ%+6Z<Dk6^d$T0e#fENaXG5)GKk:o`)ZD8K*nh?/@g<EU==R/OMi`O8FA&PX>8/A
%]<Ht04M^%A2PD+tE7k/4c.6O?CF$FL_7Tf[M!AQHF`fuXqS_?8H!%bi=]6^*3,0]ik0!@7F=Y,05h2?tb-"TJj#EB5H*Z.nn+25p
%`>;H`H>\&>2gVQ1Zr*cFgP;'n<onP=HZbb'2)HcWR#.A=N#=Q9T)C1?@Uuo0_p)5i3B0Nd)=[[cHYT_;=ZDX=cgtoD*Q"SPmK+6f
%=P7Si\SBt;1&M"GE/J6ZVW2%,.e_C1mA6rp\bomUAK4e8&_CB%F>]NY>NUBAF-2#1hs4@.;VAa`QqQSVheemsJtgdGC9`rHJ`<Rs
%q@9#GAbP!=&<<L@lL+ceADY\8<!DihleLr03ZVM4G4irY-(I3PWtD%m.\"/Z/PF$1j4:"7.'>(01+`'7YDrtQ^00h^Z[\_%AkkKC
%f0?7t\@=An2B;.'n)aO2WOHo]atLQ18h7C(C^t'^+-qp;eH^=rY0qqE'3.otY0,qW6XaBqGE;Ts#6*F"j>onUaskcAK7$WoJSEK(
%a7+i97Z7-%U\UU)3V?cC5YIYjY2=tbWqBU!Dk<rhRMG,^)fF>,-`i[\Z&mh8H3+c:CmFKZLL`)b1-\R.ej.KkI?[F(dE;u&VsrE`
%r8m2QDRCCng21penu3(kB4W+MT+'!T>Eq\Latii.Nb9"CC-$*FEVV%tE@!du^AGWnpo[Ko1\5EVrSjg\'6uLCh0'g\>qB6aR_@^'
%-:>@F?+Ecs>]qF20\^r(?.lMa;3X,JR9\!U,J>h,SA&qc="g3>[a<8G71<FII<@P^U6sms2m?6XWG=CFlJ^\Xpm)t<?Pp/Bqn"KI
%):fadB<2as>,uc/Y-s'cPE`&JqN/t-VOsZ64E$5un!P2BrP\k`JHhM6Ii,BM5cp;Xf9a-Haj#Mor.hJ2Vq9^B*Q";BTQ/8Hc#'l8
%10-nidETXK2bV:kVUc!P24=?mJSM?:RSDpi!:Oa@\*JM<'BW-TkZ@IiIGM%J"F8=;eD0'i?4Z;]cMmU*j5g.m114;m/9:-j'*CXH
%]`;U:*.BQ+SXY`Xe/ulq;mme4pJU*YgVu1.`O<rCK$@M#Udbfq0H\>Yc?#Phj1p#fNrSm@X.JR&*ko]C2t'mUhRB!tkJZWf][+j3
%]mSm06*@.eFsM":\n(Q=o?Rikl26d-rOf-YXSiN@F(VPY.<fUq+18^noUFg]!?lgj-mu3N3Cma:I+\(/j9si:Q"<H=Ic"4gS!hNL
%G`Sf!nAgSV[1K`aqR5<<!uQ`#5)Lp2cBU%SFtX'bmTUKeR2%;iL&Uk-8iI0"oC,='"Q'TWV[FR5]^7a402imCT::o?..;h?Q^`3t
%^s1V2*9)"PaN4Zf5fYf*fN-l'6WYFgSI_hniCT+A>V#e8n0I%q7Kuqshr^t:B7U"F*oK-"j=P<@_PL@@_5,u2kjWrRjMe(m1+"pi
%nt?`m3DU6oRK29:$eL>mC+$^1LGonO3B)-Q<hsu@(O5c&<la=An9.=V:EWZf0oGNfT]V@nMq%5]W+mS:6@]SbR^2I/+hU,Uqmh"0
%`F`!(nsrT7F4@Q2ep'IhY9+5_8Ef,OGU4nae3Fi,Qg*U>..s@(Hg'SO0_Q*QkQKTBH,k%jlKG48_DDrAH'.FO`+\RIKJ._j\OW>s
%@2LLmNjt^UZiGiAi4Pd4#A]@YF^kFAeVLFc:(RU8Lt)u$2hgY5)aYdg[%dn1.@TmoU]Q>gqQS"HhQbUe)M/tmGak(eDAEA8bn)Bn
%8/+NJ5m!O9!mWL.Gr-'B!-)k2TBN;/!CY8V;m\h2K=kuF+TgIbEHjDPeY+\8ENirO:=Vd`AZOk.IVRVBRs$,X40Mi,5]AnR4=:IJ
%&dC(-WB(YS6dLA9\Z+s"@,Ske.#8PI%dc@u5!V4LO"8L[i#C^:8d*+X@R7)-$BP6a"!B3;P6nLa:d:(n@GZ/*(n7N)H\`o?("bKG
%3ZeO1?(]`Ik+asdT\;C`f,Ukq/]^?d]J(8u-An@E+ML5A'TtH`f+A38LjKJ""q\1XcqcA_5B7<e`1/lI&?mt/,E%2)7Z&CE"C=Jp
%\%UFXe+Z5U+e6#h3dk1j'-J(d1*cGpf9&h2(DEL@#nhigo;8e++H-T#NZ93mmG-#b=pi+DQpu;%J4B)SQN4=\JaKtq:Mi4R*k:"O
%;b0<<^u]84gHnGA#LZK>2?NFr^bTC^:ttPT2fTMqLuV$LPB`Apiq<?tNgU=VXhqX$86pg5I!g)W'5R(OUVLK%+pDEka9DY(H6,@=
%=.d+b0i-aC![L)tBW&U7^<nAr<4=H7k6,_n6ZVZY=tV%49Y?6akJo2t`3$m^U#Q6do4Wd,Y.+dkGmn2aDW]*M`52U]`LJKR2*>C8
%kQheMIc(I8$VIE(G"<to6k2P>Wr^'=;IN(RGp_HqjEi.I@\dRs4a8eKUnNF"*-$NkH7gra%uC[^D1m82\9o-V@'Y2g"q'@:Nc_Vc
%9pPdc>nfY`]E@N`0W$9i8-c*SMeCEE'eljsGb.X9!Jlo:/jcYlM$QEr$?$Zf>j7UU8X^J-06#noL`N#Ok6A2^DWTS#iXCVF]:J5c
%"K!7jk([sO4<K8l%*&L4(qHSs\F?@)hA[EQ>bDSS!J(P=0+]Lkku`f@.Yn7[RUoY6!]*f=4B?!Nc!hAf!D#rrKq)WT/d"@'d"-C!
%];,IXdL$Q&)M%TR9hO:S,ln"u%jX4ZK\=M.Hp8&@Zl&5o.[;77b!gjfO<>[!pKTZ83<ck<"VDHm5-R0/[E.`DBAfW1aAP.@+jC0e
%N%%j<:\u+]723]DapU>&(cs35#0;tE)??M#'j@]aJ./iIdM2nh&g7_e!g2.CL.;]g3,ki3nM*[3'r8)T&-Nb#*Jq+*`..j)oP3J4
%gS'Xf)ph8U(#t=scDI"!MX[QI#_sM=CIm9;+>NPI=Y2?2/MDI/J2+]L*Dp)/D6?H+#Z8\DA@7MC7\iBik:rdF<mcYHr0F^!cW94f
%7'<mmAI3m)le.;]D'%rD0eC+@FGtO(!dLAQa?&NH:0KP3BjuA9_Zf]VU*V$0,_ZMSO\ubt#]J)p83lqWOO-FP:RX1/\0ITLJgj.n
%_h[MVGtMH^+G;Qs"c44^2@;P:3%1jZ"rXNC^(ZYNO,O,_NYdd@*jAZI5\2JL#`N4h,qQH2%[4=A^r[uq"==F?Pg75Yo]:l168F3*
%3IlQ7$kY'P%?,l+9F,AO.0sh/E6#`uD$_=K"(I&J:-'`k1S@V5(SO0iON@\mN"A<&;"m,)OO-o;1m`K+M#J+I3q-$]gd8lgQtR0V
%C+DH#`#uY%UPh44@$+0c=G=.R_BC14;KFBu3m!cj/WaiW3Y[])nP'D@V'mU(#B\mQ60LfF_#ksiie3C*+G:_eRu$rq!@jg%Oq7[=
%0FC4`+^U9hV^uX12)V[bW,:1/Y(V6\&1MT+&0m_o#Vo<G(V;R7(4n#p&C77dOWP#u@SKT9aRU2l[%e*Kq(sOjK*/_-lP5R?!J6)f
%,%+',9GTSodRP,u7o([82tLV*C3X!aK)"Ve&Rr^f.*+kG"q.^Jff[Z[eDA-XN=Z^7Yc#4^PF%eJ*4jW3rI9'l?rR0FM]%KU<`9QC
%BcOr8HD8Su2"K;s94=<VTJrl:Su#CN)bkRroSC@hKhri<Nj"CRl3J0;cZ5)fa(=!RTjUsSAj?\/G@Yk)`W@!UQG[A;bU13#*'Q)b
%8=F0ND"e-A,esmlNm'fRN"N3iSZij=Br;*&YKVb6\4*1?r[?ON<_<i&'ut8FruBCkgmBZaV5nL]&I4UrIYSb.!!E%]eZK*E3$,A&
%"^jDmP6CYP/]O-=jVhmF&T[UO4@&sD)A^F$QNrD$gIK+D#_oVfNe[TuM5;?%C#I)([9*c-:4$eFJ=r(GTj1$3(3i[X@4CDE+Tjke
%3SWQ"KR%kHTG)n<Kqp)ZJ;n8fou0C_Mk1=3.#/t.j,k65#7$ul*<Snqo)KL?K^C3R/O3AKk<b?A)XceqX7/7dnd6"./$dS[^_S#O
%#pKQ\!0l6R^Q?S=iql-OW1?RGLDc^)>;Wi/$;6't!W]5%^l(Wdj'i(eA<=b1Yp5TkecY(r6L:)nLh)'R6$E_C&u6YXHV/+$M6dU6
%a:JFHWUN2A0"(7Po-)\GZ7Vki6&Z-QBW'&Z!U,+T!4`AE:'"I2!W6tO,kUp8"DOM*iI1h:3BeL26j<rhI=MGOKO(3Q$NN?J@/r^;
%!YA85^mb]o$m<JE'SO/U!-H$rJ3k<%.RJ`K\<LiUe<.;+U1TH4"9;_cbT!AfF%=t/,m%3c5Z!kK!)\>H0UkRV:j.`aJWPuJ,`$=/
%IY6(#qA_hLL02*#%IoFQcp6;Wo8.A/*Drm>^ibj#_/3ej-)!SS\3;!L*!Zd<N]uUAFL+f8kBM+@OWHRmo`O7$UVY$$V.geiGQ<9J
%j==8HYoG]r-(@Bq?&qOJA0Po!9HDNc#tG)@FHn\2*\8MoL:Vlq1&Bi0.Z$Um'E`HuC'J)0=G.0_&cmZQ)it&'IgQf5d0#e)EY=tF
%-Y@(j+LZ2#KZVoje(CpKmN>4#[=Ju6`:Idl?8.?=,'57d'*Lc_O_3q]gBL1g7>?]!+KiU?V<(1TF<h#Tl^\%Gfqu-m)2F<83!ufS
%qN4iM*!E^:BX!MLo]n5G)kI>]p.6<VWN45L0]iA4cc66j2454.#CJ]a@r9;QF(-l;e^(DP<\WYUFd0$rL/A@[M.4D<D6C':2$Y,/
%QMqBc"-@/n>1cB)qE&s4;a&K;@l?V+Pjod]=/-/UARa;GY^;DN(,HeI\Ef/UX?:Mm@7Q$n0lfLNoe4?of3$re9gD\1Fihm:ZSrVL
%(3(R<#RBie;8gl["1!-8pou#h@N7.8.3M,keANPA.Nmu$Wam(%;-qI@?D)n'kk##iZ>2N7Iun&lK!5?2+l&2#<CSbkH38cuWH:YL
%)FGC%e:CHNiI6GpKMo<b2R!iTl]^cDe\hFkR+`&\8hh.T=T&4aJfb+^!2O"Rabtli:n5c?#YfpgY=^T*#WR)T4JL1HAjc\%6lJ$E
%;NSsoqUt3\,$Ph;pXi!s\-2:us%scl#rR:/,6R9Vn86&53%gqI+q&"\p;LGf.6\fb"laNEq'>?hcU"OAB["7Pd#ap9C4.I=%LMDM
%g<tL)jNI*:/efP)Om"\;<e(cLnQ8F]&G286MPgR8i?1ZASdnscWFj)W;\3,lg!M^L8Boe[,g@8&Ju0hj=^s*!+sc$+.VjR1lGouV
%PQ/FLUQOqRG8^GfDddFs2m>a+_a0oK!'Ni7Xm`bH6t%jV.=pDjTu;8!Z\V=l%>ZGEQg1HP-]G$iKAd:D+n$XX.hIL=#_a#08KR,F
%/3R5alm!<N.0*Md;&mqR'NG:\)CA]8/f^"U$+^*H+%_"-Ar:RP/Ra#SEhsk'/O@[5H%IQT8N;k7kC?WhF[<-3VLZ_n!.qpZJ=sIX
%&@*';f8TBWC6,l_KF&3V[0/NN'8!fmFL9`T,s=dbr7GXf1BJNu87^*]O`>G4(-`ek7L3.lU2-VKY-4Hg4pU!h1!5Q=GlU)8R8&KV
%3tmFAlnlY=L&ds3RQsbXE!i]3q16F^#ahk?8!K%Pj;$$bGRHZPk,M?F8;L#PdJgXc8-1LkAqlCLRNX%X&G!>e,0:iSTTAULTL$@4
%:\7VB=Eojb,01d%dXVN'`(B*%7tdW_Zb[cF6Kq#X"j99)mmP:FOB_d-QN_/+V5B,8j;&:;)K'M#Sja42B,aEH,=%_hp4-t0F?n2:
%)`sj23jE?7&Llr!0902U,*[)4A1(W:."Y)'<^L89W^B8['NZSPHP[l*gb1qRG(FIH-<1=QF$F"^XqnJjCl^"nJ.V?[RBBBe`o7q+
%]umaM^-[ali2fX)2?cK#(*F7]+>"?O'(aIb/-%!_6#%r9,j%C-XFc*<o?_6RX2HG)*\iBJ5`^&Q8k#&SplSuAFO,P6JDQ9,ROW$W
%G-5AUGD^t2L7C!F+nfaJ8:'Pk[#;cHJIW;h!\*Q_&6ATt%%,:e8h4k+;\Xn,du\,ZG@W_qnnpMJ(]ang#97`i!lTs?Of2^,@8eaT
%eV_K18uJ[31aY1d@"2=6Zc'9]iD7jN>I_2^WrTnkc(98D-BSk^!4Ip:6<4E>$*#'g*N8@_H4uM'f!<8Tf`r`F3.NuaJ&gW2i-q%I
%JNt$B5)OSUmo2MsBX0o0Npmj+NOYT,m%:C7"X3k:.\:::UEa.W\fEO!K4!.tYCd<0Z-YgCMc_"h!^6`kEu(&u#SG?Nq@,\@iAFdP
%<][k&&!6<+6jHkhL`s:A^tnojpN+9C7o#$TnK3k+D*TZ"UCprW*YLVi5]l^Uc/'Qs:-n7MR4a&L+#@qnc%?6>pd8)Dc&"k\1Jg0T
%.ho5,R92aHYSXO0_`HfB:_:!@F^Q13Uu.ti",BPS4@TtRMK4LR6u:lc^!RJo96<BV)Ip2^J9W)Xd#fdY"AU+Y_hFb6XFFH=S:TrT
%H"PUL5YWVd_PDhdOgSAiEUduLKVB"f/%d2sT8!X\C_Z*9KRY#ipkK_kg4$MmqfrMXgb;KE58/jY,m=<c1V_uAX/TtpN<KlPd"-0N
%_TmH.3FFP2_CE.[96eWhY2R3tiL#&'^eHtr#2,!qZ;M,cn_d"a4cT`"iON8<3r7&i^)NsN&sG+t\b^i]&HitR4t4#X,:&p5a!@#_
%5gI8Fr"G<2J8jA'n5p4Vj<5P-cA)KE/IjHNAtpI_#lul%Ck@aM+ljIJG9kEEJ/E<-&5jN86"U:?I@I!KS07nu4"t%`]QK8tlON$J
%!JDa'Hc<7^bpjML3iYLR_BArLeLV5+47^k1moca!BfVn12D%I8'X9V)@a\IX%036G-CQ;hXUFq9iYt@Hcio^W\Ht45NY,i`!pbb@
%;ineQApnR8Q5X^&nLQ/_O23AD+#*Vc+KT\[U5jg'65kS6e0=/?Em0Jij9jh`!=_HB2h7"$kpPaC!&9`JHpV^9*@VC??5/(N?5[`?
%:ln4>1#m#Oci.Ubr"L>/cufDF:F(_QFmKr.OX:3@6riZPJU#foK_1cK"G.f7*Qb\idul,'K_g@RE+08a*ijZp&n89\H!QKM'gOGU
%U`_iJ9:,jXJ<V`>!Gg#(76=LJn6eTt`1bsf?8V*o\V_Y&"sCXU!27j0l3N`A-u`#W^ta^&+NOp/MrJ[=Y$,_Q&k`:[(+D[<37"(8
%`XkH[eX5-XkB(W=aL=\Ree/0=$%QE.$$ZKnDD`9-LHtc4_Y>`C4kTqt7IVho3f7`ErGt9U]7JmuT1F,aOP$&K:+8,0O$5mL$A#E5
%L2]XVMb.)<DFtb5,DF@%bia\C2W+sm!3.7c%AbQUh0U<W?T@_E(ktg]-d4jV85.u;`Q(?8GRruX\qtpc""ON14YDY*cVFC+'M)17
%7<2_ogL4^:EDhjc*:RMG\V@7X!lnr/SCk7u0PEV*Hg3\JP^O&,K:JWk,]F/^H;Tt>D@A]=Z3WdO!9XLlL?]f^=K7M(`+[(tB:hm.
%&'>@6?`3KZ4J1F:0QWBcO:*(mY:ki:KZDM1V_raN,_CUmf-^`Qe$hKcL[r6g)t=D*^(PW84[P\AVNlBl;J"cRp,PGn)?[]/Yo#bO
%&I05.JeB*C--A6O!=a`C!_5@!7[PF)`D[shNkged7Z'J+&\@K@s1GNk%[.YhB8sWg=>P;C?D_V'ML*'^0:`sCLMU5[.#/m:QqF(m
%IR%3e1WZ7tS/3Y@%NdGh!g7O;jA6D[]Hr;YYCPtXQQV%o:C\duNIi.aX()l*`o4Omj=2kohr-\(*TQX+cA++)BCdkD+9t0Y%bIrm
%h\I6gLfO5Y6thNkamKIg;G^73/TDh&OMckELk%OLg>HuKh@+FL?q&bU%2@mm,,RXHjmYU^N\[@L$L"0&;F``0a^j"#%L',S?mo"?
%"Zd&b5n8n.3lk_r,fl+`,fg"];r3C"3BZh#RUH[0,]uYu3BTTI*Tup$8U*/q*F;E26qO&h\&A.qJI^R4G_HWL!($gYbsHsk5T5Ie
%OP/[+U8oYm%L#5OK8t!QJC;Ud%cP$9iL/X3"_@Xud4CO/JVHQRYbF4*aTJN-QXh:;QpXf9)<UDjcD[$_LC]o91P&(tqOs]6)ds4@
%PiOSEbQ3uPJStN'Nj9Fp+c:,>4F%sM#V:.'-EV)5;U>u1\O3AA\AWbVObEdDh+?TGJ]#3$,L-m7KhC>EJ]"q2NcP>`P[#&F%Q,n;
%,d\N+(<&h]*.]\:/L/Q7J10$W.ghS9nRIDs"<dTp(Sp(2.3S0_J<4hEH_i;c.5p0*JX%#V15.^imA/6_<<Jt$)$"ct^O\Q[JCpC6
%:14W_=LR19if5c2ZY)"qFd+*SOXLG7[7;3J4$ZWgekqGA7+e%:UaS_?i^H37YusaC76(G:Z^*!E/gdAP3m&%jLK[2.oHm4m!tIgK
%2+s#5J<Kq"Y-Yo9I!*Z+`G8rf3<2RFjFVt'!0JX,O<_!_9JIb4J8OB>QUjVSEr]*.3W]jU54,tBF9(`lEZpR*^eToF<<HGY=pI*A
%/9IC,!4*lDWDf;h#V;-T;)(1a2C2Zq72q74&4i;nkhb>JRuVOm/sjlJ3!WFVq>o8('^&:(::i:@*"#4c;EE/:\2"3oF9J`hL_8hN
%TN#h@7gB<tf281cE.oj%5R.;.iaPumX&HLlMe%"s5Xu/P"QOO2ZG\a'&4uk]`&SNn\Y61hd?^*:3<Cd-N&V'@?l0A.iuF_-=<*\P
%6%BKRa_=@eNcV5#)<]?bT'>JAH/l.TVEfnI5)t.nAs>Cb6G@%fd,Fk$,bAa?_+>[2:_4Yqeon@fMt9LA*PO1u9*o_8;NYc"3dd!:
%`&c6G6It=-3!D?jclQY2UB;NnaL2QB:K;GpKEH'jS-(h!Tl^YT$JIkD+Jc4)8;AjZ2Bs4Lk_V,>C@N;NA4if<GGqCcN-+hi;TM+c
%%UV<#-.2f*8SZ_J%KI-,8Z9ON3.4(Z*POL0N-L+ro3(C(#=++*8A#$I2M^[B]YbNi,N0+4#l>fi$U>]_:plAb?(KXu76:JlH']64
%nAR\(6otAqr"D(K!e_:u0Z&M,?q19_@#(>(3;d0Q=L`+c3ag3C_+:X02ONLG'#];6-'cA)L4HYjctioTVa\`j`B(@\A;!!kO85nG
%3dd";20>Vr'M-ss;@gS<Oq8Eu3e3TR"\>Ek#`b,K`:2B3W<40TT.jDGK7UfmfP!=I^a:?*>65h&JQS/<,9de(MDsV_"m4jOgRHe.
%8F_<83_W(b'F'X#*Bng^P<d/Kc?<'X,E.FBd>nL;oSe>:f*S.5JL(J^)3.2m=aQ5K^tGh5-nCh?Mu`r-F-bTa2Fmm`_X&0;"ah*f
%?l&/4<1?OD-$ci5i/-,\7(IjhFXEQtYn^ZQP'e',lk-)T/[S0]T.M[5:GVEVM2llJ4L:4#5$&e<M#s;+Ebon^#XCJENF%R(8L)D5
%LI&2g^'EnV`EedtC^;T0jb1Rf@hH`m?Pdio/IEAu5+`no9$`-K<R.8eYst]W"eassU5>2[>T'IMej4KB-CIG_"_b;rl48F%/8D#f
%hIEVt80A+Hf0ItXhp`cbG1`cCdEN)nSJ6gO)rKU&Rj6;a5(!tJJX"h,<>rAH_aTCh1>ACjX<'rqWCPK1Hk'u<HW7:CU`Zo<MrG,F
%@,iD?(WE-p%>O3ukMd*ID5&spN,hd6Yo"^GbZ6XFYnTT<C3F.fZu5"CeiR0`!9Na6W[A9ITH^#qEcOF^#I/+4:^VNi$#8,Ei"1n$
%6M3K^5s*fVLb;7IS9Hun(5p!7[o1Sc*4a82B:U$PS4a9@A0I<>-/WQ_!iI/S7&M.CT:ZFc>>e,pk$Or-Q5cF]k6EnfA9Y1U'&ks>
%J"tRAMmJfDZWgb7SldjdP%_WPl_C%*O,.dT.o[E'\0T$a[>2Y^.[X%>/g-G^$'\7+3!/%@pR)k^<p?fZ<"bRh4=Sh.c#c*_k]-Yl
%kH8L4Jp/(l$m_Wf-keSe*\U%]QXH_q:(530l<DKt=""t4EmToDS\o#/2D?QI7sn":CK,:63JUkY+93g"PRGm,J4NrGZ?/)5M!BG>
%i51"eA'-sCBeJ0q!W(bO/+bcu+Ac3$glKpX9Shj?!MiUFPc>oY=QKlBP)aS_6Q2[Jh$!R:637H>eu9hNpe5mRP&M?&,<K-[$G1,4
%Ro<!YXiJMB(<.N'mupB'f_FuaIJBL8d.-V@m3?**kd!PK7M.2<ZE^qbZS(gE+c6P$@]u7<$NO&dqRMG,ORU=K!K+"td82cXb&Y4c
%DT-$3<u?]EM(ne'%n+3hm6Whs:_MO(l@AhoKK<uDoE.pqh=S-Sq@?%K);"XsN;^-Ym\N`-f2r[_Eo_tV3/RH5I+8>`J=Ih.l@e5V
%BoWs"@:mY"&a:c/\h+3g(7,`?gE_q+/Ycb]J,u-rF<U^Im*h>#*&Jf1@biVHl\i0ALlF$,*g'pXJV?Y;plM%dm[*7DddE8&`US^O
%hO5#_5Y+a`\X=ru%)`AE,Rd%OBHeR.:5cIRmNX>=ME)b*jHtX(!ZaaX]nP_N!**;m!$b\n<AJQc^SV_CTf?B>ZcsE;im/H27Ohr1
%i;HeB$Q*sg"6ff=%<]?-OY;_T/nKYse0l+cPafG#,dU9n![BA'##T,[OfO^!M[W8.$mR]fSjhXbN$Or&'L8bKN25lA8!bD]W?fmr
%G@W(d6tGfHc!OB&"",N%?P6iNO:digj&BD!^9\Ggp>FUL9umf>^=uuj+d';$,u=pB3sgT&MH<(5/K]g!(+'bbUuR4RB7f>8Rnt<!
%5#j#:l,DLi\sW\>cm"O!^tr9\:QM]G6,_f4Pf'>MDZI&]m7VG5"+oq]kpSfSWrYUD1-&GW,ah:d(5kFQ?=J$Wk29.mJLe23\J'Z)
%K"*&Wa@\HG5`ho.>cD8a`+$4u7iZ#9K(W`pU=F""Q?-'9UX02]nH>$!VDXNeCS?naFn!0J^A*5K#24H"e;o]XS5LT-<#&pLgAZU3
%3^JRt>*rOpTa`][f1?N7>cE;kA;0A,OF,)o12bsr)]FMWP&>H^R7c]WC)^B1bW:a""R;J]-t,.LC#r!"B#Js(>gCED_-(qFQVmma
%36XS.U/R-V'k8CQ.Q54\i"2A(58OgKk3Mrt;5+OcX]7D[-7isc>m(j7a@n(%!"qd^\W[I_M^>hn7Q`-0AWUAE$5*H@6rM_ZEib.$
%&p`>$#u=%EG_;H+&CbZ1,Vo7Yj(upB3G'5X'kIB=-o:3@C<;TC?XV[bL0U&T!k'$h'_1Pr!2,f#I:aY,qj+)UnLi#@KaP[Ya`eO&
%KPqe4,.BCukOeLF(?A>E!,Od-QN9AA*oe#!!4'TWn?9&;;KCa[+m&n/6S<*]jI-_6#e'Ntl9YJ)G&uLM5WDutY_PM\;/!k_>?I%n
%f>^>lk7M[T63:Uk,SAbOOWZCBaY<ifGqlL3M:e)E3]@??a@R"8*U9J:Ti%%pYJcUBKW)s`EYQUD%>a-2Ro:ji!'0?d]Q_.n,+E9b
%Zo!^d6t2@ITjGCTPEX'ZB*!h/8`XpH-\l!0.+Z(6L4u-?%$4:&4?lO?qD';u7aV5VgECusY)eDbcPF2S\f5_TOFo%)i[!"jfm+V*
%e7sfRMaFo$=bae%,=kqt\pp8Z!bZ"9\X=PG)FBE37gSQ!Nk&iJ8WGoB^E1Ad1hL-/fV3gUJ:M4+gl^FWI)U`3#]X,o!$\!8L:)_6
%;#H##.RSN$pnEZh+9LMB##hW;*tUt+'YH].&R4li"&CC^NJJSk''S?OaHu+"bWH7U;HnYfJtLL^LXaj6jG_94PArip`OkL=gJD&2
%qFH[*df\ZF0hWJ7HOL_D;W=rlG/c/l;$s=g"dg&e'$U'4lRcQd-C/a(\2RLW*CcQY`SN@T\o;j=.DJHL^us^(!GMLLdRbsKdO&s-
%UY?IMQD?nscTk+m#m&C=((s7oSM,Kai(@CHk2Z=^T=.MS(,'_C-&GnN1>>Xjr4j`u1KF^=!MF>)M?4S/'AiL(F90c4&L:^>#ENr"
%OBd4R6;b`nP>!)gR+qgB<\Qd$%M;2J.88fS7557#U?+s86l<6mi@5#Z#@UNI=_$(4KV7.e'Gc^V\[0.]O-/-#@Z[H_,*K6:nCU1B
%Vi_[7A*>Mq2.\%djlf:rOShs@(s,aO&eqjL<)S&hY:I0+<"cfP.0n@j="spj9ojE*$#<CO[Z]VUI?d\]E_Tf]fMSQ*Mg5P\,V)@/
%!?a,R>\U')iVfmK;al8_=O%+/"pP&-H#46@i;6hiO)mekLo**r.+c6ZIgQar-UTtumMF$[@t4oh"Qm:;._C]%<^-"o]BnU8jYjtP
%mf(";Hhg8mhPrhGGXdc8J64QY<<`G32jhQq<O'ldO-n_M4AV<S+;$l?"/ZYlXjo_!p'!aKM!gMG;jI7q1/IreW+nXSWa[KX6.[8Y
%5X1f:AY\W6o:9,''g\*1QBYP4/gFaRS5_k"5XI\WdfG4ngjr+8WGXgh1_@IiOM*922AFoI4R+=LXN'C\/T`ZaDcc%.2)j!#4Q%D(
%]qqFT!I4(=9Blt_Lr,.okdU^l#C$EX7Gh4FAQTqo*>sU`"^YQpDupT-DUk*BL'rjBcO$VOO`V5J8bK.)pO0naYGD#PRhAaOGIPtj
%GB!S`q"_=D*'82kJ]kbST_=c?1V<o1\HL:tPHPrl`"r`D4q:\&adn3c.)Y_qjLXChP_^*c&<,F+Jh.31NHM(>''+STJ*HY4p1kh)
%G/D*LXBZZ]7!P)1$W"72%ri51&J<5k1_^rNM63RkOYkuulE15g5_jcm\>i7u$+<W**RP/24_9RUlt"",nQf<h*",BNP1Tk#H](X\
%2p,P2#9X%g$(X;B!+!0-)qelB7o-Z9_^JGH+3[g$9<hccbEN(fVPYJNkgXgU=u:b7[0R=eXE3'h%i8JJBJc\m"J@DS$oI\Y_WaQi
%-KsJ)?@JgRfF>\:JWjssj(Ns2B?X[%5h9f5.UNY3QVo3%fQrcO(+7$kfci[d$.+Qfc,X#k?1Q".RoYM"KgV@b"cu!D*)^n_5[GCr
%/L&,B]`H:l!Q&iJUhgWnXuPLIC_7d@eQ=R/"DbZ0W^S#47J++0'nH?Vl6LpI!2?Y0Q*NgY;S@pO/HWkb(^nB>I(4Q%>YpU*!^J@P
%ihS7MDNJt--"(O'+?H)AAW$QLHf<Tl#8!m=Plt>6Dp#K0i":/m!6KF2Fc3uJj&FHo!938.ClU.KOI^l+[g3ONDM[X!+IpH6'J:Sk
%N&Z!Z!lP_B(EIW(Om5D-+SG8*eUTK"XB\/L=W)bjnNZ>u"h7^h2/`eTQfV>0GR9SN70LVXZ],(-Xfl6q)SQnR$5_/V3c5%Or$Dm3
%_Sm3#"U32eAI'&(qNbBrQP;%R9\7EjKYFloJ8sNl5[;n[U**+sbN6<(+()B@EXBo)!PnFL).e_G/0T?h>E!\aMoumpAoYAl;Q"$A
%rT;=OYQZ8IPV'mPU,sW*gsd#lOpVar/hB9j"X#^14JL"761;&%o\(kuZCWXZMspo]8huO?75Zg&Pt:0UEFU8(!6Q'c5P^`o/mIu,
%C0SQ@Ul5k8<1GDVL&`B.<sfQ@_JC_O>6H(\d#;RMe!M@75;F</Wk6b4,(]Q+n"<kb.:;MhP/9Xu)-etRjr4;fIrjEiYTlcN1?oVU
%8H+"9>6G47OHL:\m#G#$P.F'^no`)[[tp!2@]*J?#S8U_:GQre@Yji5kQ_[16r>EM!TNX8EoA3m3#'\mMZD]PM,6nja=rO(^:J:2
%[j=:T1t!b(.Du4KHm>Upo^O\<c8n8`p609+g$Su6+Do%kMW3OPqn"P!#ZLqD`1e4P#RclmDUHfV\8W$&*9W'V7JnV9<RJ_sW&"_[
%9ai%rWts#s5\W*tLFZ^ko+a2"'dQTd6_>A8^ru4*&C)+\o(Hq1[$9&9j<epJEaH%A5p1\[;Tf@6>^0sb/GD9MlXU":mOGGo4Wg0X
%qZkNt#nUBr-_W?R%[*;!FYc[.NT?f2Uc:&RU7\s'BO8D4D*:2tJ8fVTUIn_Vk9WQGBFG!]AoAMUKlG)S(Bh85CZU\\8]V-X(kLbN
%+`qr/KQFp,'JAs&0S0E%aqZ:'l3`''hp[.^S+/\(0Ybe5:)?TVf+blB#)(5c;'#msg&XMcE>[NS3&[VM-A<HGPVcI=)#]=(0'pB1
%\pW&5GcYR=D!PT(%Z-6h>"i-hp"AJs3:LZoTer6[b!MS_EIIKaQEC4@$NZEkRh6LA@uD$1\0TW8L&_p41Ac?[GG^jTCrE4oOkGIN
%b2)Hr($-B<'I32=DG#KDNU^*Q$i0XDJ1ubdKEaSJDl-8Na9)0\>0r#^?5on?oZ=/P5j]9'S10+^fma!6(I7U=h$BuX7rl:n#)m1&
%OGM.``"%<:!E-!dj8`_j@g=JY9_.:"c0ZK<1;!`\[1T;AUX/+^J>$5FMrA`QGk*]3PSXK7^7L0g9?')EZXFuFNPtMiGP>sfRN0q%
%mfr\3k!af;7!.%o.X<ei%M4.UJg;\[-\FFV'`gG&+j1PC^JD&VY3tb+LD4UQL_C&eB(g?@f9`Lc?$krSDWt+3q]Im@E9n6*aAE_;
%7,K%9$C&2WiSRUs8Zd:065l6sO3cH`F,9r'[8W/N2]9_\ESrQUK[la$)SjM`0S*'Vj]rnW>$"0BGc-k+3:rakT^[b>+qC(C'\\-S
%R-WLPDNVOOk0J+8`9`W`M0k?2FdVeS9L^IoC_G@hfMh8ZE)ZjcX&NuLDV8(C4UTe#"5QGpd^(DVdG3E?C?8c%eC-?WLtaO'I(suO
%89XNdEJA6!Ml4L#Z/'!DX7"^+Elp@?Z[&8HdnD[#RfSYB"gl!$>.?XGs-E#[*Ql=Hjea.m!jQA!1G0]b_&.0$#T$k+(*j.<QR&ml
%puT3Vq:50rr`VZH0jsT:"ES3j1kk[24q$s3i5!5O,[Vtd4_E6M$@?'i&]go'")(i+-Ur!qq&H5RHXkZ9eVK/ub(5-S*el'kcS^a`
%CWWo2k0UW'dNYZK_@l4u,s`SUrn'r2jgRT$I*?V>+4h9p56g\$5ojn\$C!5r&;Z%gU4Zh_kuulS3l@)TD*e@AFR:c(ir#d-#O8Ir
%,!lF<#4L\FBfM4H+MR!&2kqkJMX'>WCn/b+fhU`48+X`d]]`kPWP0D8S#>?2P0b)aGf]!-JWEnMe"F8G%#55%8DsqT_LZdl)3(+H
%I8QX#jpf:Z33Ppf6(lVMA?8l?Q1k9u*i&IqZ`7R=\sD#o$e6qs%3f6,;T)V3V-h#D@WZ&inAfPQZ#I>V^DHklWsBlD2[$W]k<biI
%+7nse;357[hBhN[-;(>U&kA,n`;=(M]0,-%2_"s[E[@_^rBTm]AgtCa_BDiskYQK.=t%VZkWB<al[d2cVS"<SDhXtpaKn)6A8EU.
%pQ?`@W)KXY_?Soa)i\ip&9@ek]Hs2J3*>5Ab$6@B4Z1UjpcLcK;fkV<B3J^P*%*P6b=[Fbb;Is4O^"K(()rSYX%`d(lIp]^9XFLV
%R0a.qBEFP(#tM#TesRf%a%<&GM(3+[bsmCPA83["A\Cs+ZMBnOKs>u*2[fT`&DFcaK13p_^t0Lq=aoKMU'V.R-e&o:ldZ\cR"Uh"
%C"&CefGTo)s4l[;bI`Ga7%>[!J\$P$;MlKWF=FE?.=L:kQ/uS#B]q."^o9d=^,it!\Q`::5dYA%@EDgYIW7qbq$iD@k5_2V;-0b-
%C<hMhj/J[\eWGSD>I*qjN;$Z/%Ru)fllB^?oC"/$U85&Yre++E=d6EUJe,GYC&6p,q#Z-hK'$.K(2,Kk!p_M,Ib7-Rn`4iD@_N-7
%b>85;Zp<pWE.M/C+T%l("/H'T%(<rKZFmPoDTeD`HB:th5>%FTI2(u>h'C4p4\45\s*3Pq1gf$!GuU^=lhJ]BJBji3IQgWHaY<RZ
%b.U6[(BB+TA%W3k4XG4FD9u6o3/,S<5pA7")Fb#>PLG3Np]p\)6nT'5?$>`,;0*ID"Qg5OcVo\gI[IE1&!B0[>pgt3@'@I5j<cGS
%Otm.gelQ>Ogj;AW#snW&Z#ul1B+HRt9r8*7`G&"K7sd#p[D5NC!fF2!@E<8Pk"T-^L-:o,,*(#\DZRVk;F^d7oH$k(4j%mg92#on
%4R"P[I'#G*E?$I"`q<0,6/,$E!%$G$+2VA5@=S]AV_q(D*2.Y1=q21J1J$0K!JrU-Q]:Y?IjLMuFBI;EC>[4W$7IZh4N9N0];Y]=
%Dk5J"g`.Z3o@9:<j]*N)r"*0?1X`u+4iIX=-%BQgE@d3NHoHTnjm:`<4c$fUSX0fARS=V,SsVW9dSO$O`465R.OoCK*qi8p_Xe75
%F1EA>"<Mr(?i\MAl"OcqOs\MPAY4N+cV.?tkiAJ]1Hber$5>a$<Vr,uhU7$!@MV`FJ9Q"6`#Lb?4!tV-lZlg\gHL;o6kmLQAi5D6
%]Y>*8JUD+%mu9Fjm6M"$;%)oHKXg&$-[Jnmm4]\kmLh+bLD."8WRkQ-:+RSF-mO7\r8>QncjF;u;&[-0#2mii,m^U-qb]njAl$f%
%2C7C$H`\ao#Dpe5Zcb<!Q5&\l/#u`0X2,cJ^cY.3R(ir'"f'Prbr8os`[rX5c?[hZKAC$R!Gl'[EkQT=$oXDH=Q,D(h9'!T7p0A5
%=ktZl>bc#qNK1g0!.p="g)qD*SDs+d7=6k!,QQ/b$ar("6GaD:#m'LM.FgbX(BPQl-fdU5'mQ,R-O1fH$:oiJT`chRh#X;F9>V@S
%F*b>pqWK/Eo#nuV81(75!E4!j^]><K9Yth"*;5pgD#eq@Vn%FO-PlL'LTS=S0SbagCqImu#Dlifa#38[e1=4;Eiq8.2KXpprt>"X
%9enXri.Gu*cK@s>@*PYR+9c#Y;`ca`O!lH%(4u_$K97!#(Ys%ARK*b@7<d'C-EIl6R"tp&1/;m=Plus%0Y!;;3)HgdKWsO"abI_u
%BS$O?@9m-6^ckOX-'5'FSsCH>:hCgh0nX\s7un=]YJk'JV8$P)'06\5(K*.t.G46"A3.gpkELo&]n?HMi$Mj>+;$'Oo]3Hi#4%Sd
%/aV[_K\3$^q'r('Mh.nH&t[UHn9X>=11SR2+Ran0=8H>bjuuJ<Zt5sPm]/mY6t9%JQBYK;qG;`sjF($F8'PWJMTgGX'GC>Tb_/na
%1gDS1hE`?Y_b*"M&$6s..Zo(jIYl9DEl^NFJ0nf90[J-gKE>).Muk&K1h]'62*`[sgiiFd7e#R!)n2faU]I@6-m4=74`fhRkQ&Vs
%Aq[h=)POHF8gn*h&mf#U0]2h.oJW-j:TD4p,4o0f9U9gfOW[5I+e(bt;PG+`m^i5ZGRmcRn=jFrpO+q1V;KVNG/94mJ`KdLDNM4W
%,Kalel+oVd]t3R%bg8s5HmAgjjUGb`\-`!rj<)GkKu@=p$hl]`H62J7G]4!HjDp\^,*jWc#;Ea4Rbgb,9n6SA*!pF-#]i8Dd<+?#
%&p5FA`BE!79_I:[osPcX%=s;rQ=IZ`5#.8L&P<XBd'IY9&'W\d3s5E'q]q"QQ3(%h3ARsL!c>m=,OfohYUlJP_Q`,KR9'rH(U=\I
%.$:dK9-S:s(OE@B-*=%'&f4n(AH1IRK/[)e0\4_/`Hi!<EJ*6;&.7udp'"Up*]^3PUKA[9VEZuKNO=t_.<],.'jh/=5&8T5BAd9f
%6!TDg%EnPsTs@gOqr;8qm$5"O#m8pU%3H3$"OK/gr-4V(\0uo,Nm6-$kUm,TY1KcS"ZlF?fP<*5og2L--uX\(O.aD_=,0IDV&Dd=
%K2A(HcZ3CbE.j0sOaZmf:RX3h>1hP!K9mg[X;Vsa4#oW;*0V.$Hhn?CDb6[@ApV1O+OT?tc_Cl\6:nRGKJducFAr0%#g&J^M3XW:
%B(i\cWQ8aDTTJheCb[PR8;?jY/^kJoJC!`A&,Ra@+Y()U*1Kc31qS)rI%Tmj\kP:e0KfrXg=Te,!orCi\V%@&l5&=`6iQ2Q&jKL-
%ktU`;WeV2(1QB6S,E:fDCRJ?L,66eaknq':iontAhW'GI5X'j'h!/po9@V,RE8pLpfB]YTRYa\C9N1b+i\Gh$*u6?a6/k<"m6k?`
%)>@Kn-24Fs-/&G3-RL(dLo#leVgb%+7hb`Q]:/#9.T_.R7KjDm&I8nG!+19':aiWl'8Ot]i;rGd@:F=h0hRFL=N72d.H(ZI-]`3Y
%^-aG=3$!+,D0oCLIuoV.4`<)orN2f?\@TS>5tFa,(+39uFJ?VAJ6$iUrgPW0K88+U6/?<l=NEE7%ZP4OBMHoJkSrhVAa80JYJ>?E
%@OD67?O5cf4!7&$c]eBa2p0&E4&*$Z0pWc`BrW1tjpJb9CkR4hL#$h3?<h%0do,UNk>YNAEC"7<!k@^,P_@ANB!0+`=u`jDFa.[i
%hW1SrrO6":D%)n)mNr.GP\^LV9s]^35BddIU)JMG9UNS3@M#(?f4DFN=Y]_[gDE?H8hSi;+FkL#!tQ?'&6>dSYVFaF$6->Gi8)I^
%#>&ukO]d5tgdYnpR&[c\6*E_eS$Xp:2R,]5NPTh*3P!f[AE_\VZu$3smBSFt?akHo7'\HCHatM7+OSoR=dKk6%,8?inmGcVa^ng[
%&Edm,!_IU7i6Q+^o%gs[j(c2jH!.uS]ZggjgC?]j]Kd(/n/19k5o9KUD-deIW=X)+0.Yb,[s;Cla_3X)K$''N5^1`tj.@q5h$i&L
%9+5mUT,?s4f3s5I]Hf4!p>NsK7ZI:R8o%ds)(fq(';ncSf3uk\OLmn2o\m`"At7&W`#snR?;L`/l-[)8.NPduXNLsZT5@k7TX=.<
%"i@J`Z7[XEjgK;_,dcU?/h$'Y8)(U?^kS"h?1*l[/pE^BrRO_P?!-@!)VimI2-Xp2>8OYF\%?XrBC8O+Dr\-Lm#*PMq"?YiZ=5r<
%h6K;"8r8=;_$_U0Bq#l;Fc"S]RhgC@DAUTqAO[_dRhdf'5?O3h.>)J?jqf31Y+K.10#LSJ_n5ESYUk?q0"WmH@^]EbCGm698gWQJ
%q.(0>?6s[Rh!?Gc_u*G1'rYgC@E0DJm;,\*@n+V5o=3+r"i=OG!;L]7,\dU=icebddFECMgGA=#O(Q<l,RArEd;B6scSM6QG$+8(
%hBc[B(&L%sRMl$P=IX:VGS*G'jnZ$+!T=VLMMCeM"J'fT8P&bgb!j9uA<U<F(mT1/Hq;X#W^flHj5hR9$%-hl@Ef^j2nB;-[rHJj
%-pfbm$SSe$aaq,b]rHiKY\oW7TtV%(Q%ZDsR>m]u1V6]\](-c$8`Qo)D)3/a`Tk=:h2[IPj[p?_!"<MNno:b7UB#?TL,("P(kdEp
%\ZXn?!4.4MIRMrUH1f-0W7aCSJYkMun`>H2.OnG;afq<l;YF3nc9E'F9tf,JmOncXTK.ZIQ!NHQ(;"]?,[T9Cmb\No]1B_Q*lA)]
%Q9gWqEC;RV(i+GVrQq8T32S-_f]cQ40$Fes`'A^g[on7b6CS;U(F2;JF$r_57N/'_OI0@kDAsnFeX<)@3L1%$74'#Ve[s`Hi_ECu
%A\nt"l[:fnr(t7TnK9^E-bgu6KUP/9ag"XJ.6WoKW[[(r&e`TgS(_:F\L/=:dn(bY3_Z=k_eODZ.!ui#V]i,%c_nc<pf?b1`_''M
%gP?+e+bq+cjs-1a(jK;=_\+j!!0t8b5mr;W5\[54AQX;loFe!HV\XPpV'"I2b5tD9"Ee\?@Nc+!d)c1kJJOaZ?=o^B]oUi=]U=<1
%HCmqSqa61.'Y]33j<g!1ZTnO[L)u$A(`l\aAje5)eKa^mZb<9IQ9bp_$4&e20E[?EL?_h-^a"ddPu2h>9'Cp/')+i,9RO+,E'p9o
%X3-Em6,S?R)HA[1bd#ROLTTPnhCC[$TVG+q],KtMIMomuoS661X<ZjUOYUM8Kd(RG`Q7\j[8<e_\H%AG)4Q6;L]L"%geG/hnL_uS
%/0Rl2HcjJ#M/oJj-\EI+EX`=(4^n5d&gJ&/RWFja61!5obkIUp!BssZ">#0i&oG0t?D%R+qeQClaJOuJ>a'l;a0O4eE@+t[FH>;m
%L/;mi"P%,6S\<E&bUQE;#q91%hQUo7bWAt`e)RcOJtiNbeQ3+\PbShs3<nT")5Tacg++`bTn,LiHtj.9hMc0-3KSLThY*?6i0^.Q
%8WPUGC`Ge'KN!h,]5\m"4(B,NbgciGJuf!?k<.htGUE7F_,DUg9%Q>t;4VN82c:!oe*S``)7>6h;jF"Gj$XnG4IbLd;;UfeM'IQ1
%qlgZ-ig*!Lq`:ob,nr:9!V5]OPF$u(Ja2Sf[=1OdT4L?NV&V_^>QH)ScWl:19:H)Z.sq.<b\u'0-AWUU[.ehpPab,k6)(BJ9ApDE
%4V$cj`m/"Jjj9T\LOtO=jtMmTE^La_?bDsYK9BLlm6Ee'E[Ves5qNnsp'H+k8KJ=\l?K(mn$Sm&'!4&A#+',F1`@eE@O[J!1lQEY
%<]=_^Ie`%EV.hn30GMY#fGj!l#-%_;%0sK'/@Zsj@_Ed/mb>A7JpQbsQUc;e_p1t!,8n33,j\E?QHV/0Ej.bZ2f!DZ\a2sD]cXhi
%P[_rX0*e31O$K!t,2*C&,>JNe_,.l:`H&h(ii[7hdG\Qm8l"I.Edd.7k2n:\Z$DFMUHD'k\9SW@(NN*/6\d:>O;JE"+B4[RmkeuN
%9MP"j%.DC:pV_o@bU4tS'Upi^9?mRqPnM(qdt_!C-Rsqp-G0_^"[C;:"l0qF#;\7H*LC&,&\^tJ*]`(`]#YMV.!tu5Qu:k0;:4CJ
%M6>gp%Qg-H#F."H`hX.Sc-m/"=-F_c$RD*L+OU&pnf0c"$tRV<Z2bS6X^hlu`J]:#MIpAlTMH4SH;=s[%<PqHGC+jp*Rc>`2nLuk
%='>X05>5ILQCTpG.#WOL'M4'X5sB51)!KcYRY5u'"GuPP"piA(@/(d1Yap!Z%TDg-648WDV6S^7JoPL]9=Q#RP50Th`9>H=QqV:`
%+ui'rJ6kBFY)ojOo#^A)6:h`'IXSa,cp;+MFSRIm#)^d5i,W')in;IdD1[@4`n9YQ);!K0am-:ldKm6+IlT*uWZVTdnGB=c84g3*
%]d5hgJ+jTcik$;0%N=,)ou\M9`XR[K`@"TIY>8H#$1Wre.$]:7/Q#W@8^P)cf3!JZgm6RT\\1q/TIJ'_"9uN0rQ3+nR>-(pI-:HU
%)sA*bF>hk9]/kSb1*$6t+28&$G+*n!OpGH,Cf8JaL6H='Oo!VqVQ!"GFGF7W45M7C)Jm6J*OeWYmC+'$Vd]BX_Q3f'ST6i%'d1/O
%5Wf5=28M*(?=@nB&o&jLnN%*0<"IVD4<V\s"I>NeFiQHPgo,%%N>1]C6H]QhmkDhs[O;mY5pe_gd/FA6Em2d[KV$k\bPrnn>"YTt
%-OnA%AHC=k\5A,D@I[W*g42ROk,Bo`MpC&o0G\LbjBaj_iN_BR_oo2F\)u/+Ed=RM.'KdYKF$$_k&(,Nco1%8/,_hW+]_N%_Iuri
%m!6,O67Q$Nc?YZdM*6G93I.T.cS<`A<b8)2LAS^rUYBsYUn*@US`nh>+'+E2-`/hFbu8%sdesRuNngC7\F7-,TC@Mh8+ku7?4L"e
%>\+VMM.(K#`^kY>-a@]O\t46U+>LejEp$Q1e7m"S['G<F"+Q7OUEn2qb"ph>9Rt->+f*qf,[+qBSKcs;'TQ]#>!#(tcQHEK\@&WT
%98@FQ2TQDR"AYd.<95:f`gnUSgeU$kn=%3/&7@u2f;k@cUKu9M=c%O#?SbCMe6rDaD#XWb?CaNs%>LL5Q\RLdmCU:%m>^0Fc"K&V
%,.Hd&N1i<naLB5raacVV^`-aIiI!GtV)%\R=k,-GC?0Pl"#WQ=ih<uJ8JHV"U"N-\EI=Ujll19cg+>"O*>4@n5bFtj`.kADh:N+o
%NjR:EKY=*NX+f"B_Z\?C\SjHj'.D_^Y/<YTca$g,V%bWVMg@2j#8*a]`EUBC<P[+TfS)^RSoIsq_taeli<XnTRnONK(hl38]UKji
%G$]%p,,#aAU9[.u+YkN<gueo%Ucp)HV7`)Pr,50SO#ZKMQP@acNLEhaUcEs]9a8tqeW7WA5Y,/HAgYp'odK\mmp34L:=3qfM)<$5
%QZ$#I1eMti(NBQ4#,m:)N#-Q&h7I!5lgCZgp*BGffZVHs=Yq7I"eO?6'4pO)h\_OADMj)_EX:IbGRKdF`jG8R$b$7gr-dD]CBTUS
%/p*GXPH0d)PNu(DO9jK0N)n]q9taGDadIf11!kk)ekl?WA&aP0aHkH.q<$=Y70[[uHkqWuPX=`%EU#YVhs-0B*dIouE&a2QQ[oOR
%;ETU]n3@KFQ^,jTk0^j=Y/Vfri51g@)lDnR,c^3HNV#]Gdh"I3WbHa4)r\%OPXI$6gY6^RckX)Kf/),0JY^#2HLZ\0##t#c$si33
%d]>+qn&8Pp&kR$JjVAk<,:P]>pn\(V2M*@o_E_'L1VQos,l!q9nLf5c@cls5HA`,WQ_-*nC+Hp*FATH%g>MskQ:#PN0YFD=PSeK8
%i:s-^rgKiIQ^r#aE<k0<AF?:X')]="!!%]?L7E^O;N-!l,,0PPZbCEnC\#\er:?ljkgS+R4%9Dn40GH*QRF3?Ag'ak>VHubU(_b"
%K!nR:(,*<ok2gA4arB3Ro4!M7I9PikZ3'm6IG/75Y6U\CRec^KBr<APi6q0HQLT\,9/^n]V!aC6d,:.;JJ(]mN%`eWBCFth65]VH
%?CNN#<Hh#PcR5_,I6VOl$#YSMk`7*k'E:*Ea9T/3>H3GW5nHu?9?^(s!OsW@6=L4)<FV9ZNK")lDo2sYBjfJs6O>@V)P1V.?*dh;
%g82gOLrA]=#;OJI$2k.%["Z_QaV)"%;fF%.d.t?-q@^pFQuE)Bno0-.9J0JYk1t8#j8FT_V.(@gTe1$R)9_g%V,g!"V]Re*'ij@;
%g'bm&<MVI*GdtudS9rB_m%1r:$5XtW*f7DUVY@WQ/3PT2eLBV&g;q_n6,C2X.9]?*T\Req\IZ0291I%o/SPEg4Id8+j0-A3WP.a5
%_."K]*)YSMLCO,/GDTYk_hg25F7s$nI(CTHV='*P=7i*c(mh'=%^loKF3&\\;h^!7q=+uqUq9;f%*?"c1V^qg7T)(*H1"AZ`"GX,
%jNoY47W+RO)DAYB4VG5_BN:Q,2;l_m2dp^rpI=(VL9a]@0i\=fm'MK@9F%9V7$dpoKm:K0(,Mh5Q#OZUo_KNKN,ml_3'qOE"k5uR
%`d9+beuRaVNp*_8*iiD_eI!Vf"/t-!%;8f<AbaMS`[,ZX5A8`N+`/VqF^Z,Z6Hu)Ur`NU075LF*E4X#3?5,S.1j6h$Xd!CWb5fZ4
%k/?H*`<1M2ZE]eV9tK"-I+1T9HaB%#"50DO_(Sf*@.m9*TRSp)b.:O=qjceXLFu\QhLE)0Y"!Ic4O[-%ol)!#KJ^G$7:pFO`aau7
%P/P;knZ=7/?DacS2+;@GhI'(*Pm%p1Tqj+G'F1%B.#CP$8YM^r$TT8QT7X$b*^Or/<C1O1KHrBZ,p!3u0J'S@Wt(I#GGt^3%3;C#
%(303e:Y_@YYGSpi+K9.Kk>'N_]h@9=+^lK&8M]0soU%sYoibK:-o%eEIt+6Yl5+%Xj^Oi7@]Bu:`c[oZDbplol%C=jjmYAE+4e+P
%pk)h[*`C*]Yl+c#B#i]#BpEW7>)R&K`f'q9*)d6&k7ds0b:Of#92KMl"4A0Z;ITDQD5@u;-,gNc!5[bH\-]=*p6$ltK^5RI3sYuB
%^'u:ddC*t'4#dp3lB[aa!W1L0=PS.Vph[Ob.8h>c>QUPd<,F_K'6?PXIiD^5E/eR0h.6eCWctL>8G]UA^GL$<WBl_tn<,28nT^c4
%38BPbWk1htT:nH>k>cplbe%_L6&Wobq#HmJYA3maGXQ$@TOrTuZ%u^J#.Wd-ch$#aAA?mu$QN=&%:0%2p2,XT64>#q/!(;VBo(a!
%iPAi3ALp=lkYckn@KmKn;r5VF0X:_+cEf*rU.%`jp9YmMV8at$QfR;&4pYk\T\+t]m%1^l"+^a"iS6[]"KOo$L,2XKO:0HA=+WgD
%.T9R>43^C@XZ4_r<O9UBUdEtWFDY9mrZJOuE;)k:\$S;jc=AhpCg;C!s'*7bpnW4e7+E#ng!nRSa`MOU5j5X+ZN.?N9K=H!JRl72
%#+*RP8Y9'9omU#i^'Bu6,jqnI\839e,s>k<[E[,2W:dU0*H!$29@;^!irOe?bZm'6XrF_sn.Kk5/NnUmFdP!.\85pIOlsKXAKZ*`
%Q\CY0cZt]kPk93pP>Ja+gk:$<.,MJ+f)dM-O/d2k\SP%6*@CaEZDf]C[2E4-Yj1XS1RAOrNa".h)nIKcc=M&Ks5:26,XjX_hB)MK
%M2#64\CTE*bN;)'>W+Ma\SSciOu%?0h_p*dU6gUP;SQ/`5[q_M6ON>n'PH=%D"+mGR8%7F2l]:X<&T!eDXb38D")_1h1dGHCO!q\
%:?bh&(]sjTH+6d$XPWo[U,9$PC`m^(io77pcrG71fg+PKI:/^_b`92#V<SBjAcUjqo[!c.%JGhBcX=&p*`E+nQu!nM!AK]HpFl-=
%2^Y#0is1bWoL"M=IFU5Z<F=L?aTaN:!eSMu'(9Kig"[i38GHJhqL#>ND!hc[P?Kf;h5G-<9Q&JpI]q:[,Yt+%X1L*!Q^[DjohK'#
%*U0Z,WGE\s;rC)U"/3=Z9k=E`Ik]YRkhtZ6%7kMTB$q&tC?loX'21<G>l>^UZ@Qt9ouLVE8T,78=1+dRYE%b<ZDlb^<,M-!Z@Pa'
%knN7%>+iN\b3%Ab^"guj<Uce'Pmp.P/bX_1\dWuo":-7k8p\O2e7^JK%\(9[AL\YeWrS@M);!Mi]mn[62UqDN]V-!BUNQE&AHQ@b
%ktmf()Dl0EA-7ZSQPYhpKLU9VaT`C2k[:]I`4VDF\g6W31It]_;(r8b/N/e%,Yfss9K(6u<t%Z]W]'<q1YG%O3;]GUTs2R0=2q_'
%D)%:b-05T$%>DoX"^,&#SEH5f\d<P.i$MqeJctL:O:TYf%s]]lAOBnQ]%@5Tq_XS_m/\jm)nlMbkfdT?M,UY@ZI-iOZ=<,GW-T&f
%"OagR+J:J]NU1l#"TJ*b\2ulhj).7r_mQ@f`'n7T-/./GXF_ec6+p4ME4%3%IZ`=1*ooDN%40KMFOa]41htj+oemaTAj`1]XG.q*
%Tn%R-2_l?.Ke!-)A`-=QH0rQ$:sII:,I?>B#'GpT(JLZuMC,[?8M2cf#GL&]%hb;r]-QD"]?nag0&a9dOI47H\#Oh3!N;?q%Pf!;
%L1tbhSp"AjKh#g^o?1A^-F87@[L[A?fha)A@#BBBJq,hXs1QgU0CL_\J<<X`q\RM-a+\on1]n`1:o!QD#.F9Idbh&@R$s3+W$$-Z
%J(P_CpoB6,091Up.D^XHJ>5$7JOJ>c%NIHENWDmuE<kYJqn$'%Br*ghfku4+2^!JhHU^0Dg2NK'>jF,j!1Q%]U0r+Dca=(:lfQM_
%_2?VE8>qfSCO:jIKSFn4c&JJd3.KT?r'mttcFZmo/L2n&@N/%eJLg93[fRq,YrX1i\TF&E2fr]X[j$HJWgB(>'=2nPCaC-bgO+`M
%mj1St1\gVd1R%3*4$)8l$:[r&%?PhFXD:KkKRoJSQN>5#0(O7[&pid(G<d"UG?QI/Hg;g3H-jOTF`i$'*I]X$X<AI9&29F:2)$ON
%bdjHAFco,CN0<V]6FbpeUOhJ!5&2De`0%7BB3se.4Z,fe7l\$-\Io0XFKQudf:WsO%L2?aeG"r?R?Al/r)BN7Ze0&4]PEaC4J3\Z
%FPW8\7S&>jf\7YsnGtT&3=[jTAIgO'HB=EcBJ]uRS"D%jk&=f?`u^UT&5uP4!8`(4<TN,t7!K6a\W@an\b"aZIofH1LI:G@^W/cs
%UOVRL7H1qKg%sjkBW@J$P*oB#JkGr0%o!Hogq7u"C+TEleS#mmZklhG`Nu-K`t``l$p]le4:tik=@e2<.Vo`mUt`#-AmWQS['19a
%Iur_1m#_@_Wa#G2eK@;cn1+f&Dii;dPYA^aX0`aJ"L`4M#rAY'L1GjU>l"5t_?<E\VpRgml\9ZcUuW$E<u+71[d`(6\D>jP@<-Jd
%@GQXWc*:56?B]cni?2CE>g0ke*iEeg\i#A-/Ap:,irkO@^E;lcAkSjogJ=UL*(ZeLX)UeK#CuG4<7&*T`l7P2qWf?BMF#D;RR/je
%]!#MnW5Zl)O-PC/B8Wl;bA^&fHJa)'Hb8-np(7_6EpM,S%bl??,.m`\@%n/jMXA;D7f+O[rcrRZ3a8f*L4*$E\\jlTE$dHHgII6#
%:].NCUNb]l=Q_=2^#(m)0^!Ho9\*lAQC>PH"6igfpf_AB&_<c&/3V*=GE-K?;(&>eq[sl8HMP3HaR%<nH$hTNE?>G!$e#Z!',K;2
%m54NFhu1-cj3![2=!pRO'[qT$05icpLqbruTNt?lQ$aDNa;;+E^!WVl)ZAFVHCn5./*8k2]QMk5Go+k`cb;h\'(I,5^Z;sP-2&=k
%p=<6'*9$JKUJ>=k4els6f0^fQeqs*Hk1,L.Z0G*PE3=`2N)b-V8d@]rW9B5cK.o;%i>97u)MYU+fA8>Y:(0Ra:`7Oj>%LlgbhKcY
%o6K+VespnASVJTN\5.U43T=o#@-kI\Gpj)7Q/(]Hm$TKk-8;q]:6Y;"_mlFuC?)3n3\R)pD&Zpg@?CD#r4E&XqO%T1rY.;b;Q72(
%VYuYO]V!LuJp9$'TZ%iDFeRl+[ao&^],\\1eM6c+Rr#-!O%Kg1a%^<qf>Z#b\6BJq*J^i-*RM!M6uLS+l8,*P5fN"%V:IWslOC67
%-ho!;6Io,UE@h`E_dV8C1'M')GsRgl+cmInK9rWI9O'rPWI22b-!H$_<S<r-$51C]"&^4KU`3pb@kBNc434Q"HlJsuU]D\q<VMeP
%#`H1*;@DM/Kj\eQ!e$KEkCbr'ZS/Hme4Ld6i1&C;AB]MZS-[e$Df-6nHeop>I_8#u0dYa0[h=I_hmo$GYj"lboGfHtr3R>XJ'dsJ
%Q6KB1=/P47<rX@q4S_;oWcYjpgnWE>@g2A_.-h]:0P/lC#&kD@!pJQ_<SK67%&IE,>f'SN10latM9aD&fbJkdF:Oht4tK5(<4-m\
%I_mgbO*9`PKBpWj-Dj7D)@Te^%+C47>l.QsR5Xmd8@3%_!V%:O%<j`\R>$S]9,LdXg.o=Q2oB2!`%d1Y$Z!`,.gO"3"'N]Q6*C2]
%@_M\aU<u06_`TR3-5"S\_hg6KT_kr4H(u]`K1\&3*k%Z1aVA&+9b]o6;:LP0%gEFjDcKd>jG$fW,%;O:4;]'4r38b>6/q%e/sX?g
%[k3T0`L*p<3WJ)9&B00hE4YZu9KRnET.1P]9Y)s(ePi_&kFe2Maq3IJ\'>CE'kD>fQ2Db"%"[&Tg7;3d29NSbnON,R'fTOUS8i9F
%#7[,p%W0UFR3:^Bp5HFcVjk:9k'!-PpDS,m2i,h`e'4gGeB:[%.kZkt=/C"F!j?NBR)s\O,(&<o9'?l8:O73u]ugd!fJ3XsCUcpo
%eu-t#FGeJ:[N&cHYk?[)jm^Ic_i^To0eDSW*3T@V_cI<"C(*7gcaa4#c]#HY4HsY<W<?[sFj/u?e36MqA,k$V@gm+>":+m^"2_.F
%0lE=Z+(gQhf6Hu\3d_KiW+oFK<)@D=csEJ!LE-#P`q;"1CNuL*5/ha.'@j>s$d[B]@-+b0Ve2rL_Ol1.",d?m+6>H]?AhrS.oKSJ
%4AJqD<rE&SV[1)1b;,52o(C50#g4DSh;$drDp?hG\B!tV'-WfKC3fR0;4A?j]P,qn+5=2)c#C#->JZ;@qlk)-mH0g@`+V?!oBBl!
%67mX#VL`4O>7%3OpE`6PM83*b$MlpXi.qTege\1el3*6):NU]K`5"ho.@.D5Pqhg)6b$C'?FKRuh@?ut!&dY$GOmSX7#3,W1K(8R
%b0'bu^oNn5C\2L`(Pc^-.7u36=_,u:/g$`T&LQ]rL"-LtoZ2Ej!f'sq>=j`>`a(!='OJr4.*gA-`&*gM0P/h9T"">9p8p64m(PVm
%;mk4)p)len[WEHJ,j4kFafh%;JuZ$5bCi*Aj2BBX,hjW=`#o!bQcFmSW746TbNq/gj)FnKXP<B'.<L`H!R5m%XSCnN;6/H$B33$r
%'JT`6TVGIJ,f)sXX``8*XO^qOq21If-1i$\q["GUJmT0QarXV!I;UhXX2dY<]E@-'qnBt)Kr#3.KT5Yj(l7Jk04>FLDTSJtF\.O%
%^<=1?mZJ2hhpjs!oo(t?<qPR.XUYhI]`d"b1H,[p'&4kRKJJ8a*(DI))i)LGX.t"PWaH#dUIX4YiP=nZPJ0uPCZ'FOXoND/>[FTH
%RV3>)17UWmm8CIoQ%J5%AbX$!cF\`7B*@*;\_";'UJ2h`$&OF-$$*Wg&iOhoT%F4dkIiBSfnK'R,U\W_%:F!6Jr'oU%nS*=%/4XS
%1hoO>8R.j_aqK,p:b@>g37TM9T7WHR)pim<P?g<5>9W5c;iLU:P%rKHlr4;o:VI>Q_W!jZ9O`-/YqDf_p0gR#hZY4.^7X"d+OWHT
%"Y0qqHbB(k*a@+Ln\c?3[*)m3`5JXrQK3%P!9L)*d%_/Fi<Ms&GJ-XASPLX0A)AT*OElp!8/ipW0;a/-ApHfC+mU0`LB:%Pl\Z?7
%*8F3"`]/gS\NP1C0$bF!m'l7PRtZ6jJMk1f_AYV0QijS+%s,)+>nWgnlbn*8Z$f`6fOp)7X+=JsHF3?ei>b2A(j%O*-peudDC\Z6
%_jMa*O=(8-M?Mmdn??AtZ569e?tD5Ho\/?<'HCq*jak?P/RoLLZ+JSFUAT8SJ/2&XQ%TW;ZJ%/aN)n`'O>(IH\DRI\chE^!)*s*$
%K`)8WY1%/?+l%cuY?\P)+#lk7GG3t4,t=_FDi2`$'F9^39/35tf^tms,tF=Qhck>L3&iJ&[C;7ChTYkfWEjoAm(AG$4[JbB1@MWi
%K[D_i_Xt>QJ#m?"!&.4sS\Nt3U\XP@b`IjSM'#RDWj%7o;W'm"Tt7L^P)$fRc3;?dKF;\JE5^9$b7;$W^P.d=2BO4F>.d"\os9Fk
%fNIkql*Q&'-fUh<7lA\6;'M:Rj3sY(;qn__1#@Ee;]$Q71ns/I%S@_6Y2)u#ro>LP"5,LiK[:Js)tG)s4J&j$b<l2Z)9@DXNd,sd
%&%98-P%2Ve)eel!8j+1W-(bC1=YZ,"4B(Db#2n4t^Fc+6JeL8H+2<>9'#tMl7knKD0Gj9Dr,*"NbUN2I!Z[RW?-W\rUh:W+N8[n<
%O@e\U)QWrf]+n.Sf@hZ`>P>%,1?4Gemn%EbB,h$?i41q(G\#r#.&4G"Y4,4J82k;'52<raHd3FKOHD9X;?[3cW93#T&N0Rcr]]l<
%($q'JH"/FM#/^UTUut54bJOeZ<r(uA]OV.-T5`:X5BB=_M?]Z84as(LpaJpmJX$BfM,&e3nA=@f8*Ec(W,UZK1dF<-%Bqs1hI7/=
%C<$[Ok77Hdd:&kI]G%)3]7tU$M?JF$leji+f5<b@:tal3^c%M(:H6/8a7Kn@BRkonk<TcX6^^7H9tY>GpHao?\L]piaojQWl0=*L
%XcO:]>RdGa$)5g4N.)#O7'DtmJVN&;\B%FqQ$"8j3F(kAUt,d1<'++Zl.(XUk+dYJ0n2<Si"h]76kYX`cl_t++Un"MIfmL5OnQRI
%@O!$ApE#*8_=jB2AOm:ca,K:O(eu&DksYm(?l)c+goHH8I@P`jkL?cqO71(f^)gMb&]_dsQ6I_#Gh1ehBCgH/OHj;I3L1CK<88=\
%%84KHn3KZj?(UeSe7!LVQ?WN;J;B&gjO)kBGBmpUbbT1"2@Y1u7eP!c,YDs%X'RMb"F'oaC/eDtWem8]rVL*'-df,N&bj'_qOuTI
%`2F)"%WkDX?o<1fWNFBEeV+#A.+!*9S'.K,*>XF)I^F,khW[k$N>$*X<5&B0j'e#eSPZBip&P87GT<93Ct'm$_XTcj4hgH#qM,E/
%E",;AXr8J)5`H=*,F^rc0jg&-58%cJP7U<OHR'4B+pSUAJ&\2B\Dp+6Sj<^Y0O4ue55M6S-%"p3WHJR<qfZG'NKA%55U3rrSNXot
%!Wn$M>!H+.L(q.BlKW_AdG-c\]pr;/Gn&%-YNH8W$*^G/_2XC]qgl^'@mW=lUiA']Y.;rXC1p]c$^51raNr\uJ@TR_reD-HUl5M#
%OYLVk_ZZW_?qU6n0LeY=+lJh>@$`+L(!2#XZ(r3a^m6X4_Sr8cn>`gg+5bbcF^_*.[Khe,3hd[H2Ri8nW.PVu#[:.<2hMsJZ&sBI
%r(.)%>(NU+>^Crab0b?k()Xum)9dk\18;_V&UE@S_B;;?0&sPh!qbDfIE5s;N[]_97OhCqjgF/EVM"u^#Yl>l.8J-,maoo(3AkOR
%%^)hoP,`1H)Jd(M8keIBJTg;a#E\XQfgEqDaKSqZ:P[/0-V*S"H'.lWrTdYVjhlad_%CA6.mePiQ9&VOFpsPS>/9-bVjcgkU1)cA
%\n205BidA]-gSX[8bftpAOjsSJ`Xam/E^1"$918dkuDJ`i[iU#Tg$q%FrR3=d>GpQLt^-"5d8U#-PMW:MO0tR_)6f'$]I54&fhc*
%hfNDb`F+UcpcVO_@fSn?YS7DV=88`dDb_PL+d"\g._]7`m&BeR6W_f:Fp8<?6`+V::/0p:@(d3<1VCLkrJHBpk[HO%Hl@/B7Q8_0
%_PHQTp>eA*;(iLf!DADqSC<,>@08D)I>l885sk,ikl-^0mn9S`<g_=pH1;3@HI8QuR\aC8-I/O.#:q9^S@^Bc_ds)C3*eKbeq&U0
%2A?PI3Y18Xh5md\:a[<s:07gIQ:jee]Un^tnBm>f4FNY$1unD2jDVJX'-"T_8Ti6d/l/RKhGZqrM)Uuj<l0KeG%s4r=?@5I%KZ=/
%+V'tgoT7@'-t2_H,j26*LlJdKbQkm2^GcoJN@N`-9!@R1aN@cHDY#uEWAZc4E0\LXRQuZ<0+dH=INIo!jF2'3iNA;U.&!u=qZ8&6
%8BLK"=U"mnU@@Z1kC.7&*65%I:C5Gg9A=)/p.>3ZDtcM-"=PiIEa6nl8/+SZXtsRsVW*l%U!1<cGNN?MefE-.YVE)VSfS((MrhkJ
%X7g+Y!=:RWn7L?ST9+7VD0]d;NS<-m(8[%cB)!E5JH8DrUoO`S:O`!2gYG'RhTfV,j0ccArAHD5:c%UV=ZYuL!ameB-V#bD*H$&;
%_(<u.l][Q"Q%pNY5UN2:M5h8R0R(fq4ET)`0$(C^i%-)T>K2Kn$(u8fo!aBP]Ha[_^4"A\3du@;ZAn@`a^28S%JY+74[3;[U2k&q
%eFL%H:>`"+:Nh92&ucGdmZ<piMUj22U[^_PXW*%\SZ<*pD%M!6fqq\-k!@p1o-DU)\hj[U'\.l`oZH-(6UFHP[,Am:IF/<rk!PfA
%R`5NK1*;PR%f>#Da&.(p)J@+s@t\Z3L2flB+_7@_?^+`Ej:$,(OC>\*%>=o.Nh0B6.6K@!"-h01_`l/569UI]K!%L(!@J.RN_rLq
%_+g]ZN_BHVk=>-^o-'En!R3Hu6@a]+,pJg^.:EC><i+NZLM@#CjkPXT$(^uWWRk``(m9LM/GS:gOe<7'D$Wp3i!8Uf_Ai/7^',i;
%cm*HfO47tW&m:)bZ#5L*aohXmdkgk;Bs&QuUZrZ+$1P)q0)$G-1/.\!/B1St3"Hl,6G?si<>_F'p5"(Q2d1n@L0[!P<msHPUo+cM
%N<9gsLM%*5M5(DiIW'uV[<V$S_*R\6FlN!,j97_^qL$H+rL4t[U)/GW>o85]-leNbRXX(q$"9r`+S6j2`G!1Pn[jgQhRNlHG/We,
%),CF+W%lq#"I"GNNm,B@>2[%C_o^$bp1O[r:fKS'"@#FF&WS;5YSl44^'b>n=fMg&0V';k-"%EK_EoL^nN<^PEpQm3`keQjMumE)
%pA9HF%KTQ*IY%D[%K<%%7Z7YM%=i&D[(Q-n!ep%U%pG^0#bT:Be'cGH!)orC$KDV>7;V2C0if@`9r7Gki^M^Lf!HB0,MGs^U+?nl
%rAs5lb@A!C<5O"%"(N?t"_4L3OW+J;ie%6)`^l?.rkLAd=uYh1e"BB5A@(!QAHEHa-Z_n(GfTe&_`-Lu-*#$bo2dfBk`s&@EeM6J
%dnqhQc9S>rR8Q_30p`094i9jeJCr^5@[kGF3"A*A4A"(B3FKAd>qfo'&:EbWk)Wqaf.r+OTZ.gnA*7p)_7=@@c)j+AZ#Apm?q1"T
%oLf1]=*f[rGL'7(R@,01a*!c_<qbr-VagtdI>)B%8frEd#X^W@M7Ec/Y6Xj&Cajo2"_o,fB]W]I4Wi(u)4[6jVRf'oOe>Hb4`rW3
%ZkNU-O"%@\A:</,=,n5b6d.tfN#L>27f3'F,Qd1*Q6SBG@2k4)5\MX3C3*l*d\;\-cpbiJr^k_nb[f')!7mN'rn<I`#89I5HqBWP
%&KEVZ8Aq$m$&%`dqoJ7/fWB_[>2tn-4>&jlVDAEM0G_YL6;BXQnC'E"dT!+'d&-a1kub"\!`?g&[+.]aH9PnLb9=1]4_a35Mu<!!
%;ES;C)8P!;+N1C=5]i`+-R"Y,s+<SD9,T%79*4+AJLL(>S2T+K"&WMGiAWS5dI?6tnqDZc%"2<\e*X!K3Sj7'kd-S6m>0^VFQ&O3
%57pdGO\?76qK!0UG>YIhBS1AU_E@sc.eZ`g8H^csrU/qZS4WSX3R;3+l\.kA=<nGZ@^2J:E@)!6o-*"Ph+:%$g&XK+%<3g$0cb1!
%UjGpmeMm0@c8@=o&hokU":`c0j<4*E4S;TNLmAg,&>O%->@QJ.ZGkY<I?$WE;W:MP$S*'$RjE'!9kWO3"uAg,*J[U8',3Nj`H93n
%l=\Um`XIW;[SUVZ?VGB2#'&H`37\h9pKV]`]KA.gjKe&D5q(YhP;4oej/DQ]A.deh6,7RIY.b<j6jQNB")`]6=eap\f,N,nq<h#"
%[%iG;m<r3f=c:9c245icid(j!naVP#(JbAh;t2M]cBo;(EE7mfGpREUTp5(=+Vn4T&DD(P-ffAH$pg,+IZ^ESRpe%oXa\OBP<iWn
%%Y>!Vl()ai+\dMo"<c@$dV(C\>MoL:OZIE='nO:kD:e[-+?tBE5q6Q&Re#k/NZfI7`d7=%bFaet;*Gte%nJYj;f5+onUnlP8k;$H
%L"[@6ZXCfW#R1o2d<HT#/b'FBH?0YRc%8#gpDi`f?sKNL=j"ah&laO^7>cVp/A1.UiJYO?_78AgC-O$\HDD,Q%p[[a6YRZf.&_57
%6lK_S_t*j1K&8XQT"uWQVg=)Vp9gPoO;pNYUJ29bL3-&NO=76u>dD]IaP:4$e*eTP6iPpZ'A%9E!>;D]Alq#o77+kJE+;9nd('3M
%Ssqc^(D-/r%*MQ*Gd'GtF^iYoA7iHh6_C&SG3VK+A\>4"`K0CR<cd=i,X@+pEbEW"p[ji,0M:!foQ$)iC<TeAr`G#FH9,)!CuD:Z
%?4U%0_CIo9'88FZ<2QI'2J1FuY-L,N`aK40"AVAI`=C+f(b>/(X2;b9$o`o/:S!Xm:u(=25q=2TJCd.e&tB3A#hGV^<ko>oTV:k'
%ka3T/&D0QX60MQSkl>thVra./AP))l6C"\%0IfGIJkTXk";8'rKBPbgQ%X+ecZi'tXX>WTeN8Bhi.3^R;0r`C.mmg4OEBG`-KeG9
%(PP:mUA0#ZUR]1Ss!Jr'J+D4+q9?CPhu2qt?iB]Q^]!hL^\Q]"ir8Sf_>g(p_uGetIeg$/jsXZ4![7>M6+-tR7qcPne!#ceIJ=nf
%Vs-<,AQ@_3O8\0B7-J$8q!]s,/=<ku3rG%Gq9'kj15iS;9)%ZN*GXhGIeea5drUDPjs3MH0mUk$e#4CDaN1LG_h5F+AQc4\SBIC5
%@Ug<4]W?2pb"WkcDrgr/-jFnXlqnIY`[(6*q2mI6HpP&gPV)(q6PV_GlZPg7,<X+>oZJaO&Q+gS`+^.6eL**k+C.KE%lNY$ldSe-
%N]D:m;Z&pT,XqL+TF-_%CDC!]%P9PGRG_\Nbh/>.n,jZm0'^eKaHu,9i+TMES2Hqf`46..i'_)aRY%EkV(WfWC0BmiZ4iaO+>[,Q
%(Pg[u])N1sht^+:6-cEQ2f@)Cm1fPjR@=$PbJ]mU\01[.>spfX&-oGV=bI]U[9Q)_Jr,m,133^F16A%uq3TP4adcH8mE!q&qUZpl
%L.4+$6?)=P%)H=I"^hs^Pn'`G+r8^YP$t_C[DeHD$kFH8GQUYD.&5tfmf1`pgquU\,guMCo.]AWF6La1]#*uCpb5i-A2kbd,sF(s
%"[^T\2V.&<]+$rFHXS:liQZWn#6CWpmG[O:[G?G1eEIGmD9M;I6l%%Y/nIbR2-8#[<ROs&%uHApF]E[J9g"AN:on]9'S<&2()JJK
%o'MSu7oj"j#H!KsB/jg!Rj6,/k(>MZR6$t.)Q`*XSfQT+kA++<JR](o_@F"<-BP&T"sR'\dl\%$/')u\)2\1tY"q*G%\KO2ebftU
%,*Rf"%chN4P8V2[11^$Wa#*<lDfuRGB4S.[&WmhQBOr\H#,EJFJpV**`GmM-=lIg0#sPlJjBRVeLnbc<<QrF=4G0n<[.XMh1Rg</
%gGcj5n6CDSq;;q1Xr7fDaQWg"NPIi]&'p:jq93!*LPdYmISj\]3AZ0>9[&gU=bDkGHqlZg"T/6=3CnRHlKLE)AN`kkW:DDoghT<b
%A#[F.P7n#`(B'8D\7X_$YR81MlR>3R-ODW.'<kX3SRA'@e4F:6"BnlKST,(J&B#`QS\iPA==/!8h@ZB0f\GU2[^PEkEklDPkW/ds
%[+?<V0^fDCFrhV23SKst@;h&r#lFBM?iCoZs7/Z4^6d$\V74^g#O5E>n:93L!S,P"jXOFnpo3%.W4=\275bbCHQ^f\8]-i-^odg`
%RC1hTAQBl#dVGDN%Rt([@<VKnqQ<=%SI3:21pnLka29Lh\0>eb)&lo+0&H*@)ueJ/I_E)HHYiK2^#=Obi.e^XdY8jKiNkIjh])RK
%mmt97^Q6A4^5c]/)3DPh9C2ENceIpKBtpE\Vu;']pUmt^\[K-+b&dCA+5ZEa"^O%JiNT<`0Z(^1[K!T^?@I-CPi&r3\iiMX-nY&e
%7L57JF18h;*tQ'PN&^Ud(r,gV?iJu+pH-&qok3e^4[f>tm^/HVL,Om7&NKgm)PN5UlQOn)I4Dr=C7eUl&@+Y\"$>#n:%E0FaH_%:
%on?8Ne8:tf/"V.&M,/T1lT6EM0)a+<q5^\3&m_l."o*qC&#BdRrU=uuB2rE90.'4g@ss.B:Wk1c-YZ0d,Va@d1+W_dDG+<Vj%];l
%s+%<2Bme,7SXu8k$Y.iLXX%"i,Z,&^,A_RcKE:c$3I%.IX.j[(=P/X6V]:#K/auTWbY$(^ZQms$Vj<>-9ht)c=E&:]KT]U4MK2S*
%91kEcbpEAj&f!Y#5`"AJ.7M9Ni($#GpY9-G:&a-jrqnEuqn'W@oulfQrV+)&p:$YYr-QNa"L63sJ&e11q"+OZ]ANVa2o#4Y-XV>u
%(G@HAo_Mqprcd8ZfK]?(mr7?;^ji/WR0%!c#;GjQ`=Ss@<P!<rU9)^V\YttDilSU61pMD.X3CBe=b_ML/t>3977)8=I.Sh6d-Ej+
%5r!'EEB(h^'Y1aY*s9>^Vm^?_Bk#,fGRm+)2DPC1.V8E2*4G%nq%4]VX<1Ja5cCgVNb!B9`.E"%C2-nO\TBC1#!O%)T]^\^6ggRi
%jY),Yb1DQc?h\1?\ImZV1U*M<<@\lEV0!uF+jS"uc[Ot[nX2CaZo;HQn7s+JrA^$.jQIcl!OM'T%Mt&m"W9C"83:qoHW0`eKRVnF
%8*gtDJ]+`69k[R81<t;J=Bcq1f\e;kgJlDXS($SC=;N5F(:Xd'`_XXSdQ[!-aU^,uMU0HJ*LFh>K+>#1k$"qI>^C^'>K`SHF[#%U
%SCrJfh#/O&I#6<W!J?-+#3VoF+-$BBO<5Yo0a7]i6mND[7$FMn%%hb!b/e[8Ie6Q*EcjQb6?K>rb^ftX0-Mq6'%31Z!S!Opb[^pp
%:<FBNE$f^@@I<2^B'8c[:,]=KO!9r=?;#.p.7Q4Vl)r5;%.eh*m#\b3"(%>u,Z=`Y%ClY(4@Icaq2moAOG,c7qXh@P_C$kYX%\io
%#%4!P9]/DGibNqk=YjAZ=5j5%cbml;2B8gXKu"X<J<*D^W1i`ZJYlsa(okktkII(((FtU*q:p\G-!4lQ%g`K1r[hGaJA3l(Q*G@4
%NP`]^.)=-GaDI62^b<p?&t'M.R>(nPY=;7_p-!g&6]EYEno+T'iS[`8/?7F/0YWleFR";sQ\D'Y%Q_(Q4lN1`Gq<'`D=Q%X4`5OU
%m(QmN0$nd*I4%hbn]<eP#sNsi.7]l:ob0/Q@eh"%%:0FhVLZnl+CZT6/HnIsDDm@oaGR[ArqHEFj>p85:g`[?<`JhW4`M^*XHK&9
%5Qt9jX.hkD)-^M_!Q_Md`C$0'-mq&qoCb]Q%PX4_@2*Yq6u'FcNQXuRVrail(XWDDm7Mjn80f-N`V#<R,R6(ZBu%1EnG?P"`*OWO
%OnT8LB@\?%r9!i@ZGJ9r&V=!Ke'7_4i!"8Hkr$4J8-6#H3"P9k&uN>2,K+#>dU<7,8%+MYL<5dkkeCTE*_aT2T)jmaB_s(S[u7-d
%V_W5GhsB,8nhUj*JM/-pZ9Y+WpkZ'OFT:l9;p@X]F;K^qE`"J,5_6a5c.*M)p^oEjIhHR]4Y(c[$J5H3S-U&,kMfpK^9U\4aq]]-
%UMP^dZ2MXC;mdBH1-dTZhja'PRgfme^`2f%pO'5+#Q4\'^Nb)/nL(K;A/ED0oE4+'0o4)o8qQ3rE0c>uhIrMRPt<lR#VXEQ@\-]_
%l"l:rPRL(+Dl:tLB5GPBq'LQJ[?mtOI-_XNTK"18YZT`a>E-KGoYh+r"[([/R"F`uQGZm-jeo>8&qL\<lt3_\OMF%2CDQBd\ji9[
%!>JAU^A_*d`gCX^aQ-2%^m=&b;][YsA#VSARt+"_X)UrZ5/E\-\'B1A),5WF!aH6/)lP)/\Jpq]5i?-)cLC(Ep8kp]WQ8[V%#0"G
%p`$NkBO@U*[B/X9iUA,RdoaM9;2ZJ'TbBuU%``@1W\&72F1/B(ccJ0b\Ri2c#V5h&4>lC4aH9Q&:#8n#4:NV?!J&B>4i<.I'.r2u
%4J+M[IQ._[`mR03M4HGe=;$.XNG%BO_*T'"RDn3*$7)<]MRtW?+@BSSE:H[6m$$iE$8,*B$AQ5qk46pF.pf""`rI5_(Lt$*PKCN`
%.sGn"b\S2uI]&mo1bNb,L_H;_hLLU5ouBRp3=@3rc^0'oj3GdIqoiE;nA=n;D&l7/e'AomG=h8b5E/uYA2Jn9#<I,b;%#$4:O3sb
%3IKb]\JJ(>e=<GOUM4an4?P]k6><[1XXNis3,hX^$l"M"Ag9)I]G+cG!$WKFAO\$CXhsmI\)m6Vn[`VPEN'8ON2Q]2QZair\1e:C
%$[nEGgh8P$Er%Q?A:V,&Wi_,$U:?$bJ9?VZ+P?i('A3Cq.#os^Le=+h]21M==;lUaC9d0+>le5sqk4p:Eg$c04DDq\S?,&&l7K@P
%/M]5nE[!aN)C)]C-nsGGJaGk"9#e5O&*aM*TSA5CYk\"j+N+E5esF9ie1Fk3aT85NJUV9h\a,Oi!mKLFHiO$7rm50b)p/q37n'T:
%X4/B)dWT-b<AVC4Ha"k`c(@Y"PBbtbf\@ejfI-V#HY%B6<N>rQ>P$NR$V+.TX.JYP"+&OSOi3:^[J!/t6FO'Pab%6d_X;Q@N392L
%V5JkS4P5/^p-GH^RJd@4=u5(+lQ$epSMD\1_n[BPinO5?$c[q+ba\N18ehg?.*jp0nGo'f$rLY(#$BSo_JruY(u4m?IQ<o+N.1kg
%R)mU+AKeGg8'7lH0Z!RF\CJn9dm+Rk]'t+D>_R?7h&20LVmJel^b)&G_5!"V,sBbSS9[KV5o#Yuk&:eaUmr?hoMMP!*U"3T9.G5p
%WYCV'!47C2?%E/c,lhrclX>j]-9#B5/:X@.7*PID0^$hJqt:6MpB!l]6@p;ac>qeMV_T!/ct2;>9/?R[")EO<BY;94#l9L3H:RM>
%`-dF5NgVa$XM/"e[N,h(:qhY1U%;T0Go#1!WG.`]im*,#=LHcD"jIO]qirH4[1d]sg#@YM0Jp\.Y/;<Q8O4O#EpP,gUBm=f._J+)
%Y7NZEfG$foXcbDdI/)F3<'DD/&L`\5."LZX3?%gC/>99'jtonr_=?/u!4$`$;?MeMK\G$mUDeYGiXY5"!ZshRh(]<Rg@:@,QQ7QQ
%,O%(1(`YqK%:to*H%#HWTNE\%ITkV2MAW!gB"A#5Ne0j^X@<>GJ9q@,!E^==LYOB_=<]#B*^TgD6RqjU*pV)[!MG`^*'cV$RUN<Q
%i>ReAhH3uTOO+edq2t(TRsclq/O"T7DgjgVS'eZ-IVNWlegf4(.DT]d*od7%$0r,c?spH/#FrQM1Fq[Y"EkP</.u`g-4s\[\fb1K
%hYW/u9k!f5rrDpn_c4*OJQTJ;N<uBN!RuM(ii%`FoG=3LN(/PVKLqkh=&bHJ`\W-F!H&n6)lXNE(@cQXkm]P?N"VAJ=4_:?`CpmA
%!X67\`H+B#lj>mKU&I%U+:iVd#$TKs`e@6DF9Hlh/#CWGMc>;(dLB^kbFMF"\"Tl1/P:^?8e8-\%:]C1+7SC4f>+@HcVXA6XoUMA
%Vt[n&Whsu#_FhHGW)8'gd@5sSAfcXhQ2n-V'*d=WFCtfH'\VN(Qcd%q`0lupki`L$!hGRf'/'E8UrjqA6uq6FquL"JO\upbf$i\`
%\;/NP>PpHs,(9!P,,F-MZ837=SFcdN\lb2GI_t"6![j/`o;B=<_^kOilj5g45JCl4'2@";RK4685e-m2fU4,\c'r\8N5XQOJ5db?
%8#?Z$TAKGO>I17$9KOC+ZglNB@_aFe/HJ!9OYH[h5G"X,FG95O-(Q15Nncd9-pHn6>TX89^665m6#luL;*UJq396ges"Pc2FiaZ5
%kfd'_7a5aU93qABk9#uc6jc7=G'^#?D[+lO2Tg42fSmVZ\P3gC(^SP6(]i6ZqUOO:Sbl(=)2NJ=oDmPe_"2MfEdMp+p4S2V4k"'X
%b'[0K_n],.g-`.Lk\P^^q%m]B\p0`'*oYZ&VV3N5$$&Z`5u2[Dc=Sb5:7r;Oo7>j_Pc0>J*.U*rF_i0USt4P22'+N9>8ku=M;\UP
%W-LkY"%JBs8k$TpOl(Gq=1K;edmZD6GXWh:Yoo/X!'7'"U(=h[&9+Ag#((nY<`%Wqb/Y[do4FI/H4kp**,=:e@2\DK_7PejDPD1j
%RMfI842WRU*8T:c4hkt)dG;tS-pWR+YaEEI:%on`6@C>Wg$6/3#AAM5@@[,H#pJZH)Z-2<Ohg#'Z0;NLqRP\.<HbMS1qBmiZuc3Y
%W&Ke<7WtR@Ae0X#@u+65942=_Q>[0$9%eZNO3,>uo:&h&SRQOn>h!gbdQ4U4!$i8/gEUYB*4u;bag2!`:*?84\dZ>-Q9'1&C-)FF
%i'`V"+ON"eTQAOJ"5sEgCBAY%fTE_N$(?:F9qkmD,t7e53A.U:ZXVi>HZf/r(5kX,G"@,sF:bni]dO\X")67\Src-?['Y`QMh'Zo
%E[U7/ndqVW/(t6/JD12!pVt2("Gn=3^>u4*W&Z?4X@NJV'fb'FJ;]Dn<Tf.8\,Gjk<:YU<lT`otJ\CDT*=\E*c<ipq$H/2ZOWP(]
%b/5nrr;hX&.c@5XqQ)4_P;[*R,LMeBO,'V4:A'9<_P-UH,5;P1OB8%pkD_,0`Si[6*m<%".;<(C29`g[r^FMkkMFB`OU&R6d<qjO
%oA+<1Vl%hMD56RnQD.:^!).DiA[J,mjfW&L,'&2=.c:QDB;\uWm-8'J5uK$QO98if>&K*KPB/9<2$6tbVF0m3/PCT"Q"q*D@9(??
%iTr$gD(!$m?mB>YMk23TA'ksm0^#ham&uo$#(=4.]uk=";)aF/m"V`[nQE=s?Hhd>e4:216ootIDe+:Oe8B[%Ud:C#```noArSaP
%94a*t'Hu?70W@&n&5[^#V^6>S+Nm#C89!4F6*F-gMJMlV21B%H4B^":g:KC]"%r@]+*4e;q_"kG803`R*;uY'BcW^G3I5Qt]\e>Z
%&M0TJh!qm&#LQGs]g<J=*>IRPkj5EfWjKHqnr.R38,^--LO4'Uq\aGtTu9b=9tBWekX@kFYAc!i&LNuGVbA=Xo_Bu"Ht<RC'BX7"
%rFXhXO<HE'(-Pp]_V+Ab^$Z'FiVOiE?-t.Y<Ab4biLKU@S=.0XW^5+X9MBZUj-JY3Yf7'fO.$64Be+Gj;#.pA!2dY1desI?G)B_9
%TmVV9HN'3cH&^'\:1,gldK&Gkc_SuT@37+:lW*?kdQS=]9o\0h?%XP(#.pQ=$qCBpETWK(E`%X@^O`GN<1uRsM,Rc%'SpoBlB<\d
%U>Y&!SqC0;IZ9XML\2V^JSG9nArn/qRq'?k#:1OAXI53grY;cYK3SGBJ;t]D'!#Q+n"Du^o)g3fPgrOg.>'>+6r\7%P4:*rp[p2h
%oINp^cDPXN9sHXHW);Du[q#8O?hJL/olH&bbPRjcD]?F*;==0q?heu]j3Jb.:OVHQ^$>'/Zp4;u5IJMGgHbd6TDdMNr-)B=hs'KW
%mf%^&,iFMOi0eH?>uH8%l@O64%Gi6opq'$#eK=!H!Ib15kt.C8<`5&S_e>]qoCmWk;4<mY#k4hOj^MYhG:,.5'$VZP30'kF&gq8&
%Vh"S4e-t"\NOVNpp)+KR*Ei#jC,jd+#UU=FAL9f3W'm128;[Mn2]5<CG]R=-ld=)C\LO!?K&>:O#5Y:84`@!"[S8<X'VcqmiD,Ik
%[%5Zt_^8pn1u6uu-V!)r-Q:SK7%>e-gqc6X/eeYSO9Cl-lE(Z.M4c7=kAk/:*LTYW$PRaqe3[TP@1jO3G<Q?L8pD?b1Zt>285B^>
%KX`#i%RkPSDJ)Ip2nZ-6ZH7'!4GiSM_NbZVIlN;-#t?Vm5V+%Oo%[pSg^S?_#Q,P."p.?U&Nk/`PEs/T`0e4gh,!2C@<P!giLP$F
%F$:a23LJ4PVu\0_L#,BWOB"d3:dR9B8k+X\Z8rgZ%P:otp>RchrOB_cjEp'/4kXHn>ssnbN\TNUiOV<0G7HMl<9Yc]etrFo&bptQ
%%XNer!/.gm8)k<%,6R_p@+S`8=:mNi'2J45jbEuu#OE-bg+/-cB+`[61f9?S'^SPLbM::)R)r]miPPVUpFZ?7MV</f7.6J-4%p],
%Nig4r6rfDaq(@;I/S7b4l3PDKBtKRVL\SVK^\8+u3\98ClPpe;C_N"^E-NMl+@<T$M'EBYs&n%N?:^o_oR)@T&^jC9LLJd)/IaLR
%OAnhGd7msIm;9N6JVE@K1!0Zb'\F?Di3UVhWYP%_J9)aaa>c`.J.:+gZ=5,X(*L#XqO1DoH9$QHZSHG%)K"?Yl`d5MPFkga'R;^#
%YOFuQDp1A:A]d6S^$u*?bGI8O]1OnA:WFn)butN%<fBb)&@sBUl'LRacDKtjAk*M)>JM8q`U_um$'aqF?,O5`Hb-VpAVP,p/rL#\
%Y6"[hT(idh!-=B`L,mi:aPpOMmE4\.:qQcIk,JG:bE+ERC,BaG])<J2i9kTV*-Chphj(a0kutsqXaU2RKZl+>ER&LmPD_(3&PaDh
%OBJ-\D)%`+<,m*@rY'6(OK_.@8#MBEgBAQ=5*lKIN$<G9cROo5-6qd*_7iEAZ6`h[RXMORHb-\%KoHGk*QUgR7=MC&e9u)q21a\u
%+:QdmZ&FMJj60Xtng?q>NoX5_Ea9L/$6r[JW"nKT1JP'k%fNBSbCkqO5nsA@$9"Dq`Y@qlV[t1qoXtF?^r9u>8%Tao)$pTH+9<fn
%i]!+<UO4*UoHlmT^Bs*4D'<CNH'XM*j4QP7N<DeVPG_okiD4&-U@$H(W^G&D_`ghd6&I0uBKk9SMGA=(+GI]keaLeJP%I]3n-l'T
%)okTNc5:eQhd>]%@tXoOV9gV3eIlu]JDHKsCf&_O,Y.tJ:>B7+IGWGtVJt-?cLc[ePd;TC=bt6S9d=<8l=Da:2[q@!3S6=81J#(g
%$j=`'XAO>WLJPL1?W6Rno[0<!s6C,XIV>d/Pq4M-8toQ^^+Y!X&Q!.rbiij]75RlLPi)k;rG'RQoZdugFT.I8\s&\ni)[Xh:[]Ip
%)#!;i'iVVAJ3>-J0t2Rs$@o@b],PYaO[Uk>0haK1lq/.SCZ(sMrT4Xa#9o4rWpZ?o/aoiX$7aK%/48Ik`4QNRdBQEel'c6J6NOt;
%bX"e8j(I\?f"O5Q?Ju&C#P%_]IrIIl?96M84.*<V=ma;-nAI6G\#F\#'eP:R&h8VPT1C+u?#[8=RgJRj+Og+r>1!!hnaOn?OYuGc
%CoWA;]2D2f5Bn"0^*)\>cFS3jnh",EptfM1A_d*n9+EiM-3POgjDK`QY]WD3%`^J:/Q$k"?]3/&AkRXML$tYNs.?LoO:Gl-L8anY
%@95]2I`<2OV-Q[h9Xb!Ff;\[9ie1DI7M&9o.A5],LDnV)M;oPDathIC0B,nCS.8!/7O"nBfV6]D+J$)8YUg\e11[/XTVJAceXunY
%&V7+'():;::h0dJ9.!XspnsGQZS=.aKW$P5f]$SINT!6-8O5&aj-jd!$;dPsm`8BO^%VB8/rl#4HE6aQQsg`@29uXQg7okPM2X7?
%:L[e8!Fh8-B[P3l'k]A;)g(Zk93J`iP>!p1jfALM%2#ap+SNc4lDhalLMq+T^`cI8a/h.mk`..*MF!X^.W85]Y\rA\8]+:#`\5/f
%-J(62o)JcFK0/J1-?fi+4;!EfBu`38/W%E'D0@3pW2DNU[S<-6'e)Y>@FM1M/7cU.(cHmd0YSB24F-_<,?L[^$uIcK\hjh];5%S?
%B0!,DDo\YD4RMHU]H*Wur]Su-39.DtH!tU[37B1tF$a@;Ng:SJ'-QnGIX$>95BF2cp.;-%F465G=!a:lfJoSu1;mjdX\suX-5M%N
%J5]q.Ahf\agam8N%Vj*rR-Em!"C.-r,FMXaPf&&F=IS3#O,]uCJ4:PX?3VS."n>5u?T*G/k@Q-]1P+naW;(o&!+QH4&tk?er5Rj"
%S#d"Iq7TN<H#tMSUOunrl3r;"a<r$G4igc<%B%H=EmCb0KOIkTC9beX-8st9]o0Qe4^VK=.+`ZJ!nGjsDPs@&G%s2Ca'l2lM?Nss
%GmX7n;jNGK!SGN4Do-@hQLc^Rl39R49G-.!,\qBdirFKKP(rJ!ZB=R2'_/$"0rC?`.cCq>dpH=+,g\D8aFS&nK`9&r<0s2<(M4m*
%)oe?$0sIn@k9@`#>4TlJZpc*9"%I6AmD(]=CU:7bc8P1"e*9pF;SqrO8<6%HI9:lTGmI`oY9-?u`RgP!Tf%i]*kI%tUM`UXmdpcg
%=JQ^`"+cOo;FZ2]TjY!&hUe\7I>TKZF;hII:iK"1s&\4qPhI%C-\u_sP^dKk.`)].mfTXG?7u2]!F5Cjbi$itqlHR"'sN3Rl^4)B
%4DtI/JTHMiQ7Q^7!jP93rD`kQ+mO9,Hh:]r=npr8(T]Vp_W*#+?NUZd*f\s1W-o`CD."=k"BINlX/><MeOP-lR$^/bbfBe2(Ik_@
%#AN,4Q,b*:Zb?a@Qo/^a(&NT^BWj1/FJN^CXC`k%QAgm/-CD1Fp]e:Z4e3YKJV4T]6tOa//;6I<6nBFSK>(h<;W/THB6Y$X^kJF2
%_Mc7Eboj9AKUGKO*MV0gQFTJ!D5JpS,fDh!3-s/GL##L]>Uc,rOcAD(]8l1AAc&QeYr.Up/g(Iq#/^tKFE'+P*TRbjJjSe_<af2O
%(1P=K`_Xa#_"U;hY^koS4V4*6:JZXN`)`)@fHJ6Ee/amdFP&u(.ZQl!0SWla:94o2Ooo7#Ls>FT&8k0SN)C9AT<_L0^LL%b:))Xo
%L,Z@#MH!9ojrrqF$reZk'X++ec(*!?QaVf728>@/$0`F7N'!P0X3#d0"QM6ZM=DoTC2?#d/'uI;1Q[see4p7;`,P+nGL&3@lHiY]
%I:\kZRbNp@SXq#.amRrf6je#C8YhFEZ[,Df"dlL@NEY>WKTN[t@7BupiW7`qN1'lpNR"Y"2qZ8%,>Nn1_+I%]:gc^GIR/t$0"PZS
%O!BSCfdkKF]]`1U(3C3?8"Xo@s%KXIXT?I(?nMS(e'<#GdHs1X&JU#<aMA<^!\;oc]qk`6!uBT"Bc=8+TUjSeKi0S<0ZUnqWu!7D
%d4rZMTLZCCq6]Wd`&b,@T9F\/a[?RL'70^X+`csQ$2k-*acA-.p7dCkiWnF-$$'JVI7f*9?<\s,fEkA2O2ljLUs"qgj1f-P)m,.f
%pK[O;+1X.O%6E_Q*j0jb.J_ZDC/5rIp&E0)*qCl`8mG)]O6f"S,%n274ULCO3P@:#!=GJ<LRoS)BYarW]J2o"p5)-o890SaVP9u]
%LDS`&0!*(^UO:!N4@EeKINIASk069P1T(C$:!.`@<i$7.graLp1>GY__Z5WgDH(71aNRZdXb%q%RA3ZGa<eN$#KZ-h;.\,!*:><Z
%6TeHtTmPF*:tVc9S-\UoYXXSqW>c-hSi!8nl=gZ*it00JCeg7ZJH84)iE71)E)7%7m/;oa-QJUEs+YI"7I+>F7'jp'J!^[g8abmT
%H'Fh*$+*%<"e`2!6:&X&>CT4b,OOZa;?C(HermBc#IA%'!,Kfc<3'&/oQX\>(GV4+EW(-NF<hT^fImcb"/A:ORYFtTR#ik>M[t>&
%i+%T3"^UV?.bJ=-j-F'R!nt<N.8LmcGT`j)N-<QGs8R"K^A2JDk3JXUAU_qOR>h+6.=maG>k\?>/')C!f9UD?.c.^W%-eIKRVaAC
%SO_7m*@UWGr04l&(C5tj^hUprYulOs7BrMI]-@*E5l(T?PM?Q4QC9OTG:7c]-R>T]ialmN%]E/_+Z4EXEJoV10I2J<SCH#Pb/iOL
%DZCO+,4b<[/'kS%X+\O4c:,2")_;W[o>\S@$NC*.4;a!]peHf<J!#&EopTK[jp$tU5:BVUT_OC(=]n2@",p+Dl:+8ko1,V/RfX-0
%"4]9QL3eHNWQKc-=P\TK-0shbd1qLW3!pX1B,LRU%LhW&hCEn/.%GnSipJfZ)8.OG5N7;KZ#\f?d*KZZ@-C_V0*3Ln$s1K,i?53<
%2.@,F%!W%^"Ruhumo`<K>1EdqqTO-V+q?cSA]bg>?\>Tin6/p'K`u=%mniNV:7>hr"Oe>%KY<>``c8;Sb`kP#6<G[g6EEaR&]UJK
%AkG:e.@7@cJOf+si<sfY^&t;&-8.gG,`?Pr0=Gha2HDH.[T>Cd+8TB1UG1NLa(nY_rY<tOT/NC4T-g6uQ=K0`hl$gaa3BGYML:8N
%)[sLt/e7LW@PbAl;N8>fm7PiUiD&fO@8bt)h4#'42<raK^"o2G^OpDmm[:rf(n>g[Z4^0RiVF,3`G?7$094cG<4!kVS+nEj)72<t
%$'Jm)OZsda"DXaqLg_hFN,r1-442c:+<=_FkW/dJ=ReAER7SJ)H]_/`P7AEY%EK<9'Mon6(rQKZ&OLNt416M,-aKnUQLec#U720B
%la@OlOpE%r?'nF0RX8ER3L;08]YtNnbf0;JX]G/k@f*Ai&p8MF8IUFFiIETEXnJ\[&'a4:*-qs9!>rSG!#:R:=f2C;!GR8l6KO]3
%'s`qC-#%^,%pIAP9qm*0(P84!0?B`r<]tbV$$(\c1-7$H/WTW1r,cDr'Tfl,26aQfnZ+Kp`-$,,&US5]g-n5A*gu/^=-NZ'Ho5OG
%_D-"m&:\<7X`Ule'Lq!PZqYte_hpF*\S?p#G86M";`c!F.`bb4F2HXnU+`RBJE/,NhqNcJ125];_C5on+i0'\)/?)qmt-m=6Nhj:
%&_0;?\tq>UhhWBKnVDR#hGED6IFnJh8$:+4&u^g3Y5GI7;a"uOf:TJd^A_3j$6T:BCkZeVg/e"FVeq-kJ$uKKNSHkVlnU4;>#s$m
%K+Gu\U<"p8-1hL!A,$5i]O6iB;dEOk0o$$D:mBT^8"0UZLEL%\=1U4+*Np\@_1L@-M<L_!Y%@j3l9,.WqicK[Mk2qqU"PG0.:HbK
%3Aa$=-G1tRiG`rIK-))H:P8IqYOIMW$g9[hR+#p,bq^Q/i>g5/]EB",B=eqrA;#fin5Jrs!uIR)+VM\<AhUE4\Xm1i!1LpU^_/#q
%"!_WJhhJ%-Iq-YiCc7#=i$*8&fkuag$tq]u7V7\ZoYd@PlpbQ/RbH&(,IeXbG-m!SoeE#U1);!2fRDA8/:p#"Jd*VR`BroT8igC)
%L7^]`eX(cZ?2aP^m-<1eDg8&aI@:gFc+o9eOrIWOkiRC;$n+/aRVHG<f2I$j5B!>C6>Ia3TYmi*JOH/g23"G2%\`D,6qri]-@L*@
%5`YXta!p2=_G<UiZ\fPjK<\P9*$2.H-BOsD$Zefbfi3+r)]@iRGb>34_WBouI1j^+q_BW.O^N/o=A!bD$IHR"T2T0<\uXZ6F*jcD
%(b5F#?!o8hkZ"ig+^B>>\RtZZ<AVKAA,*=P\ZCpd5I)Bt)fQ[KM5ul8fM2?Sc<hoa*SlKm_,8l;`^!.g.M*3YO;#p4`]tG-#XY1.
%G>?;JDB`:^]4$g&/<>>9B\s`3O"]In)bO+@gHS)G<8"I>9m/Q#B7a/H*TP--5b8*ncI!%P#@nE*elUa&@V!Bp$=ohP.WN6@UW^%A
%D6SPL3(T%%#Ykk>pT%rEqSSi("5e#')#3b&5Q(k[J,_6qV[<2h:BQ$$XNne/CMGjcd<.n0COSA[rm%4XO/#;1?a;_^hHUlLS`=nW
%%q#*X?+8#V*&Q:2_.ZeT8h7PDEV6O?A_@PV;ulW#V[<S&[!,la4G[&$hIT-1&^PDT-mCfDKA9Hlmi-A%'@d2EXuBICDIQ`#K+"(3
%g^I7+',kfXhRHO.1c)Vc70LPXomFJ(8k'UDH6IKPP4:2!GB7(1ScbFBO_I)@)gT^m4^UF@5DH25Q)&ZXUZ/n?!l9:0d965UKf6;U
%dPYL!TGncpP*?ShTAW#dC='lI07:O6<]SKZZei=Q,fghgQc$\6WDlHok#cXsN3$t*R9d%up9Jd98Zg"+R,J]$:1/>2']_g_52:kN
%Via6"e&LmDpsYp#GQd>c+@Egb]*i.$PA+L>77;[K"ZYhR)*Hr.kSUJgr_VHJ:7]L;b\'+=b5S=YV@;k8oN0t,0sQLJTYO;bkK9?K
%<gtEkbrl@oa@8M%-m=$4[I/Ho6c0(Bi))JMPh6k)WDI%NKYU-2QhOgH5A;8W7&B'@J)OD(C_@2pm:8^<>BXco*R6(q=_?Q'QIen+
%3cidSXQB8!'l3o*d+$3!pb[af5W.c/Kg]Fd#SA%;B%l9tONaoid!O]W%u(Bjp>L1%oh+BP)%)%r(DlF07nF>H/BQpn^N`Dd%4GPj
%%p;oK0'2"r\B'=,m@m.if'if&k?IttYLYO[kL4cB&QEut+3@\le_FS!*XKfU^+KBpHuq!`_JGc'YCq&&+`(HW-/KbmUh7mrga:.F
%+)ZbI]GK\u*Y8/II`h`b5agW;oMoiLI.>^$6\B2Jo`,&V-B`Nac,*-Nles!Oo%F'0T3t(eo&kt/T.Ki>Lb@.-SXn69%]'Fkr/4k6
%E4s#0k_9l[KUfW+\nQh4o!iho[+QiuX$D])lKB(?d;<FC#GU%sq'ST\!k@gV(!CBn8"Vn#DXp+;R#F:s;pf<6;)<,Br6p@)l8L2a
%mZ:\3)n<q@^2kLMlEe\-nL(k`?U)/=?bPX.IJ#79ffoBlQgO+2jK^e__(rSJVl#p9R39eLP6'TtK:7mdTY#2Y(^KtqNHU"$-*fV"
%XFd<6\G".7j.2qaPJ%X.&pNqE4oV0nkKj/(&[;5akskX20E+oIS%ngEhgY7ckO3lsb?pim?i67/J+_WIs6[;1rr0Oerp_*/l6!e>
%o\G:@J+FWO3.:N3k<GMTj`gb"]>+C5G9?hSJ,T?GL'/mk'7TJ0^\Z:VnW3_6rr=Mo9-a~>
%AI9_PrivateDataEnd
