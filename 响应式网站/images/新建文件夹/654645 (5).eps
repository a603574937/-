%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Thin.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Diana
%%CreationDate: 8/13/2010
%%BoundingBox: 0 0 545 842
%%HiResBoundingBox: 0 0 544.3741 841.8902
%%CropBox: 0 0 544.3741 841.8902
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 84 128 8%%BeginData: 21762 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08A8CAA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCA
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8
%FFA8FFA8FFA8FFA8CFA8CFA8A8A8CAFD06A8FF7DA8A1A8A1FD08A8CAA8A8
%A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD06A8A7A8A8
%A8A1A8A8FFA8A1FD08A8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8
%FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFD06A8A1A8FF7DA87DA8A7A8A7FD08
%A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CFFD0AA8A1A8A1
%A8A1FFFD06A8CFA8CAA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCF
%FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCF
%FFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CAA8A8A8CAFFA1A8A1FD08A8
%CFA8CAA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CAA8
%CFFD0BA8FFFD04A8CAA8A8A8CFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCF
%FFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCA
%FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFFD06A8FF7DA8A7A8A7
%FD08A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8FFA8FFCAFF
%A8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CF
%A8A8A8CAFD06A8A1A8A8FFFD04A8CFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8
%FFCFFFCFFFCFFFCFFFA8A7A8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFA8FFA8CAA8
%CAA8CAFFA1FD08A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFF7DA77D
%A8A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8
%FFA8FFA8FFA8CFA8FFA8CAA8CFA8A8A8CAFD05A8FFA8A8CAA8A8A8CFA8CF
%A8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFA7A7CF7C7DFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFCAFF
%A8FFA8FFA8FFA8CFA8CFA8A8A8CFFFA7A8A7FD04A8CAA8A8A8CFA8CFA8FF
%A8CFA8FFA8FFA8FFA8FFA87DA7CF7D7DCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CA
%FD07A8FFA8A8CFA8CFA8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFD05FF7C
%FFCFFF7C7DFD04FFCFFD0FFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FF
%CAFFA8FFA8FFA8FFA8CAA8FFFFFD07A8CFA8CAA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFA876CFCFCACF7C7D7DCACFA87CFFFFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8
%A8A8FFCAA8A8A8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFFFFF
%51A7CFCFCFFFA87C7DA87D7C7DFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8CFA8CAFFA7FD04
%A8CAA8A8A8CFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7CF8A7A6A7A7CF
%5251A7A77676A7FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FF
%A8FFA8FFA8FFA8CFA8CFA8CAA8CAFD05A8FFCFA8CFA8FFA8FFA8FFCAFFA8
%FFCFFFCFFFCFFFCFFFFFFFCFFFFFFF7C7D51A6A0A7A6C97CA7CFA7767DCF
%FD11FFCFFFFFFFCFFFFFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFFD05
%A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCAA8A87C517C7576
%515175A7A676757CA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFF
%A8FFCAFFA8FFA8CFA8FFA8CFA8CFFD05A8FFA8A8CFA8CFA8FFA8FFA8FFCF
%FFA8FFCFFFCFFFFFFFCFFD04FFCFA8FFA87DA7A7A8FFA85275A77CA075A1
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFCFFF
%A8FFA8FFA8FFA8CFA8FFFFA8A8A8CAA8A8A8CFA8CFA8FFA8FFA8FFA8FFA8
%FFCAFFA8FFCFCAA8FFFFFF52A1A8FFFFFF527CA07C76A076CFFFFFCFFFCF
%FFCAFFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8CAA8
%CAA8A8A8FFCFA8FFA8FFA8FFA8FFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFF
%A8FD04FF7CA8FD04FF7D7CC97C7CA0CAA1A7A8FD13FFCFFFFFFFCFFFCFFF
%A8FFCAFFA8FFA8FFA8FFFFA8A8A8CFA8CAA8FFA8CFA8FFA8FFA8FFCFFFA8
%FFCFFFCFFFA8A8FF7DFFA827FFA8A7FFFF51517CA651A17DA7A1A17CA8FF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%CFA8A8A8FFCFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFA8CF
%A8FFFFFF7C76FFFFA8FF7D5151A67CA8CFFFA8A7A1C97CA7A8FD05FFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFFA8CAA8
%A8A8CFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FF7CA17DA1A1A8A77D7DFFFF
%FFA8522752517DFFFFCFFFCFA87CA7A1A17DFFCFFFCFFFCAFFCFFFA8FFCF
%FFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CAA8FFFFA8FFA8FFA8FFA8FF
%CFFFCFFFFFFFCFFD06FF7DA7FFCACAA7CACAA1A8FFA87D51A0517651A8FD
%06FF7CA7CAA17CFD0FFFCFFFFFFFCFFFCFFFA8FFCAFFA8FFA8FFFFA8CFA8
%CAA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFF7D7CCACFCACAA7CAA77C52
%7C7CA1757C4B5176FFFFFFCFFFFFFF76A1C9A152A8FFFFCFFFCFFFCFFFCF
%FFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8FFCFA8FFA8FFA8FFCFFF
%A8FFCFFFCFFFFFFFCFFFFFFFCFFF7D7D7DA77DA7A8CFCAA7A1CAA1A07C7C
%76A1FD04FFCFFFFFFF76A1CAA751A8FFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFCFFFA8FFCFFFA8FFA8FFA8FFFFA8A8A8CFA8CFA8FFA8FFA8FFA8FFA8FF
%CFFFA8FFCFFFCFFFA8FF7D7DA7CAA1A17DFFA1A0517C7676A8FFCAFFCFFF
%CAFFCFFF52A1A7A74BA8FFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FF
%A8CFA8CFA8A8A8FFFFA8FFA8FFA8FFCFFFCFFFFFFFCFFD0CFFA876A77CA7
%A8FFA8A17CA87CA1A8FD0AFFA8A1CAA152A8FD0DFFCFFFFFFFCFFFCFFFA8
%FFCAFFA8FFFFA8CAA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFF
%CFFFA1A17D7652A8A1A151A7FFFFCFFFCFFFCFFFCFFFCFFFFFA87CCAA151
%7DFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8CFA8FFA8CAA8FF
%FFA8FFA8FFCAFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFA8A7FFA8
%CAA8CA7651A8FFFFFFCFFFFFFFCFFD04FFCF7DCAA1517CFD05FFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFA8FFCFFFA8FFA8FFFFA8CFA8CFA8FFA8FFA8
%FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFF7DA8A8CAA77C4B7C76CFCFFFCF
%FFCAFFCFFFCAFFFFA87CCAA05152FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8CFA8FFFFA8FFA8FFCFFFCFFFFFFFCFFD0EFF
%A8A1CA7C7C7CA1A07CCFFD0AFFA8A1CAA0517DFD13FFCFFFFFFFCFFFCFFF
%A8FFA8FFFFA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCF
%FFA852527DA8FF7CA176FFCFFFCFFFCFFFCFFFCFA7A1C976517DFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8CFA8FFA8FFFF
%A8FFCAFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD05FFA8FFFFFFCFA7
%A77CCFFFCFFD05FFCAA1A1C95176A8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFA8FFCAFFA8FFFFA8CFA8FFA8CFA8FFA8FFA8
%FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFF7DCA76A8FFFFCAFFFF
%FFA1A1A17C4BA7FFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFFFA8FFCFFFCAFFCFFFCFFD15FFCF7CA7C9
%7DFD04FFCF7DA7A1767CFD1BFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FF
%A8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA1A1A77C
%A8FF7DA77DA77676A7FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFA8FFA8FFA8FFA8CFA8FFFFA8FFA8FFCFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD05FFA7A8A1A17DA7A7A775A1FD
%04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFA8CF7DA77CA7A77C51A8FFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8
%FFA8FFFFCAFFA8FFCFFFCFFFFFFFCFFD13FFA8A7A7CAA7CFCA7D4BA8FD22
%FFCFFFCFFFCAFFCAFFFFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFA8A7A8CAA7CAA7CA7676A7FFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FF
%A8FFA8FFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFA7CAA77CA7CAA7CAA7A776A7FD04FFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8
%FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFF7DA7A17C52
%A7A1A1A7CAA17C7CFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8FFCFFFCFFFFFFF
%CFFD11FF7DCAA17CA8FF7CCF7DCAA7CA7C7DFD20FFCFFFFFFFCFFFCFFFA8
%FFFFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFCF7CCA
%A17CA8FFCFFD04A1A0A1A176FFCFFFFFFFA8FFFFFFCFFFCFFFCFFFFFFFCF
%FFFFFFCFFFCFFFCFFFA8FFCFFFCFFFA8FFCFFFA8FFA8CFA8FFFFCFFFA8FF
%CFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD04FFCF7CCAA17DA8FFFFFFA1A7A1
%CAA7CA7C7CCFFFFFFF52527CFFFF7D51A7FFFFCFA852A7CFFFCFFFFFFFCF
%FF5252FFFFCFFFFFFFCFFFCFFFCAFFCFFFFFA8FFA8FFA8FFA8FFA8FFCFFF
%A8FFCFFFCAFFCFFFCAFFFFA852CAA1757BA67CCAFFA8A1CAA7CAA7A051FF
%CFFFA8267D762651262726512751F826264B274B20A87D27274BA7FFCFFF
%A8FFCFFFA8FFA8FFA8FFA8FFFFCFFFCFFFFFFFCFFD0EFFCF76CFA17CC7CD
%9FA57CFFA7CAA7CAA8CA7C7CFD04FF7DA77C7C7C7D51FD057D7C7D527D7D
%7DA8A8765176FD07FFCFFFFFFFCFFFCFFFFFA8FFA8FFA8FFCFFFA8FFCFFF
%CFFFCFFFCFFFCFFFFFCF76CAA1769FCC51274B9FA8A8A1CAA7CAA17C52FF
%CFFFCFFD05FF517C517DFFCFA8FFA8CFA8FFCFCF7DA87DA8A8CFA8FFCFFF
%CFFFA8FFCAFFA8FFA8FFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FF76CAA09E98C1C17C7EA174FFA1CAA8CAA7CA76A1FD04FFCFFFFFFFA827
%A851205127512752524B2651512726FD045127A8FFCFFFFFFFCFFFCFFFA8
%FFFFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFF52A7A176989874C7
%9F7B7AA6AEA1A7CAA7CAA076A7FFCAFFCFFFCAFFCFFF7D7D7C7D527D7C7D
%A7CA767D7C7D7C7D76A7A7A876FFCFFFA8FFCAFFA8FFA8CFA8FFFFA8FFCF
%FFCFFD0DFF7DA7A87CA8FFA8A89FCDC7A6A8CFA1CFA8CAA7A151FD25FFCF
%FFCFFFCAFFFFA8FFA8FFA8FFA8FFCFFFCFFFCFFFCFFFCFFFA87CCA7C7DFF
%FFFFA1A5C79F749F75A8A7CAA7A1767575A8FFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FF
%FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFF7DCAA1A1FFA89FC7C7CD9F
%7574A1CACFA7A7A076749E74CAFD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCAFFCFFFFFA8FFA8FFA8FFA8
%FFA8FFCFFFCAFFCFFFCAFFFFA87CCF767D7BCCC7C7A5CC9F7551A17C7675
%7C759F9E9E75FFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFFCFFFCFFFFFFFCFFD0CFFA1CA
%CA4ACDC7CDC7CDC7CDC7C7A5C79FC7A5C7C1C79F75CFFD1FFFCFFFFFFFCF
%FFCFFFFFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFF7DA1CA769ECD
%FD0AC79FC79FC79F9F51FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFFFA8FFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFF7CCF7D75C7CDC7CDC7CDC7C7C7C8C7C7A5C7
%C7C76E7DFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCA
%FFCFFFCAFFFFA87CCA51749EFD07C7A5C7A5C79E9F4A51A8FFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8
%FFA8CFA8FFFFCAFFCFFFCFFD10FFCFA1CF5251759F9EC79FC79FC79F9F74
%75517DCFFD23FFCFFFFFFFCFFFFFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFFFA8A1CF515126754A514A514A754A527DFFFFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFA8FFA8FFA8FFFFCFFFCAFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD04
%FFA8A1A17CA17DCAA1A77C7D7C76A8FD05FFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFFFA8
%FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFA751A1A17CA1
%CAA7CAA0A051FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFFCFFFCFFFFFFF
%CFFD12FF7D7CA17DCAA8CFCAA7767DFD26FFCFFFFFFFCFFFCFFFFFA8FFA8
%FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA7A17DCAA8CAA7
%CAA0767CFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFFFA8FFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFD04FFA8A8CFA8CFCACAA1A15176FD04FF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFCFFFA8FFFFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFF7D7CA1A8A1A77651274C21A7FFFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCA
%FFA8FFA8CFA8FFFFCAFFCFFFCFFD14FFA84C764B764B76709B707051FD27
%FFCFFFFFFFCFFFFFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFF779B9B9B719B719B7171464BA7FFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFA8FF
%A8FFFFCFFFCAFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCF779B
%9C9B9B719B719B717145A1FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFFFA8FFA8FFA8
%FFA8FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFCF709B719B719B719B71
%774C4C52FFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFFCFFFCFFFFFFFCFFD11FF
%A19B9B9C9B9B779C779B71774C76CFFD23FFCFFFFFFFCFFFCFFFFFA8FFA8
%FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF7D719B719B719B71
%9B7177707045A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFFFA8FFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF769C9B9B779C9B9B719B71774C4C
%7DFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCA
%FFCFFFCAFFCFFFCAFFA876959B719B719B719B719B71704576CFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8
%FFCAFFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFD0EFFA8709C9B9C777771
%9C719C719B4C714BFD25FFCFFFCFFFCAFFFFA8CFA8FFA8FFA8FFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFF7C779B9B9B714C77719B719B7170464CA1FF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFA8FFA8FFFFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFD04FF7D9B9C9B9B7070719C719B719B707045A1FFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFF
%CAFFCFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFF4B
%7070714C704C71719B7177717146454BFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFF
%CFFFCFFFFFFFCFFD10FFA87D764B764B4C4C9C9B9C719B4C4C52A8FD22FF
%CFFFFFFFCFFFCFFFFFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFFFFFA851767C51764B4C4B4B267DA8FFFFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8
%FFA8FFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD05FF7CA1
%7C7DFFCF4BA07C76A8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8
%FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFFFA7A1A176FFFF7C7C
%A751A8FFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8FFCFFFCFFFFFFFCFFD
%11FFA8A7A1A1FFFFA1A1C97CA7FD23FFCFFFFFFFCFFFCFFFA8FFFFA8CFA8
%FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7DC976FFFF
%CA52CA76A7FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFFA8FFCFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD04FFA8A77CA8FFFF7DA1A17DFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFCFFFA8FFCAFFFFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFF7DA776A7FFFF7CA176A1FFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FF
%A8FFA8FFA8FFA8FFFFCAFFA8FFCFFFCFFFFFFFCFFD10FFA1A1A17DFFFFA7
%7CA77DFD25FFCFFFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCFFFCAFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFA7A1A07CCFFFA1A1A07DCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCF
%FFA8FFA8FFA8FFA8FFFFA8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFA7A776FFFFA87DC976FFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFF
%A8FFFFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCA
%FFFFA7A07CA8FF7D7CA17CA7FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFFFA8FF
%CFFFCAFFCFFFCFFFFFFFCFFD0FFFA7CA7CA8FFFF7DA77CA7FD22FFCFFFCF
%FFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFA8FFA8FFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFFFA8A1A07DFFFFCF7CA176FFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CF
%A8FFFFA8FFA8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFA8A77CA1FFFFA8A1A17CA8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CF
%A8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFF7CA176FF
%CFFF7CA776A8CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8FFFFA8FFA8FFCFFFCFFFCF
%FFCFFD11FFCFA1A17DFFFFFFA8A1A07DFD1FFFCFFFFFFFCFFFCFFFA8FFA8
%FFFFA8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFF7CC976FFFFFF7DA7767DFFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8CFA8FFCFA8FFA8
%FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA8A1A77CA8
%FFFFCFA1A77CFD05FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCAFFCFFFA8FFA8FFA8FFFFA8A8A8CFA8CFA8FFA8FFA8FF
%A8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFCF76A776FFCFFFA8A1A07CA8FF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FF
%A8FFA8FFA8CFA8CFA8A8A8FFFFA8FFA8FFA8FFCFFFCFFFFFFFCFFD0FFFA8
%A1A17CCFFFFFFF7DC976FD1DFFCFFFFFFFCFFFCFFFA8FFA8FFA8FFFFA8A8
%A8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFFFCF7CA7
%76FFCFFFA8A1A176A8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFA8A8A8FFFFA8CFA8FFA8FFA8
%FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFA8A7A07DFD04FFA1C9
%76CFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFCFFFA8FFCAFFA8FFA8FFFFA8CAA8A8A8CFA8CFA8FFA8FFA8FFA8
%FFA8FFCFFFA8FFCFFFA8FFCFFFCFA8A1A076FFCFFFA8A1A176A7FFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8
%CFA8FFA8CAA8CAA8FFFFA8FFA8FFA8FFA8FFCFFFCFFFCFFFCFFFFFFFCFFD
%09FFA7A77CA1FD04FFA1C976CFFD1AFFCFFFFFFFCFFFCFFFA8FFCAFFA8FF
%A8FFFFA8CAA8A8A8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCF
%FFCFA8A17C7CFFCFFFCFA8A176A8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CAA8CAA8FFCAA8FF
%A8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFF7DCA76A1
%FD04FFA1CA76CAFD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFFFA8A8A8CAA8CAA8CFA8CFA8
%FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFA7A1A17C7DFFCAFFA8A1A17CA8
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8
%FFA8CFA8FFA8CAA8CFA8A8A8FFCAA8FFA8FFA8FFA8FFA8FFCFFFCFFFCFFF
%CFFFFFFFCFFD06FFA1A7CA76A8FD04FFA1CA76CAFD14FFCFFFFFFFCFFFFF
%FFCFFFCFFFA8FFCAFFA8FFA8FFA8FFFFA8A8A8CAA8CAA8FFA8CFA8FFA8FF
%A8FFCAFFA8FFCFFFA8FFCFFFA87DA1CAA1767DFFCFFFA8A1A776A8FFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CF
%A8FFA8CAA8CFA8A8A8FFCAA8CAA8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCF
%FD05FFA7A1A1CAA77C517CFD04FFA1CA76CAFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CF
%FFA7FD04A8CAA8CAA8CFA8CFA8FFA8FFA8FFCFFFCFFFA8A87DA1A1A17576
%517627CFCFFFA1A7A776A7FFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFD05A8FFCFA8CFA8FFA8FFA8
%FFA8FFA8FFCFFFCAFFCFCFA7A8A1A7A7CAA07C76A17DA77C7DCFFFFFA1A7
%CA51A8FD12FFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8FF
%FFFD05A8CFA8A8A8FFA8CFA8FFA8FFCFA151A17CA17C76517CA7FD07FFAE
%7D7CCAA77652FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8
%FFA8FFA8FFA8CFA8FFA8CAA8CFFD05A8FFA8A8CAA8CAA8FFA8FFA8FFA8FF
%A8FFCFFFA8A77DA8A1A77DA8FD04FFCFFFFFFFA8A1A1CAA7A7757CFD04FF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FF
%A8CFA8FFA8CAA8FFFFA8A8A7FD04A8CAA8A8A8CFA8CFA8FFA8FFA8FFCFFF
%CFFFCFFFA8FFCFFFA8A87DA1A1C9A1A1757C75A8CFFFCFFFA8FFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8CAA8CAFD07A8FFA8A8
%CFA8CFA8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFA8A7A1
%CAA7A17676517C5151A1FD07FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCA
%FFCFFFA8FFA8FFA8FFA8FFA8FFA8CAA8FFFFFD07A8CAA8A8A8FFA8CFA8FF
%A8FFA8FFA8FFA8FFCAFFA7A8A1A1A1CA765151A7A8FFA8A8A8FFCFFFCFFF
%CAFFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CAA8CF
%FD07A8FFFD04A8CAA8CAA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFF527C
%7CA17C7C4B527DFD09FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFF
%A8FFCFFFA8FFA8FFA8FFA8CFA8CFA8A8A8CAA8A8FF7DA8A8A8A7FD04A8CA
%A8A8A8CFA8CFA8FFA8CFA8FFA8FFA8A8527C7C7D7C7DA8FFCFFFA8FFCAFF
%A8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CF
%A8A8A8CAFD06A8A7A8A8FFFD04A8CFA8CAA8FFA8FFA8FFA8FFA8FFCAFFA8
%FFCFFFCFFD0BFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCF
%FFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CAA8CAA8CAFFA1FD08A8
%CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8
%CFA8A8A8CFFD06A8A7A8A8FFFD06A8CAA8CAA8FFA8CFA8FFA8FFA8FFCAFF
%A8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8A8A8CAA8A8
%A7CAFF7DA87DA8A8A8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CF
%A8FFA8CFA8CFA8A8A8CAFD06A8A7A8A7A8A7FFFD06A8CAA8CAA8FFA8CFA8
%FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%CFA8A8A8CAA8A8A8CAFFA1A87DA8A8A8A7FD04A8CAA8A8A8CFA8CAA8FFA8
%CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD06A8A7A8A7A8A7FF
%FD08A8CAA8A8A8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFF
%A8FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FF
%A8CFA8FFA8CFA8CFFD0AA8FF7DA87DA87DA8A7A8A7FD08A8CAA8CAA8CFA8
%CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8
%FFA8CFA8FFA8CFA8CFA8CAA8CFFD0AA8A1A8A1A87DA8A7FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:ModifyDate>2010-08-13T15:15:47+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-08-13T15:15:47+04:00</xmp:CreateDate>
         <xmp:MetadataDate>2010-08-13T15:15:47+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>168</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6tDHkGxGxR4oRcSYFRUa&#xA;YFRCJihXRMVVVTAqoExVeExVdwxV3DFXcMVWlMVWFMVU2TFVJ0wqoOmKUPImFULKmKoSVMKozyul&#xA;NdhP+S//ABE4QpS6FMCo2JMCouNMVRUaYFRCJihWVMCqqpiqoFxVcFxVvjirfHFWuOKtFcVWFMVW&#xA;MmKqTJiqg6YVQ8iYpQ0iYVQcqYqivLa01qI+z/8AETkggoGFMCUZEmBUXGmBUTGmKEQiYFVlXFVD&#xA;VdRttK0u61K55ehZxPNIEFWIQV4qO7N0A7nASrC9fGtWL6bf6wi3TSss976lWsNP/fQRRqsYI9Qo&#xA;Zy3NviPEtyVR6Zxxkss6eihcyGDfHFW+OKtccVaK4qtK4qpsuFVNlxVRdMVQ8iYVQ0iYpQkqYVRH&#xA;l9aaxEfZ/wDiJwhBQMKYEo2JMVRUa4FRKLgQrouKqyrirGfzQjuf8B6rPbANJZrFeshoeUdpPHcS&#xA;rvt8UcTDITFgpjzW6b5t8sebNBWQEXGl6jHJDKsqMqOtTG6kMAeLb5rPFANHYtpglGpeYL7yTDYp&#xA;PqrXuhyv6Mdxd2r3Bt1FAiz3sEicE34q8kTn+Y98zIZiWHCidb8/avpGsWhurVUsZEpd26/vfhVv&#xA;imt5l4s2ziqvGNwB+2GyfipjC/ez2GWGeFJoXWSGVQ8ciEFWVhUMCOoIy5rX0xVojFVpXFVhXFVN&#xA;lwqouuKqDriqGkTClCSphVW0JaatGfZv+InCEFBwrgSjYlwKio1xQiEXAqui4qqquBUs8w2MOq2v&#xA;6DeNZvrfF5kkBMSxROrEygFeSsQF4VHOpHTkQQLW3m3mjyc/l3zLavaaxNYWWrrPLPDbRQJBHLAA&#xA;zP6LJIg9Tmq/AoNdycx9Rp4nmG3FJMP+VY+dL7T5pH8wegZkYR2NzawSh0YU4zcFjCchsVo9PwyM&#xA;dBH4pOYMUk1TUda8mOlwFjk09v8ARZlFXVI41+KtRX4GPz/DMSUjCYDMAcwyz8r/ADFf22oR6Bdy&#xA;I+nyxO9oxBBinDKfRQ/77cM7KD9kigNCAM3FO9lz463D1Ogy9xnUxVaRiq0jFVNlxVSdcKqDriqG&#xA;kXCqFlXFKroq01OP5N/xE5KKChIVwJRkS4FRUa4EIhFxVWVcCoTU9c0vSmtVvpWje9kMNrGkckry&#xA;OqNIQFjVzsiM3yGJNJAtJl1qxvJdVSLUn0m9eaGG1vJIGVhDHHHJ9i4RUK85ZVqw7+2GMh3qYnuS&#xA;bUpZte/NPy/bxMJ9F0WKWWW4NP3tyU5ChC8WCskTDiRurVHTG7kE0QGT67ruo+XdG1nV9SaC4it1&#xA;dtKtYFdZJCFJjicktV3YhfhHQcvGlhNC2AFvBfImuSvbXUcpWYypHJBbxkMWdVS3VI2+EN6lEUCm&#xA;zdeozTajGZSFc3KFAPUdB/LHWbDREtbq7srqZokWe3eCQo5VQOBmaRtq9/SPyzN8FH5jyXQ6jr2g&#xA;XqWRkeF2/urC9Yy20wXdvq1xu67DpX4RuY8eKUeaeGM+WxZZonmqw1OT6rIrWepBSzWUxHJlHV4m&#xA;HwyqPFdxtyCk0y2MgWmUDHmnVMkwaIxVYwxVSZcVUXXCqGkXFULKuFKppC01KP5N+o5KKChYlyKU&#xA;XEuKEVGuBUQgxVWUYFSLzjoN9qlnZz6aYxqulXS3lksxKxueDwyxO4DFRJDM61oaGhptgkLZRlRY&#xA;9rGt6jpVktzqGj3Frz5qpkltmj5xwvMRyillehWJqUjrXtlRiXIGQFvU4w9pDdz3TaXcWZFwt5FI&#xA;o9BwpVqtIODJxZlbmtCMiCQdmcogjdjWvaTqWp6eL7zDqV3qFtR0tVnjSzjl+Bjz9BQrFK0UtxRW&#xA;5D7YOSyGXDZa8cY8VB5/qGkyTmK5huY0iZ3e6uPTjJEfA8fthl4rTiwpUjuN64wNOSY3u+j/ACbB&#xA;fQeV9NiveQuFhWqyV5qp3RGrvyVKKa5mx5OvlVmkdqml2GqWMljfwrPbSj4kaoIINVZWFGVlO6sp&#xA;qDuMJCAXmeuaTPpN7FpWslrjTbmQfoXWQSkqzDdIZZE4mO4X/dci05+zbHHnCtw5WPIJbFPfLXna&#xA;4ttTg8veYpedzcnjpWqcQq3NAT6UwHwpMANqUV+1DsbIZL2asmLh3HJnOWtK0jFVNhiqk64VQ8i4&#xA;qhZVwqu0sU1BPk36jko81KGiXIpRka4EImMYqroMCqqjFV4xVif5h6fb6jbaPZz8wkuoVEkR4sjJ&#xA;aXDhgd/5aZCfJsx82Ky6BLpusLq8ur87aKjBL6Nbl0dQfihaQtHGf9SMH3PTKxLhbjDiSIa3N5v8&#xA;46VYCV7zS7i59K4u5+IE0cKPcPDEqBE4MsRDso3/AMo/ZeIylusgIx2euHyh5ZOpHUjp0LXhf1TI&#xA;RUeoKfvOB+DnUV5UrXfLeEc3H4jVJxkmKyaaGCJ5pnWKGNS0kjkKqqBUlidgBirzTzf5osbnjqV8&#xA;3oaNYEy2UcvwtLKAV+sOGpxAVj6anpXkfioFx8k72Dl4sdblS/LzyzqOu6rF5z12JoLSGp8v6dKK&#xA;EBhT63Ip6EqxESncD4upFJY4VuWvLkvYcnqeXNDRxVYwxVScYqoSDCqFkXFW9NH+np8m/Vko81KH&#xA;iGBKLjGBCJQYqrqMCqijFV2KpJ5t0G71rTY4LK7WxvYJ0nt7p0aUIQGR/hV4m3jkYbMMjIWGUZUb&#xA;SXT/AMrNIEy3Gu3U2uzD/dNxRbQH/mHXZx7Ss+AQAZSyEsT8s6atl5g8p3it/o0pIk6USSSxlCg/&#xA;NnAX55VAVJvym4vYcyHEQWqavp+l231i9lEaseMaAFnkc7hI0WrO3sBgJpIFvNPM/nSa9u4rVoJL&#xA;i6c8rDy7a0mlZlIKyXHD4SUND19NDvU0D5RKZlsHJjAQ3KP8tflle3moRa750ZJ7qFhJY6LGeVtb&#xA;sDVXlPSaVT0/YXtyPxZOGOubXkymXuek5a0uxV2KrSMVUmGKqLjCqGkGKu08f6anyP6slHmpQ8Qw&#xA;Ki4xgVEoMVVlGBV4xVvFXYq7FXlmr+W4NHifRbCVAnqfW9HkDB545YSJBHJyJLNFxHpseqgA7rVq&#xA;Jxrk5OOViimlz551iaxW5ZY9Ft1RY7h7hDJMZ2oD6NWChORohZWLfyjuTl7kRwd6RaVpXmDzfcvd&#xA;2c8lrpz1SbzBc0kuZgDRktI9kRar1UCMHcBtxkREy3KZTENhzeieXPKeheXbdotNt+MstDc3ch9S&#xA;4mYd5JW+JvYdB2AGXgANBkTzTjCxdirsVdirRxVTYYqouMKoeQYq1YD/AExPkf1ZKPNSoRDIqi4x&#xA;iqIQYFVVGKr8VdirsVYZ5m84262Fw9tOsOnIpEuoFivqk7CO3ZQT8ZNPUX/YVPxLXKfc2wx9Skuk&#xA;anp8ujx3UVnJpsXqejJZSxCGWGQSejwkjX7JrT6N8qLkApV5/wBON7p1oeVFt7tJmXsaI67/AC5V&#xA;HvkJMwLekeS7hLjyfoc6AKslhbHgOin0Vqv+xO2ZY5OAeadYUOxV2KuxV2KuxVYwxVRcYqh5BhVq&#xA;yH+lr8j+rJR5qVCIZFUXGMVV0GBVVcVXYqtd0jRpJGCIgLO7GgAG5JJxV515j842+oWclxKzQeWR&#xA;VIgP73UidgFX7QgJ6DrJ/qbPTPIAPJvx4+pd5SbQrrVra91uYjWWNNK064gmt4LU8fswtOiJNcFf&#xA;tMpNBUJtyZqdPqcWQ1GQkfIpyiXdQa82aZdtresWloyKl9bpdycqg+tLEbeMqwG3FrQE/PLsnNOL&#xA;kgtetrn6tfyyTcrZkh9CGlODI55mvflyGUy5ORFlP5VyNJ5E00t+ybiNf9WO5lRR/wACozKhycGf&#xA;1FKtb/Nd7HzJq2lWmki4s/LyW0mu6nc3SWccK3RUgxq6N6tEYtTktacVqaVTJFJb5j/5yG8lafa2&#xA;8+ksdZ9X6x6yKXtmh9CNXHNZoww9RpFRfh3J9qYDMKIprY/nh+XU9pFJNqixXhVfrFpFFc3DJJwZ&#xA;5FQxxH1Vj4NydBx2r3GHiC8JSzT/APnIjyFd6rNauZ7Wyi5hNQljYrKwlWKMRxxCR29U8ilBWikk&#xA;DBxheEp9pn5xfltqeq2ulWOtJNfXvH6tGIpwrFk9QKZGjEatx/ZZga7ddsPEEcJQvmP86/IejJqM&#xA;Md79e1XTy0f6OhSXlJOrrH6KSlPTLB5FDUY0+jEyCREsq0C/1LUNGtr3U9POl3s6lpbAyCUx/EQt&#xA;XCp9paNQqCK0IrhDEoxxhVDyDCrVmP8AS1+R/Vko81KhEMiqKjGKq64FVRireKvMPNvmqHVYJpz8&#xA;fla1f0liUgHU7gOEABFeVsjbUH963YqAHozZCIkgX+lyMOMEi9mMaPrzah5phubqeCd2BS2tYjzE&#xA;KPQclPj1HKnQ5x/afaE82OuExje/m76OghAEmQJrZJntvN7Xl5cXes3d5LcNLBLobWTwxQOYOVs9&#xA;tcM3Aut5wSLgOTAc9szvC0wx4zhI8W41XPzv7XVAzMjxfTu9Y1KSSXzHdlyGaC1tLadl6euvqzOB&#xA;7cZ0P050eTm4+Hkx/wA5X0VposzyGifab/VjHNj/AMLlMnIizb8vtNl07yRolrMAtwLSKS5UbUmm&#xA;X1Zf+Hc5lxGzrybKJ1Pyd5T1S6e71LR7K8upY/RknngjkkaOlOJZgTsOnhjS28x/Mb8vdPh1jy/Z&#xA;aT5et7fQbhrg61qtrpi6jdoyqHhVlMc0nGRxx5dfdR1iQyBYh5cvdd063nt9X/LZtUmllWTTbttN&#xA;+qGON5GgrPHBbyemW4s7Bak8qAU3yI9yT70602E6ksbJ+UNtaqlm1/cO6SW0g9Kf+5t2+rKTORui&#xA;clJ/1aFj8EfFR0vzHPayW81v+UcdpJbTJNZ3AtrgLFLJD6hIIsy/qEokalVI5bkj4at+S15pPBNr&#xA;Or6/a3+ofl1dRXkeoy6xHLDbSWof0i3pQSc4ZjT1AHlK05k9CQoYfBPxepaF+YHn+/1vRtO1HybN&#xA;p9vqUf1i6veUrx20RjZgsrNFGqTc03jY1FR1PSYJYkB6C+SYqEgwqttP96l+n9WSjzUqEQyKoqPF&#xA;VdcCqg6Yqkfni0vbvylqsFk0gnaBjxhJEkiLRpIkI3DSoCgI3FcB5JHNhdvLodn5r0TUb6WNPL/1&#xA;Rxo7ghLWC4WPmjMKcQDbh/TJoBTxK0qjzb8nJNdXuv09DB6NqllaJcJeQyyKRdMy/t8QU9IupKnl&#xA;yPFiCFPTl+1e2sc4yxQjxDv/AFOTp9OYniLGPNd1rWn6pZ6lbmcWdush9W2hW5eKUqFVzGUlNOJc&#xA;EhDSo6Zqezs5xkmFcfS/t+LmTjGQqXJfo/m3Q4tHS+1TWbdr+9JubtpZIlm5yfZR0TiOUaBY9lH2&#xA;c7bHO4iyDLrTgUBy5MZ826m3mNGs7FWnimPo/uaOqRn4nMjbovNV47+OYmr1cccSbF9G/Hj4jT0b&#xA;8v8Az3ql9fnQfMEarqPpmW0ukCqJlSnJWVTx9Qfa+DYiuwpvb2d2j49g/UHH1ek8PccnoGbRwnYq&#xA;7FXYq7FXYq0emKqbYqoSYVW2n+9S/T+rJR5qVCLIqio8Cq64qvxVvFXlXnDyvJJpOr+VTGrxzxvd&#xA;+X2fZPhb1Fgr2MEtAP8Aisr1o2U5I9HIhKw35c83adq9ovNxb30f7u5tZfgdJV2ZCD0YHquecarS&#xA;TwzMSHaxkJCwnL5jMghZsmGYSq/ubeBC80ixr4sQMsiCeTZFAfl8z+YPzAivrFSdN0GOU3N1+y08&#xA;8ZiSEf5XFy5HYAV+0M6zsPRyjc5Ov7QzAjgD2nOjdS7FXYq7FXYq7FWjiqxsVUJMKrbX/elfp/Vk&#xA;o81KHjyKoqPFVdcCqmKuxVB6rpdtqVr9Xn5KVYSQzIaSRSL9l0JruK99iKgggkYCLSDTxD8yfL0c&#xA;mt6esnLS/MMkhimvbaORlurcRtxlVUZBKEfjyR25J03qpbEz4Yy2kLDl453uDRQ+ieWfM7vLYp5l&#xA;aLULZVZ1e25Rsj/ZdWje3I8CrKGB8RRm18+yMEulfjzbxnmFuq6F58siBc6+jwvsrpBL1H+tcGn3&#xA;ZX/I+AdD+PgzGeR7vknn5cflhpvmPQ11zzHd3d+tzPOttaCT6vCYIpWiRm9EJK3PgW3kpQjbNhg7&#xA;Pww3EXDy6qZNXs9e0vStN0qxisNNtYrOyhFIreFQiKPkPHucz3GReFDsVdirsVdirsVaxVY2KqEm&#xA;KrbX/elfp/Vk480FDx5FKKjxVXXAqpirsVdirCvzNh0n0NGuNQmFqovvQW8LBCglglbjyb4QHkiQ&#xA;fEKdO9MhkGzZiO6AsLDTtJgkKyikzeo80pQFtgB9kItKDsP15Tycnmwbz5+Ynl+Ffqsd0JpIqt6M&#xA;P7yRnpQfCPsj3agxEDI0A2R8ub0f8mNV03Ufy10P6i1TZW6Wd4h+0lzCoWUN82+IexBzIArYuDOJ&#xA;Bos2wsHYq7FXYq7FXYq7FWsVWNiqhJiq21/3pX6f1ZOPNBQ8WRSio8Cq64qvxVvFXYq8t/PG6hmt&#xA;tJ0iRVkWSSW8lQgMKRJ6KqwPZvrBI/1cyNNDilv0dh2dj4p2eQDxqXQNGAKi0jCHcxgUT/gR8P4Z&#xA;n/l8fcHcflsf80KU1haLbPbxRJFEwpxRQor2NBl8YACgKbBAAUAzP/nGvWJbXzRq+hSN+6vLYXSK&#xA;egmtnEbU92SUf8Dmr1cKlfe6TtDHUgX0TmK652KuxV2KuxV2KuxVo4qsbFVCTCq21/3pX6f1ZKPN&#xA;ShojkVRUeKq64FVB0xVvFXYq8I/MzUTe+eNRUGqafHBZKB0qE+sMfvueP0Zn6MbEu87MhUCe8sOn&#xA;IG5NB75nB2SDmywKg/Juuny7+ZGmakTxhW6WO5JrT0bkelIT/qrJy+YzD1kLifJ1+ux8UD5bvsDN&#xA;U6F2KuxV2KuxV2KuxVo9MVU2xVQkwqttP96l+n9WSjzUoaI5FUVGcVV1wKqjFW8Vdir5fu9Xtru+&#xA;1O/knQG7v7ub7Q+wbhxGPojCjNlpdoB6PRCsQYzeagt1qsAQ/uEdQnua9cyL3cgndMpsvDNifmBK&#xA;3bD+dB/EZXkje3e05Rez7G8l6yda8o6NqrNykvbOCWY/8WNGPUH0PUZoQ8wRRTrCh2KuxV2KuxV2&#xA;KtHFVJ8VUJDhVbaf71L9P6slHmpQsRyKouM4qrocCqq4quxV2KvN/wA0/wAt/LF75Y1DUrTS7a31&#xA;S043rXMCCF3SBxJOrmLgX5xK674DYGzZjyGJ5vOrX8pdPuvNFjpYlksWnEkouYZHmo0a81okxZf2&#xA;TXbIYs+Ti5lzcmaUaIJS7W/y+8zWHmPU9H/SUckVjFBcxXP1WjSwXAYc+HrbcZInQ0r0r3zJn2hk&#xA;j3NuPW5JdzMfym/KnyjqukvrGvQvq+pRXU9uVuGIt1WGQhKQJwQ1ShPPllfjTmLkXDz55mVEvZrO&#xA;ys7G1jtLKCO1tYRxit4UWONB4KigKB8sDiq+KuxV2KuxV2KuxVa2KqTnFUPIcKtWZ/0tfkf1ZKPN&#xA;ShIjkVRcZxVEIcCqqnFV+KuxVZLHHLG8Uiho3BV1PQgihBxV5Ppc31PzB5clkckWl3Nply5P2pFE&#xA;lkCfnNvmNHablz3xp75+tlt/NGhahT4b2K60ufbZm4i6hr/qiCWnzOWZRs14DuqflGDHo+rW9ai3&#xA;1SVBtT7UEMh/F8cX0ozj1M6y1pdirsVdirsVdirsVWMcVUXOKoeQ4Vasj/pa/I/qyUealBxHAqLj&#xA;OBUShxVWU4FXjFW8VdiryDzxp66Cb1bNmkSwki1y2Rt2WSS5llaMNSpHqxkiu++Y8xUrcrGbiQyv&#xA;8zXgOk6PclwETVbR0l5UA9QPGDX/AChJx+nLMnJpxfUhPy3n9DW9f01vh5NFeRD+bnyR6f6oWP78&#xA;hhOxbNQNwWf5e47sVdirsVdirsVaOKqbHFVFzhVDyHFWrA/6YnyP6slHmpQURwJRcZwIRKHFVdTg&#xA;VUBxVdirsVYD+YlsGvuLLVLvT5QelCbZwQPH/j4yjM5On6px5Ygtdc/L3TbXUEFxDdafFb3iMAQz&#xA;LGI5djX9pTlo3DQdiwbyjdTWPmry/NNQSXltJpt6x2AlRKv/AMlrdFHzyjHtKnJy7wBev5kuI7FX&#xA;Yq7FXYq7FVpOKqbHFVBzhVDSHFXaef8ATU+R/Vko81KAibAlGRtgQiYziquhwKqqcVXjFW8VYJ+Y&#xA;JA1zSyeg0/U6/wDIyzynNycjT80w/K9ifJFjU1pLdqPkt3KAPoAyeP6Q1ZPqLBfNNNMvpbjvpWtG&#xA;7f8A1ZJl1BgaeKvTKZbTcmG+N7LmS4bsVdirsVdirRxVYxxVSc4qoSNhVCyNiremn/T0+TfqyUea&#xA;lL4mwJRkTYoRMbYFRCHFVZTgVeDiq7FWB/mG6nU4GH2rXTrup/5iXiC7fO3OUZnJ043TX8soxH5H&#xA;0ygI9QSy/F1PqzvJX6eVcthyDTP6iwb8zYFePzPGGq8jo5BH2Q1lFGPn9nKMv1OTg+kvW7SZprSG&#xA;ZgA0kauwHSrAHbMlw1bFXYq7FWsVWk4qpscVUnbCqHkbFULK2FV2lmuoJ8m/UclFSlsLYEoyJsCo&#xA;qNsCEQjYqrK2BVVTiq8HFXmXne9Se51e6U/u4VhsUYbqwhYu7fMSTOh/1cxcx3czTihbMfIUDQeR&#xA;/L8bDjINOtTIN/ttCpfrv9onMkcnEPNg/wCZ3Er5gdf2IYVY0/bCA0/4F1zHy83KwfSXpum/8c61&#xA;/wCMMf8AxEZkOIicKuxVrFWicVWMcVUmbFVF2wqh5GxVCSthSqaQ1dSj+TfqOSigpXC2BKMibAqK&#xA;jbFCJRsCqyNirc93bWsLT3MyQQJ9uWRgiD5s1AMCsW1zztK0Tw6UPqyNVW1W7Xgi+PoQvxkkfwLA&#xA;J3+PplUsgDdDCTzef69q9hJpX6L09JLpmdUlmLD4FLAyySM7B2dgWNaEluuYxLmCNPT/AMttWfVP&#xA;I+kXMlPVSI2spGwMlo7WzkD3aInMyJsOvkKNMH/MeVbjSPNsyGsTCRYz7wQJC/3SxMMoyH1OViHp&#xA;erab/wAc61/4wx/8RGZLhoioxV1cVWk4qtJxVTZsVUnbCqg7Yqh5GwqhJWxSq6K1dTj+Tf8AETko&#xA;oKUQvgSjYnwKio3xVEo2BCQeZNO83XOoQPpV4P0cY+M1kZDbUkBJDmaJGmKsDSisKU712hIHozgY&#xA;9Unn8oed/UWe1fTTcn/j4upry5lirsRG84lNPYccgYE9WwZIjoj9N/LC3lPr+Zb6TVpzQtBHyt7Y&#xA;e1AzSv8A7KTif5cIxAIlmkfJOpvIn5fJbH1tA0uOCJSS5tYECKNyefEcfc1ydBqspbJrNhp+lfoz&#xA;yfbQ2VoOVL5YwlrFzJLPCm3rMS1QfsHryP2TXKYHJthiMubCvNU+lx+V59HSWS4e9T6pyi5Sy1nb&#xA;jJNI6ggEcjIzNSp98x7cvh2p6R+XGqS6l5I0ie4NbuKAWt2fGe1JglP+yeMke2ZcTYcCQo0ySuSY&#xA;tE4qtLYqsLYqps2FVF2xVQdsVQ0j4UoSV8Kq2hNXVY/k3/EThCCk8L4pRkT4FRcb4FRMb4oRCNgV&#xA;WVsVYj5l876vpOqvZDTJ47VVV4NRW1mvopuQHJQsBT0mU1HxNv1ApkJSI6M4xB5li2p+Z9dvZQ50&#xA;LVtVugQ0EbWFxDaxnahjSVY4qjrzeRmG9DTbKjxFujwRR+keQPNuvEXfmq8OlW7bpptmyyXFD2lm&#xA;KtEnusan/XwjF3olnPRkEn5Q+RZI+P1a6R+8yX96sh+ZE2+T8OPc1eLLvT/y55c0ny7p36P0tJEt&#xA;zI0retLLO7SPTkxeVnbenjkgKYkk8005YUNFsVWlsVU2bCqmzYqou+KoeR8KoaR8UoSV8Kojy+1d&#xA;Yi+T/wDEThCCkcL4pRsT4FRcb4qio3wKiEfFCsr4FVVfFVQNiq4Niq7liruWKu5YqtLYqtLYqps+&#xA;KqTPiqg74VQ8j4pQ0j4VQkr4qifLbV1qIez/APETkggpDDJgZI2J8UIyN8ComN8ColHxVWR8UKqv&#xA;gVUD4qvD4qu54q7nirueKrS+KrC+KqbPiqk74VUHfFKHkfCqFlfFUJK+FUZ5Xeuuwj/Jf/iJwhS/&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:InstanceID>xmp.iid:62FE6032C9A6DF118A26F933FBE5E206</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:62FE6032C9A6DF118A26F933FBE5E206</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:faf5bdd5-ba3d-11da-ad31-d33d75182f1b</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF278F61909FDF118B5AA70B713A5B82</stEvt:instanceID>
                  <stEvt:when>2010-08-04T10:25:07+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Windows</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D0278F61909FDF118B5AA70B713A5B82</stEvt:instanceID>
                  <stEvt:when>2010-08-04T10:25:07+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Windows</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E1105ABC553DDF11A15DA55DF6CAE8B0</stEvt:instanceID>
                  <stEvt:when>2010-04-01T10:13:48+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E2105ABC553DDF11A15DA55DF6CAE8B0</stEvt:instanceID>
                  <stEvt:when>2010-04-01T10:44:37+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E3105ABC553DDF11A15DA55DF6CAE8B0</stEvt:instanceID>
                  <stEvt:when>2010-08-11T13:04:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62FE6032C9A6DF118A26F933FBE5E206</stEvt:instanceID>
                  <stEvt:when>2010-08-13T15:15:47+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:40f09805-0bb8-40d0-ae3c-2f3df322f6ff</stRef:instanceID>
            <stRef:documentID>xmp.did:E3105ABC553DDF11A15DA55DF6CAE8B0</stRef:documentID>
            <stRef:originalDocumentID>uuid:faf5bdd5-ba3d-11da-ad31-d33d75182f1b</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/">
         <tiff:YCbCrPositioning>2</tiff:YCbCrPositioning>
         <tiff:XResolution>720000/10000</tiff:XResolution>
         <tiff:YResolution>720000/10000</tiff:YResolution>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <tiff:Make>OLYMPUS IMAGING CORP.  </tiff:Make>
         <tiff:Model>SP550UZ                </tiff:Model>
         <tiff:NativeDigest>256,257,258,259,262,274,277,284,530,531,282,283,296,301,318,319,529,532,306,270,271,272,305,315,33432;EB7A1B1AD1C54B38959CA3F09E5E4761</tiff:NativeDigest>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:exif="http://ns.adobe.com/exif/1.0/">
         <exif:ExifVersion>0221</exif:ExifVersion>
         <exif:FlashpixVersion>0100</exif:FlashpixVersion>
         <exif:ColorSpace>65535</exif:ColorSpace>
         <exif:CompressedBitsPerPixel>2/1</exif:CompressedBitsPerPixel>
         <exif:PixelXDimension>843</exif:PixelXDimension>
         <exif:PixelYDimension>1462</exif:PixelYDimension>
         <exif:DateTimeOriginal>2010-08-04T11:07:27+04:00</exif:DateTimeOriginal>
         <exif:DateTimeDigitized>2010-08-04T11:07:27+04:00</exif:DateTimeDigitized>
         <exif:ExposureTime>10/300</exif:ExposureTime>
         <exif:FNumber>28/10</exif:FNumber>
         <exif:ExposureProgram>5</exif:ExposureProgram>
         <exif:ExposureBiasValue>0/10</exif:ExposureBiasValue>
         <exif:MaxApertureValue>297/100</exif:MaxApertureValue>
         <exif:MeteringMode>5</exif:MeteringMode>
         <exif:LightSource>0</exif:LightSource>
         <exif:FocalLength>468/100</exif:FocalLength>
         <exif:FileSource>3</exif:FileSource>
         <exif:SceneType>1</exif:SceneType>
         <exif:CustomRendered>0</exif:CustomRendered>
         <exif:ExposureMode>0</exif:ExposureMode>
         <exif:WhiteBalance>0</exif:WhiteBalance>
         <exif:DigitalZoomRatio>0/100</exif:DigitalZoomRatio>
         <exif:SceneCaptureType>0</exif:SceneCaptureType>
         <exif:GainControl>1</exif:GainControl>
         <exif:Contrast>0</exif:Contrast>
         <exif:Saturation>0</exif:Saturation>
         <exif:Sharpness>0</exif:Sharpness>
         <exif:NativeDigest>36864,40960,40961,37121,37122,40962,40963,37510,40964,36867,36868,33434,33437,34850,34852,34855,34856,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37396,41483,41484,41486,41487,41488,41492,41493,41495,41728,41729,41730,41985,41986,41987,41988,41989,41990,41991,41992,41993,41994,41995,41996,42016,0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,30;B62EC1359F85B417BA9837F6395788ED</exif:NativeDigest>
         <exif:ComponentsConfiguration>
            <rdf:Seq>
               <rdf:li>1</rdf:li>
               <rdf:li>2</rdf:li>
               <rdf:li>3</rdf:li>
               <rdf:li>0</rdf:li>
            </rdf:Seq>
         </exif:ComponentsConfiguration>
         <exif:ISOSpeedRatings>
            <rdf:Seq>
               <rdf:li>100</rdf:li>
            </rdf:Seq>
         </exif:ISOSpeedRatings>
         <exif:Flash rdf:parseType="Resource">
            <exif:Fired>True</exif:Fired>
            <exif:Return>0</exif:Return>
            <exif:Mode>3</exif:Mode>
            <exif:Function>False</exif:Function>
            <exif:RedEyeMode>False</exif:RedEyeMode>
         </exif:Flash>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">OLYMPUS DIGITAL CAMERA         </rdf:li>
            </rdf:Alt>
         </dc:description>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:ColorMode>1</photoshop:ColorMode>
         <photoshop:ICCProfile>Dot Gain 20%</photoshop:ICCProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>192.043058</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=0 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -841.89 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.89 li
544.374 841.89 li
544.374 0 li
cp
clp
[1 0 0 1 0 0 ]ct
544.374 841.89 mo
0 841.89 li
0 0 li
544.374 0 li
544.374 841.89 li
182.567 773.842 mo
181.046 773.842 179.091 773.983 176.892 774.474 cv
171.727 775.625 164.722 778.388 164.722 778.388 cv
164.722 778.388 166.525 783.336 171.762 785.348 cv
173.785 786.125 176.444 786.514 179.374 786.514 cv
182.351 786.514 185.608 786.113 188.764 785.308 cv
188.764 785.308 190.549 785.428 193.215 785.428 cv
198.316 785.428 206.644 784.989 211.86 782.431 cv
221.026 777.936 235.675 768.026 247.36 768.026 cv
248.614 768.026 249.831 768.14 251.007 768.387 cv
256.29 769.498 260.315 769.878 263.347 769.878 cv
269.9 769.878 271.824 768.106 271.824 768.106 cv
271.824 768.106 267.704 754.655 264.521 742.269 cv
261.582 730.833 265.262 689.911 262.68 662.848 cv
260.098 635.784 252.349 609.103 248.573 592.979 cv
245.436 579.584 244.173 546.607 243.836 535.836 cv
254.053 532.247 262.543 528.611 268.172 528.251 cv
268.172 528.251 263.538 501.29 257.359 484.297 cv
251.279 467.576 252.939 453.441 240.635 438.407 cv
240.795 438.3 240.877 438.243 240.877 438.243 cv
240.877 438.243 236.868 432.468 245.608 404.656 cv
253.429 403.027 260.717 400.636 266.908 397.382 cv
288.277 386.151 286.789 355.187 261.421 349.239 cv
264.78 335.852 267.365 323.943 268.36 316.296 cv
270.666 298.573 261.93 269.483 264.597 264.621 cv
269.496 255.686 311.549 233.164 322.697 225.215 cv
354.832 202.302 364.115 183.543 364.115 183.543 cv
364.115 183.543 337.852 151.737 283.713 131.21 cv
283.713 131.21 281.247 129.98 279.949 126.81 cv
278.653 123.64 281.392 119.975 275.493 116.016 cv
271.472 113.317 265.205 105.655 261.169 98.1616 cv
257.373 91.1103 252.562 87.8431 248.046 87.8431 cv
247.763 87.8431 247.481 87.8559 247.201 87.8814 cv
247.201 87.8814 252.235 98.6977 257.133 104.706 cv
262.033 110.712 262.549 112.19 260.964 112.766 cv
260.892 112.792 260.812 112.805 260.725 112.805 cv
259.612 112.805 257.326 110.781 255.695 109.185 cv
253.722 104.093 250.118 98.3817 243.551 95.1654 cv
229.655 88.359 220.37 91.2333 212.778 83.2289 cv
204.414 74.4116 206.944 65.8158 208.771 62.7261 cv
208.771 62.7261 200.906 66.0966 198.435 72.9776 cv
198.435 72.9776 195.851 63.0069 208.771 52.7558 cv
208.771 52.7558 194.865 56.126 187.282 64.1304 cv
181.477 70.2582 173.025 89.4189 182.715 101.777 cv
186.723 106.888 191.151 110.257 195.808 112.321 cv
194.677 114.182 193.569 116.475 192.491 119.298 cv
186.257 135.626 178.538 166.201 178.538 166.201 cv
176.016 172.287 171.458 194.128 177.84 224.259 cv
177.84 224.259 194.516 221.366 210.869 211.482 cv
210.868 219.684 210.372 236.212 210.727 240.464 cv
210.727 240.464 228.659 258.567 228.946 260.873 cv
229.235 263.178 221.301 261.435 212.313 263.775 cv
212.313 263.775 210.167 266.299 206.853 270.334 cv
203.538 274.369 152.579 312.116 125.776 350.158 cv
125.776 350.158 131.719 371.962 143.376 388.197 cv
151.054 398.889 165.945 413.542 173.226 421.59 cv
173.055 421.831 172.914 422.1 172.794 422.392 cv
171.99 424.356 173.506 426.225 177.139 427.392 cv
176.403 429.608 174.024 437.628 176.055 443.21 cv
177.971 450.612 163.268 489.892 159.199 526.566 cv
159.199 526.566 164.929 529.257 176.121 530.841 cv
178.603 538.08 182.223 549.391 186.255 564.428 cv
189.165 575.283 186.772 584.051 186.772 584.051 cv
186.772 584.051 188.688 587.793 193.412 589.199 cv
193.412 589.199 198.826 617.365 198.051 656.882 cv
197.277 696.398 188.649 711.362 185.504 715.228 cv
182.645 718.747 180.305 722.891 160.191 732.529 cv
147.683 738.522 140.944 739.667 136.823 741.706 cv
136.823 741.706 135.583 741.205 133.011 741.205 cv
132.003 741.205 130.792 741.282 129.371 741.495 cv
124.318 742.254 114.372 745.589 114.372 745.589 cv
114.372 745.589 118.43 753.071 121.171 753.241 cv
121.171 753.241 li
121.777 753.474 122.478 753.576 123.253 753.576 cv
124.563 753.576 126.087 753.288 127.739 752.862 cv
131.278 752.364 135.089 751.418 137.65 750.051 cv
137.731 750.033 137.811 750.015 137.892 749.997 cv
138.74 750.2 144.989 751.647 151.275 751.647 cv
154.332 751.647 157.396 751.305 159.854 750.312 cv
175.143 744.137 184.327 738.558 194.207 738.558 cv
195.701 738.558 197.211 738.685 198.76 738.958 cv
204.372 739.943 208.488 740.237 211.398 740.237 cv
215.673 740.237 217.347 739.604 217.347 739.604 cv
217.347 739.604 216.135 723.297 211.175 716.508 cv
211.175 716.508 216.687 668.285 215.797 642.871 cv
214.907 617.457 205.919 580.37 202.863 560.644 cv
201.031 548.816 201.342 538.723 202.085 531.678 cv
202.368 531.661 202.651 531.642 202.938 531.622 cv
202.591 536.123 li
202.591 536.123 208.725 537.611 216.402 538.501 cv
219.356 545.537 225.023 561.108 228.384 583.676 cv
229.721 592.652 229.058 602.961 229.058 602.961 cv
229.058 602.961 230.856 606.143 234.788 607.079 cv
234.788 607.079 243.822 636.752 245.61 678.981 cv
247.398 721.209 242.24 736.276 238.308 741.52 cv
235.16 745.715 231.46 751.006 210.596 761.179 cv
189.733 771.353 190.374 772.415 185.88 774.099 cv
185.88 774.099 184.619 773.842 182.567 773.842 cv
185.424 406.664 mo
183.571 405.452 180.901 404.018 178.643 404.018 cv
178.412 404.018 178.186 404.033 177.966 404.064 cv
176.647 403.02 175.17 401.763 173.627 400.293 cv
176.972 401.747 180.769 402.995 185.038 403.982 cv
185.45 404.078 185.868 404.172 186.287 404.263 cv
185.961 405.136 185.675 405.936 185.424 406.664 cv
154.549 370.542 mo
148.977 360.886 144.329 354.106 145.381 352.585 cv
148.757 347.707 152.335 342.986 156.02 338.454 cv
157.536 340.357 159.714 341.853 162.85 342.209 cv
163.594 342.294 164.277 342.33 164.908 342.33 cv
166.934 342.33 168.413 341.953 169.591 341.576 cv
170.769 341.199 171.645 340.821 172.466 340.821 cv
172.69 340.821 172.91 340.849 173.131 340.914 cv
175.221 341.519 173.821 343.868 177.472 346.817 cv
181.123 349.765 179.326 352.528 175.488 353.417 cv
172.543 354.1 157.75 358.74 154.549 370.542 cv
199.783 350.89 mo
199.783 350.89 200.906 346.676 204.979 341.761 cv
209.051 336.846 214.069 329.255 208.322 318.768 cv
205.375 313.39 199.043 309.821 191.991 309.821 cv
188.805 309.821 185.472 310.549 182.238 312.168 cv
178.089 314.244 173.709 319.667 171.37 326.22 cv
170.686 328.136 168.739 328.231 164.13 328.946 cv
184.898 305.685 206.756 288.809 213.706 283.676 cv
213.706 283.676 216.194 285.065 219.143 298.219 cv
222.309 312.337 223.794 328.669 215.547 348.726 cv
206.139 349.705 199.783 350.89 199.783 350.89 cv
242.653 256.571 mo
242.27 256.357 241.888 256.102 241.514 255.822 cv
241.514 255.821 241.513 255.82 241.512 255.819 cv
237.501 249.81 230.438 237.492 228.996 225.82 cv
227.562 214.201 231.959 192.632 232.007 192.404 cv
234.529 188.829 236.697 184.881 238.367 180.517 cv
238.367 180.517 239.096 181.286 242.044 185.883 cv
243.43 188.045 245.908 189.048 248.781 189.048 cv
254.617 189.048 262.087 184.912 265.369 177.949 cv
270.153 167.803 267.554 157.814 257.615 157.352 cv
259.522 154.726 262.894 149.82 264.6 145.75 cv
268.478 144.984 273.878 143.926 276.88 143.378 cv
277.147 143.329 277.465 143.303 277.829 143.303 cv
284.348 143.303 306.187 151.527 334.98 183.45 cv
334.98 183.45 334.623 192.978 299.463 221.366 cv
269.945 245.197 257.197 247.11 253.865 247.11 cv
253.228 247.11 252.936 247.04 252.936 247.04 cv
246.037 250.83 244.202 256.247 242.653 256.571 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[441.518 0 0 708.969 274.025 419.503 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .996078 .94902 ]
/C1 [1 .996078 .94902 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .996078 .94902 ]
/C1 [.6 .560784 .580392 ]
/N 1.66691 
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[441.518 0 0 708.969 274.025 419.503 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr2orrr2orrr)forVcZlr;?Hh
qtg0cq>'j]q"OOWp@e1Pp%7nJoCDJBnaQ&:n*]T1m-O'(lKRQski_*jjlGL_io8qThr!;Hh;$c=g=b-1
f%/C$e'c[ld*L"^c-4ARaiMNB`l5m6_SO%&^:h1k]",>[[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1<
~>
<~rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrVc]nrVc]nr;?Kjr;6Bgqtg0c
q>'j]q"OOWp@e1Pp%7nJoCDJBnaQ&:mdBK0m-O''lKRNrkN:pgjQ,@\io/hQhqm2EgtUQ9g"=p-e^`0u
da?Ffcd'eZbK@rJa2Z*:_o'@-^q[Us]Xtbc\@/fPZa-j?YHG"/X/`+rVPU)`U7n3NSXc1;R$X,(PEM&i
~>
<~o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABnaZ/>naZ/>naQ&;nF5o8n*f]4
mdBK0mHj3+lg*m%lK[Wukih3mkN:pgjlGL_j5T(WiS`YOhqm2Fgt^Z=g=b03f@SU)e^W*tdaHOicd0n]
c-4ARb/q`Fa2Z*:`5BI.^qd_!]tCth]",>[[^EKLZa-j?YHG"/X/`.uW2HMhUnaZXTV%gHS=>t8R$X,(
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
341.834 337.293 mo
340.178 338.151 338.193 338.583 335.877 338.583 cv
333.766 338.583 331.896 337.913 330.27 336.577 cv
328.645 335.241 327.832 333.442 327.832 331.182 cv
327.832 329.687 328.219 328.313 328.996 327.06 cv
329.77 325.81 330.766 324.78 331.98 323.976 cv
332.969 323.285 334.102 322.752 335.373 322.378 cv
336.643 322.006 337.961 321.817 339.324 321.817 cv
339.549 321.817 339.768 321.823 339.984 321.831 cv
340.197 321.842 340.418 321.856 340.643 321.874 cv
341.41 321.929 342.16 322.065 342.898 322.28 cv
343.637 322.495 344.295 322.864 344.875 323.388 cv
345.174 323.648 345.389 323.942 345.52 324.271 cv
345.65 324.599 345.717 324.931 345.717 325.267 cv
345.717 325.958 345.465 326.587 344.961 327.157 cv
344.453 327.729 343.801 328.022 342.998 328.042 cv
342.531 328.06 342.119 327.98 341.764 327.803 cv
341.41 327.626 341.072 327.406 340.754 327.144 cv
340.531 326.962 li
340.307 326.752 li
340.461 326.681 li
340.615 326.612 li
340.988 326.406 341.314 326.188 341.596 325.953 cv
341.877 325.719 342.1 325.379 342.268 324.931 cv
342.34 324.72 li
342.354 324.509 li
342.354 324.191 342.221 323.948 341.961 323.78 cv
341.699 323.611 341.381 323.528 341.008 323.528 cv
339.998 323.528 339.1 323.929 338.316 324.733 cv
337.531 325.536 336.867 326.425 336.324 327.396 cv
336.102 327.808 335.9 328.22 335.723 328.63 cv
335.545 329.042 335.391 329.415 335.26 329.751 cv
335.111 330.163 334.971 330.63 334.84 331.153 cv
334.709 331.677 334.635 332.2 334.615 332.724 cv
334.615 332.878 li
334.615 333.031 li
334.615 333.723 334.75 334.368 335.02 334.965 cv
335.293 335.563 335.793 335.993 336.52 336.255 cv
336.783 336.349 337.049 336.419 337.32 336.466 cv
337.592 336.513 337.867 336.534 338.146 336.534 cv
338.357 336.534 li
338.539 336.507 li
339.699 336.433 340.801 336.025 341.848 335.288 cv
342.895 334.55 343.67 333.694 344.176 332.724 cv
344.23 332.625 li
344.287 332.526 li
344.342 332.442 li
344.398 332.331 li
345.465 332.724 li
346.025 332.946 li
344.885 334.983 343.486 336.433 341.834 337.293 cv
cp
.219608 .172549 .0784314 rgb
f
358.471 337.335 mo
357.5 338.335 356.137 338.834 354.379 338.834 cv
354.268 338.834 354.148 338.83 354.029 338.82 cv
353.906 338.811 353.791 338.806 353.678 338.806 cv
353.23 338.749 352.799 338.638 352.389 338.47 cv
351.979 338.302 351.633 338.031 351.352 337.657 cv
351.164 337.396 351.033 337.123 350.959 336.844 cv
350.885 336.563 350.848 336.273 350.848 335.976 cv
350.848 335.75 li
350.875 335.525 li
350.912 335.153 350.986 334.779 351.1 334.404 cv
351.211 334.03 351.334 333.686 351.463 333.368 cv
351.482 333.312 351.52 333.219 351.574 333.087 cv
351.633 332.958 351.688 332.808 351.744 332.639 cv
351.781 332.563 351.814 332.481 351.842 332.386 cv
351.869 332.292 351.893 332.2 351.912 332.106 cv
351.949 331.976 351.982 331.841 352.01 331.7 cv
352.037 331.56 352.051 331.435 352.051 331.321 cv
352.051 331.153 352.02 331.018 351.953 330.915 cv
351.889 330.812 351.771 330.762 351.602 330.762 cv
351.268 330.762 350.949 330.905 350.652 331.196 cv
350.352 331.484 350.1 331.798 349.895 332.135 cv
349.781 332.319 349.684 332.495 349.6 332.653 cv
349.514 332.812 349.455 332.958 349.418 333.087 cv
349.211 333.63 349.016 334.176 348.83 334.728 cv
348.641 335.278 348.453 335.826 348.268 336.368 cv
348.137 336.741 348.01 337.109 347.889 337.476 cv
347.768 337.839 347.641 338.208 347.512 338.583 cv
342.156 338.583 li
347.455 323.163 li
352.836 323.163 li
352.109 325.269 li
350.707 329.33 li
351.1 329.126 351.533 328.943 352.01 328.783 cv
352.486 328.626 352.977 328.517 353.482 328.462 cv
353.574 328.462 353.672 328.457 353.777 328.448 cv
353.879 328.438 353.977 328.434 354.07 328.434 cv
354.613 328.452 355.137 328.546 355.641 328.714 cv
356.145 328.882 356.576 329.173 356.93 329.583 cv
357.174 329.845 357.346 330.13 357.449 330.438 cv
357.551 330.747 357.604 331.06 357.604 331.378 cv
357.604 331.564 357.588 331.747 357.561 331.925 cv
357.533 332.103 357.482 332.284 357.406 332.471 cv
357.352 332.658 357.289 332.849 357.225 333.045 cv
357.16 333.241 357.09 333.442 357.014 333.647 cv
356.939 333.835 356.869 334.026 356.803 334.222 cv
356.738 334.419 356.678 334.62 356.621 334.826 cv
356.566 334.937 li
356.51 335.077 li
356.453 335.245 li
356.398 335.442 li
356.385 335.582 li
356.371 335.723 li
356.371 335.815 356.393 335.896 356.439 335.96 cv
356.486 336.025 356.576 336.059 356.705 336.059 cv
356.799 336.059 356.893 336.044 356.986 336.017 cv
357.08 335.989 357.174 335.946 357.266 335.892 cv
357.527 335.76 357.781 335.573 358.023 335.331 cv
358.266 335.087 358.49 334.835 358.697 334.572 cv
358.826 334.386 358.947 334.2 359.061 334.012 cv
359.174 333.826 359.256 333.657 359.313 333.508 cv
359.369 333.396 li
359.426 333.255 li
359.482 333.144 li
359.537 333.031 li
360.938 333.704 li
360.266 335.124 359.441 336.335 358.471 337.335 cv
cp
f
368.297 330.368 mo
368.23 330.238 368.066 330.173 367.807 330.173 cv
367.713 330.173 367.619 330.181 367.525 330.2 cv
367.434 330.22 367.34 330.247 367.246 330.284 cv
366.891 330.434 366.535 330.695 366.18 331.069 cv
365.826 331.442 365.506 331.845 365.227 332.274 cv
365.021 332.573 364.84 332.867 364.68 333.157 cv
364.521 333.448 364.406 333.694 364.33 333.899 cv
364.311 333.956 364.279 334.05 364.232 334.181 cv
364.186 334.313 364.143 334.46 364.105 334.629 cv
364.068 334.761 364.029 334.894 363.996 335.035 cv
363.955 335.176 363.928 335.321 363.91 335.47 cv
363.871 335.582 363.848 335.704 363.84 335.835 cv
363.83 335.966 363.826 336.087 363.826 336.198 cv
363.826 336.479 363.871 336.713 363.965 336.9 cv
364.059 337.087 364.227 337.181 364.471 337.181 cv
365.012 337.181 365.492 336.957 365.914 336.507 cv
366.334 336.059 366.695 335.563 366.994 335.021 cv
367.162 334.741 367.301 334.47 367.414 334.208 cv
367.525 333.946 367.629 333.714 367.723 333.508 cv
367.947 332.929 368.113 332.425 368.227 331.993 cv
368.34 331.564 368.395 331.2 368.395 330.9 cv
368.395 330.677 368.361 330.499 368.297 330.368 cv
cp
374.801 337.363 mo
373.838 338.344 372.459 338.834 370.666 338.834 cv
370.596 338.834 li
370.525 338.834 li
369.928 338.815 369.361 338.681 368.83 338.428 cv
368.297 338.175 367.9 337.76 367.639 337.181 cv
367.135 337.647 366.559 338.024 365.914 338.315 cv
365.27 338.604 364.611 338.778 363.938 338.834 cv
363.699 338.862 li
363.615 338.862 363.527 338.862 363.434 338.862 cv
362.779 338.845 362.148 338.712 361.541 338.47 cv
360.934 338.227 360.396 337.815 359.93 337.237 cv
359.574 336.807 359.316 336.358 359.158 335.892 cv
359 335.423 358.92 334.946 358.92 334.46 cv
358.92 333.602 359.148 332.771 359.607 331.966 cv
360.064 331.163 360.65 330.49 361.357 329.947 cv
361.9 329.536 362.527 329.196 363.236 328.925 cv
363.947 328.653 364.676 328.5 365.424 328.462 cv
365.662 328.434 li
365.9 328.434 li
366.498 328.434 367.078 328.522 367.639 328.698 cv
368.199 328.877 368.703 329.154 369.15 329.526 cv
369.434 328.686 li
370.348 328.686 371.258 328.686 372.166 328.686 cv
373.072 328.686 373.982 328.686 374.898 328.686 cv
374.785 329.022 374.67 329.364 374.549 329.71 cv
374.426 330.056 374.309 330.397 374.197 330.733 cv
373.955 331.405 373.717 332.083 373.482 332.765 cv
373.25 333.448 373.021 334.134 372.797 334.826 cv
372.768 334.894 li
372.74 335.021 li
372.686 335.176 li
372.656 335.358 li
372.629 335.47 li
372.629 335.582 li
372.67 335.807 li
372.824 335.946 li
372.949 335.989 li
373.105 335.976 li
373.217 335.976 373.324 335.952 373.428 335.905 cv
373.531 335.858 373.637 335.807 373.75 335.75 cv
373.955 335.62 374.16 335.452 374.365 335.245 cv
374.572 335.042 374.76 334.826 374.928 334.601 cv
375.096 334.396 375.24 334.19 375.361 333.983 cv
375.482 333.779 375.57 333.61 375.627 333.479 cv
375.684 333.368 li
375.74 333.255 li
375.768 333.144 li
375.824 333.031 li
377.281 333.677 li
376.59 335.153 375.764 336.382 374.801 337.363 cv
cp
f
391.943 330.368 mo
391.943 330.48 391.943 330.583 391.943 330.677 cv
391.943 331.368 391.732 331.914 391.313 332.317 cv
390.893 332.719 390.43 332.919 389.926 332.919 cv
389.883 332.919 li
389.842 332.919 li
389.447 332.919 389.074 332.789 388.719 332.526 cv
388.363 332.265 388.111 331.845 387.963 331.266 cv
387.906 331.097 387.836 330.972 387.752 330.887 cv
387.668 330.802 387.57 330.771 387.457 330.788 cv
387.271 330.788 387.061 330.896 386.826 331.11 cv
386.592 331.325 386.346 331.62 386.084 331.993 cv
385.637 332.573 385.252 333.219 384.934 333.927 cv
384.617 334.639 384.336 335.358 384.094 336.087 cv
383.98 336.403 383.879 336.713 383.785 337.013 cv
383.691 337.312 383.59 337.61 383.479 337.909 cv
383.438 338.021 383.402 338.134 383.365 338.245 cv
383.328 338.357 383.289 338.47 383.252 338.583 cv
378.066 338.583 li
380.393 332.078 li
380.449 331.882 li
380.449 331.742 li
380.449 331.536 380.369 331.401 380.211 331.337 cv
380.051 331.271 379.871 331.247 379.664 331.266 cv
379.178 331.321 378.75 331.546 378.375 331.938 cv
378 332.331 377.693 332.751 377.449 333.199 cv
377.393 333.294 377.338 333.396 377.281 333.508 cv
377.225 333.62 377.178 333.723 377.141 333.815 cv
375.74 333.255 li
376.227 331.983 376.939 330.841 377.885 329.821 cv
378.828 328.804 380.012 328.257 381.432 328.181 cv
381.561 328.163 381.697 328.153 381.836 328.153 cv
381.979 328.153 382.123 328.163 382.271 328.181 cv
382.889 328.22 383.48 328.373 384.053 328.644 cv
384.621 328.915 385.076 329.321 385.412 329.862 cv
385.822 329.564 386.258 329.284 386.715 329.022 cv
387.174 328.762 387.645 328.556 388.131 328.405 cv
388.355 328.331 388.574 328.279 388.789 328.251 cv
389.004 328.223 389.213 328.209 389.42 328.209 cv
389.701 328.209 389.977 328.247 390.248 328.321 cv
390.518 328.396 390.775 328.509 391.018 328.657 cv
391.26 328.827 391.453 329.032 391.594 329.273 cv
391.732 329.518 391.832 329.771 391.887 330.032 cv
391.926 330.144 391.943 330.255 391.943 330.368 cv
cp
f
401.32 330.368 mo
401.254 330.238 401.092 330.173 400.83 330.173 cv
400.736 330.173 400.643 330.181 400.549 330.2 cv
400.457 330.22 400.361 330.247 400.27 330.284 cv
399.914 330.434 399.559 330.695 399.205 331.069 cv
398.848 331.442 398.531 331.845 398.25 332.274 cv
398.045 332.573 397.863 332.867 397.703 333.157 cv
397.545 333.448 397.428 333.694 397.354 333.899 cv
397.334 333.956 397.301 334.05 397.256 334.181 cv
397.209 334.313 397.166 334.46 397.129 334.629 cv
397.092 334.761 397.055 334.894 397.018 335.035 cv
396.979 335.176 396.951 335.321 396.932 335.47 cv
396.896 335.582 396.873 335.704 396.863 335.835 cv
396.854 335.966 396.85 336.087 396.85 336.198 cv
396.85 336.479 396.896 336.713 396.988 336.9 cv
397.082 337.087 397.25 337.181 397.494 337.181 cv
398.035 337.181 398.516 336.957 398.938 336.507 cv
399.357 336.059 399.717 335.563 400.016 335.021 cv
400.186 334.741 400.324 334.47 400.438 334.208 cv
400.549 333.946 400.652 333.714 400.746 333.508 cv
400.971 332.929 401.139 332.425 401.25 331.993 cv
401.361 331.564 401.418 331.2 401.418 330.9 cv
401.418 330.677 401.387 330.499 401.32 330.368 cv
cp
407.824 337.363 mo
406.861 338.344 405.484 338.834 403.689 338.834 cv
403.617 338.834 li
403.549 338.834 li
402.951 338.815 402.387 338.681 401.854 338.428 cv
401.32 338.175 400.922 337.76 400.66 337.181 cv
400.158 337.647 399.582 338.024 398.938 338.315 cv
398.293 338.604 397.635 338.778 396.961 338.834 cv
396.723 338.862 li
396.639 338.862 396.549 338.862 396.455 338.862 cv
395.801 338.845 395.172 338.712 394.564 338.47 cv
393.957 338.227 393.42 337.815 392.953 337.237 cv
392.598 336.807 392.34 336.358 392.182 335.892 cv
392.023 335.423 391.943 334.946 391.943 334.46 cv
391.943 333.602 392.172 332.771 392.629 331.966 cv
393.088 331.163 393.67 330.49 394.381 329.947 cv
394.924 329.536 395.549 329.196 396.26 328.925 cv
396.971 328.653 397.699 328.5 398.447 328.462 cv
398.686 328.434 li
398.924 328.434 li
399.521 328.434 400.1 328.522 400.66 328.698 cv
401.223 328.877 401.727 329.154 402.176 329.526 cv
402.455 328.686 li
403.371 328.686 404.281 328.686 405.189 328.686 cv
406.096 328.686 407.008 328.686 407.922 328.686 cv
407.811 329.022 407.693 329.364 407.572 329.71 cv
407.449 330.056 407.334 330.397 407.221 330.733 cv
406.979 331.405 406.74 332.083 406.506 332.765 cv
406.273 333.448 406.045 334.134 405.818 334.826 cv
405.791 334.894 li
405.764 335.021 li
405.707 335.176 li
405.68 335.358 li
405.652 335.47 li
405.652 335.582 li
405.693 335.807 li
405.848 335.946 li
405.975 335.989 li
406.129 335.976 li
406.24 335.976 406.348 335.952 406.451 335.905 cv
406.555 335.858 406.66 335.807 406.773 335.75 cv
406.979 335.62 407.184 335.452 407.391 335.245 cv
407.596 335.042 407.783 334.826 407.951 334.601 cv
408.119 334.396 408.262 334.19 408.385 333.983 cv
408.504 333.779 408.596 333.61 408.652 333.479 cv
408.707 333.368 li
408.764 333.255 li
408.791 333.144 li
408.848 333.031 li
410.305 333.677 li
409.615 335.153 408.787 336.382 407.824 337.363 cv
cp
f
423.242 333.858 mo
423.172 334.04 li
422.742 334.919 422.266 335.699 421.742 336.382 cv
421.219 337.063 420.471 337.638 419.5 338.106 cv
418.92 338.368 418.279 338.567 417.578 338.708 cv
416.879 338.849 416.162 338.919 415.434 338.919 cv
415.252 338.919 li
415.07 338.919 li
413.986 338.862 412.945 338.651 411.945 338.288 cv
410.943 337.924 410.127 337.339 409.492 336.534 cv
409.154 336.106 408.906 335.671 408.75 335.231 cv
408.588 334.793 408.51 334.349 408.51 333.899 cv
408.51 333.042 408.771 332.222 409.295 331.448 cv
409.818 330.671 410.49 330.051 411.314 329.583 cv
411.855 329.284 412.52 329.027 413.305 328.812 cv
414.088 328.598 414.893 328.472 415.715 328.434 cv
415.828 328.415 415.93 328.405 416.023 328.405 cv
416.115 328.405 416.209 328.405 416.305 328.405 cv
417.012 328.405 417.686 328.489 418.322 328.657 cv
418.957 328.827 419.508 329.116 419.977 329.526 cv
420.199 329.751 420.387 330.018 420.537 330.325 cv
420.686 330.634 420.779 330.958 420.816 331.294 cv
420.816 331.392 li
420.816 331.489 li
420.816 331.731 420.775 331.976 420.691 332.219 cv
420.607 332.461 420.48 332.677 420.311 332.862 cv
420.105 333.106 419.863 333.284 419.584 333.396 cv
419.303 333.508 419.004 333.564 418.686 333.564 cv
418.561 333.564 li
418.406 333.535 li
418.238 333.517 418.064 333.476 417.887 333.409 cv
417.709 333.345 417.545 333.266 417.396 333.172 cv
417.154 333.022 416.957 332.831 416.809 332.598 cv
416.658 332.362 416.566 332.116 416.527 331.854 cv
416.527 331.798 li
416.527 331.714 li
416.5 331.658 li
416.5 331.602 li
416.5 331.173 416.639 330.798 416.92 330.48 cv
417.199 330.163 417.545 329.947 417.957 329.835 cv
417.846 329.798 417.734 329.765 417.621 329.737 cv
417.508 329.71 417.387 329.706 417.256 329.724 cv
417.104 329.724 li
416.947 329.751 li
416.795 329.778 li
416.639 329.835 li
415.984 330.06 415.42 330.522 414.943 331.224 cv
414.467 331.925 414.143 332.677 413.977 333.479 cv
413.939 333.647 413.912 333.826 413.893 334.012 cv
413.875 334.2 413.865 334.376 413.865 334.544 cv
413.883 335.272 414.078 335.905 414.453 336.438 cv
414.826 336.971 415.443 337.237 416.305 337.237 cv
417.742 337.237 418.912 336.84 419.807 336.044 cv
420.705 335.251 421.441 334.265 422.023 333.087 cv
423.342 333.677 li
423.242 333.858 li
cp
f
430.979 333.97 mo
430.932 334.054 430.891 334.144 430.854 334.237 cv
430.555 334.835 430.227 335.415 429.871 335.976 cv
429.516 336.534 429.086 337.042 428.582 337.489 cv
428.113 337.899 427.561 338.227 426.914 338.47 cv
426.27 338.712 425.527 338.834 424.686 338.834 cv
424.588 338.834 li
424.52 338.834 li
423.994 338.815 423.494 338.712 423.018 338.526 cv
422.541 338.339 422.152 338.021 421.854 337.573 cv
421.668 337.293 421.531 336.993 421.449 336.677 cv
421.363 336.358 421.322 336.03 421.322 335.694 cv
421.322 335.601 421.326 335.513 421.336 335.429 cv
421.344 335.345 421.359 335.255 421.379 335.162 cv
421.416 334.9 421.467 334.639 421.531 334.376 cv
421.598 334.115 421.668 333.862 421.742 333.62 cv
421.854 333.321 421.963 333.022 422.064 332.724 cv
422.168 332.425 422.266 332.116 422.359 331.798 cv
422.453 331.499 422.551 331.2 422.652 330.9 cv
422.756 330.603 422.863 330.304 422.975 330.003 cv
421.77 330.003 li
422.246 328.657 li
423.453 328.657 li
423.545 328.377 423.639 328.103 423.732 327.831 cv
423.826 327.562 423.93 327.284 424.041 327.004 cv
424.135 326.743 424.227 326.476 424.32 326.206 cv
424.414 325.935 424.506 325.659 424.604 325.379 cv
425.219 325.284 425.834 325.196 426.453 325.11 cv
427.068 325.028 427.686 324.939 428.303 324.845 cv
428.602 324.809 428.908 324.767 429.227 324.72 cv
429.545 324.673 429.854 324.632 430.152 324.593 cv
430.041 324.931 429.924 325.267 429.801 325.603 cv
429.68 325.939 429.564 326.275 429.451 326.612 cv
429.34 326.948 429.223 327.288 429.102 327.634 cv
428.98 327.98 428.863 328.321 428.752 328.657 cv
430.264 328.657 li
429.76 330.003 li
428.275 330.003 li
428.145 330.397 428.008 330.794 427.865 331.196 cv
427.729 331.597 427.592 332.003 427.461 332.415 cv
427.311 332.825 427.172 333.233 427.041 333.634 cv
426.91 334.036 426.77 334.433 426.619 334.826 cv
426.582 334.957 426.551 335.083 426.521 335.204 cv
426.494 335.325 426.48 335.434 426.48 335.525 cv
426.48 335.694 426.518 335.812 426.592 335.877 cv
426.668 335.942 426.77 335.976 426.898 335.976 cv
427.014 335.976 427.141 335.946 427.277 335.892 cv
427.42 335.835 427.564 335.76 427.715 335.666 cv
427.951 335.499 li
428.191 335.302 li
428.545 334.983 428.834 334.629 429.059 334.237 cv
429.283 333.845 429.488 333.442 429.676 333.031 cv
431.105 333.704 li
431.068 333.798 431.025 333.886 430.979 333.97 cv
cp
f
438.619 329.835 mo
438.451 329.706 438.207 329.631 437.891 329.611 cv
437.197 329.593 436.6 329.854 436.096 330.397 cv
435.59 330.938 435.207 331.536 434.947 332.19 cv
434.852 332.415 434.777 332.639 434.721 332.862 cv
434.666 333.087 434.619 333.294 434.582 333.479 cv
434.807 333.462 435.039 333.435 435.283 333.396 cv
435.525 333.358 435.768 333.303 436.012 333.228 cv
436.721 333.042 437.371 332.732 437.959 332.304 cv
438.549 331.872 438.852 331.274 438.869 330.509 cv
438.869 330.19 438.787 329.966 438.619 329.835 cv
cp
442.432 336.228 mo
441.852 336.993 441.047 337.618 440.021 338.106 cv
439.402 338.387 438.754 338.591 438.072 338.722 cv
437.391 338.853 436.693 338.919 435.984 338.919 cv
435.871 338.919 435.758 338.919 435.646 338.919 cv
435.535 338.919 435.434 338.909 435.34 338.891 cv
434.891 338.871 434.451 338.82 434.021 338.735 cv
433.59 338.651 433.172 338.544 432.76 338.414 cv
431.676 338.04 430.783 337.47 430.082 336.704 cv
429.381 335.938 429.031 335.03 429.031 333.983 cv
429.031 333.723 429.055 333.456 429.102 333.186 cv
429.146 332.915 429.219 332.639 429.311 332.358 cv
429.686 331.238 430.441 330.362 431.582 329.737 cv
432.721 329.111 433.938 328.714 435.227 328.546 cv
435.506 328.509 435.781 328.48 436.053 328.462 cv
436.324 328.443 436.59 328.434 436.854 328.434 cv
437.244 328.434 437.629 328.452 438.002 328.489 cv
438.375 328.528 438.721 328.593 439.039 328.686 cv
439.193 328.728 li
439.346 328.77 li
439.889 328.919 440.398 329.183 440.875 329.554 cv
441.352 329.929 441.6 330.434 441.619 331.069 cv
441.656 332.078 441.236 332.874 440.357 333.451 cv
439.479 334.03 438.516 334.45 437.469 334.714 cv
436.891 334.862 436.328 334.965 435.787 335.021 cv
435.244 335.077 434.777 335.097 434.387 335.077 cv
434.479 335.75 434.734 336.27 435.156 336.634 cv
435.576 336.999 436.133 337.181 436.824 337.181 cv
438.225 337.181 439.402 336.788 440.357 336.003 cv
441.309 335.218 442.057 334.228 442.6 333.031 cv
444 333.677 li
443.533 334.61 443.01 335.462 442.432 336.228 cv
cp
f
458.719 330.368 mo
458.719 330.48 458.719 330.583 458.719 330.677 cv
458.719 331.368 458.508 331.914 458.088 332.317 cv
457.668 332.719 457.205 332.919 456.701 332.919 cv
456.658 332.919 li
456.615 332.919 li
456.223 332.919 455.85 332.789 455.494 332.526 cv
455.139 332.265 454.885 331.845 454.736 331.266 cv
454.682 331.097 454.611 330.972 454.527 330.887 cv
454.443 330.802 454.346 330.771 454.232 330.788 cv
454.047 330.788 453.836 330.896 453.602 331.11 cv
453.367 331.325 453.121 331.62 452.859 331.993 cv
452.412 332.573 452.027 333.219 451.709 333.927 cv
451.393 334.639 451.111 335.358 450.867 336.087 cv
450.756 336.403 450.652 336.713 450.559 337.013 cv
450.467 337.312 450.365 337.61 450.252 337.909 cv
450.215 338.021 450.176 338.134 450.139 338.245 cv
450.102 338.357 450.064 338.47 450.027 338.583 cv
444.842 338.583 li
447.168 332.078 li
447.225 331.882 li
447.225 331.742 li
447.225 331.536 447.145 331.401 446.986 331.337 cv
446.826 331.271 446.645 331.247 446.439 331.266 cv
445.953 331.321 445.523 331.546 445.15 331.938 cv
444.775 332.331 444.467 332.751 444.225 333.199 cv
444.168 333.294 444.111 333.396 444.057 333.508 cv
444 333.62 443.953 333.723 443.916 333.815 cv
442.514 333.255 li
443.002 331.983 443.715 330.841 444.66 329.821 cv
445.604 328.804 446.785 328.257 448.205 328.181 cv
448.338 328.163 448.471 328.153 448.611 328.153 cv
448.752 328.153 448.896 328.163 449.047 328.181 cv
449.662 328.22 450.256 328.373 450.826 328.644 cv
451.396 328.915 451.85 329.321 452.186 329.862 cv
452.598 329.564 453.031 329.284 453.49 329.022 cv
453.949 328.762 454.42 328.556 454.906 328.405 cv
455.129 328.331 455.35 328.279 455.564 328.251 cv
455.779 328.223 455.988 328.209 456.195 328.209 cv
456.475 328.209 456.752 328.247 457.023 328.321 cv
457.293 328.396 457.551 328.509 457.793 328.657 cv
458.035 328.827 458.227 329.032 458.367 329.273 cv
458.508 329.518 458.605 329.771 458.662 330.032 cv
458.699 330.144 458.719 330.255 458.719 330.368 cv
cp
f
460.793 333.451 mo
460.904 333.602 460.984 333.765 461.029 333.942 cv
461.078 334.12 461.102 334.303 461.102 334.488 cv
461.102 334.676 461.072 334.854 461.016 335.021 cv
460.961 335.189 460.877 335.35 460.764 335.499 cv
460.576 335.779 460.324 335.999 460.008 336.156 cv
459.689 336.316 459.363 336.396 459.025 336.396 cv
458.957 336.396 li
458.885 336.396 li
458.816 336.382 li
458.746 336.368 li
458.877 336.554 459.045 336.718 459.252 336.858 cv
459.457 336.999 459.68 337.069 459.924 337.069 cv
460.689 337.069 461.301 336.862 461.76 336.452 cv
462.217 336.04 462.447 335.434 462.447 334.629 cv
462.465 334.05 462.475 333.476 462.475 332.905 cv
462.475 332.335 462.475 331.771 462.475 331.21 cv
460.793 333.451 li
cp
466.146 337.222 mo
465.043 338.036 463.828 338.508 462.502 338.638 cv
462.334 338.656 462.17 338.67 462.012 338.681 cv
461.852 338.688 461.699 338.694 461.549 338.694 cv
461.361 338.694 461.166 338.688 460.961 338.681 cv
460.754 338.67 460.551 338.647 460.344 338.61 cv
459.801 338.554 459.273 338.424 458.76 338.218 cv
458.244 338.011 457.801 337.714 457.428 337.321 cv
457.166 337.003 456.975 336.666 456.854 336.312 cv
456.732 335.958 456.672 335.591 456.672 335.218 cv
456.672 335.013 456.686 334.808 456.713 334.601 cv
456.742 334.396 456.783 334.19 456.84 333.983 cv
456.971 333.499 457.232 333.12 457.623 332.849 cv
458.016 332.579 458.447 332.452 458.914 332.471 cv
459.068 332.471 li
459.195 332.471 li
459.322 332.484 li
459.475 332.526 li
461.969 329.05 li
467.268 327.704 li
467.324 328.696 467.385 329.69 467.449 330.691 cv
467.516 331.69 467.586 332.686 467.66 333.677 cv
467.754 335.228 467.25 336.41 466.146 337.222 cv
cp
f
309.578 318.155 mo
307.924 319.017 305.938 319.446 303.619 319.446 cv
301.508 319.446 299.639 318.779 298.014 317.442 cv
296.389 316.106 295.576 314.307 295.576 312.045 cv
295.576 310.55 295.963 309.177 296.738 307.925 cv
297.514 306.673 298.51 305.646 299.727 304.841 cv
300.715 304.15 301.846 303.616 303.117 303.243 cv
304.387 302.869 305.703 302.683 307.07 302.683 cv
307.293 302.683 307.514 302.687 307.729 302.696 cv
307.943 302.706 308.162 302.719 308.387 302.739 cv
309.154 302.794 309.904 302.93 310.645 303.144 cv
311.381 303.36 312.041 303.729 312.619 304.253 cv
312.918 304.515 313.133 304.81 313.264 305.136 cv
313.396 305.462 313.461 305.794 313.461 306.13 cv
313.461 306.823 313.207 307.452 312.705 308.022 cv
312.199 308.593 311.545 308.888 310.742 308.905 cv
310.273 308.925 309.863 308.845 309.508 308.668 cv
309.154 308.489 308.816 308.271 308.498 308.009 cv
308.273 307.827 li
308.051 307.616 li
308.205 307.547 li
308.359 307.476 li
308.732 307.271 309.061 307.052 309.34 306.816 cv
309.621 306.584 309.846 306.242 310.012 305.794 cv
310.084 305.583 li
310.096 305.373 li
310.096 305.057 309.967 304.813 309.705 304.646 cv
309.443 304.477 309.125 304.392 308.752 304.392 cv
307.742 304.392 306.844 304.795 306.061 305.598 cv
305.273 306.401 304.611 307.288 304.07 308.261 cv
303.846 308.672 303.645 309.084 303.469 309.495 cv
303.291 309.905 303.135 310.28 303.004 310.615 cv
302.854 311.026 302.715 311.495 302.584 312.017 cv
302.453 312.542 302.377 313.063 302.359 313.587 cv
302.359 313.742 li
302.359 313.896 li
302.359 314.587 302.496 315.231 302.766 315.83 cv
303.037 316.429 303.537 316.857 304.266 317.12 cv
304.527 317.214 304.793 317.284 305.064 317.329 cv
305.336 317.377 305.611 317.399 305.893 317.399 cv
306.102 317.399 li
306.285 317.372 li
307.443 317.298 308.545 316.892 309.594 316.153 cv
310.639 315.414 311.414 314.56 311.918 313.587 cv
311.975 313.489 li
312.029 313.392 li
312.086 313.306 li
312.143 313.194 li
313.207 313.587 li
313.77 313.812 li
312.629 315.849 311.232 317.298 309.578 318.155 cv
cp
f
321.436 311.022 mo
321.24 310.771 320.992 310.644 320.693 310.644 cv
320.506 310.644 320.301 310.696 320.076 310.798 cv
319.854 310.899 319.629 311.046 319.404 311.232 cv
319.311 311.308 319.223 311.392 319.139 311.483 cv
319.053 311.579 318.963 311.672 318.871 311.765 cv
318.441 312.271 318.094 312.845 317.834 313.489 cv
317.572 314.136 317.385 314.792 317.273 315.466 cv
317.256 315.69 317.236 315.91 317.217 316.124 cv
317.199 316.339 317.189 316.55 317.189 316.755 cv
317.189 316.867 317.193 317.008 317.203 317.175 cv
317.213 317.343 317.236 317.513 317.273 317.681 cv
317.33 317.998 317.428 318.282 317.568 318.534 cv
317.707 318.787 317.928 318.913 318.227 318.913 cv
318.693 318.913 319.109 318.751 319.473 318.423 cv
319.838 318.097 320.133 317.728 320.355 317.315 cv
320.412 317.222 320.469 317.134 320.525 317.05 cv
320.582 316.966 320.627 316.878 320.666 316.782 cv
320.367 316.577 320.137 316.32 319.979 316.013 cv
319.82 315.704 319.74 315.372 319.74 315.018 cv
319.74 314.905 li
319.74 314.821 li
319.797 314.26 320.006 313.732 320.371 313.237 cv
320.734 312.741 321.199 312.419 321.76 312.271 cv
321.738 311.69 321.633 311.274 321.436 311.022 cv
cp
329.355 315.396 mo
329.207 315.704 329.037 316.017 328.85 316.335 cv
328.494 316.951 328.061 317.517 327.547 318.03 cv
327.033 318.545 326.43 318.802 325.738 318.802 cv
325.459 318.802 325.191 318.759 324.941 318.675 cv
324.688 318.591 324.449 318.483 324.225 318.353 cv
323.498 318.951 322.641 319.418 321.66 319.755 cv
320.68 320.091 319.674 320.288 318.648 320.343 cv
318.408 320.343 li
318.324 320.343 318.236 320.343 318.143 320.343 cv
317.17 320.343 316.236 320.198 315.34 319.909 cv
314.441 319.619 313.656 319.186 312.984 318.604 cv
312.441 318.12 312.049 317.601 311.807 317.05 cv
311.564 316.499 311.441 315.942 311.441 315.382 cv
311.441 314.503 311.703 313.663 312.227 312.858 cv
312.75 312.056 313.441 311.372 314.303 310.812 cv
315.049 310.325 315.891 309.942 316.824 309.663 cv
317.758 309.384 318.721 309.242 319.713 309.242 cv
319.861 309.242 320.006 309.247 320.146 309.257 cv
320.287 309.267 320.432 309.271 320.582 309.271 cv
321.385 309.345 322.17 309.518 322.936 309.79 cv
323.701 310.06 324.375 310.468 324.955 311.009 cv
325.459 311.456 325.842 311.967 326.104 312.535 cv
326.365 313.106 326.496 313.698 326.496 314.316 cv
326.496 314.54 326.479 314.765 326.439 314.99 cv
326.402 315.214 326.346 315.438 326.273 315.663 cv
326.533 315.624 326.764 315.554 326.959 315.452 cv
327.154 315.349 327.346 315.187 327.533 314.961 cv
327.645 314.849 327.758 314.704 327.869 314.526 cv
327.982 314.35 328.104 314.147 328.234 313.925 cv
329.748 314.597 li
329.635 314.821 329.504 315.088 329.355 315.396 cv
cp
f
335.076 318.198 mo
334.158 319.2 332.822 319.698 331.066 319.698 cv
330.973 319.698 330.873 319.694 330.771 319.685 cv
330.668 319.675 330.57 319.671 330.477 319.671 cv
330.01 319.615 329.553 319.497 329.104 319.319 cv
328.654 319.144 328.291 318.858 328.012 318.466 cv
327.822 318.205 327.684 317.913 327.588 317.597 cv
327.496 317.278 327.449 316.961 327.449 316.644 cv
327.465 316.433 li
327.479 316.251 li
327.514 315.971 327.561 315.698 327.617 315.438 cv
327.674 315.175 327.75 314.924 327.842 314.681 cv
328.457 312.905 329.07 311.125 329.678 309.341 cv
330.285 307.556 330.889 305.784 331.486 304.028 cv
331.953 304.028 332.416 304.028 332.875 304.028 cv
333.332 304.028 333.795 304.028 334.262 304.028 cv
334.709 304.028 335.162 304.028 335.621 304.028 cv
336.078 304.028 336.541 304.028 337.01 304.028 cv
336.338 305.972 335.664 307.915 334.99 309.859 cv
334.318 311.803 333.652 313.746 333 315.69 cv
332.926 315.858 332.869 316.013 332.832 316.153 cv
332.795 316.292 332.775 316.41 332.775 316.503 cv
332.775 316.615 332.822 316.704 332.916 316.769 cv
333.01 316.835 333.158 316.857 333.365 316.839 cv
333.514 316.839 333.699 316.778 333.926 316.657 cv
334.148 316.534 334.383 316.362 334.625 316.14 cv
334.963 315.802 335.238 315.447 335.453 315.074 cv
335.666 314.699 335.869 314.307 336.055 313.896 cv
337.457 314.567 li
336.783 315.989 335.99 317.2 335.076 318.198 cv
cp
f
342.979 318.198 mo
342.063 319.2 340.727 319.698 338.971 319.698 cv
338.877 319.698 338.779 319.694 338.678 319.685 cv
338.574 319.675 338.475 319.671 338.381 319.671 cv
337.914 319.615 337.457 319.497 337.01 319.319 cv
336.561 319.144 336.195 318.858 335.914 318.466 cv
335.729 318.205 335.588 317.913 335.496 317.597 cv
335.4 317.278 335.355 316.961 335.355 316.644 cv
335.369 316.433 li
335.383 316.251 li
335.42 315.971 335.467 315.698 335.523 315.438 cv
335.578 315.175 335.652 314.924 335.748 314.681 cv
336.363 312.905 336.977 311.125 337.584 309.341 cv
338.191 307.556 338.793 305.784 339.391 304.028 cv
339.859 304.028 340.322 304.028 340.779 304.028 cv
341.236 304.028 341.699 304.028 342.166 304.028 cv
342.615 304.028 343.068 304.028 343.525 304.028 cv
343.984 304.028 344.447 304.028 344.914 304.028 cv
344.242 305.972 343.568 307.915 342.896 309.859 cv
342.223 311.803 341.559 313.746 340.904 315.69 cv
340.832 315.858 340.775 316.013 340.738 316.153 cv
340.699 316.292 340.682 316.41 340.682 316.503 cv
340.682 316.615 340.727 316.704 340.82 316.769 cv
340.914 316.835 341.063 316.857 341.27 316.839 cv
341.42 316.839 341.605 316.778 341.832 316.657 cv
342.055 316.534 342.289 316.362 342.531 316.14 cv
342.867 315.802 343.143 315.447 343.357 315.074 cv
343.572 314.699 343.773 314.307 343.963 313.896 cv
345.363 314.567 li
344.689 315.989 343.896 317.2 342.979 318.198 cv
cp
f
352.875 310.7 mo
352.709 310.569 352.463 310.495 352.146 310.476 cv
351.455 310.458 350.857 310.719 350.352 311.261 cv
349.848 311.803 349.465 312.401 349.203 313.054 cv
349.109 313.278 349.035 313.503 348.979 313.728 cv
348.924 313.952 348.875 314.157 348.838 314.344 cv
349.063 314.325 349.295 314.298 349.539 314.26 cv
349.781 314.222 350.025 314.167 350.27 314.091 cv
350.979 313.905 351.629 313.597 352.217 313.167 cv
352.805 312.737 353.109 312.14 353.127 311.372 cv
353.127 311.056 353.045 310.829 352.875 310.7 cv
cp
356.688 317.091 mo
356.109 317.858 355.305 318.483 354.277 318.97 cv
353.66 319.249 353.012 319.455 352.328 319.587 cv
351.646 319.716 350.949 319.782 350.242 319.782 cv
350.129 319.782 350.016 319.782 349.902 319.782 cv
349.791 319.782 349.689 319.774 349.596 319.755 cv
349.146 319.735 348.707 319.685 348.277 319.601 cv
347.848 319.517 347.428 319.409 347.018 319.277 cv
345.932 318.905 345.041 318.335 344.34 317.567 cv
343.637 316.802 343.289 315.896 343.289 314.849 cv
343.289 314.587 343.311 314.321 343.357 314.05 cv
343.404 313.779 343.475 313.503 343.568 313.223 cv
343.943 312.102 344.699 311.229 345.84 310.602 cv
346.979 309.976 348.193 309.579 349.484 309.411 cv
349.764 309.372 350.039 309.345 350.311 309.327 cv
350.582 309.308 350.848 309.299 351.111 309.299 cv
351.502 309.299 351.885 309.317 352.258 309.354 cv
352.633 309.392 352.979 309.456 353.297 309.55 cv
353.449 309.593 li
353.604 309.635 li
354.146 309.784 354.656 310.045 355.133 310.419 cv
355.609 310.794 355.857 311.299 355.877 311.933 cv
355.914 312.942 355.492 313.737 354.613 314.316 cv
353.734 314.896 352.773 315.316 351.727 315.579 cv
351.145 315.728 350.586 315.83 350.045 315.887 cv
349.502 315.942 349.035 315.96 348.643 315.942 cv
348.736 316.615 348.994 317.134 349.412 317.499 cv
349.834 317.861 350.389 318.044 351.082 318.044 cv
352.482 318.044 353.66 317.651 354.613 316.867 cv
355.566 316.083 356.314 315.091 356.857 313.896 cv
358.258 314.54 li
357.791 315.475 357.268 316.324 356.688 317.091 cv
cp
f
370.943 314.724 mo
370.873 314.905 li
370.443 315.784 369.967 316.563 369.443 317.245 cv
368.92 317.928 368.172 318.503 367.201 318.97 cv
366.621 319.231 365.98 319.433 365.281 319.571 cv
364.58 319.714 363.865 319.782 363.137 319.782 cv
362.953 319.782 li
362.771 319.782 li
361.688 319.728 360.646 319.517 359.646 319.153 cv
358.646 318.787 357.828 318.205 357.191 317.399 cv
356.857 316.971 356.609 316.534 356.451 316.097 cv
356.291 315.657 356.213 315.214 356.213 314.765 cv
356.213 313.905 356.473 313.089 356.996 312.312 cv
357.52 311.536 358.191 310.915 359.016 310.448 cv
359.557 310.149 360.221 309.892 361.006 309.677 cv
361.791 309.462 362.594 309.337 363.416 309.299 cv
363.527 309.28 363.631 309.271 363.725 309.271 cv
363.818 309.271 363.912 309.271 364.006 309.271 cv
364.717 309.271 365.389 309.354 366.023 309.522 cv
366.658 309.691 367.209 309.979 367.678 310.392 cv
367.902 310.615 368.088 310.882 368.238 311.19 cv
368.389 311.499 368.48 311.821 368.52 312.157 cv
368.52 312.255 li
368.52 312.353 li
368.52 312.599 368.477 312.841 368.393 313.083 cv
368.309 313.326 368.182 313.54 368.014 313.728 cv
367.809 313.972 367.564 314.147 367.285 314.26 cv
367.004 314.372 366.707 314.43 366.389 314.43 cv
366.262 314.43 li
366.107 314.401 li
365.939 314.382 365.768 314.34 365.59 314.274 cv
365.41 314.208 365.248 314.129 365.098 314.036 cv
364.855 313.887 364.66 313.696 364.51 313.462 cv
364.359 313.228 364.268 312.979 364.229 312.718 cv
364.229 312.662 li
364.229 312.579 li
364.201 312.521 li
364.201 312.466 li
364.201 312.036 364.34 311.663 364.623 311.345 cv
364.902 311.026 365.248 310.812 365.658 310.7 cv
365.547 310.663 365.434 310.63 365.324 310.602 cv
365.211 310.573 365.088 310.569 364.959 310.587 cv
364.803 310.587 li
364.65 310.615 li
364.496 310.644 li
364.34 310.7 li
363.688 310.925 363.123 311.386 362.646 312.087 cv
362.17 312.788 361.848 313.54 361.678 314.344 cv
361.641 314.513 361.613 314.69 361.594 314.877 cv
361.576 315.063 361.566 315.241 361.566 315.409 cv
361.586 316.14 361.781 316.769 362.156 317.302 cv
362.529 317.834 363.145 318.101 364.006 318.101 cv
365.443 318.101 366.613 317.704 367.508 316.909 cv
368.406 316.116 369.143 315.128 369.725 313.952 cv
371.043 314.54 li
370.943 314.724 li
cp
f
378.682 314.835 mo
378.635 314.92 378.592 315.009 378.555 315.101 cv
378.256 315.698 377.928 316.278 377.572 316.839 cv
377.219 317.399 376.789 317.904 376.285 318.353 cv
375.816 318.765 375.262 319.091 374.615 319.335 cv
373.971 319.577 373.229 319.698 372.387 319.698 cv
372.291 319.698 li
372.221 319.698 li
371.697 319.681 371.195 319.577 370.719 319.39 cv
370.242 319.204 369.855 318.886 369.557 318.437 cv
369.369 318.155 369.234 317.858 369.15 317.54 cv
369.066 317.222 369.025 316.895 369.025 316.56 cv
369.025 316.466 369.027 316.376 369.037 316.292 cv
369.045 316.208 369.061 316.121 369.08 316.026 cv
369.117 315.764 369.168 315.503 369.234 315.241 cv
369.299 314.979 369.369 314.728 369.443 314.483 cv
369.557 314.185 369.664 313.887 369.766 313.587 cv
369.869 313.288 369.967 312.979 370.061 312.662 cv
370.154 312.363 370.252 312.063 370.355 311.765 cv
370.457 311.468 370.566 311.167 370.678 310.868 cv
369.471 310.868 li
369.947 309.522 li
371.154 309.522 li
371.248 309.242 371.342 308.966 371.436 308.696 cv
371.527 308.424 371.631 308.148 371.742 307.868 cv
371.836 307.607 371.93 307.341 372.023 307.069 cv
372.115 306.798 372.209 306.522 372.305 306.242 cv
372.92 306.149 373.537 306.06 374.154 305.976 cv
374.77 305.892 375.389 305.804 376.004 305.71 cv
376.303 305.673 376.611 305.632 376.93 305.583 cv
377.246 305.537 377.555 305.495 377.855 305.458 cv
377.742 305.794 377.625 306.13 377.504 306.467 cv
377.381 306.803 377.266 307.14 377.152 307.476 cv
377.041 307.812 376.926 308.154 376.803 308.499 cv
376.682 308.845 376.564 309.187 376.453 309.522 cv
377.967 309.522 li
377.461 310.868 li
375.977 310.868 li
375.846 311.261 375.709 311.657 375.57 312.059 cv
375.43 312.462 375.293 312.868 375.162 313.278 cv
375.012 313.69 374.873 314.097 374.744 314.499 cv
374.611 314.9 374.471 315.298 374.322 315.69 cv
374.283 315.82 374.252 315.946 374.225 316.069 cv
374.195 316.19 374.182 316.297 374.182 316.391 cv
374.182 316.56 374.219 316.677 374.293 316.741 cv
374.369 316.808 374.471 316.839 374.604 316.839 cv
374.715 316.839 374.842 316.812 374.98 316.755 cv
375.121 316.698 375.266 316.625 375.416 316.532 cv
375.652 316.362 li
375.893 316.167 li
376.246 315.849 376.537 315.494 376.76 315.101 cv
376.984 314.71 377.191 314.307 377.379 313.896 cv
378.807 314.567 li
378.77 314.663 378.729 314.751 378.682 314.835 cv
cp
f
384.834 307.882 mo
384.535 308.116 384.217 308.288 383.881 308.401 cv
383.684 308.444 li
383.516 308.484 li
383.367 308.504 383.213 308.522 383.055 308.541 cv
382.895 308.56 382.74 308.569 382.59 308.569 cv
382.18 308.569 381.768 308.518 381.357 308.417 cv
380.945 308.313 380.582 308.14 380.264 307.896 cv
380.021 307.711 379.83 307.49 379.689 307.238 cv
379.549 306.985 379.479 306.729 379.479 306.467 cv
379.479 306.319 379.506 306.168 379.563 306.019 cv
379.619 305.868 379.695 305.729 379.787 305.598 cv
380.049 305.261 380.391 305.009 380.811 304.841 cv
381.23 304.673 381.666 304.57 382.115 304.533 cv
382.27 304.533 li
382.422 304.533 li
382.629 304.533 382.834 304.547 383.041 304.575 cv
383.244 304.603 383.439 304.646 383.629 304.7 cv
383.795 304.757 li
383.936 304.813 li
384.328 304.981 384.688 305.216 385.016 305.514 cv
385.344 305.812 385.506 306.177 385.506 306.606 cv
385.492 306.788 li
385.449 306.999 li
385.338 307.354 385.133 307.649 384.834 307.882 cv
cp
386.67 314.823 mo
386.621 314.907 386.57 314.997 386.516 315.091 cv
386.217 315.69 385.891 316.272 385.535 316.835 cv
385.18 317.397 384.75 317.903 384.244 318.353 cv
383.777 318.765 383.23 319.082 382.605 319.306 cv
381.979 319.531 381.328 319.661 380.656 319.698 cv
380.531 319.698 li
380.404 319.698 li
380.125 319.698 379.846 319.681 379.563 319.644 cv
379.283 319.606 379.012 319.54 378.75 319.446 cv
378.041 319.204 377.535 318.823 377.238 318.308 cv
376.938 317.794 376.787 317.226 376.787 316.606 cv
376.787 316.401 376.801 316.19 376.83 315.976 cv
376.857 315.76 376.9 315.539 376.957 315.313 cv
376.994 315.202 377.027 315.093 377.055 314.991 cv
377.082 314.888 377.115 314.778 377.152 314.667 cv
377.451 313.805 377.746 312.948 378.037 312.095 cv
378.324 311.242 378.619 310.386 378.918 309.522 cv
379.367 309.522 379.818 309.522 380.277 309.522 cv
380.736 309.522 381.197 309.522 381.666 309.522 cv
382.133 309.522 382.596 309.522 383.055 309.522 cv
383.51 309.522 383.963 309.522 384.412 309.522 cv
384.301 309.86 384.184 310.202 384.063 310.55 cv
383.941 310.896 383.824 311.237 383.713 311.575 cv
383.469 312.251 383.23 312.93 382.998 313.614 cv
382.764 314.3 382.535 314.987 382.311 315.683 cv
382.254 315.812 382.209 315.948 382.172 316.089 cv
382.133 316.231 382.115 316.356 382.115 316.469 cv
382.115 316.583 382.156 316.675 382.24 316.75 cv
382.324 316.825 382.469 316.854 382.674 316.835 cv
382.824 316.835 383.012 316.772 383.236 316.651 cv
383.459 316.53 383.693 316.356 383.936 316.131 cv
384.273 315.795 384.549 315.438 384.764 315.063 cv
384.979 314.688 385.18 314.294 385.367 313.882 cv
385.605 313.994 li
385.842 314.107 li
385.992 314.183 386.145 314.251 386.305 314.317 cv
386.465 314.384 386.629 314.464 386.797 314.556 cv
386.758 314.649 386.717 314.739 386.67 314.823 cv
cp
f
394.855 311.022 mo
394.66 310.771 394.41 310.644 394.113 310.644 cv
393.926 310.644 393.721 310.696 393.496 310.798 cv
393.271 310.899 393.047 311.046 392.822 311.232 cv
392.73 311.308 392.641 311.392 392.557 311.483 cv
392.473 311.579 392.383 311.672 392.291 311.765 cv
391.859 312.271 391.514 312.845 391.254 313.489 cv
390.992 314.136 390.805 314.792 390.693 315.466 cv
390.674 315.69 390.654 315.91 390.637 316.124 cv
390.619 316.339 390.607 316.55 390.607 316.755 cv
390.607 316.867 390.613 317.008 390.623 317.175 cv
390.633 317.343 390.654 317.513 390.693 317.681 cv
390.748 317.998 390.846 318.282 390.986 318.534 cv
391.127 318.787 391.346 318.913 391.646 318.913 cv
392.111 318.913 392.529 318.751 392.893 318.423 cv
393.258 318.097 393.553 317.728 393.777 317.315 cv
393.832 317.222 393.887 317.134 393.943 317.05 cv
394 316.966 394.047 316.878 394.084 316.782 cv
393.785 316.577 393.557 316.32 393.396 316.013 cv
393.24 315.704 393.16 315.372 393.16 315.018 cv
393.16 314.905 li
393.16 314.821 li
393.217 314.26 393.426 313.732 393.791 313.237 cv
394.154 312.741 394.617 312.419 395.178 312.271 cv
395.158 311.69 395.051 311.274 394.855 311.022 cv
cp
402.775 315.396 mo
402.625 315.704 402.457 316.017 402.27 316.335 cv
401.914 316.951 401.48 317.517 400.967 318.03 cv
400.453 318.545 399.85 318.802 399.158 318.802 cv
398.879 318.802 398.611 318.759 398.359 318.675 cv
398.107 318.591 397.869 318.483 397.645 318.353 cv
396.916 318.951 396.061 319.418 395.08 319.755 cv
394.098 320.091 393.094 320.288 392.066 320.343 cv
391.828 320.343 li
391.744 320.343 391.654 320.343 391.563 320.343 cv
390.59 320.343 389.654 320.198 388.758 319.909 cv
387.861 319.619 387.076 319.186 386.404 318.604 cv
385.861 318.12 385.469 317.601 385.227 317.05 cv
384.982 316.499 384.861 315.942 384.861 315.382 cv
384.861 314.503 385.123 313.663 385.646 312.858 cv
386.17 312.056 386.861 311.372 387.719 310.812 cv
388.469 310.325 389.309 309.942 390.242 309.663 cv
391.178 309.384 392.141 309.242 393.131 309.242 cv
393.281 309.242 393.426 309.247 393.566 309.257 cv
393.707 309.267 393.85 309.271 394 309.271 cv
394.805 309.345 395.588 309.518 396.355 309.79 cv
397.121 310.06 397.795 310.468 398.373 311.009 cv
398.879 311.456 399.26 311.967 399.523 312.535 cv
399.783 313.106 399.916 313.698 399.916 314.316 cv
399.916 314.54 399.898 314.765 399.859 314.99 cv
399.822 315.214 399.766 315.438 399.689 315.663 cv
399.953 315.624 400.182 315.554 400.377 315.452 cv
400.574 315.349 400.766 315.187 400.953 314.961 cv
401.064 314.849 401.176 314.704 401.289 314.526 cv
401.402 314.35 401.523 314.147 401.652 313.925 cv
403.168 314.597 li
403.055 314.821 402.924 315.088 402.775 315.396 cv
cp
f
415.881 318.198 mo
414.898 319.2 413.549 319.698 411.83 319.698 cv
411.717 319.698 411.605 319.694 411.494 319.685 cv
411.381 319.675 411.27 319.671 411.158 319.671 cv
410.689 319.615 410.242 319.502 409.811 319.335 cv
409.383 319.166 409.027 318.895 408.746 318.521 cv
408.559 318.261 408.424 317.984 408.342 317.694 cv
408.256 317.404 408.213 317.11 408.213 316.812 cv
408.213 316.663 408.223 316.513 408.242 316.362 cv
408.26 316.212 408.279 316.073 408.297 315.942 cv
408.354 315.644 408.434 315.345 408.537 315.046 cv
408.639 314.746 408.738 314.466 408.83 314.204 cv
408.848 314.147 408.887 314.056 408.943 313.925 cv
408.998 313.793 409.064 313.644 409.139 313.476 cv
409.158 313.382 409.18 313.292 409.209 313.209 cv
409.236 313.124 409.27 313.036 409.309 312.942 cv
409.344 312.794 409.377 312.647 409.406 312.507 cv
409.434 312.368 409.447 312.241 409.447 312.129 cv
409.447 311.981 409.414 311.854 409.35 311.751 cv
409.283 311.648 409.176 311.597 409.027 311.597 cv
408.84 311.597 408.625 311.686 408.381 311.862 cv
408.139 312.042 407.859 312.345 407.541 312.774 cv
407.092 313.411 406.709 314.097 406.393 314.835 cv
406.074 315.574 405.775 316.324 405.494 317.091 cv
405.383 317.446 405.27 317.796 405.158 318.142 cv
405.045 318.488 404.934 318.829 404.822 319.166 cv
404.766 319.291 li
404.709 319.446 li
399.496 319.446 li
400.057 317.802 400.617 316.163 401.178 314.526 cv
401.738 312.893 402.307 311.251 402.887 309.606 cv
408.102 309.606 li
408.045 309.775 li
407.99 309.942 li
407.906 310.14 li
407.848 310.308 li
408.279 310.065 408.762 309.855 409.293 309.677 cv
409.826 309.499 410.373 309.384 410.932 309.327 cv
411.027 309.308 411.119 309.299 411.213 309.299 cv
411.307 309.299 411.4 309.299 411.494 309.299 cv
412.035 309.299 412.553 309.386 413.049 309.565 cv
413.545 309.742 413.98 310.036 414.354 310.448 cv
414.596 310.71 414.773 310.999 414.887 311.317 cv
414.998 311.635 415.055 311.96 415.055 312.298 cv
415.055 312.372 415.049 312.456 415.041 312.549 cv
415.029 312.644 415.016 312.728 414.998 312.802 cv
414.979 312.896 414.961 312.983 414.941 313.067 cv
414.924 313.153 414.895 313.241 414.857 313.336 cv
414.801 313.522 414.734 313.713 414.662 313.91 cv
414.588 314.106 414.521 314.307 414.465 314.513 cv
414.391 314.699 414.316 314.892 414.242 315.088 cv
414.166 315.284 414.1 315.483 414.045 315.69 cv
413.988 315.83 li
413.932 316.026 li
413.877 316.153 li
413.85 316.307 li
413.807 316.447 li
413.793 316.587 li
413.793 316.681 413.82 316.761 413.877 316.825 cv
413.932 316.892 414.025 316.924 414.158 316.924 cv
414.27 316.924 414.377 316.905 414.479 316.867 cv
414.582 316.829 414.689 316.782 414.801 316.728 cv
415.025 316.577 415.254 316.386 415.488 316.153 cv
415.721 315.919 415.932 315.681 416.119 315.438 cv
416.268 315.252 416.4 315.063 416.512 314.877 cv
416.623 314.69 416.707 314.522 416.764 314.372 cv
416.82 314.26 li
416.877 314.121 li
416.904 314.009 li
416.961 313.896 li
418.363 314.567 li
417.689 315.989 416.863 317.2 415.881 318.198 cv
cp
f
433.879 311.038 mo
433.682 310.785 433.436 310.659 433.135 310.659 cv
432.947 310.659 432.744 310.71 432.518 310.813 cv
432.295 310.915 432.07 311.06 431.846 311.247 cv
431.752 311.321 431.664 311.405 431.58 311.5 cv
431.494 311.593 431.404 311.686 431.313 311.779 cv
430.883 312.284 430.537 312.858 430.275 313.503 cv
430.014 314.149 429.828 314.808 429.717 315.481 cv
429.697 315.705 429.678 315.925 429.66 316.14 cv
429.641 316.354 429.633 316.564 429.633 316.771 cv
429.633 316.882 429.637 317.022 429.645 317.19 cv
429.654 317.358 429.678 317.526 429.717 317.695 cv
429.771 318.013 429.869 318.298 430.01 318.55 cv
430.15 318.802 430.369 318.927 430.668 318.927 cv
431.135 318.927 431.553 318.765 431.914 318.438 cv
432.281 318.111 432.574 317.742 432.799 317.331 cv
432.855 317.237 432.912 317.148 432.967 317.064 cv
433.023 316.98 433.07 316.893 433.107 316.798 cv
432.809 316.593 432.578 316.337 432.42 316.026 cv
432.262 315.72 432.182 315.387 432.182 315.032 cv
432.182 314.92 li
432.182 314.835 li
432.238 314.274 432.447 313.746 432.813 313.251 cv
433.178 312.757 433.641 312.435 434.201 312.284 cv
434.182 311.706 434.074 311.289 433.879 311.038 cv
cp
441.799 315.409 mo
441.648 315.72 441.48 316.032 441.291 316.351 cv
440.938 316.966 440.504 317.531 439.99 318.045 cv
439.475 318.56 438.873 318.815 438.18 318.815 cv
437.9 318.815 437.635 318.774 437.383 318.69 cv
437.129 318.605 436.891 318.499 436.668 318.368 cv
435.939 318.966 435.082 319.433 434.102 319.769 cv
433.121 320.105 432.117 320.302 431.09 320.356 cv
430.85 320.356 li
430.768 320.356 430.68 320.356 430.584 320.356 cv
429.613 320.356 428.678 320.214 427.781 319.925 cv
426.883 319.634 426.098 319.2 425.426 318.62 cv
424.883 318.134 424.492 317.616 424.248 317.064 cv
424.006 316.513 423.885 315.958 423.885 315.396 cv
423.885 314.518 424.146 313.678 424.668 312.873 cv
425.193 312.07 425.883 311.387 426.744 310.827 cv
427.49 310.341 428.332 309.958 429.266 309.677 cv
430.201 309.397 431.162 309.257 432.154 309.257 cv
432.305 309.257 432.447 309.262 432.59 309.271 cv
432.73 309.28 432.873 309.285 433.023 309.285 cv
433.828 309.36 434.611 309.532 435.379 309.804 cv
436.145 310.073 436.816 310.481 437.396 311.024 cv
437.9 311.472 438.285 311.981 438.545 312.55 cv
438.807 313.122 438.938 313.713 438.938 314.33 cv
438.938 314.556 438.92 314.778 438.881 315.004 cv
438.844 315.228 438.787 315.452 438.713 315.677 cv
438.977 315.64 439.205 315.569 439.4 315.468 cv
439.598 315.364 439.787 315.2 439.977 314.976 cv
440.088 314.863 440.199 314.718 440.313 314.542 cv
440.424 314.364 440.547 314.163 440.676 313.938 cv
442.189 314.61 li
442.078 314.835 441.947 315.103 441.799 315.409 cv
cp
f
453.473 305.024 mo
453.633 305.321 453.73 305.632 453.77 305.948 cv
453.77 306.075 li
453.77 306.202 li
453.77 306.688 453.619 307.131 453.32 307.532 cv
453.02 307.935 452.572 308.191 451.975 308.304 cv
451.863 308.317 li
451.75 308.331 li
451.637 308.331 li
451.525 308.331 li
450.871 308.331 450.34 308.117 449.928 307.687 cv
449.518 307.257 449.311 306.78 449.311 306.257 cv
449.311 306.159 li
449.311 306.061 li
449.35 305.78 449.455 305.511 449.635 305.248 cv
449.811 304.986 450.078 304.772 450.434 304.604 cv
450.361 304.604 li
450.264 304.604 li
449.684 304.604 449.193 304.88 448.791 305.431 cv
448.391 305.981 448.059 306.594 447.797 307.267 cv
447.629 307.696 447.479 308.117 447.348 308.528 cv
447.217 308.94 447.113 309.267 447.041 309.509 cv
449.621 309.509 li
449.145 310.883 li
446.537 310.883 li
441.377 325.881 li
436.359 325.881 li
441.49 310.883 li
439.836 310.883 li
440.34 309.509 li
441.994 309.509 li
442.051 309.323 442.105 309.14 442.162 308.962 cv
442.219 308.785 442.275 308.611 442.332 308.444 cv
442.611 307.622 442.93 306.86 443.283 306.159 cv
443.639 305.458 444.217 304.845 445.021 304.323 cv
445.527 304.005 446.146 303.743 446.887 303.538 cv
447.625 303.333 448.377 303.221 449.145 303.202 cv
449.256 303.202 li
449.367 303.202 li
450.021 303.202 450.658 303.28 451.275 303.439 cv
451.891 303.599 452.412 303.864 452.844 304.237 cv
453.105 304.463 453.316 304.726 453.473 305.024 cv
cp
f
214.48 534.251 mo
214.48 534.251 223.685 552.127 228.384 583.676 cv
229.721 592.652 229.058 602.961 229.058 602.961 cv
229.058 602.961 230.856 606.143 234.788 607.079 cv
234.788 607.079 243.822 636.752 245.61 678.981 cv
247.398 721.209 242.24 736.276 238.308 741.52 cv
235.16 745.715 231.46 751.006 210.596 761.179 cv
189.733 771.353 190.374 772.415 185.88 774.099 cv
185.88 774.099 182.058 773.321 176.892 774.474 cv
171.727 775.625 164.722 778.388 164.722 778.388 cv
164.722 778.388 166.525 783.336 171.762 785.348 cv
175.84 786.915 182.501 786.905 188.764 785.308 cv
188.764 785.308 203.918 786.326 211.86 782.431 cv
222.01 777.454 238.88 765.838 251.007 768.387 cv
267.704 771.899 271.824 768.106 271.824 768.106 cv
271.824 768.106 267.704 754.655 264.521 742.269 cv
261.582 730.833 265.262 689.911 262.68 662.848 cv
260.098 635.784 252.349 609.103 248.573 592.979 cv
244.797 576.857 243.737 532.372 243.737 532.372 cv
214.48 534.251 li
f
186.572 783.361 mo
187.788 783.047 189.056 782.648 190.374 782.15 cv
189.447 782.893 188.102 783.236 186.572 783.361 cv
177.091 779.795 mo
173.838 779.795 171.01 779.241 168.71 778.528 cv
168.517 778.576 168.226 778.771 167.919 779.016 cv
167.789 778.867 167.718 778.781 167.718 778.781 cv
167.718 778.781 175.02 776.908 179.888 775.784 cv
181.511 775.409 182.759 775.284 183.702 775.284 cv
185.588 775.284 186.255 775.784 186.255 775.784 cv
192.808 773.724 192.059 772.415 211.719 762.491 cv
231.379 752.566 237.073 748.188 239.806 743.954 cv
243.551 738.15 249.167 719.238 247.482 678.045 cv
246.056 643.172 239.665 615.146 237.737 607.363 cv
241.678 606.705 li
234.001 604.646 232.129 600.713 232.129 600.713 cv
232.129 600.713 233.065 592.476 232.129 583.676 cv
231.491 577.679 226.68 557.598 223.679 545.411 cv
223.679 545.413 li
224.5 545.239 225.276 545.156 226.009 545.156 cv
240.818 545.156 238.396 579.143 241.116 591.164 cv
244.674 606.892 251.977 632.919 254.41 659.32 cv
256.844 685.723 258.477 755.556 258.477 755.556 cv
258.202 756.31 251.554 759.354 239.946 760.665 cv
228.337 761.974 209.847 772.039 202.1 775.221 cv
194.353 778.405 184.756 778.781 184.756 778.781 cv
182.007 779.506 179.438 779.795 177.091 779.795 cv
level3{
gsave
clp
[99.9863 0 0 99.9863 167.718 656.585 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .85098 .784314 ]
/C1 [.886275 .768627 .666667 ]
/N 1.49438 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.886275 .768627 .666667 ]
/C1 [.886275 .768627 .666667 ]
/N 4.97729 
>>
]
/Bounds [.678788 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[99.9863 0 0 99.9863 167.718 656.585 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHj3+m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O*)lg*m&lg*m&lg*m&lg*m&lg*m&lK[["lK[["
lK[["lK[["lKRQtl07Hsl07Hsl07Hsl0.?pkih6okih6okih6nkND$kkND$kkND$kk2tggk2tggk2tgg
k2k^djlPUcjlPUcjlGL`jQ,C_jQ,C_j5]1[j5]1[j5]1[io8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
~>
<~g"=s0f\"j/f\"j/f\"j/f\"j/f\"j.f@SX+f@SX+f@SX+f@JO(f%/F'f%/F'e^`4#e^`4#e^`1!eC<!t
eC<!se'ldpe'ldpdaHRldaHRldF$@hdF$@hd*U.dd*U.ccd0q`cd0n^cHa_\cHXVYc-=MXbfn;Tbfn;S
bKJ)PbK@uMb0%lKaiVZHaiMQEaN2HCa2c6@a2Z-=`l?$;`Pog8`Pf^5`5KU4`5KU4`5KU4`5KU4`5KU4
`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4
~>
<~aN)?Aa2c6@a2c6@a2c6@a2c3>`l?$<`l?$<`l5p9`Pog8`Pod6`5KU4`5KR2_o'C0_ns:-_SX1,_83t(
_83q&^qdb$^V@Ou^V@Ls^:q=q]tM+m]tD"j]Y(nh]=Y\e]"5Ja]",A^\[f5[\@B&X\$riT[^NWQ[C*EM
[C!<J['R*FZa-mBZEga?Z*CO;Yct=7YHP+3Y-+n/Xf\\+XK8J'X/i8#WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
179.277 784.327 mo
170.972 784.327 166.497 780.32 166.497 780.32 cv
166.497 780.32 167.248 779.549 167.919 779.016 cv
168.722 779.936 171.782 783.247 174.206 783.247 cv
174.42 783.247 174.63 783.221 174.833 783.166 cv
175.369 783.018 176.053 782.963 176.838 782.963 cv
177.971 782.963 179.312 783.077 180.718 783.191 cv
182.124 783.306 183.595 783.42 184.987 783.42 cv
185.53 783.42 186.061 783.402 186.572 783.361 cv
183.886 784.053 181.451 784.327 179.277 784.327 cv
190.374 782.15 mo
190.374 782.15 li
190.374 782.15 199.97 781.775 207.717 778.592 cv
214.967 775.613 238.06 764.763 248.207 764.763 cv
248.904 764.763 249.538 764.814 250.103 764.922 cv
255.2 765.898 259.008 766.195 261.753 766.195 cv
266.002 766.195 267.704 765.485 267.704 765.485 cv
267.704 765.485 li
267.704 765.485 264.898 766.834 258.327 766.833 cv
256.412 766.833 254.178 766.719 251.601 766.423 cv
250.904 766.343 250.159 766.305 249.374 766.305 cv
237.106 766.305 214.999 775.6 207.717 778.592 cv
199.97 781.775 190.374 782.15 190.374 782.15 cv
190.374 782.15 li
267.704 765.485 mo
267.704 765.485 266.73 756.501 259.614 745.357 cv
259.89 732.45 262.074 684.899 260.027 662.692 cv
262.461 689.092 261.572 743.111 261.572 743.111 cv
262.227 743.954 262.258 743.747 262.836 744.796 cv
266.886 752.14 267.704 765.485 267.704 765.485 cv
223.679 545.411 mo
220.78 538.919 li
221.214 538.951 221.651 538.981 222.089 539.007 cv
222.503 540.663 223.051 542.865 223.679 545.411 cv
.176471 .12549 .0509804 rgb
f
184.987 783.42 mo
183.595 783.42 182.124 783.306 180.718 783.191 cv
179.312 783.077 177.971 782.963 176.838 782.963 cv
176.053 782.963 175.369 783.018 174.833 783.166 cv
174.63 783.221 174.42 783.247 174.206 783.247 cv
171.782 783.247 168.722 779.936 167.919 779.016 cv
168.226 778.771 168.517 778.576 168.71 778.528 cv
171.01 779.241 173.838 779.795 177.091 779.795 cv
179.438 779.795 182.007 779.506 184.756 778.781 cv
184.756 778.781 194.353 778.405 202.1 775.221 cv
209.847 772.039 228.337 761.974 239.946 760.665 cv
251.554 759.354 258.202 756.31 258.477 755.556 cv
258.477 755.556 256.844 685.723 254.41 659.32 cv
251.977 632.919 244.674 606.892 241.116 591.164 cv
238.396 579.143 240.818 545.156 226.009 545.156 cv
225.276 545.156 224.5 545.239 223.679 545.413 cv
223.679 545.411 li
223.051 542.865 222.503 540.663 222.089 539.007 cv
223.626 539.099 225.18 539.151 226.718 539.151 cv
230.935 539.151 235.04 538.754 238.401 537.671 cv
238.791 537.546 239.177 537.42 239.563 537.293 cv
240.923 551.673 244.042 582.638 246.734 594.536 cv
250.291 610.263 257.594 636.291 260.027 662.692 cv
260.027 662.692 li
262.074 684.899 259.89 732.45 259.614 745.357 cv
266.73 756.501 267.704 765.485 267.704 765.485 cv
267.704 765.485 li
267.704 765.485 266.002 766.195 261.753 766.195 cv
259.008 766.195 255.2 765.898 250.103 764.922 cv
249.538 764.814 248.904 764.763 248.207 764.763 cv
238.06 764.763 214.967 775.613 207.717 778.592 cv
199.97 781.775 190.374 782.15 190.374 782.15 cv
190.374 782.15 li
189.056 782.648 187.788 783.047 186.572 783.361 cv
186.061 783.402 185.53 783.42 184.987 783.42 cv
level3{
gsave
clp
[99.9863 0 0 99.9863 167.718 656.585 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^7L%mSqXnMKta.4^7L%mSqXnMKta.4]q0qkSqOeKKY<q0]q'ehSV+VHK>!h.]ps_fS:eJEK"RS)]UOMc
Rt85AJ\7J']:4A`Rt/,>J@h8#]:+5]R=Df9J%D%t\sRrXR!uW6ICbeo\sRoWR!cK3I(GYk\X%TQQ@$0.
Hb#Gg\X%NNQ$Km)H+9)a\<M6IP]sU#GINc[\!)!EPBOBtFgdHU[ZP^@O`\$nF1.0O[ZGR=OE.aiEj^sJ
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8
O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_Rg
EOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI[?#=8O)_RgEOCjI
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.678788 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[99.9863 0 0 99.9863 167.718 656.585 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]tM+m]tM+m]tM+m]tM+m]tM+m]tM+l]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(nh]=Y\e]=Y\e]=Y\e]=Y\e
]=Y\d]"5Ja]"5Ja]"5Ja]"5J`\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8\\@B&Y\@B&Y\@B&Y\@8rV
\$riU\$riU[^NWQ[^NWQ[^NWQ[^ENN[C*EM[C*EM[C*EM[C*EM[C*EM['[3I['[3I['[3I['[3I['[3I
['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I
~>
<~SXl=BSXl=BSXl=BSXl=BSXl=BSXl=BSXl=BSXl=AS=H+>S=H+>S=H+>S=?";S"#n:S!oe7R[T\6R[T\6
R[T\6R[T\6R@0J2R@0J2R$a8.R$a8.R$X/+Q^=&*Q^=&*Q^=&*Q^3r'QBmi%Q'IW"Q'IW"Q'IW"Q'@Mt
Pa%AqPEV2oPEV/mP*1ukP*1ukP*(lhOcbcfOH>QcO,o?_O,o?_O,o?_NfK-[NfK-[NfK-[NfK-[NfK-[
NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[
~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS+o0K7ef/K7ec-JqAT+JqAT+JqAT+JqAQ)JUrB'JUr?%J:N0#
J:N0#J:E&uIt)rtIt)orIXZ`pIXZ`pIXQWmI=6KjI!g<hI!g<gH[C*dH?sm`H?sm`H?sm_H$OXZG^+IX
G^+IXG^"@UG'8%PG'8%PF`hhLF`__IFEDVHFEDSFEcQ2@EcQ2@EcH)=EH,r:E,]c8E,]c8E,]c8E,]c8
E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
172.698 521.419 mo
172.698 521.419 178.765 536.492 186.255 564.428 cv
189.165 575.283 186.772 584.051 186.772 584.051 cv
186.772 584.051 188.688 587.793 193.412 589.199 cv
193.412 589.199 198.826 617.365 198.051 656.882 cv
197.277 696.398 188.649 711.362 185.504 715.228 cv
182.645 718.747 180.305 722.891 160.191 732.529 cv
147.683 738.522 140.944 739.667 136.823 741.706 cv
136.823 741.706 134.424 740.736 129.371 741.495 cv
124.318 742.254 114.372 745.589 114.372 745.589 cv
114.372 745.589 118.43 753.071 121.171 753.241 cv
125.3 753.494 133.454 752.362 137.794 749.973 cv
137.794 749.973 151.959 753.501 159.854 750.312 cv
177.455 743.203 186.964 736.884 198.76 738.958 cv
212.616 741.391 217.347 739.604 217.347 739.604 cv
217.347 739.604 216.135 723.297 211.175 716.508 cv
211.175 716.508 216.687 668.285 215.797 642.871 cv
214.907 617.457 205.919 580.37 202.863 560.644 cv
199.275 537.485 203.905 520.977 203.905 520.977 cv
172.698 521.419 li
.219608 .172549 .0784314 rgb
f
129.107 747.786 mo
125.729 747.786 122.798 747.198 120.398 746.424 cv
122.357 745.983 125.396 745.135 128.265 743.66 cv
129.572 742.987 130.763 742.753 131.787 742.753 cv
134.121 742.753 135.587 743.968 135.587 743.968 cv
135.689 743.975 135.792 743.978 135.897 743.978 cv
138.876 743.978 143.269 741.37 161.351 733.842 cv
180.881 725.71 184.827 720.079 187.136 716.694 cv
189.832 712.743 199.419 694.667 200.231 656.121 cv
200.908 624.061 196.568 597.872 195.088 589.97 cv
199.08 589.621 li
191.383 587.622 189.995 583.017 189.995 583.017 cv
189.995 583.017 191.948 576.934 187.641 562.704 cv
186.18 557.878 184.523 550.099 183.087 542.673 cv
183.736 542.545 185.219 542.201 186.953 542.201 cv
190.424 542.201 194.901 543.578 195.71 550.815 cv
198.894 579.274 209.204 615.238 209.033 640.035 cv
208.724 684.971 200.298 711.185 203.855 719.611 cv
207.413 728.038 201.234 728.225 201.234 728.225 cv
200.659 728.157 200.048 728.125 199.41 728.125 cv
185.911 728.125 159.011 742.609 151.693 744.994 cv
145.255 747.088 137.675 747.255 135.414 747.255 cv
134.984 747.255 134.746 747.249 134.746 747.249 cv
132.753 747.626 130.869 747.786 129.107 747.786 cv
level3{
gsave
clp
[93.4058 5.92492 -6.2094 97.8985 125.539 632.568 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[93.4058 5.92492 -6.2094 97.8985 125.539 632.568 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
123.253 753.576 mo
122.478 753.576 121.777 753.474 121.171 753.241 cv
121.171 753.241 li
121.171 753.241 li
121.549 753.264 121.962 753.275 122.402 753.275 cv
123.931 753.275 125.793 753.136 127.739 752.862 cv
126.087 753.288 124.563 753.576 123.253 753.576 cv
137.65 750.051 mo
137.699 750.025 137.747 749.999 137.794 749.973 cv
137.794 749.973 137.828 749.981 137.892 749.997 cv
137.811 750.015 137.731 750.033 137.65 750.051 cv
level3{
gsave
clp
[441.518 0 0 708.969 274.025 419.503 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk
\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76X
U!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@bdjFk\Y76XU!1'@
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~bdjFk\Y76XU!(!?bIO=i\=q'TTZXa:b-mqa[\(XLT?"@2a0_DWZ^o+BSAhe'`3GfLYaWG4RDH%o^oj'>
XI$Z%QbBDa]W%1-W0FlkPIRKQ\"o.pUQDjWO0bL>ZCd,\SrBkCMlrP,XI4pFR"qZ,LSpDkVNZ\/P(TKj
JYA*ST8e>lMg_+PI%#k<R"]gOKQrc6GERK!Oa_D5I<1BpEJo'[M0EimF_lbQCP-S?JT#1MD.\32A9qp!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[441.518 0 0 708.969 274.025 419.503 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Ob0%lLb0%iJaiVZH
aiMQDa2c3>`l?!:`Pog7`5BL1_SX.*^qdb#^V7Fr]tM(k]=PSa\[f5Z\$rfS[C!9HZa-mAYct=7Y-+n.
XK/A#WMlbnVP^2cUSFQWTqJ$MSt;LCS!oe6R$X,(Q'ISsOcb`eO,f3YMi3ILLkg_=KnP)1JUi6!I=6Ki
~>
<~\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y
\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&X\$riU[^NTO
[C*EM[C*BKZa6sCZEgd@Z*:I:YHP+3Xf\_-XK/D&WiE%tW2QYmVl$>fV50l]U8"?TTV%jJSt;LCS"#k7
R@'A.QBd`#P`q8nOcb`dNfB$XN/NRMLkpkAKnP,3K7\Z)IsufoI=-BfH$FOWG'.nJF)c/;Df0H0ChdZt
~>
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.pLT:_^H
St;OFSt;LDS=H+>S=?":R[T\6R@0G0R$a8-Q^3r'QBd]!Pa%DrPEM)kOcb`eO,o<]NfB$WN/W[QMMd7I
M26qAL5(G:KS4u1JqAQ(J:E&uIXQTkH[C*cH$FRXGB\4QFEDSFF)l8>Df9N2D/=!'CMIQsB4bafARo:\
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
122.402 753.275 mo
121.962 753.275 121.549 753.264 121.171 753.241 cv
121.171 753.241 li
117.438 751.798 117.296 745.245 117.296 745.245 cv
117.349 745.236 li
118.239 745.645 119.259 746.056 120.398 746.424 cv
119.112 746.713 118.292 746.827 118.292 746.827 cv
121.095 751.282 li
121.765 751.479 122.663 751.568 123.7 751.568 cv
128.196 751.568 135.29 749.892 137.572 748.072 cv
137.572 748.072 141.199 748.451 145.894 748.451 cv
148.578 748.451 151.611 748.327 154.517 747.938 cv
169.708 745.905 181.875 735.331 192.45 735.331 cv
193.265 735.331 194.071 735.393 194.868 735.528 cv
202.962 736.892 207.435 737.227 209.877 737.227 cv
212.242 737.227 212.702 736.913 212.702 736.913 cv
212.702 736.913 212.702 736.897 212.702 736.867 cv
212.702 736.897 212.702 736.913 212.702 736.913 cv
212.702 736.913 213.344 737.722 208.514 737.722 cv
205.781 737.722 201.296 737.462 193.952 736.651 cv
193.361 736.585 192.756 736.554 192.136 736.554 cv
180.995 736.554 165.617 746.644 158.356 749.007 cv
155.14 750.055 151.209 750.359 147.727 750.359 cv
142.912 750.359 138.959 749.777 138.959 749.777 cv
138.605 749.844 138.249 749.917 137.892 749.997 cv
137.828 749.981 137.794 749.973 137.794 749.973 cv
137.747 749.999 137.699 750.025 137.65 750.051 cv
134.279 750.822 130.791 752.077 127.739 752.862 cv
125.793 753.136 123.931 753.275 122.402 753.275 cv
182.937 542.702 mo
179.508 531.265 li
180 531.318 180.503 531.37 181.013 531.419 cv
181.594 534.713 182.308 538.641 183.087 542.673 cv
183.031 542.685 182.981 542.694 182.937 542.702 cv
.176471 .12549 .0509804 rgb
f
123.7 751.568 mo
122.663 751.568 121.765 751.479 121.095 751.282 cv
118.292 746.827 li
118.292 746.827 119.112 746.713 120.398 746.424 cv
122.798 747.198 125.729 747.786 129.107 747.786 cv
130.869 747.786 132.753 747.626 134.746 747.249 cv
134.746 747.249 134.984 747.255 135.414 747.255 cv
137.675 747.255 145.255 747.088 151.693 744.994 cv
159.011 742.609 185.911 728.125 199.41 728.125 cv
200.048 728.125 200.659 728.157 201.234 728.225 cv
201.234 728.225 207.413 728.038 203.855 719.611 cv
200.298 711.185 208.724 684.971 209.033 640.035 cv
209.204 615.238 198.894 579.274 195.71 550.815 cv
194.901 543.578 190.424 542.201 186.953 542.201 cv
185.219 542.201 183.736 542.545 183.087 542.673 cv
182.308 538.641 181.594 534.713 181.013 531.419 cv
184.57 531.758 188.552 531.97 192.958 531.97 cv
194.66 531.97 196.421 531.938 198.249 531.87 cv
198.612 538.507 199.156 546.481 199.923 553.342 cv
203.106 581.802 212.461 617.776 213.246 642.563 cv
213.295 644.112 213.318 645.762 213.318 647.493 cv
213.316 673.46 208.129 717.816 208.129 717.816 cv
208.129 717.816 li
208.129 717.816 li
212.608 724.17 212.702 735.946 212.702 736.857 cv
212.702 736.857 212.702 736.858 212.702 736.859 cv
212.702 736.86 212.702 736.861 212.702 736.862 cv
212.702 736.863 212.702 736.864 212.702 736.865 cv
212.702 736.865 212.702 736.866 212.702 736.867 cv
212.702 736.897 212.702 736.913 212.702 736.913 cv
212.702 736.913 212.242 737.227 209.877 737.227 cv
207.435 737.227 202.962 736.892 194.868 735.528 cv
194.071 735.393 193.265 735.331 192.45 735.331 cv
181.875 735.331 169.708 745.905 154.517 747.938 cv
151.611 748.327 148.578 748.451 145.894 748.451 cv
141.199 748.451 137.572 748.072 137.572 748.072 cv
135.29 749.892 128.196 751.568 123.7 751.568 cv
level3{
gsave
clp
[93.4058 5.92492 -6.2094 97.8985 125.539 632.568 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[93.4058 5.92492 -6.2094 97.8985 125.539 632.568 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
176.051 443.195 mo
177.99 450.559 163.271 489.868 159.199 526.566 cv
159.199 526.566 174.148 533.589 202.938 531.622 cv
202.591 536.123 li
202.591 536.123 225.762 541.743 238.401 537.671 cv
251.039 533.598 261.572 528.673 268.172 528.251 cv
268.172 528.251 263.538 501.29 257.359 484.297 cv
251.181 467.305 252.995 452.984 240.026 437.676 cv
240.026 437.676 174.443 437.092 176.051 443.195 cv
.219608 .172549 .0784314 rgb
f
225.201 534.992 mo
215.19 534.992 205.209 532.656 205.142 532.64 cv
205.161 532.644 205.932 532.824 207.237 533.082 cv
207.234 533.081 li
207.234 533.081 204.23 500.727 207.974 497.92 cv
188.325 501.459 200.639 524.415 169.169 524.416 cv
167.353 524.416 165.393 524.34 163.271 524.179 cv
163.271 524.179 li
166.035 497.412 175.097 457.83 179.654 447.821 cv
182.274 449.536 187.755 451.674 198.803 451.679 cv
198.811 451.679 198.82 451.679 198.828 451.679 cv
210.173 451.679 220.651 448.344 228.31 444.996 cv
232.19 450.407 239.04 462.213 242.053 481.255 cv
246.376 508.592 247.103 530.113 247.103 530.113 cv
247.102 530.114 li
253.752 527.921 259.152 526.262 263.339 525.898 cv
257.178 526.433 248.389 529.775 236.854 533.492 cv
233.419 534.599 229.308 534.992 225.201 534.992 cv
263.345 525.898 mo
263.38 525.895 263.414 525.892 263.448 525.889 cv
263.414 525.892 263.38 525.895 263.345 525.898 cv
263.455 525.888 mo
263.465 525.888 263.474 525.887 263.484 525.886 cv
263.474 525.887 263.465 525.888 263.455 525.888 cv
263.498 525.885 mo
263.528 525.883 263.557 525.88 263.587 525.878 cv
263.558 525.88 263.528 525.883 263.498 525.885 cv
263.607 525.877 mo
263.615 525.876 263.622 525.875 263.63 525.875 cv
263.622 525.875 263.614 525.876 263.607 525.877 cv
263.653 525.873 mo
263.66 525.873 263.667 525.872 263.675 525.872 cv
263.667 525.872 263.661 525.873 263.653 525.873 cv
263.714 525.869 mo
263.719 525.868 263.725 525.868 263.73 525.868 cv
263.725 525.868 263.719 525.868 263.714 525.869 cv
263.759 525.866 mo
263.765 525.865 263.77 525.865 263.775 525.865 cv
263.77 525.865 263.764 525.865 263.759 525.866 cv
263.819 525.862 mo
263.819 525.862 260.399 500.477 254.611 484.561 cv
247.781 465.777 246.426 457.603 244.018 451.66 cv
246.679 457.647 247.406 464.747 254.611 484.561 cv
260.399 500.477 263.819 525.862 263.819 525.862 cv
263.819 525.862 li
236.251 441.06 mo
236.267 441.051 236.283 441.042 236.299 441.033 cv
236.519 441.04 236.634 441.044 236.634 441.044 cv
236.634 441.044 li
236.634 441.044 li
236.251 441.06 li
level3{
gsave
clp
[100.548 0 0 100.548 163.271 487.908 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.780392 .407843 .662745 ]
/C1 [.627451 .243137 .592157 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[100.548 0 0 100.548 163.271 487.908 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~a2Z-=`l?$;`Pog8`Pod6`5KU4_o'C0_o'C/_SX1,_SO()_83t(^qdb$^qd_"^V@Ou^V7Fr^:q=q]tM+m
]tM(k]Y(ni]Xtef]=Y\d]"5Ja]"5G_\[f8]\@B&Y\@B&X\$riU\$rfS[^NWQ[C*EM[C*EL['[3I['R*F
Za7!EZEgdAZEga?Z*CR=Z*:I:Yct@8YHP.5YHP+3Y-+q1Y-"h.Xf\_,XK8M)XK8J'X/i;%WiE)!WiE(u
WMukrWMlboW2QYnVl-GjVl-GiVP^5fVPU,cV5:#bUnjf^Unjc\USFTZUS=KWU8"BUTqS0RTqS-PTV.sN
~>
<~BP1sjB4kjhAnGXeAn>ObAS#F`A7T4]A7K+Z@q0"X@U`eU@UW\R@:<SP?smAM?sd8J?XI/H?=$rE?<piB
?!U`A>[1N=>[1K;>?b<9>$>*5>$>'3=]nm1=BJ[-=BJX+='&I)<`W7%<`W4#<E3%!<)cgr<)cdp;c?Un
;GpCj;GpCi;,L1f;,C(c:f'ta:JXb^:JOY[:/4PY9he>V9h\5S9MA,Q91qoN91hfK8kM]I8P)KF8OuBC
84Z9B7n6'>7n6$<7Rfj:77BX677BU46psF26UO4.6UO1,6:+"*5s[e&5s[b$5X7S"5<h@s5<h=q5!D.o
~>
<~WMlboW2QYnW2QYnW2QYmVl-GjVl-GjVl-GjVl$>gVP^5fVP^5fVP^5eV5:#bV5:#bV5:#bV50o_Unjf^
Unjf^Unjf^USFTZUSFTZUSFTZUSFQXU8"BVU8"BVU8"BVTqS0RTqS0RTqS0RTqS-PTV.sNTV.sNTV.sN
TV%jKT:_aJT:_aJT:_aISt;OFSt;OFSt;OFSt2FCSXl=BSXl=BSXl=AS=H+>S=H+>S=H+>S=?";S"#n:
S"#n:S"#n:R[T\6R[T\6R[T\6R[TY4R@0J2R@0J2R@0J2R$a8.R$a8.R$a8.R$a5,Q^=&*Q^=&*Q^=&*
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
205.142 532.64 mo
205.142 532.64 205.142 532.64 205.142 532.64 cv
205.142 532.64 li
205.142 532.64 205.142 532.64 205.142 532.64 cv
.164706 .105882 .054902 rgb
f
207.237 533.082 mo
205.932 532.824 205.161 532.644 205.142 532.64 cv
205.142 532.64 205.142 532.64 205.142 532.64 cv
205.142 532.64 205.412 527.468 205.412 521.137 cv
205.411 514.682 205.13 507.022 203.996 502.413 cv
203.996 502.413 li
203.996 502.413 li
204.134 505.516 204.192 508.427 204.192 511.102 cv
204.191 521.985 203.234 528.953 202.873 528.974 cv
200.051 529.14 197.378 529.214 194.851 529.214 cv
174.029 529.214 163.271 524.179 163.271 524.179 cv
165.393 524.34 167.353 524.416 169.169 524.416 cv
200.639 524.415 188.325 501.459 207.974 497.92 cv
204.23 500.727 207.234 533.081 207.234 533.081 cv
207.237 533.082 li
level3{
gsave
clp
[100.548 0 0 100.548 163.271 487.908 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Q9]VY5B`;VFd,+5PWj5S5'<&QFd"t2P!*rM4EQ]JFHJ\-OZRZH3cg?CF,rA'N]D-?3HC-?EfE&!NAts;
2fag8Ef2krM`,R52K=U4EJZPlM)91-1iS7-E/6;hLGNn)12qt'DhTrbKe[M"0lDY!DM0]]K.h+p05c@p
DLsKYJhCnk/o?.kD1F3TIk5Dc/8TbdCjmmMIO],].VjG^CO@RHHRW`W.;O8YC3h:CH7*HQ-YdoSBm:t=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[100.548 0 0 100.548 163.271 487.908 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Q'IW"Q'@MtPa%DsP`q;pPEV2oPEV2oPEM)lP*1ukP*(lhOcYZdOH>QcOH>QcOH>QcOH5H`O,f6\NfK-[
NfK*YNK&pWNK&pWNK&mUN/W^SN/W[QMi3IMMMd:KMMd:KMMd:KMMd7IM2@%ELkpkCLkphALPLY?LPLY?
LPLY>L5(G;L5(G:KnY56KS5#3KS5#3KS5#2K7ef/K7ef.JqAT+JqAT*JUrB'JUrB'JUrB&J:N0#J:N0"
It)rtIXZ`pIXZ`pI=6NlI=6NlI=6NlI!g<hI!g<hH[C*dH?sm`H?sm`H?sm`H$O[\H$O[\G^+IXG^+IX
~>
<~5<h@s5<_7p5!D.o5!D.o5!;%l4Ztqk4Ztqk4Zkhh4?P_g4?GVd4$,Mc4$,Mc4$#D`3]T2\3B9)[3B9)[
3B9&Y3&ilW3&ilW3&iiU2`EZS2`EWQ2E!HO2E!HO2E!EM2)R6K2)R6K2)R3I1c.!E1G^gC1G^gC1G^dA
1,:U?1,:U>0ekC;0ekC;0ekC:0JG170JG170JG160/"t2/hSb//hSb//hSb./M/P+/M/P+/M/P*/1`>'
/1`>'.k<,#.k<,#.k<,#.Olnt.4H\p.4H\p.4H\p-n$Jl-n$Jl-n$Jl-RU8h-RU8h-71&d-71&d-71&d
~>
<~F`hhLF`hhLF`__IFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFE;MEF)uDDF)uDDF)uDDF)l;AEcQ2@EcQ2@
EcQ/>EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,r:E,]c8E,]c8E,]c8E,]`6Df9Q4Df9Q4Df9Q4Df9Q4
Df9Q4Df9Q4Df9Q3DJj?0DJj?0DJj?/D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-+Ci!p(Ci!p(Ci!p(
Ci!p(CMR^$CMR^$CMR^$C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuBk_9qBk_9qBk_9qBk_9qBP;'m
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
263.339 525.898 mo
263.341 525.898 263.343 525.898 263.345 525.898 cv
263.343 525.898 263.341 525.898 263.339 525.898 cv
263.448 525.889 mo
263.45 525.889 263.453 525.889 263.455 525.888 cv
263.453 525.889 263.45 525.889 263.448 525.889 cv
263.484 525.886 mo
263.489 525.886 263.494 525.885 263.498 525.885 cv
263.494 525.885 263.489 525.886 263.484 525.886 cv
263.587 525.878 mo
263.594 525.878 263.6 525.877 263.607 525.877 cv
263.601 525.877 263.593 525.878 263.587 525.878 cv
263.63 525.875 mo
263.638 525.874 263.645 525.874 263.653 525.873 cv
263.645 525.874 263.637 525.874 263.63 525.875 cv
263.675 525.872 mo
263.687 525.871 263.701 525.87 263.714 525.869 cv
263.701 525.87 263.688 525.871 263.675 525.872 cv
263.73 525.868 mo
263.74 525.867 263.75 525.866 263.759 525.866 cv
263.75 525.866 263.74 525.867 263.73 525.868 cv
263.775 525.865 mo
263.79 525.864 263.804 525.863 263.819 525.862 cv
263.819 525.862 li
263.804 525.863 263.79 525.864 263.775 525.865 cv
244.018 451.66 mo
242.574 448.412 240.561 445.491 236.634 441.044 cv
240.583 445.084 242.508 447.933 244.018 451.66 cv
.164706 .105882 .054902 rgb
f
247.102 530.114 mo
247.103 530.113 li
247.103 530.113 246.376 508.592 242.053 481.255 cv
239.04 462.213 232.19 450.407 228.31 444.996 cv
231.489 443.607 234.183 442.216 236.251 441.06 cv
236.634 441.044 li
236.634 441.044 li
240.561 445.491 242.574 448.412 244.018 451.66 cv
246.426 457.603 247.781 465.777 254.611 484.561 cv
260.399 500.477 263.819 525.862 263.819 525.862 cv
263.804 525.863 263.79 525.864 263.775 525.865 cv
263.77 525.865 263.765 525.865 263.759 525.866 cv
263.75 525.866 263.74 525.867 263.73 525.868 cv
263.725 525.868 263.719 525.868 263.714 525.869 cv
263.701 525.87 263.687 525.871 263.675 525.872 cv
263.667 525.872 263.66 525.873 263.653 525.873 cv
263.645 525.874 263.638 525.874 263.63 525.875 cv
263.622 525.875 263.615 525.876 263.607 525.877 cv
263.6 525.877 263.594 525.878 263.587 525.878 cv
263.557 525.88 263.528 525.883 263.498 525.885 cv
263.494 525.885 263.489 525.886 263.484 525.886 cv
263.474 525.887 263.465 525.888 263.455 525.888 cv
263.453 525.889 263.45 525.889 263.448 525.889 cv
263.414 525.892 263.38 525.895 263.345 525.898 cv
263.343 525.898 263.341 525.898 263.339 525.898 cv
259.152 526.262 253.752 527.921 247.102 530.114 cv
level3{
gsave
clp
[100.548 0 0 100.548 163.271 487.908 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[100.548 0 0 100.548 163.271 487.908 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
205.915 366.852 mo
187.325 395.528 183.845 411.952 183.845 411.952 cv
183.405 407.857 li
183.405 407.857 169.138 399.806 161.738 384.124 cv
153.913 367.542 143.885 354.747 145.381 352.585 cv
169.701 317.44 204.573 290.421 213.706 283.676 cv
213.706 283.676 216.194 285.065 219.143 298.219 cv
223.213 316.368 224.505 338.175 205.915 366.852 cv
283.713 131.21 mo
283.713 131.21 281.247 129.98 279.949 126.81 cv
278.653 123.64 281.392 119.975 275.493 116.016 cv
271.472 113.317 265.205 105.655 261.169 98.1616 cv
257.135 90.6685 251.956 87.4487 247.201 87.8814 cv
247.201 87.8814 252.235 98.6977 257.133 104.706 cv
262.033 110.712 262.549 112.19 260.964 112.766 cv
259.379 113.343 253.848 107.286 253.848 107.286 cv
253.848 107.286 258.875 140.558 260.029 146.657 cv
260.029 146.657 271.836 144.299 276.88 143.378 cv
281.925 142.456 304.576 149.741 334.98 183.45 cv
334.98 183.45 334.623 192.978 299.463 221.366 cv
264.301 249.754 252.936 247.04 252.936 247.04 cv
244.37 251.746 243.61 258.961 241.512 255.819 cv
237.501 249.81 230.438 237.492 228.996 225.82 cv
227.555 214.141 232.005 192.409 232.007 192.402 cv
210.783 207.499 li
211.128 211.823 210.294 235.277 210.727 240.464 cv
210.727 240.464 228.659 258.567 228.946 260.873 cv
229.235 263.178 221.301 261.435 212.313 263.775 cv
212.313 263.775 210.167 266.299 206.853 270.334 cv
203.538 274.369 152.579 312.116 125.776 350.158 cv
125.776 350.158 131.719 371.962 143.376 388.197 cv
153.393 402.146 175.688 422.838 177.341 426.806 cv
177.341 426.806 172.584 439.625 177.429 445.713 cv
177.429 445.713 180.355 451.671 198.803 451.679 cv
221.584 451.689 240.877 438.243 240.877 438.243 cv
240.877 438.243 236.757 432.305 245.979 403.484 cv
255.201 374.664 266.054 334.022 268.36 316.296 cv
270.666 298.573 261.93 269.483 264.597 264.621 cv
269.496 255.686 311.549 233.164 322.697 225.215 cv
354.832 202.302 364.115 183.543 364.115 183.543 cv
364.115 183.543 337.852 151.737 283.713 131.21 cv
.219608 .172549 .0784314 rgb
f
198.709 447.515 mo
181.94 447.515 179.14 442.451 179.14 442.451 cv
175.81 439.325 178.129 431.799 179.602 428.01 cv
180.505 428.183 181.491 428.323 182.561 428.424 cv
184.44 428.604 186.062 428.69 187.443 428.69 cv
191.535 428.69 193.512 427.934 193.845 426.61 cv
194.086 425.646 193.41 424.409 192.287 423.885 cv
193.876 423.872 195.166 423.232 195.68 422.127 cv
195.882 421.697 195.917 420.912 195.458 420.409 cv
195.851 420.445 196.223 420.478 196.568 420.478 cv
197.288 420.478 197.889 420.335 198.305 419.781 cv
199.103 418.722 198.872 417.533 197.652 416.307 cv
196.001 414.588 193.85 412.666 188.019 408.546 cv
189.368 407.883 192.899 407.411 197.314 407.411 cv
209.92 407.411 229.749 411.253 226.699 425.458 cv
223.084 442.297 202.071 446.968 195.223 447.391 cv
196.407 447.47 197.668 447.513 199.017 447.513 cv
199.279 447.513 199.544 447.511 199.813 447.508 cv
199.438 447.513 199.07 447.515 198.709 447.515 cv
170.281 414.793 mo
170.19 414.793 170.096 414.79 170 414.784 cv
163.512 408.657 156.227 402.03 149.93 393.44 cv
133.266 370.703 129.146 351.332 129.146 351.332 cv
155.266 314.258 205.119 274.355 208.349 270.422 cv
211.579 266.491 213.619 264.41 218.648 264.057 cv
223.985 263.682 231.006 263.308 230.725 261.062 cv
230.445 258.814 212.983 239.107 212.983 239.107 cv
212.715 235.883 212.389 226.261 212.101 218.62 cv
213.338 218.828 216.959 219.638 219.734 222.302 cv
226.951 229.229 228.512 243.21 231.379 249.639 cv
233.7 254.841 236.488 260.043 240.262 260.043 cv
241.787 260.044 243.471 259.196 245.352 257.157 cv
245.161 257.208 244.964 257.231 244.762 257.231 cv
244.634 257.231 244.505 257.222 244.374 257.204 cv
245.923 255.493 248.209 252.127 253.725 249.222 cv
256.302 247.865 265.223 251.324 299.488 223.659 cv
333.754 195.995 339.139 182.794 339.139 182.794 cv
310.805 151.381 284.053 141.726 277.468 141.726 cv
277.167 141.726 276.907 141.746 276.692 141.786 cv
275.497 142.004 273.923 142.238 272.225 142.467 cv
272.002 137.323 278.009 130.474 279.342 129.564 cv
281.228 131.691 283.938 133.336 283.938 133.336 cv
309.722 143.112 328.274 155.382 340.503 165.371 cv
353.356 176.733 355.52 183.543 355.52 183.543 cv
355.52 183.543 337.594 206.153 306.277 228.482 cv
298.334 234.143 277.442 245.734 264.909 254.961 cv
260.297 258.357 255.109 259.53 253.006 267.754 cv
250.947 275.806 259.566 298.087 257.32 315.36 cv
255.913 326.17 252.954 362.281 222.035 365.899 cv
217.728 365.467 213.754 364.772 210.666 363.809 cv
211.017 363.068 211.423 362.259 211.886 361.246 cv
226.98 335.228 224.047 313.296 220.988 296.402 cv
219.631 288.909 217.951 284.961 216.46 282.901 cv
214.378 279.973 212.421 279.734 212.421 279.734 cv
203.155 286.854 190.838 297.657 180.263 307.496 cv
171.842 315.332 163.947 323.163 157.367 329.999 cv
154.954 330.442 152.871 331.113 153.207 332.431 cv
153.329 332.911 153.472 333.408 153.641 333.912 cv
144.64 343.47 138.911 350.375 139.07 351.332 cv
139.35 353.012 148.089 367.587 153.918 377.173 cv
154.409 384.542 158.872 391.912 168.021 397.42 cv
168.278 397.715 168.536 398.006 168.792 398.293 cv
171.206 403.522 175.773 414.793 170.281 414.793 cv
179.378 413.539 mo
179.371 413.538 179.364 413.536 179.358 413.535 cv
179.352 413.528 179.347 413.522 179.341 413.515 cv
179.354 413.523 179.366 413.531 179.378 413.539 cv
234.392 247.104 mo
230.904 241.391 227.381 233.625 226.324 225.063 cv
226.111 223.342 226.021 221.445 226.021 219.466 cv
226.021 221.445 226.111 223.342 226.324 225.063 cv
227.209 232.233 230.797 240.537 234.392 247.104 cv
level3{
gsave
clp
[230.025 0 0 230.025 129.146 268.8 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[230.025 0 0 230.025 129.146 268.8 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
242.509 256.587 mo
242.186 256.587 241.869 256.353 241.514 255.822 cv
241.888 256.102 242.27 256.357 242.653 256.571 cv
242.604 256.581 242.556 256.586 242.509 256.587 cv
level3{
gsave
clp
[441.518 0 0 708.969 274.025 419.503 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[441.518 0 0 708.969 274.025 419.503 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
242.669 258.329 mo
242.004 258.329 241.271 257.73 240.18 256.287 cv
238.611 254.21 236.5 250.955 234.392 247.104 cv
235.538 248.981 236.68 250.637 237.73 252.026 cv
238.211 252.662 239.763 254.509 241.514 255.822 cv
241.869 256.353 242.186 256.587 242.509 256.587 cv
242.556 256.586 242.604 256.581 242.653 256.571 cv
243.235 256.897 243.819 257.128 244.374 257.204 cv
243.74 257.905 243.228 258.329 242.669 258.329 cv
212.101 218.62 mo
211.822 218.573 211.664 218.557 211.664 218.557 cv
211.148 215.347 211.113 213.495 211.375 211.174 cv
211.511 211.091 211.643 211.009 211.778 210.925 cv
211.876 212.811 211.985 215.556 212.101 218.62 cv
.176471 .12549 .0509804 rgb
f
240.262 260.043 mo
236.488 260.043 233.7 254.841 231.379 249.639 cv
228.512 243.21 226.951 229.229 219.734 222.302 cv
216.959 219.638 213.338 218.828 212.101 218.62 cv
211.985 215.556 211.876 212.811 211.778 210.925 cv
217.669 207.266 223.48 202.685 228.408 196.996 cv
227.611 201.37 226.02 211.147 226.021 219.466 cv
226.021 221.445 226.111 223.342 226.324 225.063 cv
227.381 233.625 230.904 241.391 234.392 247.104 cv
236.5 250.955 238.611 254.21 240.18 256.287 cv
241.271 257.73 242.004 258.329 242.669 258.329 cv
243.228 258.329 243.74 257.905 244.374 257.204 cv
244.505 257.222 244.634 257.231 244.762 257.231 cv
244.964 257.231 245.161 257.208 245.352 257.157 cv
243.471 259.196 241.787 260.044 240.262 260.043 cv
level3{
gsave
clp
[230.025 0 0 230.025 129.146 268.8 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[230.025 0 0 230.025 129.146 268.8 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
267.24 144.106 mo
266.453 144.106 265.75 144.025 265.291 143.826 cv
265.338 143.656 265.379 143.483 265.414 143.306 cv
267.506 143.067 269.975 142.771 272.225 142.467 cv
272.234 142.694 272.256 142.918 272.291 143.138 cv
271.804 143.58 269.247 144.106 267.24 144.106 cv
279.342 129.564 mo
278.714 128.857 278.177 128.096 277.862 127.324 cv
278.196 128.142 278.76 128.878 279.405 129.523 cv
279.385 129.535 279.364 129.549 279.342 129.564 cv
261.007 115.013 mo
259.631 115.013 257.206 112.193 256.415 111.226 cv
256.409 111.207 256.402 111.187 256.396 111.167 cv
258.129 113.035 259.472 113.772 260.413 113.772 cv
262.641 113.772 262.608 109.638 260.12 106.587 cv
255.346 100.733 249.542 90.1104 249.542 90.1104 cv
249.542 90.1104 li
249.542 90.1104 255.346 100.733 260.12 106.587 cv
264.895 112.442 262.836 114.405 261.292 114.966 cv
261.203 114.998 261.108 115.013 261.007 115.013 cv
.176471 .12549 .0509804 rgb
f
265.414 143.306 mo
266.621 137.231 260.925 127.028 258.623 122.831 cv
258.623 122.831 265.25 122.128 263.678 115.33 cv
263.678 115.33 260.919 119.646 258.482 119.646 cv
258.341 119.646 258.2 119.631 258.061 119.601 cv
258.061 119.601 257.905 115.893 256.415 111.226 cv
257.206 112.193 259.631 115.013 261.007 115.013 cv
261.108 115.013 261.203 114.998 261.292 114.966 cv
262.836 114.405 264.895 112.442 260.12 106.587 cv
255.346 100.733 249.542 90.1104 249.542 90.1104 cv
249.732 90.0931 249.919 90.0846 250.103 90.0846 cv
254.416 90.0846 257.239 94.7633 261.011 101.766 cv
264.943 109.068 270.419 114.826 273.789 118.13 cv
277.16 121.434 276.598 124.235 277.862 127.324 cv
277.862 127.324 li
278.177 128.096 278.714 128.857 279.342 129.564 cv
278.009 130.474 272.002 137.323 272.225 142.467 cv
269.975 142.771 267.506 143.067 265.414 143.306 cv
level3{
gsave
clp
[230.025 0 0 230.025 129.146 268.8 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[230.025 0 0 230.025 129.146 268.8 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
199.813 447.508 mo
199.896 447.507 199.979 447.506 200.063 447.504 cv
218.039 447.225 235.732 436.287 235.732 436.287 cv
235.732 436.287 li
235.732 436.287 218.039 447.225 200.063 447.504 cv
199.979 447.506 199.896 447.507 199.813 447.508 cv
187.6 408.238 mo
187.54 408.189 187.454 408.121 187.345 408.036 cv
187.64 407.251 188.139 406.118 188.757 404.776 cv
188.8 404.784 188.848 404.793 188.891 404.802 cv
188.407 406.047 187.977 407.196 187.6 408.238 cv
359.172 183.777 mo
359.172 183.777 353.298 175.822 340.503 165.371 cv
337.307 162.545 333.451 159.439 328.801 156.085 cv
349.685 170.722 359.172 183.777 359.172 183.777 cv
.176471 .12549 .0509804 rgb
f
199.017 447.513 mo
197.668 447.513 196.407 447.47 195.223 447.391 cv
202.071 446.968 223.084 442.297 226.699 425.458 cv
229.749 411.253 209.92 407.411 197.314 407.411 cv
192.899 407.411 189.368 407.883 188.019 408.546 cv
187.915 408.472 187.81 408.398 187.703 408.323 cv
187.703 408.323 187.667 408.293 187.6 408.238 cv
187.977 407.196 188.407 406.047 188.891 404.802 cv
197.493 406.479 207.251 407.405 217.187 407.405 cv
225.19 407.405 233.307 406.805 241.032 405.513 cv
236.319 421.183 235.483 429.448 235.482 433.336 cv
235.481 435.47 235.732 436.287 235.732 436.287 cv
235.732 436.287 218.039 447.225 200.063 447.504 cv
199.979 447.506 199.896 447.507 199.813 447.508 cv
199.544 447.511 199.279 447.513 199.017 447.513 cv
233.092 366.433 mo
229.39 366.433 225.6 366.256 222.035 365.899 cv
252.954 362.281 255.913 326.17 257.32 315.36 cv
259.566 298.087 250.947 275.806 253.006 267.754 cv
255.109 259.53 260.297 258.357 264.909 254.961 cv
277.442 245.734 298.334 234.143 306.277 228.482 cv
337.594 206.153 355.52 183.543 355.52 183.543 cv
355.52 183.543 353.356 176.733 340.503 165.371 cv
353.298 175.822 359.172 183.777 359.172 183.777 cv
359.172 183.777 li
359.172 183.777 346.955 202.875 315.637 225.204 cv
304.775 232.95 267.049 254.273 262.274 262.98 cv
261.883 263.693 261.721 264.985 261.72 266.725 cv
261.715 275.02 265.371 293.491 265.368 307.876 cv
265.367 310.541 265.241 313.066 264.943 315.36 cv
263.597 325.708 259.024 344.269 253.642 363.528 cv
250.049 365.449 241.817 366.432 233.092 366.433 cv
level3{
gsave
clp
[230.025 0 0 230.025 129.146 268.8 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[230.025 0 0 230.025 129.146 268.8 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
153.885 376.526 mo
146.974 364.16 141.879 352.622 141.879 352.622 cv
141.731 351.734 146.828 345.377 154.763 336.534 cv
154.853 336.701 154.947 336.867 155.045 337.033 cv
147.549 344.932 142.772 350.492 142.908 351.31 cv
143.23 353.241 148.383 362.623 153.928 374.268 cv
153.873 375.018 153.858 375.772 153.885 376.526 cv
161.277 329.408 mo
175.989 313.589 196.39 293.349 212.702 280.815 cv
212.702 280.815 212.907 280.724 213.261 280.724 cv
213.926 280.724 215.117 281.046 216.46 282.901 cv
216.611 283.113 216.762 283.339 216.913 283.58 cv
216.049 282.703 215.16 282.346 214.269 282.346 cv
211.251 282.346 208.206 286.44 206.02 288.313 cv
191.534 300.724 175.1 316.509 162.633 329.187 cv
162.459 329.216 162.281 329.246 162.101 329.277 cv
161.844 329.322 161.568 329.365 161.277 329.408 cv
.176471 .12549 .0509804 rgb
f
153.918 377.173 mo
148.089 367.587 139.35 353.012 139.07 351.332 cv
138.911 350.375 144.64 343.47 153.641 333.912 cv
153.932 334.781 154.3 335.672 154.763 336.534 cv
146.828 345.377 141.731 351.734 141.879 352.622 cv
141.879 352.622 146.974 364.16 153.885 376.526 cv
153.892 376.742 153.903 376.957 153.918 377.173 cv
157.367 329.999 mo
163.947 323.163 171.842 315.332 180.263 307.496 cv
190.838 297.657 203.155 286.854 212.421 279.734 cv
212.421 279.734 214.378 279.973 216.46 282.901 cv
215.117 281.046 213.926 280.724 213.261 280.724 cv
212.907 280.724 212.702 280.815 212.702 280.815 cv
196.39 293.349 175.989 313.589 161.277 329.408 cv
160.102 329.583 158.685 329.757 157.367 329.999 cv
level3{
gsave
clp
[230.025 0 0 230.025 129.146 268.8 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[230.025 0 0 230.025 129.146 268.8 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
197.652 416.307 mo
195.971 414.557 193.773 412.597 187.703 408.323 cv
187.703 408.323 180.229 402.071 176.446 404.635 cv
173.657 406.527 173.651 409.736 179.378 413.539 cv
176.399 412.949 174.667 413.692 174.112 415.568 cv
173.683 417.022 173.54 418.629 176.487 420.369 cv
174.273 420.24 173.327 421.092 172.794 422.392 cv
171.665 425.149 175.108 427.718 182.561 428.424 cv
190.012 429.135 193.4 428.38 193.845 426.61 cv
194.086 425.646 193.41 424.409 192.287 423.885 cv
193.876 423.872 195.166 423.232 195.68 422.127 cv
195.882 421.697 195.917 420.912 195.458 420.409 cv
196.67 420.521 197.689 420.601 198.305 419.781 cv
199.103 418.722 198.872 417.533 197.652 416.307 cv
.219608 .172549 .0784314 rgb
f
178.155 406.672 mo
175.604 408.389 177.503 412.64 184.982 415.851 cv
191.935 418.835 195.76 420.614 196.68 418.785 cv
197.568 417.02 191.27 412.991 188.703 411.287 cv
186.133 409.582 180.781 404.905 178.155 406.672 cv
.913725 .819608 .737255 rgb
f
176.314 415.811 mo
175.068 418.378 178.324 420.843 184.44 422.149 cv
190.874 423.523 193.829 423.032 194.091 421.079 cv
194.311 419.436 187.887 417.469 184.998 416.504 cv
182.54 415.686 177.597 413.17 176.314 415.811 cv
f
174.876 421.828 mo
173.544 423.756 176.837 426.254 182.962 426.833 cv
189.085 427.417 192.161 427.163 192.457 425.69 cv
192.813 423.918 186.627 422.778 184.167 422.272 cv
181.709 421.764 176.249 419.844 174.876 421.828 cv
f
190.376 423.001 mo
188.887 423.001 186.929 422.749 184.457 422.221 cv
179.591 421.183 176.537 419.412 176.117 417.438 cv
176.596 419.383 179.636 421.123 184.44 422.149 cv
186.913 422.677 188.871 422.93 190.361 422.93 cv
192.747 422.93 193.93 422.281 194.091 421.079 cv
194.157 420.589 193.633 420.071 192.788 419.56 cv
192.778 419.507 192.765 419.454 192.75 419.398 cv
194.354 419.951 194.129 421 194.107 421.15 cv
193.945 422.353 192.763 423.001 190.376 423.001 cv
.192157 .137255 .0588235 rgb
f
190.361 422.93 mo
188.871 422.93 186.913 422.677 184.44 422.149 cv
179.636 421.123 176.596 419.383 176.117 417.438 cv
176.009 416.931 176.076 416.41 176.331 415.884 cv
176.42 415.7 176.531 415.541 176.655 415.398 cv
176.723 417.531 179.842 419.473 185.031 420.581 cv
187.081 421.02 188.89 421.301 190.249 421.3 cv
192.035 421.3 193.042 420.814 192.788 419.56 cv
193.633 420.071 194.157 420.589 194.091 421.079 cv
193.93 422.281 192.747 422.93 190.361 422.93 cv
.796078 .65098 .533333 rgb
f
187.985 427.197 mo
186.631 427.197 184.965 427.096 182.979 426.908 cv
178.071 426.442 174.983 424.746 174.633 423.099 cv
175.057 424.723 178.127 426.376 182.962 426.833 cv
184.947 427.023 186.613 427.124 187.967 427.124 cv
190.788 427.124 192.257 426.685 192.457 425.69 cv
192.55 425.224 192.191 424.801 191.566 424.423 cv
191.564 424.404 191.562 424.385 191.559 424.366 cv
192.768 424.781 192.524 425.511 192.473 425.763 cv
192.273 426.76 190.805 427.197 187.985 427.197 cv
.192157 .137255 .0588235 rgb
f
187.967 427.124 mo
186.613 427.124 184.947 427.023 182.962 426.833 cv
178.127 426.376 175.057 424.723 174.633 423.099 cv
174.547 422.69 174.629 422.284 174.894 421.901 cv
174.989 421.764 175.108 421.645 175.241 421.543 cv
175.674 423.162 178.729 424.808 183.553 425.267 cv
185.049 425.409 186.453 425.488 187.654 425.488 cv
190.035 425.488 191.623 425.176 191.566 424.423 cv
192.191 424.801 192.55 425.224 192.457 425.69 cv
192.257 426.685 190.788 427.124 187.967 427.124 cv
.796078 .65098 .533333 rgb
f
195.23 419.599 mo
193.387 419.598 190.006 418.077 184.998 415.923 cv
180.504 413.989 178.03 411.682 177.324 409.778 cv
178.067 411.67 180.54 413.944 184.982 415.851 cv
189.992 418.001 193.378 419.525 195.224 419.525 cv
195.939 419.525 196.423 419.296 196.68 418.785 cv
197.006 418.137 196.363 417.183 195.291 416.151 cv
195.334 416.07 195.368 415.987 195.393 415.901 cv
196.076 416.569 197.826 418.689 195.943 419.498 cv
195.738 419.566 195.501 419.599 195.23 419.599 cv
.192157 .137255 .0588235 rgb
f
195.224 419.525 mo
193.378 419.525 189.992 418.001 184.982 415.851 cv
180.54 413.944 178.067 411.67 177.324 409.778 cv
176.942 408.746 177.079 407.833 177.694 407.16 cv
177.792 409.207 178.941 411.49 184.083 414.115 cv
188.451 416.345 191.279 417.103 193.022 417.103 cv
194.308 417.103 195.004 416.69 195.291 416.151 cv
196.363 417.183 197.006 418.137 196.68 418.785 cv
196.423 419.296 195.939 419.525 195.224 419.525 cv
.796078 .65098 .533333 rgb
f
153.207 332.431 mo
154.212 336.38 156.67 341.507 162.85 342.209 cv
165.984 342.565 168.047 342.071 169.591 341.576 cv
171.091 341.095 172.101 340.615 173.131 340.914 cv
175.221 341.519 173.821 343.868 177.472 346.817 cv
181.123 349.765 179.326 352.528 175.488 353.417 cv
172.451 354.121 156.811 359.034 154.283 371.673 cv
151.755 384.311 160.743 398.365 185.038 403.982 cv
209.332 409.6 245.001 408.898 266.908 397.382 cv
288.816 385.868 286.7 353.612 259.457 348.838 cv
257.3 354.996 255.684 360.209 254.407 363.053 cv
248.699 367.226 222.813 367.6 210.666 363.809 cv
211.854 361.3 213.686 358.002 216.171 348.662 cv
206.421 349.653 199.783 350.89 199.783 350.89 cv
199.783 350.89 200.906 346.676 204.979 341.761 cv
209.051 336.846 214.069 329.255 208.322 318.768 cv
204.043 310.96 192.633 306.967 182.238 312.168 cv
178.089 314.244 173.709 319.667 171.37 326.22 cv
170.593 328.396 168.186 328.223 162.101 329.277 cv
158.915 329.829 152.643 330.215 153.207 332.431 cv
.219608 .172549 .0784314 rgb
f
186.72 400.227 mo
186.711 400.225 186.7 400.223 186.69 400.22 cv
186.701 400.223 186.71 400.225 186.72 400.227 cv
186.654 400.212 mo
186.643 400.209 186.633 400.207 186.621 400.204 cv
186.632 400.207 186.643 400.21 186.654 400.212 cv
186.589 400.197 mo
186.577 400.194 186.567 400.192 186.555 400.189 cv
186.566 400.191 186.578 400.194 186.589 400.197 cv
186.522 400.181 mo
186.511 400.179 186.497 400.175 186.486 400.173 cv
186.498 400.176 186.51 400.178 186.522 400.181 cv
186.458 400.166 mo
186.445 400.163 186.433 400.16 186.421 400.157 cv
186.433 400.16 186.446 400.163 186.458 400.166 cv
186.391 400.15 mo
186.379 400.147 186.368 400.145 186.355 400.142 cv
186.367 400.145 186.379 400.147 186.391 400.15 cv
186.326 400.135 mo
186.315 400.132 186.304 400.13 186.292 400.127 cv
186.303 400.129 186.316 400.132 186.326 400.135 cv
186.259 400.119 mo
186.249 400.117 186.237 400.114 186.227 400.111 cv
186.237 400.114 186.249 400.117 186.259 400.119 cv
186.194 400.103 mo
186.183 400.101 186.173 400.098 186.162 400.096 cv
186.173 400.098 186.183 400.101 186.194 400.103 cv
186.128 400.088 mo
186.117 400.085 186.107 400.083 186.095 400.08 cv
186.106 400.082 186.117 400.085 186.128 400.088 cv
186.064 400.072 mo
186.053 400.07 186.041 400.067 186.03 400.064 cv
186.042 400.067 186.052 400.069 186.064 400.072 cv
185.999 400.057 mo
185.986 400.054 185.976 400.051 185.963 400.048 cv
185.975 400.051 185.987 400.054 185.999 400.057 cv
185.933 400.041 mo
185.922 400.038 185.911 400.035 185.9 400.033 cv
185.911 400.035 185.923 400.038 185.933 400.041 cv
185.868 400.025 mo
185.857 400.022 185.843 400.019 185.832 400.016 cv
185.844 400.019 185.856 400.022 185.868 400.025 cv
185.806 400.01 mo
185.794 400.007 185.78 400.003 185.767 400 cv
185.779 400.003 185.794 400.007 185.806 400.01 cv
185.742 399.994 mo
185.728 399.991 185.714 399.987 185.701 399.984 cv
185.714 399.987 185.729 399.991 185.742 399.994 cv
185.679 399.979 mo
185.665 399.975 185.651 399.972 185.637 399.969 cv
185.651 399.972 185.665 399.975 185.679 399.979 cv
185.613 399.962 mo
185.599 399.959 185.585 399.956 185.572 399.952 cv
185.585 399.956 185.6 399.959 185.613 399.962 cv
185.551 399.947 mo
185.536 399.943 185.523 399.94 185.508 399.936 cv
185.522 399.94 185.536 399.944 185.551 399.947 cv
185.488 399.931 mo
185.473 399.928 185.456 399.924 185.441 399.92 cv
185.456 399.924 185.473 399.928 185.488 399.931 cv
185.429 399.917 mo
185.413 399.913 185.395 399.908 185.378 399.904 cv
185.395 399.909 185.412 399.913 185.429 399.917 cv
185.363 399.9 mo
185.346 399.896 185.33 399.892 185.313 399.888 cv
185.33 399.892 185.346 399.896 185.363 399.9 cv
185.304 399.886 mo
185.285 399.881 185.269 399.877 185.25 399.872 cv
185.269 399.877 185.286 399.881 185.304 399.886 cv
185.242 399.87 mo
184.992 399.807 184.744 399.743 184.497 399.679 cv
184.744 399.743 184.992 399.807 185.242 399.87 cv
184.497 399.679 mo
184.415 399.657 184.332 399.635 184.25 399.614 cv
184.332 399.636 184.414 399.657 184.497 399.679 cv
184.248 399.613 mo
163.142 394.009 155.342 382.361 157.647 370.837 cv
159.508 361.531 168.242 357.237 173.805 355.317 cv
173.805 355.317 173.805 355.317 173.805 355.317 cv
177.99 354.044 181.855 354.587 182.183 349.344 cv
182.508 344.147 178.894 345.657 177.003 339.493 cv
177.152 339.485 177.294 339.481 177.428 339.481 cv
178.424 339.481 178.976 339.678 178.976 339.678 cv
178.976 339.678 178.942 339.655 178.877 339.615 cv
179.661 339.874 180.675 340.325 181.901 341.106 cv
181.901 341.106 180.563 339.578 179.14 338.438 cv
179.096 338.403 179.052 338.368 179.008 338.335 cv
179.294 337.348 179.444 335.603 179.35 332.914 cv
179.195 328.482 175.723 324.991 173.634 324.312 cv
173.871 323.742 174.113 323.154 174.365 322.562 cv
176.237 318.162 180.544 314.912 184.827 313.089 cv
187.003 312.164 189.142 311.767 191.187 311.767 cv
198.099 311.767 203.927 316.307 206.407 320.345 cv
206.536 320.555 206.658 320.766 206.774 320.979 cv
206.772 320.978 206.771 320.977 206.771 320.977 cv
206.771 320.977 209.794 329.168 204.013 338.391 cv
198.454 347.26 192.849 346.653 192.101 351.989 cv
190.871 360.75 201.058 363.198 206.394 364.582 cv
208.419 365.419 210.387 365.948 211.903 366.274 cv
217.866 367.779 224.787 368.522 231.619 368.522 cv
243.937 368.521 255.961 366.104 261.514 361.375 cv
261.514 361.375 li
261.514 361.375 263.027 360.945 265.084 360.945 cv
269.105 360.945 275.203 362.586 276.13 372.282 cv
276.912 380.464 269.109 386.435 264.356 388.934 cv
251.702 395.585 234.197 398.429 217.246 398.429 cv
206.394 398.43 195.77 397.264 186.786 395.187 cv
167.866 390.814 158.751 381.853 157.433 372.151 cv
155.958 383.239 163.944 394.222 184.248 399.613 cv
267.137 392.35 mo
267.142 392.347 267.146 392.344 267.151 392.341 cv
267.146 392.344 267.142 392.347 267.137 392.35 cv
267.18 392.322 mo
272.527 388.788 276.207 384.038 278.094 378.999 cv
278.1 378.997 278.107 378.995 278.113 378.993 cv
276.222 384.035 272.532 388.786 267.18 392.322 cv
level3{
gsave
clp
[124.59 0 0 124.59 154.993 357.625 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.992157 .870588 .243137 ]
/C1 [.886275 .639216 .145098 ]
/N 2.19214 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.59 0 0 124.59 154.993 357.625 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVZTkr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9f
qtp9fqtp9fqtp9fqtp9eqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'j^q"XXZq"XXZq"XXYp\4FVp\4FV
p\+=Sp@e4Rp@e4Qp%A"Np%A"Mo^qeJo^qeJoCMSFoCMSEo()ABo()>@naZ/>naQ&;nF5r:n*f`6n*f]4
mdBN2mHs<.mHs9,m-O**lg*m&lg!d#lK[[!l07Hskih6oki_-lkND!ik2tdejlPUbjQ,C_j5]1[io8tW
~>
<~hVI#Dh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCgt^]?gt^]?gt^]?gt^]>gY:K;gY:K;
gY:H9g=k97g=k97g"G'3g"G'3f\"j/f\"j.f@SX+f@JO(f%/F&e^`4#e^W*ueC;sre'ldodaHRldF$@h
dEp7ed*L%acd0n^cHa\Zc-=JVbfe2QbK@uMb/qcIaN2HDa2c6?`l?!:`Pod6`5BL1_SX1+_83q&^q[Xu
^:q:o]tD"j]=YYc]",A]\@B#W[^NWP[C!<JZa6sCZ*CR<Yck75Y-+n/XK8J'WiE%tW2QVlVP^2dV50o^
~>
<~5!;%l4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqj4?P_g
4?P_g4?P_g4?P_g4?P_g4?GVd4$,Mc4$,Mc4$,Mc4$,Ja3]];_3]];_3]];^3B9)[3B9)[3B9)Z3&ilW
3&ilW3&iiU2`EZS2`EZS2E!HO2E!HO2Dm?L2)R6K2)I-H1c.$G1c$pD1G^gC1GU^@1,:U?0ekC;0ek@9
0JG170J>(40/"t2/hSb//hJY,/M/P*/1`>'/1W5$.k<)!.Olnt.4H\p.4?Sm-n$Gj-RU8g-71&d,pai`
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
178.538 166.201 mo
176.016 172.287 171.458 194.128 177.84 224.259 cv
177.84 224.259 224.742 216.123 238.367 180.517 cv
238.367 180.517 239.096 181.286 242.044 185.883 cv
246.245 192.437 260.472 188.339 265.369 177.949 cv
270.268 167.559 267.426 157.335 256.887 157.335 cv
256.887 157.335 260.322 142.601 254.237 128.649 cv
248.152 114.697 249.785 102.823 212.677 104.159 cv
205.97 104.4 198.725 102.971 192.491 119.298 cv
186.257 135.626 178.538 166.201 178.538 166.201 cv
.219608 .172549 .0784314 rgb
f
179.56 220.71 mo
179.166 218.849 178.819 217.023 178.514 215.233 cv
178.819 217.023 179.167 218.849 179.56 220.71 cv
178.513 215.223 mo
178.511 215.217 178.51 215.206 178.508 215.199 cv
178.51 215.207 178.511 215.215 178.513 215.223 cv
181.112 214.019 mo
179.304 214.019 178.299 213.865 178.288 213.863 cv
174.312 188.961 178.633 171.368 180.825 166.083 cv
180.825 166.083 188.127 137.154 194.025 121.707 cv
195.184 118.672 196.379 116.286 197.6 114.409 cv
199.485 116.274 202.948 117.631 212.549 117.631 cv
215.156 117.631 218.216 117.531 221.819 117.314 cv
215.937 119.811 209.501 125.384 204.776 135.118 cv
198.274 148.514 197.894 162.526 206.237 166.43 cv
206.669 166.632 207.125 166.788 207.584 166.933 cv
207.123 166.795 206.671 166.633 206.237 166.43 cv
209.595 168.295 213.075 169.141 216.51 169.141 cv
222.093 169.141 227.561 166.907 232.216 163.189 cv
234.09 171.295 236.794 179.167 224.074 192.402 cv
205.311 211.925 187.771 214.019 181.112 214.019 cv
255.236 159.414 mo
255.236 159.414 255.236 159.413 255.237 159.409 cv
255.237 159.409 255.236 159.409 255.237 159.409 cv
255.236 159.413 255.236 159.414 255.236 159.414 cv
level3{
gsave
clp
[89.2676 0 0 89.2676 176.668 163.999 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[89.2676 0 0 89.2676 176.668 163.999 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
178.514 215.233 mo
178.514 215.23 178.513 215.227 178.513 215.223 cv
178.513 215.227 178.514 215.23 178.514 215.233 cv
178.508 215.199 mo
178.432 214.751 178.359 214.306 178.288 213.863 cv
178.288 213.863 178.288 213.863 178.288 213.863 cv
178.359 214.307 178.432 214.751 178.508 215.199 cv
197.6 114.409 mo
197.38 114.191 197.182 113.966 196.997 113.735 cv
196.997 113.735 197.098 113.411 197.293 112.932 cv
197.646 113.067 198.001 113.195 198.356 113.315 cv
198.103 113.659 197.851 114.023 197.6 114.409 cv
.176471 .12549 .0509804 rgb
f
179.56 220.71 mo
179.56 220.71 li
179.167 218.849 178.819 217.023 178.514 215.233 cv
178.514 215.23 178.513 215.227 178.513 215.223 cv
178.511 215.215 178.51 215.207 178.508 215.199 cv
178.432 214.751 178.359 214.307 178.288 213.863 cv
178.299 213.865 179.304 214.019 181.112 214.019 cv
187.771 214.019 205.311 211.925 224.074 192.402 cv
236.794 179.167 234.09 171.295 232.216 163.189 cv
236.312 159.918 239.778 155.499 242.141 150.439 cv
243.883 146.706 244.963 142.41 245.23 138.137 cv
245.8 139.58 246.553 141.022 247.529 142.432 cv
255.252 153.585 244.187 162.883 239.132 168.013 cv
244.513 169.057 li
244.513 169.057 248.955 160.938 255.237 159.409 cv
255.236 159.413 255.236 159.414 255.236 159.414 cv
255.236 159.414 li
255.236 159.414 li
255.236 159.414 li
255.871 159.292 256.497 159.232 257.108 159.232 cv
262.008 159.232 265.936 163.073 265.936 169.015 cv
265.936 171.523 265.236 174.406 263.613 177.533 cv
260.487 183.557 254.554 186.738 249.618 186.738 cv
246.651 186.738 244.043 185.588 242.623 183.215 cv
240.225 179.21 238.901 178.477 238.253 178.477 cv
237.879 178.477 237.73 178.722 237.73 178.722 cv
222.172 212.285 179.56 220.71 179.56 220.71 cv
243.812 126.935 mo
241.999 121.886 238.454 117.859 232.81 116.299 cv
231.716 115.917 230.451 115.713 229.066 115.713 cv
226.886 115.713 224.406 116.216 221.819 117.314 cv
218.216 117.531 215.156 117.631 212.549 117.631 cv
202.948 117.631 199.485 116.274 197.6 114.409 cv
197.851 114.023 198.103 113.659 198.356 113.315 cv
201.95 114.535 205.656 115.049 209.39 115.049 cv
213.363 115.049 217.366 114.468 221.301 113.536 cv
223.584 112.995 225.808 112.77 227.924 112.77 cv
238.267 112.77 246.079 118.13 246.079 118.13 cv
246.079 118.13 244.322 121.814 243.812 126.935 cv
level3{
gsave
clp
[89.2676 0 0 89.2676 176.668 163.999 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[89.2676 0 0 89.2676 176.668 163.999 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
194.585 114.374 mo
188.914 111.997 177.255 115.943 169.965 131.694 cv
164.128 144.305 163.83 157.633 170.84 161.516 cv
171.201 161.716 171.585 161.875 171.973 162.022 cv
171.584 161.882 171.204 161.718 170.84 161.516 cv
182.254 168.988 194.768 159.987 200.793 146.472 cv
205.91 135 206.105 118.235 194.585 114.374 cv
cp
.219608 .172549 .0784314 rgb
f
171.338 132.154 mo
165.974 143.756 165.938 153.689 172.18 157.147 cv
178.424 160.605 188.97 157.427 194.583 144.981 cv
199.841 133.321 199.109 119.288 192.573 116.578 cv
187.514 114.479 178.037 117.661 171.338 132.154 cv
cp
1 1 1 rgb
f
196.205 116.584 mo
201.455 119.805 202.229 133.667 196.731 145.855 cv
190.86 158.864 178.765 165.021 172.025 161.288 cv
180.651 166.276 193.413 159.171 199.207 146.177 cv
204.208 134.959 203.87 119.733 196.205 116.584 cv
cp
.709804 .694118 .635294 rgb
f
191.478 189.698 mo
191.478 189.698 196.74 191.595 203.603 193.375 cv
210.946 195.281 219.768 192.098 223.716 186.633 cv
228.384 180.172 229.975 171.566 229.975 171.566 cv
229.975 171.566 216.307 175.117 191.478 189.698 cv
cp
.219608 .172549 .0784314 rgb
f
214.355 179.049 mo
207.004 182.906 200.251 187.663 194.476 188.892 cv
194.476 188.892 198.332 190.564 204.137 191.987 cv
210.978 193.663 219.828 190.059 223.385 184.91 cv
226.942 179.76 228.852 172.926 228.852 172.926 cv
228.852 172.926 220.697 175.724 214.355 179.049 cv
cp
1 1 1 rgb
f
194.853 155.295 mo
194.853 155.295 159.888 153.862 147.927 152.367 cv
147.927 152.367 145.324 173.259 160.724 176.1 cv
176.124 178.941 185.632 170.907 185.553 171.644 cv
185.43 172.777 179.059 182.664 179.055 191.93 cv
179.055 191.93 188.528 194.119 204.825 185.447 cv
221.124 176.776 222.959 174.568 224.074 174.268 cv
224.074 174.268 219.298 154.184 214.665 150.895 cv
210.029 147.606 202.253 154.762 194.853 155.295 cv
cp
.219608 .172549 .0784314 rgb
f
194.609 156.219 mo
194.609 156.219 163.224 155.878 151.99 154.474 cv
151.99 154.474 149.181 171.185 163.646 173.853 cv
178.11 176.521 186.812 168.938 187.236 169.921 cv
187.659 170.904 181.761 184.245 181.761 189.722 cv
181.761 189.722 191.029 190.284 206.336 182.139 cv
221.644 173.994 228.992 171.5 229.975 171.566 cv
229.975 171.566 208.444 145.521 204.09 142.432 cv
204.09 142.432 201.561 155.718 194.609 156.219 cv
cp
level3{
gsave
clp
[78.2051 0 0 78.2051 151.77 166.081 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .862745 .8 ]
/C1 [.898039 .788235 .686275 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[78.2051 0 0 78.2051 151.77 166.081 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o'u8?naZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:nF5r:nF5r:n*f`6n*f`6n*f`6n*f`6n*f`6mdBN2
mdBN2mdBN2mdBN2mdBN1mHs<.mHs<.mHs<.mHs<.mHs<-m-O**m-O**m-O**m-O**m-O*)lg*m&lg*m&
lg*m&lg*m&lg*j$lK[["lK[["lK[["lK[["lK[Wul07Hsl07Hsl07Hsl07Hsl07Eqkih6okih6okih6o
kih6oki_-lkND$kkND$kkND$kkND$kkN:phk2tggk2tggk2tggk2tggk2k^djlPUcjlPUcjlPUcjlPUc
~>
<~gtUT<gY:K;gY:K;gY:H9g=k97g=k97g=k96g"G'3g"G'3g"G'3g"=s0f\"j/f\"j/f\"g-f@SX+f@SX+
f@SX+f%/F'f%/F'f%/F'f%&=$e^`4#e^`4#e^`4"eC<!teC<!teC<!te'ldpe'ldpe'ldpe'landaHRl
daHRldaHRkdF$@hdF$@hdF$@hdEp7ed*U.dd*U.dd*U+bcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\cHXVY
c-=MXc-=MXc-=MWbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)PbKJ&Nb0%lLb0%lLb0%lKaiVZHaiVZHaiVZH
~>
<~bfe2QbKJ)PbK@uMb0%lLb0%iJaiVZHaiVZGaN2HDaN2HDa2c6@a2c6@a2Z-=`l?$<`l5p9`Pog8`Pod6
`5KU4`5KU3_o'C0_o'C0_SX1,_SX1,_SO()_83t(_83q&^qdb$^qd_"^V@Ou^V@Ot^:q=q^:q=q]tM+m
]tM+m]tD"j]Y(ni]Y(kg]=Y\e]=Y\d]"5Ja]"5J`\[f8]\[f8]\@B&Y\@B&Y\@8rV\$riU\$rfS[^NWQ
[^NWP[C*EM[C*EM['[3I['[3IZa7!EZa7!EZa-mBZEgdAZEga?Z*CR=Z*CR<Yct@9Yct@9YHP.5YHP.5
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
232.81 116.299 mo
226.081 113.945 212.899 118.384 204.776 135.118 cv
198.274 148.514 197.894 162.526 206.237 166.43 cv
206.669 166.632 207.125 166.788 207.584 166.933 cv
207.123 166.795 206.671 166.633 206.237 166.43 cv
219.857 173.994 235.44 164.789 242.141 150.439 cv
247.829 138.255 246.453 120.068 232.81 116.299 cv
.219608 .172549 .0784314 rgb
f
206.119 135.871 mo
200.144 148.197 199.998 159.884 207.428 163.361 cv
214.86 166.837 227.139 161.677 233.383 148.46 cv
239.234 136.076 238.98 121.329 231.224 118.645 cv
225.222 116.567 213.583 120.476 206.119 135.871 cv
cp
1 1 1 rgb
f
234.776 118.583 mo
241.034 121.834 242.332 136.38 236.214 149.325 cv
229.685 163.14 215.648 169.913 207.624 166.16 cv
217.898 171.185 232.69 163.399 239.133 149.6 cv
244.694 137.688 243.868 121.699 234.776 118.583 cv
cp
.709804 .694118 .635294 rgb
f
177.44 137.257 mo
177.103 139.925 176.85 143.18 179.842 143.225 cv
183.212 143.276 185.632 138.037 185.632 138.037 cv
185.632 138.037 183.423 141.123 180.474 140.908 cv
177.523 140.693 177.44 137.257 177.44 137.257 cv
cp
.219608 .172549 .0784314 rgb
f
214.638 140.546 mo
214.301 143.215 214.047 146.469 217.042 146.515 cv
220.413 146.565 222.833 141.326 222.833 141.326 cv
222.833 141.326 220.625 144.413 217.675 144.197 cv
214.721 143.983 214.638 140.546 214.638 140.546 cv
cp
f
187.282 64.1304 mo
181.477 70.2582 173.025 89.4189 182.715 101.777 cv
193.728 115.823 207.917 116.706 221.301 113.536 cv
234.742 110.352 246.079 118.13 246.079 118.13 cv
246.079 118.13 239.806 131.279 247.529 142.432 cv
255.252 153.585 244.187 162.883 239.132 168.013 cv
244.513 169.057 li
244.513 169.057 249.42 160.087 256.214 159.228 cv
256.214 159.228 263.453 149.935 265.25 143.965 cv
267.049 137.997 261.011 127.184 258.623 122.831 cv
258.623 122.831 265.25 122.128 263.678 115.33 cv
263.678 115.33 260.589 120.162 258.061 119.601 cv
258.061 119.601 257.313 101.906 243.551 95.1654 cv
229.655 88.359 220.37 91.2333 212.778 83.2289 cv
204.414 74.4116 206.944 65.8158 208.771 62.7261 cv
208.771 62.7261 200.906 66.0966 198.435 72.9776 cv
198.435 72.9776 195.851 63.0069 208.771 52.7558 cv
208.771 52.7558 194.865 56.126 187.282 64.1304 cv
f
257.611 120.718 mo
257.426 120.718 257.236 120.711 257.041 120.697 cv
257.041 120.697 257.012 119.812 256.842 118.403 cv
257.035 119.832 257.041 120.697 257.041 120.697 cv
257.236 120.711 257.426 120.718 257.611 120.718 cv
261.447 120.718 262.939 117.811 262.939 117.811 cv
262.939 117.811 li
262.939 117.811 261.447 120.718 257.611 120.718 cv
248.952 115.713 mo
242.053 110.145 233.814 107.286 225.762 105.949 cv
212.241 103.684 203.07 102.749 196.997 90.9526 cv
196.997 90.9526 196.997 98.6762 203.07 102.749 cv
203.07 102.749 184.837 96.6257 182.426 84.0549 cv
182.744 76.7994 185.598 70.1548 188.645 66.939 cv
195.738 59.4526 204.838 55.4233 204.838 55.4233 cv
192.754 65.0112 197.816 78.5952 197.816 78.5952 cv
200.128 72.1592 205.961 65.6757 205.961 65.6757 cv
204.255 68.5654 201.953 78.1876 210.175 86.0377 cv
219.734 95.1654 230.011 89.7525 242.623 96.8507 cv
245.024 98.2022 247.026 99.7715 248.694 101.448 cv
248.692 101.447 248.691 101.446 248.69 101.445 cv
248.69 101.445 258.904 114.826 248.952 115.713 cv
187.433 100.824 mo
187.431 100.821 187.429 100.819 187.426 100.816 cv
187.429 100.819 187.431 100.822 187.433 100.824 cv
187.407 100.791 mo
187.405 100.788 187.403 100.786 187.401 100.783 cv
187.403 100.786 187.405 100.789 187.407 100.791 cv
187.381 100.758 mo
187.379 100.755 187.377 100.753 187.375 100.75 cv
187.377 100.753 187.379 100.756 187.381 100.758 cv
187.356 100.725 mo
187.353 100.722 187.352 100.72 187.35 100.718 cv
187.352 100.72 187.354 100.722 187.356 100.725 cv
187.329 100.69 mo
187.328 100.689 187.326 100.687 187.325 100.685 cv
187.326 100.687 187.327 100.688 187.329 100.69 cv
187.197 100.517 mo
187.196 100.516 li
187.196 100.516 187.196 100.516 187.197 100.517 cv
level3{
gsave
clp
[80.7236 0 0 80.7236 182.396 111.474 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.996078 .980392 .827451 ]
/C1 [.996078 .980392 .827451 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.996078 .980392 .827451 ]
/C1 [.898039 .886275 .737255 ]
/N 1 
>>
]
/Bounds [.0542169 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[80.7236 0 0 80.7236 182.396 111.474 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rr2orrr2orrr2orrr2lprVc]nrVc]nr;?Kjr;?Kjr;?Hhqtp9fqtp9eqYL'bqYL'bqYBs_q>'j^q>'j]
q"XXZq"XXZp\4FVp\4FVp\4CTp@e4Rp@e4Rp%A"Np%A"Np%@tLo^qeJo^qeIoCMSFoCMSFoCDJCo()AB
o()AAnaZ/>naZ/>nF5r:nF5r:nF5o8n*f`6n*f`6mdBN2mdBN2md9E/mHs<.mHs<-m-O**m-O**m-F!'
lg*m&lg*j$lK[["lK[["l07Hsl07Hsl07Eqkih6okih6nkND$kkND$kkN:phk2tggk2tgfjlPUcjlPUc
~>
<~qYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q"XXZq"XXZq"XXYp\4FVp\4FVp\+=Sp@e4Rp@e4Qp%A"Np%A"N
p%7nKo^qeJo^qeIoCMSFoCMSFoCDJCo()ABo()AAnaZ/>naZ/>naQ&;nF5r:nF5r9n*f`6n*f`6n*]W3
mdBN2mdBN1mHs<.mHs<.mHs9,m-O**m-O**lg*m&lg*m&lg*j$lK[["lK[["l07Hsl07Hsl07Eqkih6o
kih6okND$kkND$kkND!ik2tggk2tggjlPUcjlPUcjlPRajQ,C_jQ,C_j5]1[j5]1[j5].Yio8tWio8tW
~>
<~e'ldpe'ldpe'ldpe'landaHRldaHRlda?IidF$@hdF$@gd*U.dd*U.dd*U+bcd0q`cd0q`cHa_\cHa_\
cHa_[c-=MXc-=MXc-=JVbfn;Tbfn;TbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb/qcIaiVZHaiVZHaN2HDaN2HD
aN2EBa2c6@a2c6@a2Z-=`l?$<`l?$;`Pog8`Pog8`Pod6`5KU4`5KU4_o'C0_o'C0_o'C/_SX1,_SX1,
_SO()_83t(_83t(^qdb$^qdb$^qd_"^V@Ou^V@Ou^V7Fr^:q=q^:q=p]tM+m]tM+m]tM(k]Y(ni]Y(ni
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
256.842 118.403 mo
256.35 114.752 254.638 107.422 248.694 101.448 cv
254.595 105.415 256.338 114.219 256.842 118.403 cv
247.55 117.662 mo
247.55 117.662 238.426 110.882 227.136 110.882 cv
226.045 110.882 224.934 110.945 223.809 111.084 cv
219.773 111.582 215.684 112.057 211.655 112.057 cv
202.941 112.057 194.502 109.839 187.458 100.857 cv
187.45 100.846 187.441 100.835 187.433 100.824 cv
187.441 100.835 187.45 100.846 187.458 100.857 cv
194.502 109.839 202.941 112.056 211.655 112.057 cv
215.684 112.057 219.773 111.582 223.809 111.084 cv
224.934 110.945 226.045 110.882 227.136 110.882 cv
238.426 110.882 247.55 117.662 247.55 117.662 cv
247.55 117.662 li
187.426 100.816 mo
187.42 100.808 187.413 100.799 187.407 100.791 cv
187.414 100.8 187.42 100.808 187.426 100.816 cv
187.401 100.783 mo
187.394 100.775 187.388 100.767 187.381 100.758 cv
187.387 100.766 187.395 100.776 187.401 100.783 cv
187.375 100.75 mo
187.369 100.742 187.362 100.733 187.356 100.725 cv
187.362 100.733 187.369 100.742 187.375 100.75 cv
187.35 100.718 mo
187.343 100.708 187.336 100.699 187.329 100.69 cv
187.336 100.699 187.343 100.708 187.35 100.718 cv
187.325 100.685 mo
187.282 100.629 187.239 100.573 187.197 100.517 cv
187.239 100.573 187.282 100.629 187.325 100.685 cv
187.196 100.516 mo
183.422 95.513 182.182 89.6039 182.426 84.0532 cv
182.426 84.054 182.426 84.0541 182.426 84.0549 cv
182.182 89.6054 183.423 95.5135 187.196 100.516 cv
.188235 .141176 .0470588 rgb
f
244.023 167.525 mo
242.428 167.206 li
245.928 163.655 252.018 156.908 252.017 149.412 cv
252.016 146.781 251.265 144.058 249.389 141.348 cv
246.489 137.161 245.621 132.52 245.62 128.463 cv
245.62 122.412 247.55 117.662 247.55 117.662 cv
247.55 117.662 li
247.55 117.662 li
247.55 117.662 238.426 110.882 227.136 110.882 cv
226.045 110.882 224.934 110.945 223.809 111.084 cv
219.773 111.582 215.684 112.057 211.655 112.057 cv
202.941 112.056 194.502 109.839 187.458 100.857 cv
187.45 100.846 187.441 100.835 187.433 100.824 cv
187.431 100.822 187.429 100.819 187.426 100.816 cv
187.42 100.808 187.414 100.8 187.407 100.791 cv
187.405 100.789 187.403 100.786 187.401 100.783 cv
187.395 100.776 187.387 100.766 187.381 100.758 cv
187.379 100.756 187.377 100.753 187.375 100.75 cv
187.369 100.742 187.362 100.733 187.356 100.725 cv
187.354 100.722 187.352 100.72 187.35 100.718 cv
187.343 100.708 187.336 100.699 187.329 100.69 cv
187.327 100.688 187.326 100.687 187.325 100.685 cv
187.282 100.629 187.239 100.573 187.197 100.517 cv
187.196 100.516 187.196 100.516 187.196 100.516 cv
183.423 95.5135 182.182 89.6054 182.426 84.0549 cv
184.837 96.6257 203.07 102.749 203.07 102.749 cv
196.997 98.6762 196.997 90.9526 196.997 90.9526 cv
203.07 102.749 212.241 103.684 225.762 105.949 cv
233.814 107.286 242.053 110.145 248.952 115.713 cv
258.904 114.826 248.69 101.445 248.69 101.445 cv
248.691 101.446 248.692 101.447 248.694 101.448 cv
254.638 107.422 256.35 114.752 256.842 118.403 cv
257.012 119.812 257.041 120.697 257.041 120.697 cv
257.236 120.711 257.426 120.718 257.611 120.718 cv
261.447 120.718 262.939 117.811 262.939 117.811 cv
262.376 121.103 257.219 121.74 257.219 121.74 cv
257.219 121.74 li
257.219 121.74 li
259.143 125.247 263.127 134.419 263.12 140.462 cv
263.119 141.435 263.014 142.327 262.781 143.102 cv
261.1 148.684 255.601 157.695 255.601 157.695 cv
248.338 159.867 244.023 167.525 244.023 167.525 cv
level3{
gsave
clp
[80.7236 0 0 80.7236 182.396 111.474 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(
c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4Wo
J_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#gWb<(c%4WoJ_SG#
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~gWb<(c%4TmJD/4tfunp!bCJ9hJD&(pfuefsb(&'dJ(Vnnf?&NoaaVg_Ib)Shf#W9iaF2UZIFQ;ceAcpd
`dH7TI+-)_e&Hda`I-.RI+#u\d_pL[`-ThLHI9WVd)11V_KsSGHI'HRcbXnP_0O>BH-X6Oc,"YL^j+)=
Gg*sIbeJAG^N[o9GK[^EbJ&/C]lqQ3G07L@ah;i=]lhH0Fi_4<aLlZ9]6)**FN;"8`k$93\obs&F2kb3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0542169 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[80.7236 0 0 80.7236 182.396 111.474 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~g=k97g=k97g=k97g=k97g=k97g=k65g"G'3g"G$1f\"j/f\"j/f\"j/f\"j/f[na,f@SX+f@SX+f%/F'
f%/F'e^`4#e^`4#e^`4#eC<!teC<!se'ldpe'ldpe'ldodaHRldaHRldaHRldaHRldaHOjdF$@hdF$=f
d*U.dd*U.dd*L%acd0q`cd0q`cd'h]cHa_\cHXVYc-=MXc-=MXbfn;Tbfn;TbKJ)PbKJ)PbKJ)PbKJ)P
bKJ)Ob0%lLb0%lLb0%lKaiVZHaiVWFaN2HDaN2HDaN2EBa2c6@a2Z-=`l?$<`l?$<`l5p9`Pog8`Pog8
~>
<~bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn8RbKJ)PbKJ&Nb0%lLb0%lLb/qcIaiVZHaiVZHaiVZHaiVZHaN2HD
aN2HDaN2HDa2c6@a2c6@a2c6@`l?$<`l?$;`Pog8`Pog8`Pog8`Pog8`Pod6`5KU4`5KU4`5KR2_o'C0
_o'C0_o'@._SX1,_SO()_83t(_83t(_8*k%^qdb$^qdb$^qdb$^qdb$^V@Ou^V@Ou^V@Ot^:q=q^:q=p
]tM+m]tM+m]tM+l]Y(ni]Y(ni]Y(ni]Y(ni]Y(kg]=Y\e]=Y\e]=PSb]"5Ja]"5Ja]",A^\[f8]\[]/Z
~>
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N-!It)rtIt)rtIt)rtIt)rtIsuiqIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
I=6NlI=6NlI=6NlI!g<hI!g<hI!g<hI!g<hI!g<gH[C*dH[C*dH[C*dH[C*dH[C*dH[C'bH?sm`H?sj^
H$O[\H$O[\H$O[\H$O[\H$O[\H$FRYG^+IXG^+IXG^+IXG^+IXGB\7TGB\7TGB\7TG'8%PG'8%PG'8%P
G'8%PG'8%OF`hhLF`hhLF`heJFEDVHFEDVHFEDVHFEDVHFEDVHFE;MEF)uDDF)uDDF)uDDF)uDDF)l;A
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
233.365 152.575 mo
250.197 161.636 li
254.69 158.828 li
237.185 143.378 li
233.365 152.575 li
cp
.219608 .172549 .0784314 rgb
f
236.797 151.542 mo
239.566 153.441 250.068 160.524 250.068 160.524 cv
252.818 158.68 li
252.818 158.68 241.042 149.701 238.994 147.977 cv
236.945 146.252 234.028 149.645 236.797 151.542 cv
cp
.501961 .470588 .356863 rgb
f
194.476 148.038 mo
194.476 148.038 197.957 145.369 201.117 148.88 cv
203.07 139.738 li
203.07 139.738 200.892 137.67 197.606 139.738 cv
194.476 148.038 li
cp
.219608 .172549 .0784314 rgb
f
196.997 144.695 mo
196.997 144.695 198.435 144.329 200.683 145.19 cv
201.71 141.864 li
201.71 141.864 199.932 140.834 197.977 141.681 cv
196.997 144.695 li
cp
.501961 .470588 .356863 rgb
f
178.297 113.735 mo
178.297 113.735 183.407 105.089 191.478 102.749 cv
191.478 102.749 189.999 99.8467 189.25 98.1616 cv
189.25 98.1616 179.514 100.382 178.297 113.735 cv
cp
.219608 .172549 .0784314 rgb
f
225.762 96.0078 mo
224.742 100.689 li
224.742 100.689 233.907 103.036 237.73 110.906 cv
237.73 110.906 239.79 100.127 225.762 96.0078 cv
cp
f
250.123 170.332 mo
250.123 170.332 253.741 163.247 258.726 163.998 cv
263.712 164.749 261.853 170.589 261.853 170.589 cv
261.853 170.589 261.502 166.289 258.342 166.081 cv
255.182 165.872 253.216 169.375 253.216 169.375 cv
253.216 169.375 257.008 170.062 257.149 172.707 cv
257.289 175.351 253.848 177.176 253.848 177.176 cv
253.848 177.176 256.517 174.486 255.533 172.707 cv
254.55 170.928 250.123 170.332 250.123 170.332 cv
cp
f
189.948 191.989 mo
189.948 191.989 197.747 196.146 205.75 196.374 cv
205.75 196.374 197.945 200.478 189.948 191.989 cv
cp
f
198.582 351.332 mo
198.582 351.332 196.984 357.214 199.361 359.877 cv
204.627 365.774 214.748 366.751 214.748 366.751 cv
210.666 363.809 li
207.155 362.755 203.153 361.913 200.555 358.683 cv
198.298 355.877 199.604 351.771 199.604 351.771 cv
198.582 351.332 li
f
201.254 328.717 mo
201.254 331.981 198.997 334.198 195.901 334.561 cv
192.483 334.964 189.862 333.337 188.788 329.576 cv
187.891 326.437 191.578 322.562 195.021 322.562 cv
198.463 322.562 201.254 325.452 201.254 328.717 cv
cp
f
195.83 328.917 mo
194.58 330.218 194.386 332.058 195.396 333.03 cv
196.406 334 198.237 333.733 199.488 332.433 cv
200.738 331.132 200.934 329.291 199.924 328.32 cv
198.913 327.349 197.082 327.616 195.83 328.917 cv
cp
1 1 1 rgb
f
191.021 329.583 mo
190.447 330.179 190.802 331.45 191.812 332.422 cv
192.821 333.392 194.104 333.695 194.678 333.099 cv
195.252 332.502 194.899 331.231 193.888 330.261 cv
192.877 329.291 191.594 328.986 191.021 329.583 cv
cp
f
157.488 338.366 mo
156.149 337.219 155.224 335.696 154.629 333.853 cv
153.298 329.729 159.848 330.252 162.85 329.64 cv
169.59 328.265 170.503 329.921 171.978 326.454 cv
172.176 325.987 173.009 324.659 173.26 324.218 cv
173.378 324.238 173.503 324.27 173.634 324.312 cv
172.48 327.08 171.432 329.418 169.871 329.64 cv
157.262 331.429 153.936 329.729 155.266 333.853 cv
155.266 333.853 li
155.266 333.853 li
155.761 335.795 156.532 337.265 157.488 338.366 cv
.215686 .109804 .0196078 rgb
f
163.147 339.061 mo
158.125 339.061 155.266 333.853 155.266 333.853 cv
155.266 333.853 li
153.936 329.729 157.262 331.429 169.871 329.64 cv
171.432 329.418 172.48 327.08 173.634 324.312 cv
175.723 324.991 179.195 328.482 179.35 332.914 cv
179.444 335.603 179.294 337.348 179.008 338.335 cv
177.572 337.232 176.039 336.844 174.462 336.844 cv
170.717 336.844 166.726 339.034 163.201 339.061 cv
163.183 339.061 163.165 339.061 163.147 339.061 cv
level3{
gsave
clp
[124.59 0 0 124.59 154.993 357.625 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~pl5p\NY(uG&GV7spl5p\NY(uG&GV7spl,j[N=blE&GM.ppPf^XN=YcC&,2"npP]XVN">W?&,(nlp59IT
M\#K<&+tejona4OM%B68&+kYgo8!qKLCWp1%e>>anqIYEKb!X+%e52^n:M5?Je%7$%e"oWmXPc6Igtdp
%IAKPm!T?/Hk#@f%-i-Il$3^$GRWe[%-MdBk&h*pF:72O$fl=9j)GIdE!tWC$K5h/iG8kZCC8s5$JoG&
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.59 0 0 124.59 154.993 357.625 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\+=Sp@e4Rp@e4Rp@e4Rp@e4R
p@e4Rp@e1Pp%A"Np%A"Np%A"Np%A"Np%@tLo^qeJo^qeJo^qbHoCMSFoCMSFoCMPDo()ABo()ABo()>@
naZ/>naZ/=nF5r:nF5r:nF5r9n*f`6n*f`5mdBN2mdBN1mHs<-m-O**m-O*)lg*m&lg*m%lK[[!l07Hs
l07Hskih6okND$kkND$kk2tggjlPUcjlPUcjQ,C_j5]1[io8tWiSibSi8EPOi8EPOi8EPOhr!>KhVR,G
~>
<~NK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNJrgTN/W^SN/W^SN/W^SN/W^SN/W^SN/W^SN/NUP
Mi3LOMi3LOMi3IMMMd:KMMd:KMMd:KMMd7IM2@(GM2@%ELkpkCLkpkCLkphALPLY?LPLV=L5(D9KnY57
KnY57KnY56KS5#2K7ef/K7ef.JqAT*JUrB'JUi9#It)rtIt)rsIXZ`pIXQWlI!g<hI!g<gH[C*cH?sm_
H$O[\G^+IXGB\7TG'8%PF`hhLFEDVHF)uDDEcQ2@EH,u<E,]c8Df9Q4DJj<.Ci!p(CMR^$C2.HsBP;'m
~>
<~%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%h9'Z%LrsY%LrsY%LrsY%LrsY
%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrpW%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaT$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OP$O[=M
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$47+I$47+I$47+I$47+I$47+I#mgnE#mgnE#mgnE#mgnE#mgnE
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
202.83 332.847 mo
200.977 337.674 196.716 339.826 192.394 338.817 cv
187.62 337.705 185.057 333.992 185.763 327.892 cv
186.352 322.801 193.455 318.913 198.033 320.631 cv
202.611 322.35 204.683 328.017 202.83 332.847 cv
cp
.219608 .172549 .0784314 rgb
f
194.748 329.283 mo
192.49 330.877 191.48 333.63 192.496 335.434 cv
193.508 337.236 196.159 337.407 198.419 335.812 cv
200.678 334.218 201.688 331.466 200.674 329.662 cv
199.66 327.859 197.009 327.69 194.748 329.283 cv
cp
1 1 1 rgb
f
188.63 328.809 mo
187.529 329.404 187.116 331.06 187.705 332.509 cv
188.296 333.954 189.667 334.644 190.768 334.046 cv
191.869 333.452 192.284 331.796 191.694 330.349 cv
191.102 328.905 189.732 328.213 188.63 328.809 cv
cp
f
232.433 281.938 mo
232.433 281.938 232.433 296.613 236.505 306.724 cv
236.505 306.724 234.469 292.61 232.433 281.938 cv
cp
.219608 .172549 .0784314 rgb
f
245.166 299.5 mo
245.254 302.31 246.082 304.125 247.344 304.523 cv
248.961 305.033 250.246 302.153 250.16 299.343 cv
250.071 296.534 248.954 294.29 247.662 294.331 cv
246.372 294.371 245.077 296.691 245.166 299.5 cv
cp
.533333 .34902 .294118 rgb
f
224.877 301.922 mo
225.483 304.059 226.448 305.297 227.458 305.369 cv
228.751 305.459 229.146 303.018 228.538 300.88 cv
227.928 298.746 226.667 297.231 225.723 297.502 cv
224.776 297.771 224.267 299.788 224.877 301.922 cv
cp
f
173.805 355.317 mo
173.814 355.314 174.867 354.886 177.455 353.628 cv
180.052 352.364 179.14 351.662 179.631 349.695 cv
180.122 347.729 175.613 345.146 175.4 343.253 cv
175.232 341.75 175.65 340.406 173.347 340.406 cv
172.745 340.406 171.957 340.498 170.924 340.703 cv
169.275 341.03 167.256 341.385 165.21 341.385 cv
162.393 341.385 159.523 340.712 157.488 338.366 cv
158.8 339.49 160.509 340.253 162.691 340.6 cv
162.701 340.602 162.71 340.603 162.72 340.605 cv
162.724 340.605 162.728 340.606 162.732 340.606 cv
162.748 340.609 162.764 340.611 162.78 340.614 cv
162.78 340.614 li
163.177 340.675 163.589 340.702 164.013 340.702 cv
166.951 340.702 170.462 339.383 173.453 338.648 cv
173.468 338.645 173.484 338.641 173.499 338.637 cv
173.501 338.637 173.502 338.637 173.503 338.636 cv
173.51 338.635 173.516 338.633 173.523 338.632 cv
173.995 338.522 174.458 338.476 174.904 338.476 cv
175.481 338.476 176.027 338.553 176.521 338.668 cv
177.286 338.848 177.924 339.12 178.357 339.336 cv
178.359 339.336 178.361 339.335 178.363 339.334 cv
178.6 339.452 178.775 339.554 178.877 339.615 cv
177.971 339.316 177.371 339.273 177.102 339.273 cv
176.994 339.273 176.939 339.28 176.939 339.28 cv
176.96 339.352 176.982 339.423 177.003 339.493 cv
176.407 339.525 175.687 339.629 174.861 339.864 cv
175.514 341.598 176.784 344.218 178.936 345.957 cv
182.395 348.75 180.427 353.431 177.572 354.189 cv
176.735 354.411 175.4 354.767 173.805 355.317 cv
.196078 .137255 .0392157 rgb
f
173.805 355.317 mo
173.805 355.317 173.805 355.317 173.805 355.317 cv
175.4 354.767 176.735 354.411 177.572 354.189 cv
180.427 353.431 182.395 348.75 178.936 345.957 cv
176.784 344.218 175.514 341.598 174.861 339.864 cv
175.687 339.629 176.407 339.525 177.003 339.493 cv
178.894 345.657 182.508 344.147 182.183 349.344 cv
181.855 354.587 177.99 354.044 173.805 355.317 cv
181.901 341.106 mo
180.675 340.325 179.661 339.874 178.877 339.615 cv
178.775 339.554 178.6 339.452 178.363 339.334 cv
178.612 339.254 178.835 338.934 179.008 338.335 cv
179.052 338.368 179.096 338.403 179.14 338.438 cv
180.563 339.578 181.901 341.106 181.901 341.106 cv
162.78 340.614 mo
162.764 340.611 162.748 340.609 162.732 340.606 cv
162.748 340.609 162.764 340.611 162.78 340.614 cv
162.72 340.605 mo
162.71 340.603 162.701 340.602 162.691 340.6 cv
162.701 340.602 162.711 340.603 162.72 340.605 cv
176.521 338.668 mo
176.027 338.553 175.481 338.476 174.904 338.476 cv
174.458 338.476 173.995 338.522 173.523 338.632 cv
173.996 338.521 174.461 338.475 174.906 338.475 cv
175.483 338.475 176.028 338.553 176.521 338.668 cv
173.499 338.637 mo
173.501 338.637 173.502 338.637 173.503 338.636 cv
173.502 338.637 173.501 338.637 173.499 338.637 cv
level3{
gsave
clp
[124.59 0 0 124.59 154.993 357.625 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~j/sKaXrl],+60LGj/sKaXrl],+60LGj/jE`XWQT*+6'CDiiO9]XWHK(*oa7BiiF3[X<-?$*oX.@iMmsX
WZL,u*oX(=iMdjUW#afp*T3h9hkhFOV&\Bh*8[M3hP;.IUE&*a*8R>.gn>\BTGuXX)r$r&g79/8S/U(M
)VCJrfU3W0Ql4MB(tY&jes%$%P8Mi5(Y"Q`duYBpNu$0'(=A'Ud#&RaM&"?m'[MLJc@ltWK+lI['?bn=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.59 0 0 124.59 154.993 357.625 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio/kTiSibSiSibSiSibSiSibS
iSibSiSi_Qi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVR)E
h;-oCh;-oBgt^]?gt^]?gt^]>gY:K;gY:K:g=k97g=k96g"G'2f\"j/f\"j.f@SX+f@SX+f@SX*f%/F'
f%/F'e^`4#eC<!teC<!te'ldpdaHRldaHRldF$@hd*U.dcd0q`cHa_\cHa_\cHa_\c-=MXbfn;TbKJ)P
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-XfSV*XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK/D&
X/i;%X/i;%X/i8#WiE)!WiE%tWMukrWMuhpW2QYnW2QYnW2QVlVl-GjVl-DhVP^2dV59u`Unjf^Unjf^
Unjf]USFTYU8"BUTqS0RTqS0QTV.sMT:_aISt;OESXl=AS=H+=S"#n9R[T\5R@0J1R$a8-Q^=&)QBmi%
Q'ISuPEV2oP*1ukOcbcgOH>QcO,o?_NfK*YN/W^SMi3IMM2@(GLkpkCLPLV=KnY57KS4u1JqAQ)J:N0#
~>
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*ZZ7A*??.@*??.@*??.@*??.@
*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??+>*#oq<*#oq<*#oq<*#oq<*#oq<*#on:)]K_8)]K_8
)]K_8)]K_8)]K_8)]K_7)B'M4)B'M4)B'M4)B'M3)&X;0)&X;0)&X;0)&X;/(`4),(`4),(`4)+(Ddl(
(Ddl((Ddl((Ddl(()@Z$()@Z$()@Z$'bqGu'bqGu'GM5q'GM5q'GM5q',)#m',)#m',)#m&eYfi&eYfi
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
164.013 340.702 mo
163.589 340.702 163.177 340.675 162.78 340.614 cv
162.78 340.614 li
162.78 340.614 li
163.177 340.675 163.589 340.702 164.013 340.702 cv
166.951 340.702 170.462 339.383 173.453 338.648 cv
173.468 338.645 173.484 338.641 173.499 338.637 cv
173.484 338.641 173.468 338.645 173.453 338.648 cv
170.462 339.383 166.951 340.702 164.013 340.702 cv
162.732 340.606 mo
162.728 340.606 162.724 340.605 162.72 340.605 cv
162.724 340.605 162.728 340.606 162.732 340.606 cv
162.691 340.6 mo
160.509 340.253 158.8 339.49 157.488 338.366 cv
156.532 337.265 155.761 335.795 155.266 333.853 cv
155.266 333.853 li
156.444 337.503 158.292 339.899 162.691 340.6 cv
178.357 339.336 mo
177.924 339.12 177.286 338.848 176.521 338.668 cv
177.288 338.847 177.929 339.118 178.363 339.334 cv
178.361 339.335 178.359 339.336 178.357 339.336 cv
173.503 338.636 mo
173.51 338.635 173.516 338.633 173.523 338.632 cv
173.516 338.633 173.51 338.635 173.503 338.636 cv
.192157 .0862745 .00784314 rgb
f
164.013 340.702 mo
163.589 340.702 163.177 340.675 162.78 340.614 cv
162.78 340.614 li
162.764 340.611 162.748 340.609 162.732 340.606 cv
162.728 340.606 162.724 340.605 162.72 340.605 cv
162.711 340.603 162.701 340.602 162.691 340.6 cv
158.292 339.899 156.444 337.503 155.266 333.853 cv
155.266 333.853 158.125 339.061 163.147 339.061 cv
163.165 339.061 163.183 339.061 163.201 339.061 cv
166.726 339.034 170.717 336.844 174.462 336.844 cv
176.039 336.844 177.572 337.232 179.008 338.335 cv
178.835 338.934 178.612 339.254 178.363 339.334 cv
177.929 339.118 177.288 338.847 176.521 338.668 cv
176.028 338.553 175.483 338.475 174.906 338.475 cv
174.461 338.475 173.996 338.521 173.523 338.632 cv
173.516 338.633 173.51 338.635 173.503 338.636 cv
173.502 338.637 173.501 338.637 173.499 338.637 cv
173.484 338.641 173.468 338.645 173.453 338.648 cv
170.462 339.383 166.951 340.702 164.013 340.702 cv
level3{
gsave
clp
[124.59 0 0 124.59 154.993 357.625 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hereXD[>6=#iBP+hereXD[>6=#iBP+hereXD[>6=#i9J)hJWYUD[5-;#Ms>'hJNSSD?o!7#Mj5%h/*DQ
D$Sj4#Ma,#ghR/LCBrU0#MX#!g1prIC'WI,#MEerfkC]DBF!1'#M<\pfOkHAAd?q"#M3Jjemo!8A-URp
#1R)de7&X2@0Y.f#1?l`d9d+)?3\b^#1$QZcWg\#>6W;U"jL0RbZP+m=9ZiK"j0gKb#JVe<!C?@"ijLD
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.59 0 0 124.59 154.993 357.625 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVI#Dh;-oCh;-oCh;-oCh;-oC
h;-oCh;-lAgt^]?gt^]?gt^]?gt^]?gt^Z=gY:K;gY:K;gY:H9g=k97g=k97g=k65g"G'3g"G'3g"G$1
f\"j/f\"j.f@SX+f@SX+f@SX+f@SX+f@SX*f%/F'f%/F&e^`4"eC<!teC<!se'ldpe'ldodaHRkdF$@h
dF$@hd*U.dcd0q`cd0q`cHa_\cHa_\cHa_\c-=MXbfn;TbKJ)Pb0%lLaiVZHaiVZHaiVZHaN2HDa2c6@
~>
<~DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJa6-
D/F-,D/F-,D/F**Ci!p(Ci!p(Ci!p(Ci!m&CMR^$CMR["C2.KuC2.KuC2.KuC2.KuC2.HsBk_6oBP;'m
BP;'mBP;'lB4kjiB4kjiB4kjhAnGXdAS#FaARo=]@q0"Y@q0"Y@q0"Y@q&nU@:<SQ@:<SP?smAL?XI/I
?XI/I?=$rE?!U`A>[1N=>[1N=>?b<9>$>*5=]nm1=BJ[-=BJ[-='&I)<`W4#<)cgr<)cgr;c?Rl;,L1f
~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
208.464 363.166 mo
208.378 363.14 208.293 363.115 208.208 363.089 cv
209.542 360.801 211.725 357.194 214.833 350.491 cv
207.754 351.211 201.876 351.845 199.515 352.102 cv
199.534 352.024 199.551 351.959 199.565 351.907 cv
200.006 351.8 200.57 351.332 200.57 351.332 cv
216.026 349.201 li
208.464 363.166 li
199.054 351.535 mo
198.582 351.332 li
198.582 351.332 198.582 351.333 198.581 351.336 cv
198.99 349.556 200.196 345.419 203.13 341.878 cv
206.882 337.351 210.837 328.44 206.774 320.979 cv
206.886 321.047 210.757 323.465 209.004 333.404 cv
208.456 336.516 203.987 340.77 200.57 347.47 cv
199.371 349.822 199.013 350.998 199.054 351.535 cv
.196078 .137255 .0392157 rgb
f
206.394 364.582 mo
201.058 363.198 190.871 360.75 192.101 351.989 cv
192.849 346.653 198.454 347.26 204.013 338.391 cv
209.794 329.168 206.771 320.977 206.771 320.977 cv
206.771 320.977 206.772 320.978 206.774 320.979 cv
210.837 328.44 206.882 337.351 203.13 341.878 cv
200.196 345.419 198.99 349.556 198.581 351.336 cv
198.531 351.521 197.022 357.257 199.361 359.877 cv
201.297 362.045 203.89 363.548 206.394 364.582 cv
208.208 363.089 mo
205.401 362.246 202.56 361.175 200.555 358.683 cv
198.682 356.355 199.263 353.132 199.515 352.102 cv
201.876 351.845 207.754 351.211 214.833 350.491 cv
211.725 357.194 209.542 360.801 208.208 363.089 cv
level3{
gsave
clp
[124.59 0 0 124.59 154.993 357.625 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.59 0 0 124.59 154.993 357.625 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
206.402 364.584 mo
206.399 364.584 206.397 364.583 206.394 364.582 cv
203.89 363.548 201.297 362.045 199.361 359.877 cv
197.022 357.257 198.531 351.521 198.581 351.336 cv
198.582 351.333 198.582 351.332 198.582 351.332 cv
199.054 351.535 li
199.077 351.826 199.216 351.929 199.402 351.929 cv
199.454 351.929 199.508 351.921 199.565 351.907 cv
199.551 351.959 199.534 352.024 199.515 352.102 cv
199.263 353.132 198.682 356.355 200.555 358.683 cv
202.56 361.175 205.401 362.246 208.208 363.089 cv
208.293 363.115 208.378 363.14 208.464 363.166 cv
207.938 364.136 li
206.402 364.584 li
.196078 .137255 .0392157 rgb
f
258.996 350.164 mo
258.997 350.158 li
258.997 350.158 li
258.997 350.16 258.996 350.162 258.996 350.164 cv
.168627 .117647 .0313725 rgb
f
217.246 403.485 mo
206.395 403.485 195.769 402.32 186.786 400.243 cv
186.764 400.238 186.742 400.232 186.72 400.227 cv
186.743 400.233 186.764 400.237 186.786 400.243 cv
195.769 402.32 206.395 403.485 217.246 403.485 cv
234.198 403.485 251.7 400.642 264.356 393.989 cv
265.328 393.478 266.255 392.931 267.137 392.35 cv
266.255 392.931 265.328 393.479 264.356 393.989 cv
251.7 400.642 234.198 403.485 217.246 403.485 cv
186.69 400.22 mo
186.678 400.218 186.666 400.215 186.654 400.212 cv
186.665 400.215 186.679 400.218 186.69 400.22 cv
186.621 400.204 mo
186.611 400.202 186.599 400.199 186.589 400.197 cv
186.6 400.199 186.61 400.202 186.621 400.204 cv
186.555 400.189 mo
186.545 400.186 186.533 400.184 186.522 400.181 cv
186.534 400.184 186.544 400.186 186.555 400.189 cv
186.486 400.173 mo
186.477 400.17 186.467 400.168 186.458 400.166 cv
186.468 400.168 186.476 400.17 186.486 400.173 cv
186.421 400.157 mo
186.41 400.155 186.402 400.153 186.391 400.15 cv
186.401 400.153 186.411 400.155 186.421 400.157 cv
186.355 400.142 mo
186.346 400.14 186.336 400.137 186.326 400.135 cv
186.336 400.137 186.346 400.14 186.355 400.142 cv
186.292 400.127 mo
186.28 400.124 186.271 400.122 186.259 400.119 cv
186.27 400.122 186.281 400.124 186.292 400.127 cv
186.227 400.111 mo
186.215 400.109 186.206 400.106 186.194 400.103 cv
186.205 400.106 186.216 400.109 186.227 400.111 cv
186.162 400.096 mo
186.151 400.093 186.139 400.09 186.128 400.088 cv
186.139 400.09 186.151 400.093 186.162 400.096 cv
186.095 400.08 mo
186.085 400.077 186.074 400.075 186.064 400.072 cv
186.075 400.075 186.084 400.077 186.095 400.08 cv
186.03 400.064 mo
186.021 400.062 186.008 400.059 185.999 400.057 cv
186.008 400.059 186.02 400.062 186.03 400.064 cv
185.963 400.048 mo
185.953 400.045 185.944 400.043 185.933 400.041 cv
185.943 400.043 185.954 400.046 185.963 400.048 cv
185.9 400.033 mo
185.889 400.03 185.879 400.027 185.868 400.025 cv
185.879 400.028 185.889 400.03 185.9 400.033 cv
185.832 400.016 mo
185.823 400.014 185.816 400.012 185.806 400.01 cv
185.816 400.012 185.823 400.014 185.832 400.016 cv
185.767 400 mo
185.758 399.998 185.751 399.996 185.742 399.994 cv
185.75 399.996 185.759 399.998 185.767 400 cv
185.701 399.984 mo
185.693 399.982 185.687 399.981 185.679 399.979 cv
185.686 399.98 185.694 399.982 185.701 399.984 cv
185.637 399.969 mo
185.63 399.967 185.621 399.964 185.613 399.962 cv
185.621 399.965 185.629 399.966 185.637 399.969 cv
185.572 399.952 mo
185.564 399.95 185.559 399.949 185.551 399.947 cv
185.558 399.949 185.565 399.951 185.572 399.952 cv
185.508 399.936 mo
185.501 399.935 185.494 399.933 185.488 399.931 cv
185.495 399.933 185.501 399.935 185.508 399.936 cv
185.441 399.92 mo
185.437 399.919 185.433 399.918 185.429 399.917 cv
185.433 399.918 185.437 399.919 185.441 399.92 cv
185.378 399.904 mo
185.373 399.903 185.368 399.902 185.363 399.9 cv
185.368 399.902 185.373 399.903 185.378 399.904 cv
185.313 399.888 mo
185.311 399.887 185.307 399.886 185.304 399.886 cv
185.307 399.886 185.311 399.887 185.313 399.888 cv
185.25 399.872 mo
185.248 399.871 185.244 399.871 185.242 399.87 cv
185.244 399.871 185.247 399.871 185.25 399.872 cv
184.497 399.679 mo
184.497 399.679 li
184.497 399.679 li
184.25 399.614 mo
184.248 399.613 li
184.249 399.613 184.249 399.613 184.25 399.614 cv
267.151 392.341 mo
267.16 392.335 267.171 392.328 267.18 392.322 cv
267.17 392.328 267.161 392.334 267.151 392.341 cv
278.113 378.993 mo
282.556 367.147 277.062 353.701 259.816 350.679 cv
258.243 355.17 257.365 359.598 256.686 362.509 cv
256.823 362.532 256.969 362.542 257.122 362.542 cv
258.566 362.542 260.657 361.628 261.514 361.375 cv
261.514 361.375 li
258.954 363.031 256.346 363.107 255.886 363.107 cv
255.84 363.107 255.815 363.106 255.815 363.106 cv
258.996 350.164 li
258.996 350.162 258.997 350.16 258.998 350.158 cv
266.3 350.411 271.824 354.494 276.13 359.042 cv
280.435 363.59 280.249 371.345 280.343 375.652 cv
280.386 377.668 279.29 378.583 278.113 378.993 cv
f
217.246 403.485 mo
206.395 403.485 195.769 402.32 186.786 400.243 cv
186.764 400.237 186.743 400.233 186.72 400.227 cv
186.71 400.225 186.701 400.223 186.69 400.22 cv
186.679 400.218 186.665 400.215 186.654 400.212 cv
186.643 400.21 186.632 400.207 186.621 400.204 cv
186.61 400.202 186.6 400.199 186.589 400.197 cv
186.578 400.194 186.566 400.191 186.555 400.189 cv
186.544 400.186 186.534 400.184 186.522 400.181 cv
186.51 400.178 186.498 400.176 186.486 400.173 cv
186.476 400.17 186.468 400.168 186.458 400.166 cv
186.446 400.163 186.433 400.16 186.421 400.157 cv
186.411 400.155 186.401 400.153 186.391 400.15 cv
186.379 400.147 186.367 400.145 186.355 400.142 cv
186.346 400.14 186.336 400.137 186.326 400.135 cv
186.316 400.132 186.303 400.129 186.292 400.127 cv
186.281 400.124 186.27 400.122 186.259 400.119 cv
186.249 400.117 186.237 400.114 186.227 400.111 cv
186.216 400.109 186.205 400.106 186.194 400.103 cv
186.183 400.101 186.173 400.098 186.162 400.096 cv
186.151 400.093 186.139 400.09 186.128 400.088 cv
186.117 400.085 186.106 400.082 186.095 400.08 cv
186.084 400.077 186.075 400.075 186.064 400.072 cv
186.052 400.069 186.042 400.067 186.03 400.064 cv
186.02 400.062 186.008 400.059 185.999 400.057 cv
185.987 400.054 185.975 400.051 185.963 400.048 cv
185.954 400.046 185.943 400.043 185.933 400.041 cv
185.923 400.038 185.911 400.035 185.9 400.033 cv
185.889 400.03 185.879 400.028 185.868 400.025 cv
185.856 400.022 185.844 400.019 185.832 400.016 cv
185.823 400.014 185.816 400.012 185.806 400.01 cv
185.794 400.007 185.779 400.003 185.767 400 cv
185.759 399.998 185.75 399.996 185.742 399.994 cv
185.729 399.991 185.714 399.987 185.701 399.984 cv
185.694 399.982 185.686 399.98 185.679 399.979 cv
185.665 399.975 185.651 399.972 185.637 399.969 cv
185.629 399.966 185.621 399.965 185.613 399.962 cv
185.6 399.959 185.585 399.956 185.572 399.952 cv
185.565 399.951 185.558 399.949 185.551 399.947 cv
185.536 399.944 185.522 399.94 185.508 399.936 cv
185.501 399.935 185.495 399.933 185.488 399.931 cv
185.473 399.928 185.456 399.924 185.441 399.92 cv
185.437 399.919 185.433 399.918 185.429 399.917 cv
185.412 399.913 185.395 399.909 185.378 399.904 cv
185.373 399.903 185.368 399.902 185.363 399.9 cv
185.346 399.896 185.33 399.892 185.313 399.888 cv
185.311 399.887 185.307 399.886 185.304 399.886 cv
185.286 399.881 185.269 399.877 185.25 399.872 cv
185.247 399.871 185.244 399.871 185.242 399.87 cv
184.992 399.807 184.744 399.743 184.497 399.679 cv
184.497 399.679 li
184.414 399.657 184.332 399.636 184.25 399.614 cv
184.249 399.613 184.249 399.613 184.248 399.613 cv
163.944 394.222 155.958 383.239 157.433 372.151 cv
158.751 381.853 167.866 390.814 186.786 395.187 cv
195.77 397.264 206.394 398.43 217.246 398.429 cv
234.197 398.429 251.702 395.585 264.356 388.934 cv
269.109 386.435 276.912 380.464 276.13 372.282 cv
275.203 362.586 269.105 360.945 265.084 360.945 cv
263.027 360.945 261.514 361.375 261.514 361.375 cv
261.514 361.375 li
261.514 361.375 li
260.657 361.628 258.566 362.542 257.122 362.542 cv
256.969 362.542 256.823 362.532 256.686 362.509 cv
257.365 359.598 258.243 355.17 259.816 350.679 cv
277.062 353.701 282.556 367.147 278.113 378.993 cv
278.107 378.995 278.1 378.997 278.094 378.999 cv
276.207 384.038 272.527 388.788 267.18 392.322 cv
267.171 392.328 267.16 392.335 267.151 392.341 cv
267.146 392.344 267.142 392.347 267.137 392.35 cv
266.255 392.931 265.328 393.478 264.356 393.989 cv
251.7 400.642 234.198 403.485 217.246 403.485 cv
level3{
gsave
clp
[124.59 0 0 124.59 154.993 357.625 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~_j).XPo@Q*)T.gY_j).XPo@Q*)T.gY_iu(WPT%H()T.dX_iu(WPT%H()T.aW_il"UP8_<$)8_OS_NGeR
Or;)u)8VFQ_2oPMO;Yiq)8M:N^lB;JN>THj(r)%I^Pj#DM\s0d(qtkD]nmQ=M&3j](VPS>]S736Kbh:S
(:o,6\q:d/JebhI'tJi0\:54%IMB8>'XiB&[X/[rH5!]3'=;rrZZZteFV;!%&[HHiZ#LA[E"T9l&?fp^
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.59 0 0 124.59 154.993 357.625 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,
_SX1,_SX.*_83t(_83t(_83t(_83t(_83q&^qdb$^qdb$^qd_"^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ls
^:q=q^:q=p]tM+m]tM+m]tM+l]Y(ni]Y(ni]Y(ni]Y(nh]=Y\d]"5Ja]"5J`\[f8]\[f8\\@B&Y\@B&Y
\@B&Y\$riU[^NWQ[^NWQ[C*EM[C*EM[C*EM['[3IZa7!EZEgdAZ*CR=Z*CR=Z*CR=Yct@9YHP.5Y-+q1
~>
<~Pa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsP`q;pPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEM)l
P*1ukP*1ukP*1riOcbcgOcbcgOcbcgOcb`eOH>QcOH>NaO,o?_O,o?_O,o<]NfK*YNK&mUN/W^SN/W^S
N/W^RMi3LNMMd:KMMd:JM2@(FLkpkCLkpkBLPLY>L5(G:KnY56KS5#3KS+o/JqAT+JqAT*JUrB&J:N0"
It)rtIXZ`pI=6NlI!g<hH[C*dH?sm`H$O[\G^+FVG'8%PF`hhLFEDVHF)uDDEcQ/>E,]c8Df9Q4DJj<.
~>
<~)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&X;0)&X;0)&X8.(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4&*(Ddl((Ddl(
(Ddl((Ddl((Ddl((Ddl'()@Z$()@Z$()@Z$()@Z#'bqGu'bqGu'bqGu'bqGu'bqGu'bqGt'GM5q'GM5q
'GM5q',)#m',)#m',)#m&eYfi&eYfi&eYfi&eYfi&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa%hB0]
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
260.215 259.282 mo
257.5 262.652 253.737 264.708 254.487 270.793 cv
255.149 276.169 257.556 278.342 257.556 278.342 cv
257.556 278.342 256.094 271.546 256.75 268.363 cv
257.406 265.18 260.215 259.282 260.215 259.282 cv
cp
.219608 .172549 .0784314 rgb
f
216.558 283.041 mo
216.558 283.041 215.043 279.734 208.068 278.342 cv
208.068 278.342 211.733 280.265 213.124 281.938 cv
216.558 283.041 li
cp
f
212.983 239.107 mo
212.983 239.107 215.671 241.354 218.811 236.579 cv
218.811 236.579 218.424 241.435 214.949 241.348 cv
211.474 241.261 212.983 239.107 212.983 239.107 cv
cp
f
174.351 420.665 mo
169.029 414.634 li
169.38 414.716 169.703 414.765 170 414.784 cv
172.005 416.677 173.933 418.523 175.733 420.364 cv
175.184 420.394 174.73 420.498 174.351 420.665 cv
175.669 405.267 mo
173.568 403.333 171.214 401.001 168.792 398.293 cv
168.699 398.092 168.61 397.901 168.524 397.719 cv
169.231 398.131 169.965 398.533 170.726 398.923 cv
176.399 404.667 li
176.127 404.855 175.883 405.055 175.669 405.267 cv
.192157 .137255 .0588235 rgb
f
176.487 420.369 mo
176.339 420.36 176.197 420.356 176.061 420.356 cv
175.948 420.356 175.839 420.359 175.733 420.364 cv
173.933 418.523 172.005 416.677 170 414.784 cv
170.096 414.79 170.19 414.793 170.281 414.793 cv
175.773 414.793 171.206 403.522 168.792 398.293 cv
171.214 401.001 173.568 403.333 175.669 405.267 cv
173.723 407.196 174.245 410.118 179.341 413.515 cv
179.347 413.522 179.352 413.528 179.358 413.535 cv
178.695 413.405 178.094 413.341 177.555 413.341 cv
175.679 413.341 174.542 414.114 174.112 415.568 cv
173.683 417.022 173.54 418.629 176.487 420.369 cv
level3{
gsave
clp
[230.025 0 0 230.025 129.146 268.8 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~cE*/RXHCf0Oj:%jcE*/RXH:`.ONsngc)ZrNX,tT,ONjeec)QiLWfPE)O3O\bc)QfKWfG?(NQnG^c)H]I
WK#0%NQnD\bc$KEW/JltMp/)WbbpBCVMiWpMT_lSbGL->VMWKnLruQMb,'p:V2*3hLWZEIaeOU4UP6gb
Kup'CaeFI0U4gU^K?0a=aJ"7,Tn:=XK#aO8a.In&T7FqQJB"12`h%\"Spn\MI`@q-`ghIsS:&;FI)VS%
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4n
RsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,D
Hc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$`LD4nRsW,DHc;J$
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.678788 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[230.025 0 0 230.025 129.146 268.8 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~c-=MXc-=MXc-=MXc-=MXc-=MXc-=MWbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;SbKJ)PbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb0%lLb/qcIaiVZHaiVZHaiVZGaN2HDaN2HDaN2HDaN)?A
a2c6@a2c6@`l?$<`l?$<`l?$<`l5p9`Pog8`Pog8`Pog8`Pog8`Pog8`5KU4`5KU4`5KU4`5KU4`5KU4
`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4
~>
<~X/i;%X/i;%X/i;%X/i;%X/`2"WiE)!WiE)!WiE(uWMukrWMukrWMukrWMukrWMukrWMlboW2QYnW2QYn
Vl-GjVl-GjVP^5fVP^5fV5:#bV5:#bV5:#bV5:#bV50o_Unjf^Una][USFTYU8"BVU8"BUTqS0RTqS0R
TqS-PTV.sNTV.pLT:_aJSt;OFSt2FCSXl=BSXl=BS=H+>S=H(<S"#n:R[T\6R[T\6R[T\6R[T\6R[T\6
R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6
~>
<~OH>QcOH>QcOH>QcOH>NaO,o?_O,o?_O,o?_O,o?_O,o<]NfK-[NfK*YNK&pWNK&mUN/W^SN/W^SN/W^S
Mi3LOMi*CLMMd:KMMd:KMMd:JM2@(GM26tDLkphALPLY?LPLY>L5(G;KnY57KnY25KS5#3KS4u1K7ef.
JqAT+JqAT+JUrB'JUi9$It)rtIt)rtIt)rsIXZ]nI=6NlI=6KjI!^3eH[C'bH?sm`H?sm`H?sm`H?sm`
H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
174.6 420.948 mo
174.351 420.665 li
174.73 420.498 175.184 420.394 175.733 420.364 cv
175.839 420.359 175.948 420.356 176.061 420.356 cv
176.197 420.356 176.339 420.36 176.487 420.369 cv
173.54 418.629 173.683 417.022 174.112 415.568 cv
174.542 414.114 175.679 413.341 177.555 413.341 cv
178.094 413.341 178.695 413.405 179.358 413.535 cv
179.871 414.179 180.263 414.634 180.263 414.634 cv
180.263 414.634 179.709 414.489 178.966 414.489 cv
177.855 414.489 176.32 414.814 175.582 416.438 cv
174.35 419.147 177.99 420.401 177.99 420.401 cv
174.6 420.948 li
179.341 413.515 mo
174.245 410.118 173.723 407.196 175.669 405.267 cv
175.883 405.055 176.127 404.855 176.399 404.667 cv
177.99 406.279 li
177.99 406.279 177.681 406.768 177.4 407.443 cv
177.239 407.707 177.139 407.999 177.101 408.313 cv
176.941 408.919 176.88 409.565 177.084 410.104 cv
177.429 411.016 178.531 412.496 179.341 413.515 cv
.192157 .137255 .0588235 rgb
f
177.101 408.313 mo
177.139 407.999 177.239 407.707 177.4 407.443 cv
177.289 407.71 177.182 408.006 177.101 408.313 cv
.796078 .65098 .533333 rgb
f
170.726 398.923 mo
169.965 398.533 169.231 398.131 168.524 397.719 cv
167.937 396.47 167.531 395.686 167.531 395.686 cv
170.726 398.923 li
.192157 .137255 .0588235 rgb
f
197.503 728.213 mo
197.503 728.213 206.842 728.692 204.163 720.384 cv
204.163 720.384 206.254 724.105 206.102 728.319 cv
206.102 728.319 202.572 729.514 197.503 728.213 cv
cp
.219608 .172549 .0784314 rgb
f
251.007 758.266 mo
251.007 758.266 260.345 758.744 257.666 750.435 cv
257.666 750.435 259.759 754.157 259.606 758.371 cv
259.606 758.371 256.075 759.566 251.007 758.266 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Diana) ()
%%Title: (Thin.eps)
%%CreationDate: 8/13/2010 3:15 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bm\<"[jZPep[dkr9J[uJ(_%dV"9B\WJj:.dk%8QF-S[T(Yat3kpP8@pn!^7UZK6Z*^?>.AG9[a@b;HGJ.*:)D222p"UYaq)
%1&T@gRNL->rE9m?[6t1bI^sXh;=@M/4Op7!Un1rJo]d$qo]nfEYdn*O!K;G1_o%D=mU5Tp1d(,ba3A%B3#^\R2?3"OC/6o=n4BPO
%^>&)es/7gOS\spC-ejKljLp"$+-+W-P?M5c#T/#acEG:8$O4D]"hlcPlsC`T?U4YZdEWVW5,M-J(OEF>SP3G-0Is9he\d-RQod0d
%Y-j=o\gP2]ACR%>L4`:ffJM?>H.'CoH&"V7_-e7mf&4GLX*`X4kYHF\[A"E63E`QE&0&%?k6Mr(Y8AVWl13opGCF!%joX%N]$4je
%_S:_,=Aq?.M\dt8,N&d2=&T]Y*(U<aAcdXed390Xqq\UMIV7(TZ3EluNtp#A"WgPsSqWPL5UYj&RF]80A6/2I's",G,uHg"ie7(M
%oqG:Z'J.Z1^"<5C:@1ofF4;3:jg3?FYP2BhiCKqoW"nu#R%*U:<u:i'kk1T-&UJ%N.F[MFn>P)#0H)>-GED)BhWVGUf^Fbo\eAK9
%@K-C#FJkFLk-J\:B=j^!]-CsOkNC[;rpUB!GV]bM4c.UoQGff+<"pMgPm=soHA7k<Xnf\SW,)[YO`29rK15pV!)@r+lCIPOGK^]m
%Q\V?m;8KsbL?DpNNI'U^Uuk0J$[\L>\c]9d5PWZS>)_Nfor!-la8Y>Bftj?1"5G3&jp+.)>YbHt@F4:53ku6>"src;qk%'PcO%^Z
%#QK>.n1TglGFIO[B%'"4j9>=<T8"M<)M\0(Sl9k$(<>&YNq$BpA$\/7AoX@(B$`BR2JJ%c;YWc<dhJ:J.5o)Yn2E7@2R-DkM-ZTF
%r1r#a2L1=Tk'7qFpH6J#H-Vt*dCa!r&^SRk@TW/HLb+K<fF7M.^Te[EbNtNZ_bK*.CkJ4ohm@T[%do;Q_Vb+u2hf"d-q4s_NLRfB
%[!2EM_72.gQ#Xqs^h1)6r/GRa*+=Ro[!9SIj-!8n^UYl`Si=I.kLK,#[!4qfdtIa01Ya5S`hAc]]Q='G#`!n;1Yeb!1o#deiu[_L
%^;CC8+5h'?4G*&]2T%];D^Hg;$R;!>J9)W8TZ%jF18NqV1@DCb,L>;&GL%5$`UhN&Aff]gNLQ;bfEO9JGSE)-h0J2]1%#X'@l*7i
%g`tj546(6qK,]L3L<GQ%1&?,)k&eMdL1q(RdGgR*QmmuU(tpb=H$tWuSsb^2M`6;Dqr?dJ1G_6+cNE\"r(e*SK$'V.ZtBO3&39]!
%<\C2?q`o?M]nMsoA/0.#S8Ml1i'cj:E0HF^K%^F\"Z:6n#+a8W5`&XH=gFH`#Ni2'n'O@I'ijMA^EDHqMHBeT'Yc;-q&a^>+pJdc
%r(h*W?bGsE,iSJh@V8Kt?^C4P`@Lt(2#)Lhb5\,]X2UakQ2e8Hr4[F;J"HTdH6-dV^R;h6hRqlMggd"G.`tt%OsSA3J+=RcF+,_@
%1c'DGChHG7I"e2O?VOTCNk1QiBZa+?X+=9i#hLYQn)I3K:?l/-a=CR5s%rH8+#b";-e!6^=qij$93V^FZ?I*2#"A,i?.92Ck:@L-
%R*/BUK0DUF/mREt$e/b<./X<IB@i=b+q!UU=eoc=N8"b&Q+/GRniFsJ(3O6]3@N*&eT7)O:np&Z?AuBLc-*HV;bcDX``X&$%LZtn
%#[We&d.s^jcX(#M-de=+0^\dl)\*S@--jEr1I<jXj2u>27(@,X^=>3*\^$IM&RIc`'(f2h3o8P1o]68*<b']\M_j*!\n?a8*@*7;
%epr1N>I*u1i[oN%m,$o>)@*7(ke\d?S5L0R;@P=Nl"7)f\lH`]c2KM8>$h2eZ7>*\SsRu:V(c%P3K7Ca/1e9,>DnSVR!.bi("Hp9
%,,6_r(G_tB9V;R9^1k-<YR3IV%i:om031YL=2g3LK@VoP$QUJ2j6=&[Il0$Z0q^,9%_>e+^T6NJ]n^lh1]1>Dr*0CcNtXri,9JAi
%1s9gC*G#F\`ebF(]6F^B8E<79'6Du-c#.ul^cC\SR"^@o3a=iSJ#i[\]#7gEY?mkPl15HiW@D1i+:;P"ETZ5CS#L;bU1p_]VL-M\
%kHjA7.mQ37c#jEWd%$3!Run5^MKDO6LGoet%2KYoif`!^</HM`mo_h3]/>J"P+5f^ffa<J/YZH_SkO5m'];SlN?5b/5G9R-\?_:c
%H(I)q[>5p,GJW<B7?L(@4/2X3/[bsjl(LQpekpH_<`b`E0?$<t4#^54cG9\QSa];ekJ':9OZd^+0Xsn\Du&?C$KjAr(3T6!A3M4n
%]EQe?=V>CoY6f?mQd%&cdIE%un?j\H]7<&B%,rfF`MY:a=1,t]oJuUcrukZhBoXs/;N=D7D8DB<g'PUC>ZFqGS?pXMddtZ<?^MYW
%k*+]#d/rEAG*F3_,Z'm;jLJ,>#aS\9d((]r.$UT3EqtLhq6Hg:m'Yf6cqVu-hafpRe:UaF%fcqkb`?IN)B45?S[%Q^P]uB+J16BW
%8.Mr&>nLhA#g6*k)EoWBe\Ga]8I.']oZhiGs283h[!c<&SBZF^TVjoQ.b6o^ZLaQJRt?QQeK?>=qk._XbHjr@Z!_5^q8Ird?RnL;
%8u]#T8YNc.!>ZRD.Pnt`),n.=7Q`,E:E21gPB8=B"4`JZ=69m&AhX$Se#YRIP>1&NQn46*AqJPDEWF4&`\:X];7u!bH1J,@bK<_q
%S-L'/9-4b'5S+!SjA==h=WTBjj!nbKBHg*t>k(`^R2bPSKtP$W(>0EYJ#;hmM;q!UVje#PU2uie[P--@?L3)dr$jl]MiVA@/+MpN
%Rj_T==N4>CH*:@^T^gRl'ppfbAqqk>X$l\3).11/D.-W//sK]%3KRbIYi%U('_ijSmEW$V^H$X21BIJJb?C+>Wi9+23-*6_8t"+B
%^<?*cmpZU<&^(m4`<*(H=nZ@V1!LDtFp/tR?C,Y;<p$o+e1OO>3^:^]AjspQN-V%d*RJgfY8ZE(E*ZeX-GY[<&k>DKAT_G#&nq`r
%(rXj@<+D]9q`0=6apGR`9h(#b!o#FgQ<WIknLiTC<b#R(Z,AA$J_)aE?jTL`L*GuSW.gcY^,h0ZUsl3&C\_?bHVgpN'9[`)oOIfN
%gPU/1\o'6h9dA2'g:9OC8r?k_nu'i#d4I-5XWT$mM_)?kG/!?H6?c`_\O,;lTq#,he"#iIJ#9N<1R`Jjee_9BEh.2,c#Ph6_>04i
%CpPUh9oEjW@AQZ`.cht&JR)`F(lUhBl)eYfc%#\kPh.Hj8Tb#S-gX-<FGQBXh@hM=SHW=7('O5/L9X?N(GhhlUrAf@S"*F_'2<3b
%/nT0AblVbBP%ORZ1(F_'2NjMX2+jAY5rR`0,'9H*G0CdhVSJ^c[APqtG_pp,?9kA<(6?_@praduQEeZ"gfS12^PW(rDPS3g8N.#a
%LF!!a*[dB^@W[G/E'8e4d.@[M9FgP7<fI*2KYYJR&jFc\8uH9n?JMX96<=SW#YlNU)j#c"50^D>0k*R/@76P8$ApQDJ4;@5S4,kJ
%MJ<gkEg"HW@p4-nL%FE26<VD3&T)NV2k,U,eOXb=FU[P+>i"gYajB--I[eMnkQ9KoWeH_u\>]IT'n&Sg6VI+#G+(8d-E<"_/5@?u
%9'1Y'olR-iW?EH*m*9*%;[+HH)TS4i62G(-r6)1]7Hm-aYEF7nH9u>/-<`8ad9S\QQGm!21`lX@@TB;4)[5;Wl:nEQYn<_>oFl:T
%djU/)LY/]QW(ICP3QPjhK*27U\!iZna%j>o@5LGQT_fqBH\H%%B2ptCiUjlNSY&>F%9QHr';9j9GpmSNPm,8-q&'QE;&c%uD<>dT
%>6-:_'2D@,>:F`NjXK7DMH2Qs%(=LeWb.0kCGWGH?d.3p[9bl44W@,X`"@tUl4simD'E^Djb[]5Lm(S2RY/D_FYo#T`NO?HbY,<L
%PN@qNKZ]Cg8jAd?J6tU$OXD?Y`MJ-U.e'GR(,M7)-#&i*/V^l"'E=kRjKHWqMhBC<.VsZK`?'boVQg2(@^(L@ObE*G`VMBo97kN%
%C2?Ar;3jMs"4s<ei?]*KgM*fG%LV@&c)RrN8qlH1cf,.ujGKXoU@^5rG+$-LOhd\o_@AjkNLXQ'_3DA?%t_q1i%RR/>Q1>2"1Pr=
%Zc]<-a"`]Tns(f'4BFjp_;nhsU=$?8%*TEM11Vo@c*CE'VtoSkH*kmHHRu5*?6qSJSe]b?fk<Y[>J/6_>UCEr3.Wa(P?^(^=^\,:
%HJe</on"9kHnFBcnD6=NQM^p+=g"iHGMbWYXI9b/'H)3GZ2!=.WkZb9k-`&o\r(6*FBPS[R"Q^k>*EU&RXpt#?HtI0.4g8;.hrhn
%%fAPI./6;ZBg[7$,O\5d2Qk8"q-4(\7p0Ps2Xo//q9aG.94Lg+ln9ihWSBpnQ;oBjUt)24gmhMf2!qp$Hi4>_Mb;<1\WVR+HL<9Q
%#H\F(P\SoOr_KfGMReZ9ie=3gL<Y+?2^;.s9uJG&&7Z/3-no0,h#78KZ3"I'hE0&;I&n*.mf*NV(&\4>d,Lm00W(18dTVoYgt.&(
%ZSJ^$_kka;LXD7c]mT8.Dg5:dMbU&B.hn<&&7mJ%>ok/n8I+sGmS-e#r\T/OI+9n_U8nAG;e#PhD53SSqGK;BMh)]H/cVI6XK!J_
%.3_bi^5/F27q3hU,f!f@ITRflklFfo"6ZnS;o5,+&TcD4nu>O8nj3Ad*YQa(KG]P:2&<IBham5!A\&iK69h'%#DuYP_%]Whej?d5
%;0%.Uib!0a9tWL?L:]lROi$!4CBG587=+PQQ.82Ik/K0%^5Th(UbC_r.ECnQY/$3IikqtD3^:H'<=5f]'.`kKm*TEcX@3VYPRiQI
%SAJGQq(OJ0O!o\L5,E:E=k(YS-`X2kUV$ODpL'C>7V]#YV<g;\J]2F^VtYY+L$!D]3Uu#Wn0q)DK\j_Hf:3'+b_\?k[7Vlh_<[%U
%lRoi_oI=5"d<2d%]bIkpF/2&XXj_/[ci:*#\hni8ZO4GOM58.=K=IE^%j6@!ZoFUoS%j<^T#Ijp[`:@P<f^&*s%R')@%jlr="OGQ
%e?<hN\-g?1'Z*^1`*Y3\/g5'cZKu+32)gmB25YT.%`h4lVN%3K='"ok>P"*21t*4eUa(b%C9rMl7>9F9UI=k<=IB)e9R.e*nJ^O3
%hPoj*pSYn".NO>9Vem5kJOt,1;LH*$hk4c<&/>6@Hld??U@N2mQ$=l6c9hp'87f_enFpR[Q_Q%no@U]c.o'*#miNtMR)8r'3I)DO
%V2EoW;^RFUL<ba9>**5UXaEFDAR%0LbGL??c4,=@Z&Ib-RWe.Q1d-9VE(-WUJL\R#Gm@h"Y+*aO=;t`:gFNVF%`&)Zo4Wq`iq]3-
%(n1oq=[:5%@Mi9tjT4"JI+[,%NoP.\A7V?=PfS]qPn_jbf?NEa]S)?gds\99*4`5D3DbL6.kSIq\&5LQa21lV$sN"L]2hNJ1TRI.
%_krQ3c0*MCCDF%<Ap4b%cau\TQL;tDd+q@6+_dAZ,9K&p%@EDX22C@#'J8:[;H?NccA02n'L09<JcB?[3Ytf&]N=%3*lG-Kdh3^d
%e"o5E;WWi@T"eAZ5AOTgLs0ZL;qs=nhIp9\Pg82PDXX:o-$+KbT?^`,3NlD?//D:A/%M#Lb:YO*Xhn^8U_[#uW]u-c)8C&m/>eP1
%k/g9&k@oiU/sXoMMj>Tn]&:UDrOR9e==EGPUb+j%j[nUGaO!t*U[cS`.>tVpS@9W0=N63'pcNchF.RjS6^cMI,-*#`TXc^Ra+9QR
%@=<JBF$AJAYB.A!Bg/&2C[%A;7ai>?eoL<eZUqm$2et.&n5IV<cs8,M:k?1]r$Yg:bL-`t]*h$).5DY'-66WlGQs57ASoT9e$27k
%g]b%U2A_Nr8mPC@Cg(@AM_BlPkK$dS>"2a+2H[l<3SVVojbbppH"(j:]m[W!E/X.oGKK1WXKr4A9Y@clDa)WI&S\bU\5[l=DjCK`
%qt/[umDV=D#Wq5%)c"e#"e:X+`I+s&R:Q#EA$n:#<B4^FjnnO[9R)hZb]8&2T=#-1aR7ZFs62db%XmO1je^tQ"_E[WcQL^X)Lq8#
%/LR+1ZVV)lP0u[(B0"C4g8<Sr0I"^h1H.G,*-oXi.\rk+Mdbh`l_Z\N=P?/$qoji+S2[LEXd-0;e?BH'ZA?`2H.Jih(P7a7f3"!=
%=X;92kXm+(8l%U8jAKt6p,qD10A)h1TgN.G9Qu@e`Jr*dHj4ld68#>^gm!In8U?)+[$pSNbDDS\5cjRi-Gu(n%HR,C3nM6Oo&KR)
%V1gp#e8cXW,pLM:H>_4d&!;e!]Lro)0&<FsgGCG:ZZkKBJ_4<p?DTkN/_0G)b,TK9k:9L<bhROM<Y_:5J^-]'18>\!T,gsU*\1'r
%.LI3)R7<J7D<s'rbUR;Bf@kj%Hoe;*fc6UB,Alu(W;P`+(SbDgGTraqDs4O@mc<C*&jHbi!+2<,TgNaK:M7B5b;9,Kq=:80!?XKF
%%56"N#04VS^T;!:_h2iDJ(-K3QF5l\hn"T,p"Gi7MSJj;HBW6[dlUoD10!-!N4LnG'Y;atGWj'u<Vj29a2?;-0`XSqKAX<>iOLbK
%KldMh[C;^Sq'q$3k][6%;2mcDA+0,?LJKs]XCCf'[aMCNa_@m)mgbAtG#WoP2'N-()052lZ\)]$2a4PM\e+c5MQ<4g7t]t,?KUH\
%Hs58H%f:E[BcnK4Qlf&4cbF')gULu"q!d0&GdGlfpJ+2Ko@)Q)ebBlOgPP(b?&=IL$0tSIQ9V[=c1^pVb_(^8mL>2L$`Tj%F2P>*
%I"6T]n$I.r?u25m/W4VD0;(=2c+(<0kndW@$s_'QE7?o5J`=@A>C/LMFO%Hf[1`SkHl/ag8rl\b**rF&j/$+k0)ad(s7>DYJ\AqK
%V<!O/2iJTi("5SVKY.GjPV,(Oh4Uh5[CeD&\X1JBoRp>V6F[_7(`:5:+SaA<n=%.X;UEpTX6I+OC;Z>63@kP"LOk$bn%ll1mrXWo
%.9p$&J?'EliQ?/^Q[XKWn=L&_0SW5U$!_23Kh]'\@6;]N*4FnfE([*#`Ce%5W)R>QP";u[>NN@lI-s=s0)ZDO;&ngKM:*f1RSbSM
%7sU=$')X_>.9%;+0g<i3:?"+Ui^O=gf)9=jPc6B1Q_6a-d%LbD+G:=971:1F/J:^7%"9,a]*Z5V7#`rblna!>&hp%V"Fi7)"-7[M
%4VCDK(=@c56-JhO5j/e\:nr0tQ_4X!amjt:qdJF0,9_B/@08,T&(j]DoJ"d&>,69"$E.t/(SXD2Kor*"">_nj\/L)CQ5WGT`)<6_
%Fg[a?$!3TKI$`:cmsm+a2rMcH_H6g5@Ql.*#sU49/&34d%s_=l%M=oKgF6Mc'CKJ&[eVk@fE+6T"6g8DIDTt(p^IMPe"!%4Hm?W;
%l[X&<!<*!:5eQ-<'$Mkh"BQN2VZHR*)Scm*"Nps*(L#`#e,Th$5`q#hd007f#pH>D7$g_`K9Tg0,V.!P?hj@[,;.@#Y-q/]!r;K'
%G3NbpX(ebl>T$hH>R=]/[;udY9NOWKJh*W)`SRL#KaB-BIkA7#E&HRri5.Pa'=]l(nYKUHEB?LqC'-8d1.QHh@Yr:FY5#3RC;?+B
%;Rd@LF=W(rC&pu9_A7q-(_%2E*2g@>9=%'JBl>ga4=\L_au/3kKIS$B:Or0AK8Rlm5qm8ad:d'0V2_:E)kb+g;+#o'63H8#3ebod
%Q4;;U9k]i(BuZ3eN'RoP/BmTT;'+US#n+\XW>Rmp>q"'kMt8F"cbXsZFVo*>hRsf>cc%s(4CXf_"fef`,ckX3ojp+$&]PcAEKG[e
%3FY+>_0F.4*:_8jB7,I=hh5jb[Db%#^r<au\&ENZUcQJYnL=u64o2.EjH]k`eE'J3T",grR=?fDIg)<l0?,F#Pd/AU/MLCJFMZEi
%R@>s=':(<M@PM_=XU3S`gBQP!iL@?iKQG#Ai1."]'L9=CR!3PrfIuj.')W[U9[Nhg^g)q"Y[$YD_52h3Jgd:,f=j(2jHt79csS?M
%2>RE6'`Oe*R]$:>YVZO(L;!XWV&k*A:E7nn9NAuKc1-tt8&T=lq=9RUfGNZ6^u0N"J7cr^K.)I=6D_AG7eLmDicicm1r@XZMCA"F
%h-dn:X+BTpXQsd8Ke$oFMP.cg"Y0fbhOICCi&.\X//SW+8M4LoW=*WL7;M,/.1E;i&sKrEY"D/bPMDB<].%9gcoDO(]-q3C-Fr^B
%)*<h?\1I!J[)lH]#:1Sg`&R-9)So7^&GR_2e6Jj^c"a*aN[p,@N/kGgN(qm1C>YJP`0q__7TP+p!n<7@&S!UA1hi?Pa@cPM0gZW_
%JM+4NoLXr,"+TM[$,Qt9.fgPV<NQ"W%*&G0Kh:Q>#B2[H(;`:Xi2+.L(5j/k#m7,^^=e?4.4se&NUum5-(#o,_2P<,`Zd&r@_Nd1
%=E,c[$'@U]*;<?Y!"ja<HYqg\KQ8N!!(-8V=f@3++EaE/"pp>Y_EjZE$cPcD(dUi']mhhn/<2(b,t_+sba2fC2c;&uB+lFroLuM.
%E,6I6&r[-/"k$ROf9.%LCfl6>/F'<2/_O,@d99R$ZDh)c>[#'(T!G08CoMZ<+Mu]^YsP";Q.9>XNJFj]en.j4?4qBrA[>OEpUrs,
%kC[4IAjJE\*UBOJ6"R;(5pZP#6,e<l^EP>4`O_Xk"?V5/c]'@\+A*ltJfB&M@"G:Er2M_HDM(oN\k+)!9h;1t&el8C!9]6_Rc'eU
%n8G?1?WF-0J5<5!GiahsB8\s+$V&W@MCk6BQT0g\n8cWo(MUD'g@?F:#O\E_HaJcLT<dp78SKV$<>QJ&^.;sgg+(Noc*I2/54bqq
%\MRT+l,r?=.7$RhZtrpMbs"3?(1Z4:-;+D<QSGI3=%R!^;.pYS/kH\>/EBbR(e%>G%8q?r.:SO48PV:F.7o%dC?j5#2DKo".8!38
%`RJ#cC:4oV'E&4^(>:Su?YpsjKH#0`VF=eMV;ssCb%_YN:=O,18f/9ul:%:t![;4n$(s9M<-3+6apA(W;A0IC_$@k#Q31;!F('n)
%8IA20,WqVEir#jfi3EXl(pTT'aJMiB79ZBU/JLdI,-_dfKn6i^d1B%Vcu.4cSkA]5*OB'1kcmkYPgV`r?J5djfmh8p<Cg'.f8OK!
%m23'C:k[N]*6bnt2V84(+LR4pOlVmP!1MKb0-#M*YA_9oE!4t7&g]T?X4I9,X0pl#nc^6rmF@T81?V9#/$YG,/%-6^9q2A6(K-CM
%M>rMVb=72+PELK*V8UGmdRC])dadF2JeO+>>LO=n<j-J(+DM50!=3g7/jc#,J78Wm00]eL?Nq_B!5GMCmORiH.cR1PA2nRe^o:?K
%;'e8r&1[c#T0sta#"FEq]1TFH,rctL[sj-NQ3KQ#oqre)Iqm'>m2?/>g,/s,P\VNZ#]6V]/W(Z5$KIC/WGGDAU4BWS1o2YOGd,&;
%oc:3CJ_Gp&Ch":nW!!5R!tf=#YdKrA#[[R:X[""=H:1rj`95sa5aZuX[1J!R!hn5="B$t`D).Pn-8?%2,R%"40;UY*16aHT1M=T#
%_S_u]n-i8;k0V>$^t[GuB1K2T&9dE\*pDN?@%[g0,6NlM<+1U`6bi\(K)tAmU*gVI>EStEnbES#E/QS2XG>r327kPdb3-0KmQ.Ya
%]TBHVS6;\Y?7pe2bNAL:Pi'[JlX5o5\b$9lq.>=Yq-Fc3PX@uM7A\4uq1Bl9^L0j@*\lhY-.;dTnQ7@@1lW6H214>eZuR_BGrSLQ
%@9c+G%j`3-Or")9BRa)#WtQ<LPIC7Y[)N'@/cL6e[YUri(=?sH,*5uJ7&brpdKb/K-b&>hPNo&%3i2>j<1_>OOZeP!S-Q?4JZS@P
%^-KT-!:e#M#cGsuOEf'Hp=g8c2(4td-tnGc(_%l)Bp52J80AQY6(?<+ki'kR6U=9eU6>#48nX:=Y>4J;pf%PgQiuJB`o'H%-`9$!
%K?C!:_9!k1HBgMgIqCeT"s@%c\il1[EN,m;'[Ve)9A&CT=A`@T2k62VErXXVX,'1*;<,foG"_\-r)kqHlqRKGG@Bdk:Bn^$#5#'A
%#A!.1X*`X4kYFCEf5<eT.BD9V2LE-Do7#:LnnQJY[]OWZj:Au]Fg0%>lk64"<0tTX:8:&V]fr/rb'oGu7"de?`JFm67,Wj5bA\:8
%SZ[0dik*8#f/J6Y;,am#[?$rmg<h5A%-F:@5onbC;oa)8rDL6:>JiZ2%tH_H$d6rnU=8R+-=*.kX1^L.c00uLSZtrMKNoUY#s0EB
%kJp11](YY/oH-juSOm`Zpk4M3<q]mVlLG1HIX,r.[rDPL?>JEhC/<gO4o@FQLN;>-_1.2O;ZdcP]P%urZZu:+cJ+&4Qagmu/DT;>
%1:lrELO=suL\cK/*!VmecC7*8h&7>@i/IeYlbJkA#(XR@DgR71_Tq@@!PEcjqeUN,Sb)C-g=h&%q?(E8fpPN']n;57GJ&rf#*#t:
%W:RcHR"&cbVqp<GYCACo%]!*$]=e<FZ6/,1ae*g<Qp+ig4rAeF]e^Sa"c]hn1CR%$D1D$H05P.r?p(>13X*r,<\lACrP'CRKAiK8
%$C:P+_scEVQ-a'1hYL;in=V^"Jd)%PC_Cu)Y<.#!]3/R;DY&@@.K2M/r5D30%2HS%6,1$pA?8,^s5T(-o1Iuen#NJmD#<[/GhhK@
%`HX.#q\Q3Gs%ceicFAL%,hc(V_ppd?ItugpK)TWQq<oWPj5WB'"oS=KJL2K5H\_WLe9HSc:E^RTh1!oAoG;?@[+dZ&>tG6;dsm)N
%Ng-Q!=tSRf+2+Gkkt9]oQN)iuq=/4Lqp0!iq_-XQVH8hEDX#K4[e/atA4o1^`c/G$56o(4p_^X!j2pmiO)>J6@=,>Or\a*Hl,gWt
%`TXP\^fsb;*W?2/\UVRZcFT4b&NEto^gba,]pL<?OtBgnkFC,YrSuAp;=EMGp8U1qp+I\HAd?J%I(s:B1%^D/Hp#8VdN*F"[25V+
%\3$ZM6(_d8-/2",kFH[-2"$o?oI1#(Kn!pe),1TqS^C=%E7c7mXBl=!co*Yc2`lZL46+$2J!mk,-jl`[A(CM26%L=p?*GK)KA-&#
%K]g728aV0QVm*+:&+J&9FCEZO"jpqeO_;$A0&gShHs1mI),Ii=hLEqU*R#G&(8r@D^[RmSZ5J:k9i"5ab=eO1>0?GpaZ40Sa^P<a
%oZ=$f(nZ#&3tM@EOaBS`4H&X(96&=lPVhg6QSpJCiKm)&lo4dS>MJWGB2WLeod65^?GAGpZQQ%P3m5IRS\`E:kG2=/0g)q0T<TqU
%C_1pL3BEVkO0d.,qt.bFkJPD`]2$+RoX?aB5!&/_"f;D*gDq#\RdJV1Moj>/DoNQ$ZF+jlAJ)G^h]$ZQj2l!0h:dd4Xj7IAL;.q&
%kEqMT=)`Z>p_1HNfh=]>;UZ40H1Udui<8@gd-5`YLWc!5f^G@5_(gWA%hSXAW*iZ5k,Z'ppDg=-4kn(3qL(`Z2r2jug;Bi[kW!-3
%pU^;nSI'Dq*?KD#W4p:$T\@K@f!*coBW"jFl[HR/YpE.^56L%.*0-&j7ht?ih0q8P9RYd]REr1Pk0?^7[G^X$.M?#c&"[/.\?Y`#
%hMo.<GIJWKf:Qt>[RUkS:@F\]/jIW7hcdY>luhURX7>LGmJ+hpmFMm;5?/6^m/D1gl1X?#;!76(Bl_I"lAFba>MiU3\%JcrG<a\t
%DK">l+)d44"Lhg.mCTus8#Fhs8`SmZbMDP;e_P$7mbL*Dea#.hB'.f1H4L\S<dsFrrpXmTqY$n^5&B)ucA&skChI[,\oBsKEfmi\
%e[LNVr>TZ`Rb"b<pn2Z7X#`DpDdInj/_b3phoq_CD0P0lp=B!9e+T>PrG86Ole4eAp@.8_VBL?K?b\_<BH;SKWuM$)rjt84NRLJj
%<.FC1)#8KkFm/;nf\Upnj"1cEM]OfAT6q]s?e9e7G)g_u2`?k<=0oTb.g'+r]?\e-9Tsp0gGj!k7PEA^Vs;I]XmB59IA??!f%5oK
%k)Iu<Z[6]`rgUr0:@B5FG/!!D]oDaUmO:s!Hac(_e@YSM:@If7UIP:;K,^;TNSc@oh7`,=E!,F\G9<H30MQrhc)9rFE-UDZj5/7s
%\+SEmpNg$#*Zp0jk]"T"pjU8m6QWZWO5Bs"oSp#&)gY"uHHk1b+L;%>hV.+oDPOCBSFIZWmp=admVH0SgV/qB=KH<*I#P8af?N:;
%NNG-0+7B=;=$G$ApBT;X9D@J9=-+sTj1"R%!M\k.j84/8.1H(8B\2i??$Y/8h:]B2?f(Q3_J*KWi%p?Z9jen.i7Au<D`7%H>OpCs
%g\):uhn7M=b+f./K,rn.GM^@<qs@TRlbU\+)<gJ$Xh.*\Sp_r#g(hMMcPr"7#$Nl*gEh4sQJet&H\JT5MI=in7dCGU]@@od;"9>9
%gL7PJqR4d4^A[+_]@4<1[1OLnI[Rp[p?m(s]\.PW3o93$f`(F*%R.k3U#,6f@>')cO$9qcp`",il<X*GDgd!0V:k_]hnFGbG3pPn
%*oHSjL\JPurT\&u9UP2F3.$fOhnAh2Dlk*E@I+h9ZNqZ]9[;rW2]fWrr890_O-@l_h>PI!g&C$R`U)`aOR$;k&EDU1Z5IBf,j9Le
%X+K^L8(ULfY?MN@?N/]&8:7Z7FXqA2O5.CUd28aQVs.2NY"N"e$tc+:VrJ0%'CNk/e`5J@fpB`Cn]fY)q;&7Mg@:AQk&'L8#hH2.
%hVsfb0bRj+9"XoQp%.k=C&I7CHXjOV(]4V\n:!pNB!6W9N4KJHF`nc`G@eI5EnVT#]8*RsAbnd`G+&mo*qeET#64@)Hh5fS>"+bL
%HhRhp"k!=uUCC$XpX</Qp\jidohn_dh8B!`(kee-Gelc?FI%>%0CncPrO[>*q@IJuJ+scEVT%+o?\c[I]+sR"]_VI7l(5Kdkfk]J
%[<;B4q9?pgajF7d5Bo!.p.sROKe]08fE':P[t`4\r;*;iR(YOE]`HqQ?#RY#];MAaf3?9S*lYA?i@1hGp7$8eN(/R?Sp]6&oBh`g
%mnhnkD&oS(\(U(_LZ<Eele/?;O8\-DIrgOT>@A=eR\IXfZ+&9Y^38AV[iYB]NiN-Kl=S(*$eQ4bFo1%37=4FYO10i)RJIU8H>TBP
%@"I.IR0LdbNOq:4A'j+g=/(G!dJoU$I=9n8:Xe[rp=?!N*L_A("8ZF"HGfc%nKlr%fN6%ie/3<H5gHf.LNfmWa]q-FrI4(KoB&=(
%-_2dEj2o>Yn&a9d)h&eb]I3\U`d^.#IkQMjhVAE=BA8.9-Oo?le$r+6ddtT78^m>0#(NbQ0=[3f2`'qg4PG&jm2iol^V7+cM)7D_
%C$Yo+PrfOOF4Qd$_ca_@nbDuY9:!J2_U[$^YR$\PG=k6^ZITtA%$T(P?Si48T>m%"o^o5s>CrDg3`ZB%5!Eqs5Ft!pJl]&s^orfe
%MbTXimIRbPjOQs/$&m:C2kHF75%b%>ELJYjWp0De`0d8e0hlW_TtqNr<SDr8DbsHN#e)>@1=Hg3i7,)kR(&Pba?k73^W_f1C$@5?
%#17#mHS"*7&!qLrI22Z8M_FpWVQ%EKDjQPo0]MF;)cu$a(rY+8i35K#oZ!Sg9PDHp0?92UhXJS_V-.e#T(UofQCEJ:A^W@1E(FjW
%aJ]^hO\G+rEo=5Qc1OeEK+38Fh+O/jYl9YAkAZldIaO#6nYGuIR$#H6)ePn.9]PL*nT4:<D$`/<HbJrRfdFG#mD!p%aL?)0pE:#+
%%UAmnAco9/-bK3+Vsj*8QZ(I&XEiWS4,NJ-2Qq]se,$fWp<)]bB(,>XmIoN5+4o2S3BfnhGqhP=EIEt/[hS7<ZrW33BW8+tc1M>.
%'>E+%s/du$V0L4rZMiq*>1u*PGkId'jN3I;];<N6DY@hlHG7)eH$"S^D1DH,02Jo?TuER8?N84"k1=u?rTW]Vf0;TpqW>G=G\d>&
%,JFn/3h`D-3&kVpDmg`&/f-NEO"\o_2r^D,Q99Ac44gfhp_<nh[%@kifkm2ri15I;S&<uV?i?;L_U*i8?U">UGCl.r+r>9mratZ*
%6KDV26-H3r\2b&#9+gaXmmRACo]r8B6AO1E^5Lb<mW!kAg]CKp;#fna%uRhj`:`?'errRN"(kY"BY<."GdHr2g8>7fb2206^90_d
%)laJDhiFDZ><C_aVna8V*f)p%5rNt`ht2-eZfeNa!8E-n1632$R29ou9(0gj9e-GZ)u]Qm,K0kRn1iH?4IBDhpNc)`pM4&rZ^4m`
%r]#SGDG;1Ds*Bd()gBi=o!l;Q@[O8:U21l_Hi<=@k^N*?5CE.^H*I8DE[p&7rlm(Rlap>`*!e`U^X>7CmID9"nWtn`"[:IF_faH1
%NUKY%+Ad?'XK8)M_78HFj*Pb6Eq+_BH10&+=l2SE4YB1OE?j@Us&QV(kkt%MRof1Shu^kR\<`^4b[7i^hYro+_qi@mQS5dS"RGO&
%T#jk`hI"H4521F:+h@F,mC,p=4M:+HmhZ3^]\W1*s5E`uG;M1b&^RH0s66Lk)U"QEp1SRE>2=K#p&WEWf6_K2.gCMuml51P3.jF[
%D`hd5Mh^EPH9JuIU;P$t=aKhaVYsn0rM]HGNn2pn[R\(rI[&_p^SO2<]nHIMf$OKAeZ1h4Z@;T`pDRpf*IJoE^O<Y4rQaZI?4X,G
%qMj.`dFC%PN^oS@a.o,2L!sZ0k&U>_2mnfR)Jq>d%cZh9R7,3N/<f/!aAX],@qR)9`Xj^3O.3h&0;eBZk!sA?g-;$)6`uL[E5m<O
%)2u*<j3W;.I+"o>GPpOm1XlKlmpAbo-h%!YVWGK=c]21!BB_"cJnr+f3<-d02'6+4j0UhZI)!r5"4"?g]bfMhI_FSQ<'>PI]@!gs
%nmTnY!Vmon%F=k:Fn2O1jn#m@Yl'^.gHQUKf;o9?[G2!J350\JOHJt(%6A2Fh#>YNHT%\75>m:j-@GOj*@Um[l1nZ=So[iD't1aA
%cd*-9JB)[HFjKT(qf'IM/Q6HL92L=\'D;rIrp\)(eq;T+><?K2O,`AJ]6a2Ak)5Giec#b:ZMrgjLS&\K]72YX*>g[gpMRH`5478q
%&*+H_!F<CH=1.s:s8(9Zr6(Akmp!h_Z:7'hHE6^`D1.CKSjEgHHZ=)n4)d[cleUU%H`%Ub.PRp,`pJbTnZcluOC%*W)P=Lr>b+RT
%e@S!.PKWK,2ohSq&ae1/9:t%Mm-T1J\0YWeP=p2WVr*Mqn+:M1Hj[UEXXnD(Irr#3F/='-##'+4e*uC9Md!g)WLk3fI6Q3BDYNc!
%GKRPRH$45;f=j-?i.IJWr+n%/5<V,ugq84*^0,#'_b4(N?sB4oZ?u0cIeU)BXSM"p'SAsD@s%Mk\C<`L!N!8T3,YK"jjaCLDt.]L
%Wh38;Tal\N,`_?T59=[LqR]V`+:B>W?b+rQhYT?Mp3s[n!Iq05g#2kTY_nR!2TU6kLPP'We)T23pA@\_anFQ1\a,R)g:#S@8"8`H
%C?Y%YIl_o,3_mHHDL^kFY"t`JrAM6l&&,jBpY#'.q+X7\R:WH97;mZ+Q4M/bYiDt1rHiNd`?jdCXM(7joG.1c?WtK'a(V8OCWLfD
%?-/ShVj"d(IIc[NeU.9jQJVV4<B&$;IbT=X^XL<6=qbO/TU2k[\p`aYpLH?G++9h^B#QUo@/VG"$[CpTl)K)As0"Q-f#.L9Z]4kY
%i?P]g5<dkNDlFJ'engC%`W$QqjP0@p2oke3cJ\HW`ttlSX/!r,43tWhG<C*E[3,F;&"6D-Z#]^d$a:>m3!4M0,/K9<mF1LdY6Nfg
%j^R;uo8D1pcf9$2ej80L>/,CN2/qXR+-!VipS1lgH2/tXZgT!WJ\(0NJ^RKK^k^[Zh)aC75s4?OT/iXU1]I%>iO/USPO6b_c]crM
%E)a%!gD'#<aZ:2mhW<#B#@ScF-GDd,6"BbW?*F1k]5KhcLq]Li*o=Z_"hu:A3HKQBk/5i3HT,<d3I6Sak\mCOhR0q!T.uG;fI12s
%>:'\qY,s)!kjDYoQ6(LuT)4KYU@AKG\$tdt?ZCeJGXq8Td;9,NhY>ZWq#5'ZcD&Q202Z<U("5u0>3b95fWR,0^ZN.\p0fe.WAj//
%(&5A&l+NuTd,Fq]CmZ6Hc'\d?s!4!k`Ypg:hT;=d)^3kbrTfeO'%mol$Z5#4JBchq'+j@*608=]ns@-q?bQ0lqbbksIWYS,1qkh8
%7k\IlHMDs$:ZY+,EbsNXr8Fo5+>?0T)L];IPp-YdLrNPbco3USFhG;lH+Z#?HZaBE:EQ]cNILp*lVsDCE11:Z&)%9Fed^6GQQ]l<
%+R=6_=OXd3`?$[Z2;Fb0DE\#>A/qQ:(O"IXHUH7eD]ersItC5SngJE(Y9$Db+?pp\g8/cbmd]!'lO_m%M[L?#_CKj<qR^#\K&\Zq
%*0%RKgDeIWC]Fr0D_>dKs!c%LPH-B[?E]e9VQmJBh;7G[l`Pk(4keb?!CU)id<sM?^QO0$\3KtS(5``)-gp9Vg<90`(r8>Hh7I]?
%971$o.f[r3*J;4fqqLu'8NTQdN[Iq"hos[nDn]r^YKt44]6CEM_6..I]2RVeECT@BC$5eWh6Q=YaHD2I'?<G$qYfoho*Cl%Tm-8+
%U-"fE`5A(HgJ/8`@j]L;/B88ch#h;;0@.+'JD'ZLp5bNGED2KL@033WVnbZ<")q/HSn<>Y[Xg=a2[?0nLe$3T(VbF@P0Nj,kUOSN
%9Et3)cu#`M7n<*=f:UnFqEa^MoCV(jY8Dli]"Rblr7lVhAF!<$GFn5WITkU=hVQ!Dkr!^]qW3GJh"l!r9)leQ0Z1rofrKSo[\T'J
%n$^:&ms]+:GoQn[?YQ$3Bif?]i5Gr7s5ejHG\$88o3U`.MLXHnFn&Zh^Am5*)oAD?5OtrS:mf\r.]]G*H4lc,QC-^Ooo4=QqUZK'
%7Y$bOC?iL-i>0#ik>sld()bL]7n8@3GCn,b(QJEk^]3fZLN`inc(n4ts1$1WcNb9^f2!3\G_4r["](V?>Pj;6i=aq@gJ=4]a1""b
%!qfp(AV5W!Z.3ol+[63EA/1YV)l7Q3J7&3L!c[r6)Q:04(WE;hBlC?Vf6Y1s?i#3JgFd=Altn2rM4";=(2VR42pT(<BBN#6Q13>6
%Z*iK#ft2[BFmK!i7[Di`_==]&E&T&Mek_`iI7#,srS$1>2%HtU:EEs#p#J8F+t0SXjf`&B\f^Bah@@;/LjQc4m98@ALV<EEGGhW1
%pM@RIB`Br=rVY\7;)Z&^DfZ00f-bctmDF03C-5d/n*.[6b7+g2Vpj9O_&%?bhZ0gnqOtUu4um>U\)F4%!klph:9siLph'Ha8a!oQ
%LnN?BqV(M`'A?<$hF"h6\F]Z*lVm9N'o1W35SX3M%6Bt;7ej97\p^s=g?CQR::UC3nFF%=q:_#:IB2:a&%@9'$;)3.f]n86`i)c3
%@)!]sC9f\h#BV:6*Dr]g,Z?n&P^];s3qSHTq3a>3cI[!DZGD1:0Cl;^T)o^ahcc'o++(s.c/;qmhq`SWkZ*#nh<P0q9fEmG&K":8
%`a]Mm`9@6'_[O;jH2dTaPtrp$>)L`])ssOB.7i@9/Wch-EVo8),8f_=p%,6Klh8B"l,d.gUg\,$0W/:XSF)pi:2lKulb5M<km+W:
%_h6\7F$+%nY-mJTp.Audb[JoR`L6VXhhDC/_dOXJrD&nhSo-te-p.D,bd$Q'L7OOrW&$D92W4@Wn,/j9)15du]Y%,9p[2_M`JogW
%>ba;d4'oL#e'_Ok?$l>^TDJW0`c&>d3N!pHpB^P%=I_(Io`fNTF#`SjHnIX4*n7KdKh'GE';a3gM+:.,Eg62rkpWNX@[5[<l.Xm1
%po%r&HrSWZg!.dd_aEW,qtR,aoQf_%%b.spln.!jko_q2]SgE@nLNC6AifBC1NWA21sW?+'=3[jb5pM6dK*enA)(sEP]?R8E)tgK
%G?\Lnb=&p6&<7!ZqGI9/Ggp"A=P.;7EA0:%*EKO-+4pB4Hi4+7#>G]l5js<(TZs-Vd[B`V?aLqhFZ:@7kj\e6)YJLmYg-bpY>YnN
%V]ASNmP47SAp?LdclLFdKA5`WkOk5fhGoR)K_L)K6]9q!iG_qXnKJB<Mkc3\,]TjETQCjjbg<!c!?Du/_hC^H>'1#OHOmoDApdhZ
%!h::&eK$hZHX5O0fA:Z]5bPq7*S#UCgO&hq`Gb(Mhh*r$JcX.e_rG(\N"K%8!kPqsF7'<S*`5ls/6KhC$!paBcO;t.o]o"0()[*f
%TrQ/Pk0hNu`e(Y^7u3f:@.dNi+"\Lua\oLIQD!hH]ls[X*-B!dA@7_eTjdsLNTsrV\FmqR$Q!aQ9p`6MHO1Ljj:E:10g%W@G8IEL
%g7;!JX7Rg#]&VYhTMohh;5N`$+EnGN*0XR;9Y7N;B7/'qS95Sr(2V0R7ahR;Wqg(QKXqqhQ3lEkZY6o%e9X(3X;rp6edb2?p#-/c
%@;"7#T]ImVbL>G6^C80,Bh#g9Bs\4nil&(DIcn@m\n].?(Td*'jQq6,42@=k(5ih`A9i4Z\Y(O9C=8RcPck<h-.cX2&8?5fh#"YF
%/f(#G*k82mg5VU-L+R162l@[<7cT3NO"CB.h'8#Zjgq29]$M6D1j7Eg$I)5t,+dQgX>B]:Sm(psXc&IJd+DY"$I)3oYB7?J)nd)4
%>Jn>_^0N#+lkQ+QNe`7@&l3u/)(Lg>&f(KaX#l_iT?&%RE`tpgRY`$KWhq-o.5>qR=GJoGlco%E7+m^W^WZd0Mg_GVaI\P_2rjF[
%aiQd+q[a:ar`lBaMjD9&WV%Jc0b;iNWG@3I`$\[/-G*GnYr+-s5%>$a.F:p^[=^\ZXV&)<UH'qAp+/:uoB^[(h9E:_h6K)/`@&*g
%]7$%.!1*E!BEQH*e/Z@]3a';q5U0car9Do<RuIq?rN7/XBu<BJN*DkI&-#nQVpspL0OBQ5BJeuHM]9Rs>)k=$I;rC7dU5^bd)]tU
%E`seG%Hf!K32]RnnU'krmE_dFgLS];`9$VXodJ7#HC/7Urn>D`IfG!np2F"..re4i:<"$^B]WTm%L9nhe'[XnXN2IcI_sZ0)PSu:
%rjc7-X1APG!5=41D`f(7?>qHNMgmJJpFOKg>"u>UkN'\HY_?mMq-uD\^0?tF-X0O;]%UX&(9P3*hGKIf$X1^$H@I+k2nP/^)19`O
%15CC[dSdXZ/4d7&Ti-%fr-\n:=1g7N?8/W,_"nC6H@s2^Egbp;\g-e4GE.4E^#NF]h-IPJLSN.e$X!)b=QPfX7=nnWQP[:4Gs#/;
%lK(ITH%s5rH-=t@WG0Vp,;N)i#G&tSkKiR0Yr,c1PD1/\;CC"bnT3dE\&s2_,g$I<#)Aj"VaYS/rh''mM1n?c9@(TD42j^J'#i<<
%CUL(2/6[7_ZN&+dBe50@TVoYu-9PF=lO0#TjOdCeL%_Pg&QD3u<d-[jEJe@"[]Z8(P7BLV,-`ZGoi#%3Q-Fqtml3'"SD8X/^-CnR
%+emi)Y4,=H<4S2]X*W;Z_-'gD#ZG3k9X&25`#H<O[gkBIe("0C'&VU#<03?Rh1IZ"mN3sX&VlE>)J&YiQDuCR%P!snUq;,&EHX&"
%o_S:G0DhZ?W,%r$[g%t%9qo'78/j``HsHR/Zob4G423#@FTs_q#M5rInHr.jeN.4<0KU0oFDES$IB$5Zp3KC7_s]>S.h2F>n=k(9
%c<:[A8JcXeB#/'JTI6;eT[k'$^RF2?hQ"E1G(9U$Tf*eJ5_n0!Ns_SO>/.uRrl!tqFjA;6WN<JH(Peoui13/lnuK`;4L<6:8AB[T
%&!)VPou=Ct_0>goJbjbLb)l46e2q"iHdisQ7(R$gNGfS0dlR'#n0+9iIHT9^/+b$*D%u4nr/UEgZ3Q<V3_p8jZsQqYq0@0m"e[E=
%N_d>BT%LY75Vk,79O8mENE'2WNM1(JF0-5B]d8E%[^e?]%$!BDeMO^^RDPTB(?Ydc5;d193_Qo&0k#nJVC9'6fB:4iS&Mtl3Tm;q
%orO>Z0fAU^Lne[:7hbR[nmMUofL_LU9H_""q7ZY>FB9!s9/^nsA$&R%4<N_&LHOAaGmJVkddu%&j(%9,32XE#i>R/>"$R%YP4MZa
%j95'uHhd/++FYoDknO0H(LlmCNpRlmqIPX)f@5+`G<hi_CoQ^q\?C*[&@urK0@6.$(#Ba?%Nhehlhl@lrB]=,o'R%[*@NFf*D$tB
%ocR:$NLi=[jo@)@(ZJ@oGO__fq15SH0^?/04V@`5#Q1DDoQ=rILn0Fl/mP;-p]s6hZ(L4T)S_<Hk1BFfG(/6TnV]gQ'Si]skpQ,2
%<(Up_$56DM_D&)L:+lL>?u;$unA[DpQdjJD%;J2oePe]4WPG\bM%480f]4ciXO3Dnrak7;.TWCp\kXG$X,?Ed=@c\hG(9br6Y^)4
%RI-A/*W*mpd2@Gr,bgBe^EDF%mi)""XCRdZr&$7Y8.PV+P(d=YN"^i4\@/hPHh[6^0,O9\jop3.98)1n7pl01"nZqA8K<!Ih4:hE
%dKmT60^r$:-8&#"r;mY\(N.W%[tIUVf7EKY*)t`eJK/;.e9*DK8Vt(kkR"$oUT!T,YdDIZlA5aEL/Ce!Z1\RH+a3Ks$]3>+_>*ej
%?9"1t"OV?V8i=k\p`]</;*BLA!#F17Q))c!_7B^G![M&IPti<TO5HXq7,6/krOV^>\;!?O2o=;I&2kGBK&@G0!CYJUd#5GE$nK:s
%pb6jM`O%7(3s\aNV(&N0dI:#olalYPFA2!l7,oXK;,kFrVl?j+&;NhBW!VGp-VWit&$$r)KWrE\'/7@C5R\mi5HL=sOU_rG0i1NB
%!^[pf\dHo,X#SNi;A@/#5na)J7=mq,cpHbOUrm'p_$P6IoFdQ'\;qbU;>:l=gbF@l?:[<rq[/e.4sGQ2J^O\KJ5h-qLb.m0"$ZuE
%UF&P525#MJfHL?j!$i7%3YmP7"cE0\^i#%VX;,+U!<IX>*?h#1%hRh7\U]$WThW9mGnEnIUJ=*Gm*Q.?Bi-npnUiMN*<d8\DF$'$
%"F-G=,k6D,\54=YWjG#L#hi=5+n8SQ,LaU+2,#'4>8V.q9TgY%6W>6X:%:lh'EaI$$)LtN6da0jm4mfSJj`/>1+bgXS-k'_BcQV=
%BbI9GM2>qSV(.K7nY8'<R--W)M6G>UAk;89%,jW(p`g)=7h?LQ(6tneRK],l&]KXa!s*X[icjW&J-7Y^MR>-B^]VQ4a"%Z08l7V%
%q,1Oa%V&Y,8i/nEO&mBJ&W[CH8n.WCTZ.6cBLkB?W0iAZGWoV:,p^l/Ao/+%C("G=Wi/pd&8T6-XaWOBnQEY\MhHb4W`VEGY!P\;
%-_VpsVJ./k[AQ\O?om^%qb-J&=a=u6Ub9T!_ubbY:3\fA1n+c)cT;m`eZ?#dK:nf(RPa9s6jO&H1PCMmVZfK<N:<rd()b&(UB_@:
%0aesuR5uh87\FB=C^$mYl&\I=/56]'CV[9UTgW;\-LuKpYt7MYSjP24Sg$_l#IrrIR6`m6OE=%/&k33e+k6;[<(@Ae<LOO'^S9G(
%`:'lV?k<n7IJi["KPZN")^qYHD%)Sc\q(q*.g8iS9$\"_22VI#'#[Sm<$6j='\j]+l=/Mq!kmi1Uo;HJCF^Bt@LTgZT>]0/KP6Ii
%*J#GE*Ds.FGs4Mj*"e9q-3[>K5\:I;J<R5QcnHU4"j@oV8Ere='E\3ZoE.7T;'?"f;lG6JP+o>cj.9uu-I>B!V\fIdD0Z?#^6F!F
%XVE^'VEm`eZc<Z@j1kZ[##c0s3/t_k$q^N(:G]]$WAYo&9*BbL,DZ\)Bp+.C&I9-t>^/ZHe=u:A-a@+iUI1TVhh!JXLb<?f`c.Z6
%WR*?=6A.=X&i)*_884K!&BIT^%#_-E%&epoNY#)1#RSj*5mUXll0'pc!LO(#GtE\jKF*MIXTO=9Y"_DaC'[5XK+Jeuo[gd03sMD)
%9-mA-3oX4Z1GD[Bfu`r?89eZBiB;Gl#V\H!0sbKD]*nerbs8+5@=91=fHOlZok==!FnB\7P%33g4et@&k%f.#6]G(9Qs73O@b4X2
%%[bTb-"*\1%ph9+'2a]"ZP<N!b-a[:e&i&4K)nn0e/6jM`rp4,W?Z)B1_q537Eo:R>(@m6L^8jih\M#i'M=!+.N_NV6:Ypi62qLH
%r?QohJXDrEl&,`[GF0Z.%)&iph0Dm5#RSl,6AW),%Cfr2$4*#^l&W[4#XT<L!3IS7JD,s'r/OtKW"$"r@5_u`![W".@X[JR0_M<3
%Ogj9N8<HX@e&\Wo@CZV6P4I>[dmTIU_C?Q>E_:ka!gY5+,D`J;UnN(19dcYX;fj)a2^4(A`2%uOk!!X8'bt^ZI-c\68!"3_=s<1j
%7\W@\7.NPR&rX\^k^,ol+^&8:<.JZ,6a=1\1#>_hTgiITNo\bNJhP9bO_@]@^<!=P/DK@o*E!$;$.#O`$kBA(6e5`=!TPJ8`t9.$
%f;E)H&Al'!a<M-3P,:?OS>;J.dQmD;#s#s1;'%YhUWA/ap^Oup-&)R1'b`<:^;gMW);/$a+RV(411?LTJWV*G*;_HVi]r/cZ!/C`
%6[n_7D)3cU`pm14Jt!)OPotNj'Wa3E#!;BHo>cU!!')0-";,t]=H+Mm0fF+VEbLLqJq4W$:8&,q`^Ep#)eT>*?H=$j[MXom?a*EZ
%EF=X`ie#)$'oF5B1-u&.1(^V(A+>E95_KtaG>E%JO,bGM3)$VE*#[iU'qu9X[0uL*L&A229VU116O;-K23LrX9#=p87M4<)AQAe[
%@mW6[s2+BVWT41i;Mc_Ii%C';nP6qb+T]E2#I-Js"<L4b80UX`R9c\.KVf!&;>^W5!u/d9i!^S['e*%2-m]kVS+S'C4lgnA`f[l+
%*C2OOX4n5Lk`BWbWtZXu^4]hnA0#-0Cf5L`Bc+-q,*.g.(d8es'_<Ns#X]s+(%X_uaRc75V[A5^6U8'[d=]ku:_VH[E9.(.U>Q5u
%bWZcq>0?F:&@aA=lO,Et@j^\&6bkQiBAV&HbVl@)?t+gUL/oY*6=Z#AMO*'h,]-$I.AJA%7<lVX2AB.W>/u?LFH$HuEXF#8c,f%C
%c:B&sXS?8pL_7]T'31jjiBs@LI@2`rO!%k\62HG4&ESi^?`,Ha&c'u`nJ/MVVDXa7g^G)8Os>sCJQe0q_tU5Fcq"Ap:a-3"n-392
%r#d]o@,f6Z#"Y8I&V:iVQAcaa;$2u,,S(t>ik9jde,8(s=\D0B+s<9kSH'%.<D&JR'K&@A85-:G_Us$rIV`7#^ePYYYrH;caEdq2
%^1FZ*_-e5lI2"JAJZHn-.e#Ql:Xg(**UW8]Uc-*BGs[<'o55t,!e<8=;;i%PJ4sO-"M4(e#f:Hl5Wm-s+cp_ukdZ^Q7hB#M?5/_L
%,f@'c!$c@#2`#L>L3AdOW`80cG)P_WQmfts+@8ES1a$3F"U2h@5"Wr"[$`UI1#jUcA*_M89=;fm.F2MT->>r",#/6ck.EE$h/F9g
%P-9/83:p>:`@(clrKp)Ir@hjKQmb<lB!drm)he?Ma%R`5*c[@&Ji&QFdo#usMZ>b,#Y@A-!B'a>!(g>Y5tnZ\#<J.[Bf:2S3JrNK
%ghR%CiFGK2N%)FAS)Xu@mMCO*&'bXr6B"m,;f4XZhF=t0,eXYK<1HL&1c5Vm7$ol=7pm`R)ge1_M'TqH0I]L'j0RHe+p'2TKL#2-
%&7Q[5&8MdZ#pdBp)$pcL%5_ucL3</,B'BtZqc.^g'q)":3d@,$mS_r\ief;u#'VM`Z[huSZLhQ,#*m(@'=B-Ts!S%p#io6CgWU1\
%15(jJ;]Sl&6rV>Y3E:ZMI-YqiY2cGlKeS?X6lg5i1eb!['l_<^3b$*]SY*^<bYY#ZBa,-7&qEA9_Pdi9Si&ej.?4GN#_YbtM,oQB
%A$g1]qF)"sH<NW^!(sdK^k*JD<eA=u<Z71>Q["8+mM:?jPS-GnLmBab9XZ>\,6/:sYm<`Y8eT<]-CV`$KL)Q[*Aps]fSmgV6<_=k
%YpR3kSR;c<D9,CE)DWd-r_\!WjY^U"dB9aa,p)>$WQcR/F6j)j:VoX*>r82h9b5E#A_e,AZ'O`F9PtB@1f*H].n']+>4$0XRO^'K
%549(m)*_\g8i:r8b,!emQpurX*DV&uD9=4IqkAldcCTSc"\tRYE+6,Y53I-4.b"HbN<1,rL*)6/C-<_N$<!GYbYj[[N'g/iF:rTf
%aBYFBb.]FD3"_.1.eU\VPL+;A'BHJB-p+7*"PO%@Aus<O&DiB#0m%$gAmhpgN!YblXAGTPRu7*5?r]&FoolsP#\\!nB@/q4\b;7R
%T?4\GOP(FiK>I@9/!GLh)?pJ*!]-QL(P9acfcrdr[+(=n9J]LuM$XdtigYOjdh.kDNd.s:]h3^p<+7sW'g$qbq9e@\Nq?i9!l-M.
%$s)Y7Q%GOp1uOLlr9+m'!aHP^U8apt!Q(ZmJ:pl38\N"?`-><M3r11_:!j>cg@s:)Y_SQQDF'WE:)?;*!<J\o76`V:!(W5$1pKKJ
%,gB3#[>Z,`"$p)]&qp0Ze'XLa3".N5P@0XDM^,7NKHXN(9F@hsUR3?+!(R;bX2Yf)5sbls&BJ:%,Y:(Np]=i8FoY"l3A='MQN.`7
%\H(Zk3\Y_m&.j^((e9rt6:`YbNARBoa(df$Yckhr-q-8&JIp(_B5n9TUQ38G+AG=ee2/C?4%W0G8_cu'a>JGs?XWF=q'?aD2<BOh
%<"F*bP/q7,@$AKfe2-o>FJ0@[:U]$j-[qj5f>)?XV"IZiTF4s.jE._>S&m2a,-$S!8Mh6'@%I.a'68^>'M4I3j>&38TcbilJ]Iiq
%JG9p8k<l(QRY]k?]TRjNB-tVJ,GG>aieD,A]MlkdLnp=^Bo4BC3bi-i'NLeA$2*DE"TmA^1;RWB(e3+H!sD&!b9ViS7VWWG<$t<@
%,?Y"<dB>kBYMF2;90dN:&RoK"m,0)+e4-NlMa12^@0[SlVDc:$DAj?-FWB19nO/$:X:Ct[Rt>Q)r[h8:RPNt!`ZkMOnR'taokQ/"
%aTM3n(c`6@<<IV"7$%IL/DlZmU!*h7F5k?T5fE2Nkl?:`.cQWs^*"[uih>Aa-9DT#0i>Y!A*IqK^Sgu7]_C+9qK50p"@GL)W*3+l
%$BsfViY*IVT2"elZ!t?loLag9cjrZA&t*ic^pO;;V"g)95MqiZ6pebD/%D0]d+R_UR?$td#6:$o*b%omPEdj[3eXa;XgpJ9*@Z>#
%^ejjVb\+*mO%s(0$6atV9AtC'/QqI.CoK;hd2jf6naFh9&tK/'Mo!+%;(9O&1"aBCEANd[+e(p7<[-ZN'U+qeeKT0k+@[eV17]PZ
%;)d&aGW`N:r<0AoQm<FIlSaUE#S`XST2i:38/b&:mQu<e6s61Ge4HnF`Bm/^N4ARO\KZYBNaJ"ghDYk;$toH+'^8L>oq_@6blX(\
%K(19o>(f4;72QkC8j4R(P2O`A8.lP7D#m1jW,Tm2^_g+p:7UW>fjXE3-1j]Qiu'^%Z)+56N`q#9P[9t\Eg0QMq<"-UP?@mYUb*3>
%\q."6ASgTN-93bW+\n`IBga._F.W/u8eY=UT_+!I.7iCtq1Jl;aG`r362%dhe&pX^LMBVY#_ujLl9,C7EJ^RrU&8j96IR#OFi;*1
%\W`23Kcl0J8Q#b./0*(eMQ6fe%[:cr8Ebs5;4-lQPV\KX$:1V#C^RjN1HSP:d6U2k:'%rN<#SIs9G-.K(g8D11Q3ZG3H='U"GuA&
%Uf6tW+J74O9o:R3,.g6T?aQr0dh8ajrI>n!K^fg4L.oL@>"POn6hH$T1&+(?A+L*`J8:oJJEY3$KH1=T$Q-8q,ZL5YGK+Zh!eJ(f
%cQQ+n.>[P53$UI=#a$O]@i(UqL2t.a$A[PP-p#NiE<9Jl+$m-O$#%N^MR!PO=<hU5&>-C@*")0]9X6pilUi0P-_ac1a^[b15aX:_
%3r#S";U+JolKH>-;q-7&(iP(@;\qg_LB*@_&49VOdgm#4.Zk?m#Z7,h,)6TaLZTS,S3nP=-Yc!I&0V(G(nlTqL/A(^O#&U6-c,#F
%)eOiOAg'RB'9Yj/#\2#V\Y[;;EGKHk2Mp^`:?Dg5KIIama2/-llcN1sEZl,d*(i^/,hLWKn>WH$6qOQ5"]AM+=(M`sBnFnJ+C#OJ
%*f?agR`7edR80J#KZt5ua>6FCbH-;Yn0!f'<LZm0Qq#(Q9dT!)8AKurAC#ipaVCYl)4#(PM)h/F6\t(U@Da90"/C@aB*O1E$4-\P
%n'tU&eCL$E#:7M4#</R'&Af/`c0;JNh]!U,?1rrRQ/R?XWMr"R/tgYoWKQit=PYc%rY0GDP(JN',&AfR)ik5Y(pp/s0F^:KGm>IY
%jUat>Xu)8G5=4!E:Q4!7MfX?H3B0qo_t2Vki!u"jIH8\@RUZMADNX"=:QC(?pgg/H>6uR?,=)QK%B>Y$h@'oD+=&i+:gt&:5]Vn9
%\!]toK"gDo-s::R_CDN/FJ9<X9;7>B4/,H[MAgFCO7]`Wa!R1p+[Zf[r[3upQHY&?A2hS[MP>8Scq0!jaj,u3+QB2Jl,`*D9WRH7
%ba:&]RH`KJR4q6G)Mm$'cC)2eUb!OlLnR]>6TJaq%YcBh=g_54Z.u:6@j=GF*H4A:C>,&M:Prnb;N5<8R$a)oG[aCF"Atu.I0i9:
%+8ZaC#E4`V@W+dK]7u)9@S)kSg.n$&$l[*X-0L&ZB>trA]1h-mRqT1-J>aSI#nnb=W$!dl*@:8WJ]A#Cgh]+S3H*q9Zfg'oKT06I
%UE&B;R[&dT":<6Vl6,3jS`e1(W'V%><@t2#J3s@C,$B@n!C<@u.$YF$_@t*VQRt`/+X#bq9&]Ig;"F*R!E"*S>6dI=<^7??@5di,
%<'V!CLL[.^U@9Qn(K7+2!ZR8sfVL0S6?uK15mU!EVJJO0G2J3E"p1WQj#"(Z1]TPdj7WjS;F(X4MUVp@UABY^bW_9mSGJ"-:RYNA
%;u])gbGD1f.'c]j(=:Pq&-sEra&cf6&/*'0@!6kC[J%e/>t"u?6E-8\I^S*V;uJ+19_H:(9(dhVO4e^mEAKVtU@s/B<$t-!"1KXl
%DCKuV?MKV0;>EIZi[\7.5\)@>!AHO38/mE>0Qdn8Kiei!:u-cV`KU\MOs<VRVD_lj*sgqtKIM9[K[6Aa@0.UB4Eg!+#a?9[S7^K>
%&hG:_Pnr+-Fsc9NEH-#Ul5kX-3HYiH6/N[*Vn*+"@UICiOdD'UbU8pO\d&;uZrKut5jc?7)%7'p%:lZ<J,g[Tc>q&D#ipAFd4@+u
%2HYcEh,*BlpRc]AY`/osLWYiE&AgG.Vs]+$3FX7V%tnmo^skLY,.D8#FUqXlqr1NJ5_qBm;YNE^kIZVW#Js"QD46@Ubk5NrHQY_'
%Oroju7i=dRJ0:FDJ.iJZ:*CF-%g'akS:V(i"Q@S$'L#,#PMmWlB[Rr(p`PAGVr0!R6O9<LEs`uljC>;ip`Kk*l_O#IL.L9UJ2U>t
%$BOZW9N1a86]A<lJX"k;6dQ>s6_sQU!g;`^CQL"JPs5PkSp=34?rVAkW#=V2#L?<I+Ss`ccr0icTK+_pap]GMXZhi=LQGW[W?3R=
%&=8cR25pF=&?Zmir<$3Go:8L/@5hdj!?renb<hJL>fpZj."<@9.4#oY[3(&*FkAAj_j`6InqSG+<;o/An[K@MjU[NX`#LCp?kc&Y
%PVK-7JIjhD^`l$AYGCGqar`l0\`M,$57lhDC`8R'&0bboMXguR6V6b[*>'DEOQm';KK"eR#6A==[+*Mtb@qg@"-F0&>Q$fhCsMj]
%^PreGe=.XBJjaY)f2OuW5Y>'",aS'^GsVXB\M's)#ScYKeIR7N`%TXOJhS\heIQVobRGgdog8nf3PZg2&"8``.oQD7oj43c8)`Gf
%M*SF.8eq"0ZqMo]GbhWr&5GMQoa_2FJQjHEPK#Pp8c]&<VT*K<*se'PPgho/+urAsJ09Nk`Y9.!7CVq]lu.l`gsIMb&;5:M][!L,
%'K4]F5fij.EX#e(\]C#OM\6<,(Le"NdL'oWN$R(L71aK*9L6o;5nKuR/RdsspP/MkdSD+]?2-TOV[,USF702G5nG79CajrI7$VO1
%#kRgd3iRZA`72KBb9MfrKhEkG.([r/J5cRnLlrAi=YGAO;TP1;#eOQ&;ed\9;%+FO,:!g*[;^phF4\"eItF&/RTKV7!9:R;Je1b8
%raLS@OO.ZMO'Et9i`hJd!i61^/A^BJEM[d#X&B1qD0$,\bkT?MLbe>!pl=rd3/"d$7A8HE%7nF_4B4\;E2]^e+S,g"<ZA&j.),^]
%c3dqoK`"@oRdq%E!&Fj%W!Yj(`C`Cq+=)*l\=fgQ=Re4:&<^FrD5dk/;BAG5g#TCd/rZW=9N;X'+s$ti;?^L:ig$jcW.#p^L3%OW
%:X#C$;?nX:$=Yt[dY9Rm#QI[,RF,kOKb+EoKE31k,^Xha5`]=fCEUDcgep:$":8K^-8re`.WQ/jMZdHl*4D\_&TDL=LjGqYM*+<0
%3K'gSC/[h7q5gk/j5Or;F$gM;'QZYojN7i1Hugnn_>GPA$ou^hEN(+&(tNQ2N9B"/+D%mp/3PDArRiqs)">daV.P9+)$gVTa_A5Z
%0Vm1Ao?0MsEr/5'UM#TIRrCL*6RZte;<&<G<0.qfBQ">KF"-X[*4\Opb_V]!'3%8&'I2]T<eP`j:8&Bq3L)DMg/#[40SbsAF@O6R
%/%Im0g^Nmf;ALUjA%)TG)SQ1u`lGBV7*7Fji1g#2%V2e3OTCOg%h\nHQ^4u0'JuNS%d]b_`>p!*e=:'6"D3aa7m7''EZ`[]\)7L=
%Dj/Nl22C=uOF\,+WZ+F8<0@RjRgQR.D\s2QA\)Fm+`cIsUcoC-BaQd:MG2,f,I#EZZ"bo00%B8:l"f$I3Pi?uJdCH1bt1*/VGWqL
%gg`_a+%`"k\H/',Jk1@?$+<3<:++1In-B>:.[&5FTp@LhW/Y8m;Jk!=7sJ`;/LP=2gYk;+#grPu!099@ku[r-E@jI)YdP,()Nt^^
%!Enhq83#GO`&TH3"0g,tI*LK'[$sIj3B>(,;3&`W9o+B?:>'-kQ?5&pb;dI!`>6JULkbGa_mjZoLiL>bgt>RFfgh]Rm\M'/7:_[^
%JrNH;E]XIL`0W$Vdu5C0;1b0>'&8Mih">0HnboGU2%su!3V&>hbCmHqDsu)$_\mJD*uq0)L+oW$?B\W5m\e8r'#;GKY8UU51>sDo
%6KCsc_W=2M.&nk]A5!i/Cns0=!?j1g/iEC4M`aFucc%uk;$i$O#,9Vg7;*0kj$?+2VBm@Nl,jR[G*X8Mp_,9A.Z7jDMjOm7gYNJY
%g=os`XsJne4B%s_$2q6pBRlc@VjckLpIQ!a]4&R?@\1qWPVMct"q4ojD%9S`@MkBHR8Q[HP8H_Z@KIe?p``@ug[Sg%E*EF`d1YQI
%Ldei-Kb(bX%!&;*/sAC:EJ[OjEM@[e^6f<"XG#"o#tPVjPQE%))_#t>3Or=.Ak-;N&t5$M`PY'a4%U]4[%u9Hln;oW`eg@GWWLU#
%2M^?Eiq^e06?K/3ij]g7bVPf;^/'l]+%%bXc@W%%B3]hr5qFh6M/%2J6[R2(W]"pfVjjhSTXcA1$R?#Jj9?pQWrPC[ZkPG`&MTM)
%P+?*97.M0-cR0%*&:>foCu$L"%>/j7CS$X6h4*aDmDbA2+CpMW(@@5=\f$TK_iC!]-OLgZeglh2_]X&j7:qI81KLHRV+)\R[2G0q
%b$d?'WLoP^QF*0U$#N\;\?-ZTEd;tcP9<.mhA??,3J9e@j&\VTSs^F'Wr/d%M/CXnK7A"j5RqDrF9>E7BfV93EB"[O&Rlr1M\r9b
%##B,u6\lHE,B8fE>au2/.74gd5pOq"'K2$*Tk2PI77EWh>&IotUP8&W_Xtj*R3Ik&boo3I<Wta858'<i<8cOP7.j#snt:!hD)DfS
%ja*fpVs9ZU@<]9;:Y+X9im?A4Gj4jRSiI-k.\$JF%><=SVC$'j30%3XmSO<;-4'.mFZH;9kB90r)@\^k,9\!JZSG<E6&;=u'W6A9
%D<7`Tp8hMdR.F^_CkiSZUl2!)/OLpDA3(VOj]NHF7m-%X4p9hs:g!)UM]'E/NhWhkJEb-3&d]ejQ,mH;@QLk?h<`Cr'Qk'7P#cu"
%Wn=U*+6b2-9$IZK#?P)<\0;9W@kZ8)Yae7q-qsD<>iDe1`]Zp6,D.@dj9Z3aB./@Ll^O\^_leo[)KhB=^&XS;Si:-GRMHF&Yc.j9
%oB#BmNOPH'JDF,qlk<:RWDj5OU*SG:-8m;H!q,Ve^:BGb_N8&8B6to@"c@X<nkg9XLbT;5#'bgB+c4Q0SIg?mBFj]Q#re(C9<fQJ
%J<\!&nlLN%npQJl=?2NnF6FDR>3)8)hdfinE3FZ<O,qn%Q7Ij&)*`BVo<(:#E%6oWUZ]Ei\%k+#16t?4o$AN_O=R6QD<-.N*'[Dr
%*8:*rIbGjC2[QKnegIBtfa@LPU_CEi-/Y*-(50K%nm"2&Jg'DaflHVY3E!dh#nR71q+tFfkK<#pPO;&$)PIB_C>2V4/5NlF#hOsq
%Obj@*V]81M?.)Li0c6;f`H&Be&aq6)E4*c4F<:Pd#16rIGWUI"I)$N84rTF_:r,h7c;]q3--S'$b8DFUaPg&FI\m@1L.SMk\?XgD
%j75?2,aKAm>bF3c_N];110%r4(i(GcNUuKQ"NJ.iI5RR]<VE\1El\h9p@dfO*`I^,,4MD7X%M&D%Xpg6^/0W?]#nJ11oL.(s/2e1
%$TI3LnX3McM+eB&'T5t)luO_'?\BgfS^,2gK^epQR.Q50^X*sCk9ID@i>C9J?sSS6$<%8P<<aH"P6]$&AqqLce0jL:JTMTs*V"2:
%SK4/VV$c<Ra-)cu++[jifb9<BDaapP;Ce;;62LB=FuK&PPW:uR:F.,EHVtUhPU3"TG]AGaZ3Xok>r,]\N*+\)7nLnIdj5u0.H\[7
%&;2hX;B[uVK>[*/A:l,uHo,iu8?PoImJ6iP\Tk-Nb(NZn,mPQ.Lulof\+Z`,8VPf$q[(8T^U/YU#VieB7/0H0=jM65Z].k('H"e$
%$jV*epol]+5)M<Tp`*9'J#GC@`TBW4-P_UOe2=.n$&P>Oq-g7iVhO%?!6Q"qYpM,7O)3M&SD;!%pR2=0F(RBe!LfJqVPbX86+Il(
%3A*Vadg"Tfeu,n"MHi+:dJ/r!Bokq!#G5%2f87'qnkFC9c:fX64>Gk"cYY)-GpI%A9sQhNlnL5PcBLrG%>=hpo0i)dE'_S<"XKoY
%hEraMTJ\IsW&V&JK$IDj@,[eki^7n:@du&YLf8MAJTU=I)-G&+.2<o+WUM14//-14,83(=MbJ#+K4$W8`C@tH`M!q*F-HF\.^RP9
%k#&[DA0DP-l)$2"\ae:<7i*CB\TVSVIt[Icbo%rkAg2=-j]iIk:IT^eB:nsR(OT&Z3BCseM\V:P22B-p^?<k7jbc_`dS5'YGgDrg
%h.C[pOZ^_lh^>B`!GnL<aIGo$F(+:XTH'@/P:M1qb+t>`>1#-:jbO\;9d<"D64;A+&7WpkR>6YCOADSnO90QXR$1dFImN$'c.IS[
%43C]B.n<bac%Dh^OGb=SBL'e-LLLE3o128CFA]<)*ZlpDPnRCKk13,%DN@&s/Xu3@5QF"X!R3Pe<1B2Hbd!3_2%'kQ(1\;=D#G)3
%14gq*[T"t=ai)9U@VHm[`4V1&M3#qq76tp_]</gls4K23`+m"K&e$!9E_mt;*5T%D;BhB8cKJ)UM>C(ac]ahrEG0X)RO[))<,&UJ
%C%r6;6j5m>c9'a=3<iqcdnsZD5HrD6*g]Cm4"-)G?j8?X9"j+pk"6oR7usmkM?c>&gH7@>R^1R%[obUmRb0EWnqtD@j0QEZNuP>L
%cJ#9ck86i+'mJA$nc2PjMG%d6S+rf6<"c5'">6L^2U=0+DALWb#:fL<i^1PU5%h>r<W'W!]j8rBa*"5&DF"6\4Y^=HU"o=g<SbcZ
%a@q0dQk+FRK]pM(]VZDGI&2BF1W+^7^=M#M]'ngU8BRY<A2#naM4<>qdp67e5M'5ra";\hr!jKFqsq#;jB]^\_h.5=ZI:M+1bD9i
%k5<Q=>uHG%aenE)+b>8j%qjFK"L/T3:\<(AdcGl;+8N<#^/_7P$'gZq8D:uGXK:+_0:30R:1*@K(2kdn<b@6o]!A\:]:[uk.Lc=_
%FHh5?qQL5%Zf:3$Tgg;t*cZbHX/2sAW\$d8ckX[fr=G7pSF)/l6L>%5no!',r!nCqbdP4j6L'kJX5m4=<lq7MV15('($t*)8bpmd
%$-uX[P?+UBbbi,).1*30R8fAJ^*41?m?Zs*0]hD@F'8Ll/a:<"gmD&"pLQhR5:)4:qf-*W8$C*N!cG;BEn1Y3*hAJR2*CfrcLT9"
%9UqcW=V>0:BU+5o;=D"u-"kXQX]EPHP"=c`.QL.4Z<+(PFMoa@[5%)*)pFqVOq9JTMkO,rjGp9";g:fG,*Uc'V(*hjI_g<t0Q(c'
%J7OWG3m>fI,t8*=9'=G4F9XsAR1F0i,^[DA<i74U\OUbT>Dp9Y]Oa'tisU)"4s-?U\oBdK[2L>-iT`a#NLV$Ym$&JG1PFF1#q9Y5
%3*NRoP(8>C]opIFB?GA@jQt/m8L-1g8J@X%^Zuceb&3Iaah4ua-';`XH3#.]]P^Nj;N_QcB-M?'8kO72M2nnJ@l<UAgYdu8>:!X1
%7%d>,$^r`3BU*rWb$a]AXXBVZDg*JshkO0aiG-S:X!EikF")i?Nhe(N*hH5Inm3\eR/c.!9!h270sB$#<K]4EeUIZ4`i=b^X!EkI
%U7&-H#Znmo-47j1oc9f]a*.=m$Y/ni3D<]mD)*!8+A#O5p.EI8fq.]h0.jQsS\:3A4+a/!XcbeHZt%mnP$4A34FOV0ZDp4W'WmN=
%\m7Zun&@eLC'W#W7Kc2*AIBcHcrtXk,f3*Y4YANonbH+4VWZhU8_]MiOudj65"Uc`;Kf0+8a20>)B@([_E,IuYsZe:F$9CG8+n=4
%506IWQni)>nECu+BrjcqBQ2`%m$'miQQX:gV^.#T*"O/gg5BWAp&:F<(`c\Uj<]X6l(_0tecaW9X5p?Bi$=d7+jY;ipsCT@>15ZB
%03]O=B++i:j-Un$P#-%rX)7N%hH[T/Mo)rkf;s)ZbR@LgOlh,5[I0<MH^^0hYN0^R<j1RX,g5J<KU$V>fR!3_MQ/Hu#qB@I]cYj`
%hYKTX;G'd2j=gmkfC5-b!GSZ(3og(V@Nl+XU+n\BK,:aX+Wg;=B;2#$'hUL5$tf+,&EnN`l#,'0lNUe-e-Jq#o=4T,SI$#qiHYgj
%^-rLAY1f&X14Ero%>aa#S9M9^O#8_u>GK+Id:%qt31!8lmQNu#.NpWkpI9:XZ<#`uU?5Q.5#m9'Uj,\IK^htmdNEU>bkoS$N#1bf
%e"DjE&HjSCM.D1<[tOd<NjpFTD=qJnPN*)/&rak`hD.(up.5@V/:)aCo(Jr7"Bg=jD%u-$J<DK0e$+pH,&:d`+I5BW0W2*$af<Zn
%n;RY*F.P39"Rr\_]e@55-#6n@FG9XiP*U'J>aL+7(.lq+ELulLis9>YIG)]Or[Bk!f>NYa.*9%Op<2Fe09R^u++C9#0g%13g@q$6
%i7jATBS:taEQaC__H,K1JGFjsa)-o4\YbIj1msJ-8<Rdsk^sldic)`X55N8i`gld7h8"a^W.6.^SE:hc_8d4NFse8i#9Fsoo:7L[
%V@5GhmPT0bk`]RDH'_7/*-S6OB4.e&9M27NQkm_,cnt@WERr#bNR;\U8T63@D(/G)`]k/jF&"P7GmEiRF\q."p#q-B#7ID80U^9g
%d0$e@"OukDRe*E4F7'>5eMB8DUp4D/6nA0&`\Hq\k(HX"[64m/I1;gs)*,b'<ACi>.5;8$c$cS(en+AoSrt(Ko"8te2nCYX5mO`5
%>+7\&X:H0I9O\0Yau.EA5pdE,H8IjfnI#,p&\.C.iHr!>ouOe'V7OZ#QV;sOhX\)+b")>?O&iJ&"l^672iLP;Xu`j9W(3TQP(_*D
%5L1hD4E&A2(DSX8eoFn^]HrW9+G<TnElScDd1b"Vja>pr@l5dn_UH`W09Yfl;BjIVFT9'<RpRcij$.hO-hBQp;`\!k`\V$&r*c.=
%7,*CK1:p,]e_tnXNJJVuR\V0-Q%sZG3$JeFE<@YdP[(E@BNEN3>*f7M:cOpRWsqaV_N`blY'W9WV:]Q?,IEW%?Fh"BG'Qa+HW7fo
%Jh%O6*hF^],Rk^P%4aGE!$#i2$%ir=;h-V<LLJ<uKLXf-+rd0dE^JN"W2(B1_^CQ$,5m0k6E(ZLj.L?nRS=X'-E^Y1<\k*n7Yl%.
%2<cO*"&VBuXG>Lr;Y&4B_CkM0fm<36`fnsV"TZ3W.5?3:ja7W&'5mHBaq8NR>ANLtNJAF!0`8#d&=ui05P/<Q+VDOkX#"5Qp7T%!
%0b^e=&-[Jp4T\G&!'Ml\oo)VoTNZ>i*MN>g=QX+"a02m&Er%?"#-$%J+oTp;`BeHi#p$mj8=^t[oDsc[T)C+;3UQ8Np6^$G?W@"C
%.'L)R);r`i<X=K-!9"[s.ULL;o#C0]lD:aIfBUWB8kZ3iQPQA,>#X+=QFu374#$I")Pj5(a,%l@X/XGHUP^RZ^)BjCo;F\8&RgMZ
%YP6]pAjcV3!D,CPqg"E-ZpjnEEFpIFHGRD?Za!2)"]foW1O%TQh?S_&(<;D,[^H/L8s2iIHq+$&gC&\'Z;_LS,Rh)1ae6*9R+Odl
%OITU,gpmh?E<H3r%^2fp6oQGRf$ek`&Ed88DBIclCe%#9BB:It)rn&Ej.dl^=!i@3n.-dZdLZC<fZFaHnS?/r_j;D6(X3V>986@\
%lc'JcH]-r]hMG_c\kcYQ900/\i^RR-kpn4-Qc2H7mZ5cdH.g7'R#rH[em4WMn0_E;+k0Poo"Ng)&B7c96$$'_1#2n\Ki/?HG4"$&
%'5HfuM]]'"1+Up,eZ_^m/m*^!%sG%c7H*s'Gu>D==%W9i4?U,>#,JB6fl`JK4sSiM")&`M3N^S(6>SRB'C-THA9-Bp8H^=KGToY4
%=%KJj4l"+,M0:?HGW>ci.9,Ho73Z%9.S1tt(STFK.8bcf,3_,-itdZB3iq#]G]GZfq"2kKN@(&Yguujo*+dNE_Q]7;27N0W%60&.
%@G*Ni)_b58&$7-_RVL%m!p?Rl@Yf<Vf8_S9(R\CnZ%q$fQpK!aK;h1?rKP6[@VpO"jj_\97'XbTI4^VepLWR7,;2-lgP[hWHDoaL
%(I(Ra$Z;E8<YH4%-2'&2_;cgn)q8eRV]%1Ii%>iSj$ic%)AC)=P3I=2)MIglB"0\OG5;j!5UD8WaZ:646:+\AC(ra@JYgMNpnL;8
%/]g'KLO%+Is42NiTMW?lkER<M<0?6$8VB^EeK^>uZJ3osDC:8Z7?Bq2kr-$HhHsH"g`7n(A$/H6l6VR$'Yh2b*;B2PlbU:^l57]^
%Wjs%L/tX\R-OBQW!J<^HT,4Su9P3,4\/9n%kje24LWWgE_E6cS]#RH0CU+3:2./`#rRns\Y"6b:.s`#U<KFf^P3Bn(dq52<)6#!4
%*+m`DC@*14,og1_.qf_&.Lh5U&n5n/'`0FcE&u^3@J!d6'@kT3%;`O^N>uIYlqKJ6c+a3KRe2p+_/XVj#Fk7V#]'TDj5D<;HAj)H
%WDJ<mKh1"$r011>Q/CB\GlDuV;)1p=m(VYB4]8?TAaR3/r!BJC(l*DF76oId=.*f?Oj@^&%a%HI0eafoU"!Im$`>`I,KBOu+1;q`
%7I(O&"]S2,(DXtGQ);Z`CGlFJ!3/4.A&\-p_F(,sonZ-@,:(:NH:E(KJ!EqSC5u*:"*_B9r[El.oE*%_^=fs+V%N!H>."14G(uGn
%Sb8d1+ZXXIeSoJ2%hp6/nf+I$,lgW@p%VuQ:2TA6ke8J9^0IMYMZf-<d\a*n(m<J$#5,?4KOE/h(hnUjqMQD$JOi\5)imPYnY"<b
%/X,cXl4-?a$pl_XYc77H#cZ1Fhi8@_cl68)Q$@kt/,D#%42(Cce=X`+,&noq(3VM@&pGOop4K!N\&a!KS2_WVor-hfYd9sb/cF[5
%Ll]XpSK9(l,g$?aU9^dCQ!:L27>5q/qqmSN=UmH-e!"d1fHn9r?u0UHZ:`#ad5e-DBP&O0aj`Ip4(q\c6jep2okjUm;M=hW4U3<C
%)JVr\n&\4[e!r@C"7h>)mk^2_<>bHPF;Br1,2Xf6n!+,3`gI%l0D&G=GD^rp!7?WQI_PO1f+o90_Gc8q(M*1&pC[8\]tJ_;F4lHm
%-7BCJMT,alOc:s>*:.08S)jOjnPm\XgM]Y'#pDa0=#n%80?H@'(<?VO[M7s3VB>1KbNSf^qjM2R>>C5XkT0bH97SQ370A<L2JU`T
%h+(oS"Ho8jU/7h8qbspgTI`l%,B+bH&]tGDQ6Uk4T$$QH"5\Ya)qF,X*4;FU=/mQH+.npJ6Yi+M=3Mt%f^E[jVU/s_0lD]"T-1@P
%U&EL@XP>)8iYY<'3pr<7JPAY/e>I!#[PsB(kWXY@9qe0dIoTNK''oR8EmoE]/R2SN_"F5B9m2TlCTIB2AIorLW!05g_6l5WkAC&-
%9\(\+IH5h=,f=DSf5]@\2oG>GCVD6S0Bd9M]Z`0QCOgT]0cn4]6FqG\dHW9XYYqb58h,ZTY'RFp60n8]3f\kY82X!gOsg<ArA57h
%jnQNe`EoDDcVVM/3-+"eiStV4:,sbbDn)W,Ro.j>f!WJ\`YQs$',`b[j*cK?oS2X&9,A@R.5dcC?X*.G&NNA:[tGfHoHM\-Zkl;G
%Z(AhbCeoo^m8K1\gB\>U9BiEeYVAb-&m,7.hW(2\8(u<nonX1rU_\ARNYiJb1B!gm4:HCXdV#/gS:05q9DMnVIXDZ_CjT&mZa[32
%T.G(rMmS6D=S+DJZgiffA7ol2VaL`?-C&ni?=jBq8Ji"+pOal6n1qI44FIEu&YUO.dT`8;ZRBgT1pu5=,YX<9`AJ3]8@fNbfbAf[
%FZVE%4&#m>0P@k[X\SB.`$se7+JNjTQpCtDp""V[:bP6nPE5(uN-NDk\B!*/oZA%#QJU'kkqV_?B*hT$8[%oN//.^k*ZD#2Ukc[j
%l`?+++'5kOjaF/$fA1bhOuR!T3'8JnX3oC7iMMDZTWKhf.K/7uEYius5j<e-T+$e6PlDnfHanm*e[(T$DO!l9l0(>]:ASKGm(M1G
%\J6?;kq#i]Uo8Zqa=$K@fl&@Hi+^@V4^rB6Gdp@nr1%i#68l?#Un8:o4$7H:[hq<@0"WCkYIGmp[J5&X#up)9=j:Ep6P?BQkD_@A
%dJ%3()Vq"u++fguRpg&"T)`Nso9ujJJfHli%s8/seVXIeGZ*"@OdMfubps\f>)eJLBaill+$aUf#!%%TBl:#FS^#OGP%aZ_BdC9?
%[":oBUXYEbgs3t+59J:]n03gT^Q_\.DtaYO+TdDEkAsg:oU'Ae+.(M`V?-F]k+QQ7A>/tFa!-1?Qm5A'B=cO+j@/8?q^$CMUk%,>
%[)A^.d)hg71OFs9W)2'`IJ*[88;r)Z\(2(&&P6Yf(gJ%b->[WDP*!VKaASeeUM+UkVH3F2-:;mjk5!a.aB5"%K;e%ne$`-<%eK28
%MS)MWJ^GI"M7ft7@EidrR=.ObEg_u:%h-h6b3W9-IpQ_0i3G-1",s2-/h=9k!/>&rp6auj>8`m<B)1q*AE[WE=u2/^]i&QTeeriR
%)31`iAf@(#iJ>[ulo?ogBk1nraOI>O%.+sA;J]k<oX6+X,=Ar8-FGHNK-X_f)k!U7)4@DL7RiP^Ii'%KhF.r*ZR:glZ8+u%m`s(c
%,g4?s8^+NB%$Ecd_YC8?@"):I4U9^o1UAILoJ/5(hhk+Vbb,PJO^)LQO!^3&R@1`YFl[7Kp1taUAqgcXU32h@HEE\LHE,nn89J_5
%)0i<^`*;ut`b^CA02'OL/]j]p0/oKMa76gdM=)[`6VG/lo1&6#9'kB#Q%4oX-/PUS2jRk,=a"E<,`CF&S:Pa1YqtP`(PePAU(JR9
%baoZSVk$,@2C)$oZI^ZiK-V2nZ8;AOD4PhSM:t\@c92,PfpS`l%f]F*@:sh\&diX3R=45.??TqX_HV3G#[3f94*0K!=E`g4aR<tY
%Ea[%JSN0TGVk#hXgsg1RcCfH.Yqp$cXHoQj5%,_%e'M>4G7HeG%:@gLKJYMNmi>9'Tj_HumFBL@RKr@kB)q0Xcqc_Z[b*LISU#!@
%hUi_);5`kZL)rE4CPL:i2U&8=Ejb08oEM9fO!&fZ38_"I5h6YZ#S,\l5qso!M7Z;5"BjWVKh'6fbg@\4*]'JZ8<cF@_quX=^B.tM
%A)c\3Wh]cH8uC("chg2YP<U^YeH@0n3&jCSY<PYu,9)OQdc]IV;QH_S6kX96m]!^k#OaS>XeO0E=cstX_`!Z^RcQ%3n^=5-KQI[m
%#iFGT)AOqd-_n1,dC_JKVg64NAkp8[?$fcplQI,R%K%Dl[@!Md$lrPOq8mu%cTBg2d(1U&pPphRKc,#gV<Ng#a'=,AYbXpqWJ+M;
%3t(_MK>f=a86lGs+KOV+9h@W<PXh*:V;ScY7LUT;*qB$rL(2\SLp1I?rjd(F,:PX8":f$+aoK^cdR0`^MM.LK>:jG9M7mbFs7<P,
%M?d[f3##rS4b>p3@3d6nj?^h3^TqVTF7Zn7hDd_&ST`;s(2k3bcD\,VKn@5dE\!'B7m`u*MYVIXj=_CkVUiJGm!IMhZF!MGgZ_"'
%),.D`lqfQ!7^D-7G"I@]QuF*lpp-lYV.q]"KuDg\rE$76k4/M5W$]b/XfD"*9<(1sk3]Zn)KX*odE"+_VZ%UMN3<o7C=b(qDs0qQ
%d1_]le92[P`WV[U2JNhdA=KE=TK`@Td*]'s,=q&;a,:!jgQA.DK^SP=7We!"b0QU<(n$_,$fij]kM14,4_cnp8D23DLrAWt.>dHS
%l.bO0>Fd\dGWZa!Em+7rpIJpUn#dGMb;c#lql6V>1rch91Z296_Ltof1Jk?F&tg/"!Va`bmcTB"<pNlu)(Q.^U>^4X`*%+=@1."E
%fA-NSHMVHs-JiW2).tlYE@5TF3qTsMNL47%eS^#F8e_qG_:h)$[4rlaF9EWl96(5gW!,>;G)&f\&`LgE?^;>\e#(I1A0GCODATgD
%:-#EXeV[D@J"6J/DRRVN[q?jWL"_Z*gIR!o(f;tkWS5jr1]EtEibCC-Sb&efH)XDf2tAK@Y33]X3BI;f0ccNN)7gf.pm5H6H;$AV
%h`Z'n/CeI\XJqn<QFf*s7t(bM_rerS)e:%68R?VbGNF76jAa0BK7NDh#SXp^9\,>II90#1=:*eRhY``I+c:7&80FPA8W@s92p*P[
%I[P(i2I1o<*(^TE*fbrf3uA%$!qXkq@t8ZX9W\>&9V*"[QCq@/e#>J>$O<LrR[sQBEsk4SK:nE;Fa6a&QF2R)K/I)ihOY2m&s66Z
%,u,r(\^C5ok@HG4`[+b*nb^<NPsPct9s6hYC3I/O0sIJ1@1J9H.9%=&pABQ29;$4iGTtO!g34$t(A+h%CsXr/QoW0BkTNk7ZXqiQ
%#!>J_3BhZ'r#o0rb9b>aURo]p,LNsZgH;)KKN2J9kdU2q`rt,,K(CS29mS_Y1o'2b@\:&+i<LT6"_O;]ArbhiaW[>mkHs3oc6U-A
%80FcQBCcN_*8\p]'A=[Vr,@m\/T?=B/VM_<2?DiV/B4s6aJ($tK,prhlglm<mCl+(%^PLQ0i-lE.Tht%)hu9oXa!Ttq*'ru!e3]?
%kT_J#a;<BPm[8L\DG]0:,8<]L.M<>"TSe9cBR[KR'=L>mU+tgelJHC$\[h+30Cm5GrVk#$HKR_q!:Ej];t;-S0]tm7]t)9Ll\d$N
%@^cmUFfE,=MblpfiRJe>JH*$q7.]9pe,`6&6ErP/0EZcEX=fWjh4kMK9RELMb)snn$]75cg^Fk-/D(PVgmX0f(r039,F>H/$BeNb
%OMlQ*pWq%Bd@ZRbC,XBW_lQ!Rg\.im/mYd=c:Akp9@/YU#d\eUDj'1P5pG7U@IbFF0]k59C0N(pc+&mjGE+=KWuQ[hNU,+oNc?U4
%+Toq7c5r/<!u%>TP\?"I=D?P-q9L:p<_:X)aCA'[@=,LG/8i+Sb)/;-b!s*;lLF:+@oZh\5%"mmHLo37E*L4Yij$@6-CXg#12`(k
%$Z0`&P&os0)bFY>DrI[<eli5V7IWC)=<LaOQi?amW@eTR?XGM'G"=q9h7eej6U5YNkEFt&,jMXCN0J^EeGQrp#,bQ4)JkM^:Ni4g
%')3u>[^Z,$6(KesinfiRA0aq>H"5e2*gc[:nm#3<"I%S-Br56HPHs!d>-+HI`U9@=^AeLX3YLt/Y>*-)Ts,d;EF)[f$g.S\WGW`h
%T(U&FSA`X*+)rnoRC7G8g"Z'/C!U_hWS$]F>^C\*jp2F$*<El?ZF*@I!b%HV/6Y1fq%o+YM&XitJA_Il%)70\p)L1X=[odW:ESi^
%8![1o@si'!Pb9f#`fE'FdBke`5fE>?g><U?K!L$@Y%mceDQQBL8+U+qT\C^3M5XF6Ur4uCq0Iaa"&R5s_G>u,-sUZ]0Kc+)*;DeQ
%3VYRSR$X7lE6d<#rbk]5kFUr+Z09db9MD&uBI%2Ye_had2'gI2O*aaLr;d\/U2qq`e/f4\\U\@S*;J3>H#bbuS1QdJM&"*A+pg@+
%^il>-R`FoH"mS3c>-AjlqcTXa6E)SGn)njq)Z;j(WnOO0*]\!4=c>c$cF9.NJGtXpQ(EEZ(shlfXH'bKQFGu%j)>Fp%'?VQO[[66
%p1"<3#B.+@Rf?J-k:/B![T/^7C6D^FG*:AYeRE$L/Ghm1!KmG8Ak)`T:3GZ9@Ybq,4!6ir1cr"D>`C',Ga6?pjc(^RdBR6YKSuF.
%P3cf5cMK;tUfBA\feY!0ib<rg\_U:7??&UpMt0i1(m),&D-S_7C+!mM8">JMJT"85Xi%S/n/XIAo3Q*NZb%kH3ofp47Q)ta>%dVB
%rr"'F%dm0j\=Xr$q;GT&";RO=Dm^V8+GYDiLq_5f%tNo,'0QAs$I=,lXDKDT.Q)7j4$)$[H;LAt6M@6eVG,5'j%F=RBE3GqL1cSR
%pu@0m+>fI3:Fplt]pjV7j,U\R8^MI6p.K\B#bhX0h+rA#lWXk#6"4;ONESCA6P2H:%K)_mZ[W8[8V.8*K;\/3d4&,%-Q=c"7cusK
%nk_GpAiH/4]mRo-jO2hbg^)_(e:MZZ%9F57,UP#e/i`35%(F`_4dJ8-_9\E!N4Z(WOi0mWqE**D,"`,/Z8?`cpJJ6dm%Hs8Y-toZ
%)d+#$3rJ=FElh'f,kbQURtoue2d,lG2=gKa%RB1!P+OlSq4IVkB9Kmu=li?BD0G[,$9p0gi\dZYMYTqT`RUo7[YVIN'!_81N3dd6
%c=bI@e]5ruPFMQVn+dq01O.!80f8I&8=\2KNL$\1CLSE]_^6p>ZrJ-/OMJ`D+&NkO#n/E/Zto#teL>-\l]OXcD[(f\]d5!LS;O^<
%g$)[MHjGn$?A5_cB*hh\ZVl:=TH.$0JH@or^?PqT,UH%plVOkTD9mB<%4&2[Z9->/OE;jFo>XeGcQa-a6qhK\,eH!*l>`C[Te.HD
%HG!`giQiKdn`$L3kcT>='`c:GgTY4+nc<Oh'01d"dke"Jl`'HaqU,[W4+c'W_?=4[mltteO1>'lGaPH,a,M<PqC^%M^(PbVoJ8nH
%GJA4L-k;gJeY1([8D>XjQZH_so$d>Kfdet^Klh4'G>*)YLOFDCXua_9B=HLq*IuMipCVrdP*52o6HQu`?!gml^9s=Z0')^[:XHOj
%am<n7[;!cs6H[,f8[;q-9r.dcf'YF$Euf,N'dhg]>%2sW`.7'kC<X;<>:>67Ot^$d>F5H#&sQc7hmRH-:^O%<Mo6<-d$W0lgWhUK
%,5(A54cc[B'Jhut=g3T/<AUu3n)7t)9Epa6Ubf8W:J!/,DfhiPH.hI7>`pM>^Y\0<rqj!303I*!ahX,Z!:gPOc^`#uO91-^F2+su
%%SY3=p%fqU3IAUR_CNX;q4#p-cG0Dt:"3Duce[t0k*G/3"Y$_3h*,-k1Su\8#[KKT<SG`r\na$a]flo*9$kTe%7uNPgW^n<Vb.*T
%2TPZP;/4'SocFT\Rf,AI94nHIfB,&Z7<MmY"SE!)fTFVg+OW$a3gX]OrhpK(:[PJE0XAV;JRJ9A=1E?AMWija1lgD+1O5PU]i9r2
%mRa;H1rU\#9N%g;j#$UqbeUKrgmE`^n&p=\qF+jUmE:K%63,SJB)lb>'!LT\7a>hSn:V@0q0\L$6m_cm^64Ik:j&@1&utJ[&HXl:
%D2\7';?b%s40loWKZ;c4]rG;\o0]j#:>d-=(n\6IV,/?V%bP"?,YQGUK#\HPfJs$KG+RCK8Bk.PhO-lk.4\r`cSIjHqoo7c!ZSDp
%&'LBD[+kiPRPX5]]5'ef?\7=5C>bLT3Mrse(J-QLC#54Dj%.Hc6HB.8SuF$CY=E!De,)_K7h$VE*E:1M+k]@t2)<3k`kjB"i4/i!
%+T#V(P_G?861i7-E188I!0kCUQ<e"jMYbU*LQq:#,?=.A51,iBks=C']cuLscS[gR541M<2ti,pa+oH#R_e[/ea2Ri2d>iR;pWeJ
%%*&R07T%8XRF@T_b0?>o?^*Wbd%P?<Wdq(r[acN`?#kc@O+bZ#:k^<nHT#AJj5s<6JS0Rj?2UPXMh$\j-P-H@)M22rTml%)ePRhl
%*(dFI,)WAoIYRe4(=cM&+qtgZPD)1>"=Y7/a#A&_04pmC^eP[UZ](V'.k_4&(OD"Z1aM)ZB9QF`JG.mPNI/UkU3><)`/0!e9Tgte
%CDQ0qQA"FS:<*W_&=r-*eQm;u4nnjd29p0_chf_nKpUr7s#JE&[bH4-bSH:.*U,O<#-Y66BmX;a1TMl2-kF9n\!HPoc8H>9<*L]f
%FIt-?NA;Z__C`"j8;sREF*(3MAb\[@'WRVDR6sU1rtc[7.CfQ:-/@<2+N`k%>$XV,X$]KeQK@Cb8_bQG)_i:uE'OAoI>fP/d5cft
%?t@&5'=5Dn\4d+ahXJ@P8#ZAE13'N,ic)Wi<i%CR;<o1P>:*obiXalY-So)t1Z%DB=_tg-`52H=IGWY<MrMM]6Sl)<f6n0&B4m\M
%eF5p!X_O*B3d%'`Z)T45itW42+%L;7K%1o3PgYjh2Pi.F&r4j*f91mR<p*&.'l)E>44DWe_lc=*Ec?PsKX$e15O<!K%kVM4ig-A!
%[X.C"9fHC1gK/fcM4\%)>%29b1:\]1Z1WID!l>i1AYqX[@ZIK1o9El9,5K]Ne!0$sO`\eD_TchpDr5<W2c3mAmr!Y$_a1g/X#*[F
%KNCr)*$g+(]#eo;3GoBmLE&T&'nQkWqMptn^"I?97UK3#iH0fE\kWen2b6u9D6i,BAjqaOGu[ba-Q*DW-qrN/35$S#?'=.hM+ho>
%gl^sj%2hoRP%[1br.`=CQ=MtAomVF`>5l>iC[FEBdl#^L3T(7VFkf-sa\C7';>atBOi5&]LLahhSi9,Zl>]u!n3/*J2S<su7MDk]
%`dO>f#eGaI"a3$V=_K54K+/'l*_gOgL4^a<fUE=??HR`'iS6LZl#;`KllTrb9eT)T&a`WQkkgPRk97D#E*e3t<9VPjaQos<)n"Ij
%%S(urGgbOn$/V(8*-P&:3aV&i\i=>`#9OF+C<T6>iNVIl(3K0,FNjo:o&4\MOaHZXFA:45[ikC5Z$aluRT$gaLsn5[B`r6%'s0rb
%4pc4j6mY&o;FoTeq>aH:d9MH&i^q<>qX9RXLP+W%ab(+Z,Nc@>o&1\t!t]i>3kqH'o&8Be53Qt4%OKm/7J26XRc,#&:=h&O5i%;-
%#>(HKTYl&;,]rr-N:O4fPY=oJoH[#*]qiQ.YXHfud!^4prCMcsA@;!0O'bAn,D-I2-+T2MAm6nZDC/&Wj"drT1[&e>`#fCK*9lD\
%L(4GsYjqs@($4gc1dQnLi9h(HRe05iKKhbXK-XJ]0N^kH96AV@F;Pp%1VDsk0InZ[,%qo.A"*Shrn_+4HuPRA`%O:;E-b(];psVI
%0g$r5+\4]rommq,B(ri=QYji8'mqu%>7!,h,IU7PXt2aVWV[s0e81O)gTM]H3!b;1a5Fj$&kJ,B_a+pSd$kON@DG1RLXS*^4:#t<
%*0<QkrN95EFS,/jLa/BsTNr,g+=Y^lZ\C@"GacU,K-W/)_2!YR"l0K>P&NN5*tn4e@s"cg4ipH^%nFJgHK./j*\2BY#9V6LAD,e:
%:d#3cWT[fQ.jg)^^s.Ypa/D`jKH4;.)MC)2(VC&oZjt+/"X+A=aN4W0N`L(Y(IB*UH]u>aLl<HiXFf\+#!B058VeU\O<.2&[NIRj
%`KIps6H)ZTUHR=`VoR9(0FId#Lnj?$K$?(hEF]dKP7^<J3?F,=3]W%(?UfCqNb$(j>EguhN?(Jr]%*8]7o,70S=8'&#9?\!dKJ9e
%eB\Xl*5,d-&E:c7mK'Gu`I:FB&EcJ1N52J^P>GU38c/K$HFLRYp3?:8P+tTndOcq1HK<gk-RFdRiHR_H,IQW-)3d*YFp;R^,u3(e
%UA7E<,GErXS3;G\g:%;5c?j.!nN3TN6LHd<N(L1(Xqn>'_,\k0KC+6HklP(bQQ5[W/stF=F'0d'JuSfB&8p?("[/j)PGt5,eLDQW
%"C96J=i1QGJmRWrpF.@rYE).O-#:,5HGN4X+rtL!eSFiNSmE5q-Lu;mk/[[#H-WUTGFC\*j;!c4RCbrAXK)`@`%fL34>ig@bq.3S
%"C[Y:lobNqpO('Kg8`_)UZ<pO-B`ouW\nEmAVj>Wii,qNXYnhKRqD0s2"]M3VFNSskoL%-L$CS6+5-StUDu=2$KK,K`uSo,fAa>u
%1i,:c]V@&^Om_sJE([_\87nA;]BO@&g0<`M^Jj[nH1h+K3?F6qM!*p;9h=JbF?$4\A-Bb7cmhVWLd1;N=u_&X<$/PaP3`49f5.BH
%DA`;bUa'ml2<ac\8Zlb<=AiRB=:6*=Gk4O([t*[Dhe.fJoRM&&;c:[7TM+LMM-R6%cb]D`4]K5s8'VpOX/L8(@H43;_[2H^\PL>X
%BK5o)?S@</_\lBlC=8'2pY7XnfBA.^?r\q'KJO9gXU"Y4RO,3.>t6;7O>4eU8Y4<^k9jrrV/Y&+]8UBI.WPoZ/6>e(MIb*8YM+2+
%KHAC'e?2QJdop-DE<kgX`ro!h,!PndSWo4"UoQGq\TVhaOo\$#U:;jKUor-<0O+85mhY9K>\L>'D5jc+AZ6^L#i2ES0f>Ae*`ZX#
%Pos-7iKk=+PTfMZjNP8>YWT_)A;L+0U55RofQgE$ak?PCC(q5gcN"W\r0soBA_t9W6TCi%(cnnA8LG3P+qfa%!fNbiq.h8`TY'@Q
%.G$8KVFZDBP,*cB:FmQ$ZFh[O<F^C`Jh8%[F8]dU$=X;Jo:8j2OX08"!r,@8,-]APqQ67_rS"@WLD-o28LtlW;m>'5=u'q5KIA<u
%_?MlQ[/.j(!2iLcgh;K3;MY>mFI47hGe1P]Ad;Jsm3)`k?*XgDXtg+*;rSJ_k!o*]hNselX6Mu^1!W3LI+7qGE]`j0.MY:P<uFT\
%$5K6=[tr86rN0jo5etVI`^/TbEI8o]Q.k5QrM<L@CF/AjktXeq&^d1fq0nHB))8i2jdINUZM:,?$::.pKB7M-(_CPm>%Y.hH1Kt`
%LH=kQBj3I<,7<6tp?7J*B[F2D_uYo_?Es89H7l*j>PBf(XroImic()[g_WRs7cD)CN-BYS%G0--X#A.LrOJL8?7?h9fp)eV9%Tu"
%P[=4cI+BN-GP\Y/Ca7^7&)S2+:ZN;N`\$GjjSQ8:NlZ<(1TZ&p9TS?fF*3Lu/Vmua[YN\Ia*TIaG&kl[KMHarF+>Oh2_&U:rgV",
%,R@U@)s,nkhQCI^!!gMAD98Dh'Dk=f^_l6UgNF7b>J33H>3!7M@5^$IC75H,EhNheb;q/:*n*7-9ClT^"Bc;/63ls4P+9Pi'IpiJ
%+2"S*cMi41!#O_Me,VDHVqrIkHHhalMmY>dnaRF5d(6=@mjl]4DY(]TBb7pM,:8^^DMt,7!nkWnn#M)ga#=%tkVZpb",e>1`nZdR
%L7ARDdnjim"aR6,HR.1BKhAL,)]6G*ar=bd..\>l'cfY4qGpoAM\&@@,l3QIad1%.cg:aEM&(IFB<]X-'O#:],*;fiU4_?T:`t'@
%,n.otB,TEU7RDV<8c3S*J<>+]b%tlOQ`*DFT\Q#k&k,E.jchWh-qG%Er4QTk1[(!g`#A1N@!5.oDs<\$AdgieRIiH4p7MG6(HI!C
%EO4MNOtgm'5N5AJ#OIXC0o[>G)Bjt.h&\86rOCV6[m[",h,Uct?Er3JK>Y?)\b1A])69lBD$Yb<.)6<u>_UEDW9.2,M<Ls'-<p44
%nu^)][Tq?Z[X5b6oVJAXrps[!Q)a1t9+Yi'gl^q`(aa+:^7'"V^0jO:?SEo#IEO&qA[.[I%,<W#Ld0P<m%#SCU?bVX8%l$Y,E'W'
%fFT55^],IFfh(kL0i1,rbLRAf-&IIJcPoAd7Fu)]8k<#9TVkMEL_WI)%Ti-):Sn&X6f:jT-@_Chi*7$ZhRAc_/a(nFNT:?h/("eL
%M2p\8$`=rmW+Q%'DgAp83:Be/"bMMK6q++'E=i49+V^+7oS8:7F^n/Fo[B?68Gqghrkr8%WPFUO/Ou^]&K"#OTT0ji1tZb?53^-p
%NJCHhB=&&)q2+UT+3ApM`B*C\*!<[mGC;?o4>%">_Os4aP#l0@YcjK_0J@Nfq*kol#l6/>o^Z)q>MDSZ*,kp0pGM!3(kCM_Fr=/u
%iRV&TQgn\?;'hAbK3NFgSOtk\G-`^.NW&7<k@mc>qjoC!RAnij.&Q$ZFRBM[:Z_i4)P5HKW+<s?.G<-,]7g9"PGA=^9o*+iXD*5P
%i4.*3dV@(jjUl+_-WDriYXN[f5J5WQK6q>G'VZ^5+chS75^a2V-AG[rdEnY[5d--sDKQnJDo<M]!W0pX_FPn6j$)!ud+_d5`-Qk_
%'V&Be2995kl9.gPr4NsmNb/Ffcp3U^?XF`s^>PEs$&7VnIr26--9nJ-/P+[kVY1;Ts#7s_=n#o?7M+-a>l/&7Zm]d+2aO[Xh*JbH
%07,aM"`Y$Hh(C>>@-";1&BO)J7pk"gPS(qg9@dQOiOgd(DO7d.nRu:pq$2tN\[Ru1%nUk#!Y3'"lpjtC"Gq6U(eLURr,"t+>*0[Y
%,lV\Z?,]Vl1Q-jBD6O1$W5OC35Z1&O4d4A/4gi?ie:!)t+=B1lSEVBRi1X)>B#W$(]Bf<A&X/umKks)]a&uNT&;2Xgf[8-1A3ise
%Y8>;_g?]sshT:p/:8s-0+7Jp]P@d8#*baTY9<fPG3B?bWa6$iDg_bE,/`s_?eTKT__7b-gl`HNMbV%gA0D1`]<AZ-^9>Vs.,ej;E
%c;%VfAE>Fj?2F*L8P\`HXZE6.TH6YkkRg6X-V20/*d,g->Xr9Nh6A-miX1`k7t%+p,_soeXj_7=i$"7/gTR.&6aB=kR1A1)c3U^b
%MkAZqZ^XHUeh&>5='46ZT6NE%fZNQ%$?Q0-[-/3N'qXIY.O23*,Vpc*5D?B$Se@mC?R2%7k"2-+%,R<)>R.%-f%l,V=A7)i?/Cm&
%0p9t/4tK2hRJ-sJ8D->_YAV,("+]L=NpLT7MBsq0oXbHZ&4Hq@TJ7t/+Vo,l]#kVr9PfWV+d6Z-Q"7;^Au=ra8-JN.&T@6@,[mWI
%Trn0LK_FIC8W]B(A3I0n1FH8)A+oPYee5;\Z^%bUUbF#Wegc_:Z/@nLFD]AA_as9f*Y1SAT+E1Qr$i<n0bTQID0I`ITfZ&=;Qg?-
%W8)b[,uKk,9&`#F8UF\gd)Cp9#&+!]Ri5=7/djr;;dqZOkD_8e/_uc<T@X51;[+<gGV"Z&2_ua&$u=S7?QEo%'M4M[HqO+ed<uVl
%N'AUDH`rSd\1]UckSFPY1G9AlRe+N7qe/,oE'j[G55bbI5[-ppNuJm%>c8Pd0q_uD$d4o/cSJ8Q*)#R[>7.d6#sZ0N`ZMqO=;/Wd
%/rNK'V^.%1h`$Q7SfO/WACMn97$\<h;R<ut;@:4_f^lrQnA5F@^VK<=b^h#?r;mc"^)e-](.bHfdoGgQ_^)]6ffapR*FVP%[S'!a
%mfdkbEJn=L\!-Y@CYS4;.K%W2#Y-chV^0KHh5>3V+qn(QamMel1I`1q#`fDmT!sdA9R$p)S3.j+c_7IZKRqC@#W&!,nYfHVmN!jK
%GEga4Q4'B*]#bf/<VGmGI6pe<OpF]&D(fA<%hAX(R-D7$*o'R>ZKTkGO4Y4jr8]d"A+f#D^lq&mmFIEaQdLdMR4(VJi>7N?S?/03
%/3stT^l[^c>:^'`ab1`%`t<CU<>Kq/j("L.O]D:?+c,</#ZN*t\LEDLpGJOkp(Y#GpMs?JDdG8a[d/a*HQ;i]VW$U8rc:WIZuS46
%dh-[?JJ[[LmSoQ4-qNEt]=T'42(F7@&0#8igZZ=SnaFdfrfN0#:R$j?Wg(qh,9ZV%T;"(mF'_XCTa2R'C8tf@k%,+)7L38&r=,)B
%'Q;U<--/-90"^aOrD9]j]hZHBn1Bt5ekn%C(mXE,0AUn:Sh>YRrAkqr)D(aH;G.`UpZ9\MW7T>M58<hSjidOiDQ<9%Z/aHfWdFA$
%?G?P-_t=GM-k5JIH9S7e[]137QQE!0H="u$:YbeX@nn_RQO9fDHX0/2O9;5@EIBcA[YN&7n_>)*m`RKs!++8iY$gJVp&+$&S)im2
%HO8W5^9m3]EX#I#2WN^Qaq7n1@LKpD7"LGZU]r48g=5##9uGh;fK!3g(XP<,.LR)P<hl0sB4hjuoe;)#,Q7`Gg8ld[!jX_O'5=</
%aO$0!>siYAn(2pHrd<(K)h6B'b:-h^,/6$R<M&;u8,-9^lPV3X_O'hcH<.3`[%$6$cLK*'9@6gcC=jk0;BK1_Zn=Dh.=XM<TmC2,
%99ji%2h,.UB\,O#5iVN2$.U8FZ*+,"*dKm\N,P%9o:\jOS+Qo*3;9D=L<6_2&RJ`^!^1u$q$)E=ou)6+rF'R`$q\4"JA$*ih!<X]
%%8ggthc(..HMD^IjD1;iQE0A6S#A4)$7^.HB[+9jZKrY0KJ8(]rGm3$G]N%EY!,K3pJmd53tD3p"uYpJX#msR4LgX-+6)bunFc_3
%hYkY([sIG!Y7X7J;b?09hLV@<CeApe=>!;I]JOpPPR!`?kIIG:MpO5eBh^X#Yg?!_71144EC&[L>&<W`W]Qb!QTK.Q6sfh,f6>k3
%5Z1R.eTSR[\GfoOQZXB+:<`Mr<J7$s_[QlAq<'*gb_RpQHU&=)&*!K#p1C!%EaDD1fB@HemB/r"S;/Us.#46ZqM.rH&E!=4b.gdp
%D<I5cWrPD:"hXZESre6VTqQ9^!ZR,b7+]AFa$VXjd_"Pg8g=@b<]bRLI>7/8##c7%ZfnpHFlSfM.>%)87=R.T>l*EYJ.Men"'qp?
%T!*:-!333r?Y@QH_Th8G3B;.Wr4R8)BB2sBkD'_OI-pQ5qV5>Qmb/9L$C;su"=c;],WBk53Ep([\;`9Y$1u4o;/tGF6TV"Y<1r6L
%P`#<TJ.+VL-B?o!am:7g[A;R1`+TqgJjq*qdJp]5Ff;J!r:tghnb>'Cl*nG+or#"mn\]9os6G14kHB@3LCa&r5A^2rCV.T9o:MZT
%k%B04'BO6$G5h:n=c0>?HQ0??r$VNJlc_]Gi&&L?eXt4rjmT^^s870V&ZT2Fi.ldYoC)MB)RH_UIe]P>m@SlgE@7@30\G")+Zf]Y
%H+Ob%-N*_TL>g1W?QOR/(*:Eh+Oc9XcdfNfLMsk7j9*k_Mp).B1;V>2QKX['PMgHoerc7R^:)An[)K[AdMKVj]MV*B]WU#HD3&W7
%P2#"uC_&Qk+d(Hrod\=XHku'cKhl8d$6>fe)-oHSWeV23!QKdWE-.*q#'SJ1JgJ^@ArOSZo@O1U\1U9G>YB^T\i_q^;`(eE6Z^bG
%:IVTg=>]6$X2q)ApV@u%.7TmM*q8dtb:kLi>L@B`IX*RD:r?)'@aM9uL1*0980tA'Xi1&rUscH6Z$jt]L!)+!EYp?[V`[Y3EnOE%
%F&Di.#c'BQV#c&\b)P24->QmGQHSM+l>DDglaR)0)ol'e;7-kcki^?i95+^Q?"jNr:%;urlCi_c#SIgJ<_NG_hl\9)C0u:)MWi,'
%W3Zl8NH^D&CIrQ>Zc1OGX!N7,/U>;nr<'4*I>aGEnk5Ur5MOTB?I#=spjb<#Lp16(G7f$5NVON48%*nL4rl?fi]$R'\%PQTL9aN\
%V*$`l]s[/>EoOQATZ/DK-[Uuq#%AG!cLl$b,V/h@!"iB-Xg1I\d$:Rp1ck=!AMfo^B3YPjq$heEo2mE7<1Fu:>[J"G>^HispiO@p
%:L[R$jg))=[F.CJg@a:FV"04+fjot_O:'8Mag_Ch`jh7*!UA&$o<HX>&B.9LGb"0=M(Mt#b%$-CpAI$MKaI/ma9Vup337Cd_4dSs
%\Y>T<UsX<Y`7VE<mj^qS?5j:C`e#.*P^Dd*#TrqX#GXeW?#6t$W@ClZ^l:X^aI3guZK#sLTO`*mY+SAESDY`qEg\Yu?(>k(Z,=uV
%N'V/sTS[YJG$^,GJjq9W'u`>C6bCK;!GS=P:<i!ap(D=9Mfu5)NGJ-@jo\k.eKLhamBK)6Z/RFn@b=?$!/,ce+&.n(hsjU<p,d>U
%;$C@P@oV_E6l>.7Xl>h#(ad.(O3N5`3(Jk<)r8Z,77*2`_GO5L8C5M7mlVt@]Dq^LrpCT;s24m7cQE2VcbKAEYCHT>L]7t>hgC1S
%BU95-gCJf.+9(d,J,\hR55`[gTE!p2a++'[pV6UCYIXFH5Pu$sqEOKl/9GD-0<aeiaK?j.[%ut`ou-JDMF_qpg8frZKZh'.=F/,D
%mNBh8RE*]l;p`eHqC6(+3/7%qlLj8gV+q^e8$$2TiA\&k*?)KWKkr]Q.KD/'ZqP7'r^S3ijF<CD^LOaJ*D:a5/k)7:Xt1*\^9OD=
%-#$g`qk`tCB`/@0i4UdLE,CqF*0tYJkIdP9_KNQj[Z#UQfdLUXF+V,fZf4oUqU.9OSOtNY*DO7Y[)eYhc$*#dl9<"@1^er<d=;)E
%[`)[/j5i>M0Q+.JM[BgC.mq`Fg?uj>D;V!QhWuj15t\;pG\I$9;#$u&36rIte)&>\\r*c'6pZ&$+tl@_>ZSRW\3t_&lGL_S)(CIe
%98p$Q9a`^Z)8;ri/u0b'06K*cdaWPr%@ZVfL\9/V"Ro?.;H4mo#_,5%=,Lmc[K;hG3qBK>d7-V^+bd^,nGM*to)K$bNIOX))M`A^
%2o7")j^Q0=P52fZ<5cMipLK2>BS=:6mFlmBm2o'9Q%rkIGDGA%\`k=<_HktG8&gtqTQqR0a-k5>IFa6UMZ*>6ch^>kXB24m=kT@[
%q5eajcqin4c\DUcEaDCp=$O_Hlj06V@s:8u4)Y%6mNe?BRuRQgp2WCYjR\/1"8!J/Kp'95qSSs*pcki90&el+jcAFZ"Sf=Rgtt9`
%rU>%2qsXORpKr@Hh=(C6qD.pAhu>.X)L;M`,nL0.p\/%nqWn1Kf@QYmYMB*8Dnc"c^].[$$ie7sqVCU)q;8$/rU;b\prD:jkHFmD
%(]XL4L[.,&_]QVkqQ#+UTBK8iZSP-mZ@V;5(?]tJ<d+*_%@l8qXA=?)K,$#L+p%h`9+e1p#$4D-:a)4;S6lFZ0^t2l7d+Y$%JHMu
%7%5^k;fMF:&Pf0FCHdRnFU3XQA`G&`Ft+4f,4cqQ;el^Zg?u]J.SN".($P`Y`FX^I*aHP)$5AtM:^]_:SS)WONr++(,VQRcCVsmP
%?KMl*^-I"Hb$c(L-nbHJpIO@JX?S-M*%81p3N.+:D(t+-2#4\iAmKo*>o8FAJgbBPF]G(^2Ha"\X9PPugOgtrQVRL$_0[HQ6&&*u
%%+gY/)D2nZI]^_qHr7MW'=ML#[!V*irmLN(\/(S#k;Xill01kt.Hi93OjTD+#ZYeWrppgT@%r@/S+*FOEp1Fh@A.4nR$P,$,TbQX
%.hf#H0eAFX6Y1>KMm8[%^'Kk2elY=aUd!\hUgO'[S+OlGCQn`1Z.)nsY_W;Ggm_fQkRZ.TKLU3+L`)q3LAgcPg0353bA?E<:O[E4
%\q.gIdApr2ZRmjTq-^aPEnGn`15Bf^=i-9@euNlaau@Dfg7u7(JY/1"<5k5rI*/(3eRR]D>,h52WoqRmdJulu/'GZ;]\#8o%OZRG
%(I8ql/72^JIfrK8`i&4HKZc"`l+D'XW^R&S%LMBEEt&,"9LkMApFGP_W#/:I!)H>2lsB3s8lsF3b>n/,V0P3WaU9rDq?E>_.'l_m
%+g,MFd7Mtg!X6bfFI,Zt.3e2GXHPT;+&\e`qDM,`*>/9V+n4Se?_<!n'bLDbUB9Jnp_'69%6D'pV%6S)MIR2!D^Fgkf$U&B"DDAK
%/$/DDWMis=l";r@UIhSO9[ZTk$hem7:5J#AN\t22,d+*bk?0X"rP4DRl;p&Vob9mIW8)0M+XTj5I-kNa]9[Q9ce`lP:f`jEhL1l3
%rjYm-lMT[CPos6O^64fG#l3<B)etl3-_3FIN5)I:S#[c^3^c"FfAklgkTBj&H[\)DqrO02oCT6W"KoMEUHYh4I%YP`=Cl8D5N";Q
%QP4o;\LcHWmV/FWaHD%.1I-=MYfe'PmF0$Pm2>V>;sJ%0rsHl,?F`8dr/Q4*`W,,u?CJQr>R?OVVn`_/.^:]QmTPTWqQ1,^Q79.J
%&&FZcILGcJ-)UQ^NERtWhQNMlC[[;$VsceZc-`g$;@FP2GN[omX5G=1Vi8s`074YfZ#]WkqBW?_X<ZlH(Qt:LK?a;oX[VLeaa#e:
%q<K.b@jiK&3[D@iB`>rG:3X3=YZ%bPB;aT4Pego9cM-&OM]\u?r^eeo1EB^3J\kgpe>BSV^[`p*YA:!JSn5a)RRKRZYD).-dpt:T
%?3/HYGS"8,DOlO/F'h)OaO7Fn&FaBd^Li?P`cXDlCP9cm*7Vn1+UbFm/a,X#pg>,OrRsj7g,Cc3;1DIZCBC$-Hr;9AY'i%(6?\O1
%,A+5*fe6"%"_Z'H[<X..qW'd'QRKA#1=Ht&'u;G3,mi0p]JiH#Rd#&@R4_b6m)'85Hupok?3fmBp4].O'>JPQH^4Z7!"iT>c:M'h
%Y2(m1g9&J,XIf)?/tr'>0Co70J0I(.7Fde+Hn0`8#g^Kr&G6;<.K^sniD89>Yf!+R6B1G;#C/VB'b1tr3T&nW/gE?U+SrNl7rbPR
%5D,Xpc@dm:b#(XEDJ1T?nR4Y$HurW0=okm?-m$YD8+*Z\m?2/\JW8\2S=9Aig@ddiaHmsJZ'#7Y]Cjq:ggm7Xa)%(c@/T\'W&6Bl
%L%h9@_>cVr&B@L^-P^_*^V3i6n?HYq*1H/lCaL=MAJGE&Jb\69;326sbHH,pZ=2(3\^IQM;Q2ericZ[#Q,pkiC]jt^\MGC6W,HEN
%B4:k6!>415cGbE4e[GjVasEg[GZ27"qi"kG0G/=5Y=H'e/:tp6_-)g05cWNpW!j5giW]M7UDPXD/\aOn-"e!8SZ:%i(I4>fY[#r?
%%K!Y]q`N(H+\W10FsZ`4m`rnM?$kNk!bUlOG#ql%`;[@\%_oA,.=OSt]3Jn.[SKV`6F&1J8tR[fgW6]%VAReSQDK@.gRB@%?oR0D
%M?/N>eEQ+CSaPPo(]b(6l\I`7^DoF'+n<?h1.a1t<Q7P.62b!39=)00DJ7lXmSF^sKuk/nC&JY-QmCoUG5$eLqYVu_@uq_6_nLcW
%2$S?r)7*CVES>Rm?=nN;U?ILqad9#r]Q,7G7!2pWpuM:b<T?rp_IV<]e*M_]8tZh]N;2#gPZ,_fXJWA.kT6o$B5O?n5'M5NmS*U)
%/TD3N3n2&kI<h*/eaWj^&p"t<8Bp7EC@K-j<\s1X!AW\KJ6nLOEsIo63D[K;n&Eg8n9J%5O&.sN5kJ_*nc.!FQ114qU<EYXT2sQ9
%?*ORuiNcAL`V@GQj0Bs7'0-Af+]%TX!*tKI&oSTQ'q0&.r8BTCSdH1p(?>iYT>QjZV?kc*CZtQZpTU5=G"[gY#<ZfdbKca1^kuoC
%9i=V60:\O-^8F"Nca>.^E_V[bTm7LjMNt#M8maW&9'h+1gje(XAh`lD5pDBEZ&O<#/TJKiM$#"l,,2+kI!!;d2f\/,.cU6cX<AAI
%+Me_76U\6t_@qmG.]i36/k41)DYt1dAoDBKAS5rp]G&,L&Lh+F4!j&sKq5pLf<s,Q668M%c_1Y"QfSMe.Mb1KUT4%3cluUSLsS's
%"L4Y8Lqt)"5h_Yf;<B;Hg&Xn+NJ[7?!5CS^Cpn*aJs<g3h4$k\'ZtrW(XuoT!FWg">`jf.Qrbd4*]oFXU?g#0gIt\+nhmR!p3YDA
%4dLDm]Xc4'oL"3-FL`FBEd`U(d>jZ,cQBfIU[,qVSIiA=q:\Me9DDC)'bl\L#<k0Y<g+h!p"BMfI9O+YmHe#F?eJc.`>rbLJ-o^Q
%eL!6=R&R(gT!"K?/NsW,"3^h_.XmFp.0%_E_PK&h)up!?0VS%?^@>2QZ!p(cD<Ks]gV[E6IL>::2plCg`):iq\(.`>@@@LSD4KDn
%ZmpA,?%YHMKU$5;BMH=AdRnV,ce$8YVGg<u:OUJ.Ep)S$/k1!@gf^_%(S7ji+J2_V3@[]0EVP$-!V9+)/k-5c[rt6?]^$IE@WPdS
%1u2s=Y_];A-5rbQSiguOUAcoUW1$B.][+\iCJq%-m-Hp5UA7#:nYul]=UfY14'DGP2K^fCUUZ#YMOBQtDXIO4(kHZ0)]0GrAWd(/
%*qZ0VjA]I/b/sUfWPWs<VtT6R^&k<3OPW9@9KXYp8Ydj3rX(tU)S.)`*[X;7S)O4$'b%^#g"0/bS5M2LX"eL;1fKrPX*seWQt$b[
%31)d3Y9(-P/M+3upHXhsWV7483]o0V>0/&DP?FGgiYI@N#7HUr3Du&-ooWkZ`RKWB4\el-0[QA",&;f%U#,)JR:!1L@OIY7Saga"
%-eo2JkT%UF,&>h93Ien50fe9mL>3G$Y/KcmU.4X+GDFkk8%Q1fs2ct`i'<=tm]Zk20h5BG-e+./VFW@4O1\\gO8gOp?PV:JYa.](
%ALA>b1@LDde^7]<jJ;:oY!mWLGTlq[ICW6R]80V`+8kNPs7gLk;H()D0>G.t;YU\#qWAWmhQ,O0&]<PB$k69^#]i7_40Z1.:%.sI
%q@P$(k,'G80$4_/="N!<Q4/1M:<^+?Y/>6"6P@^n&#L6g<3WG1od,cr(L)WM9KNgYURQU/GeQo8GcJdds86&QW_4hZ,h[DVd>BWf
%c2WFn3ne@^]]p't+2fu6G6b]-]E`/NU"IjSZ+ms1q^6_hY:dsFB.,Sj7kTlHK+QF(]6'%T.bCUS1?%dF/YKL>LUsS!f1UsMZ8to/
%GEhnSNosFqi1h;%onX-uWmKRroEpu$oSKRq4:g7Lj-XnMdQ,MRJq8S[c?AGgV0k,m&hgZpc9WX4K.ibcd58gXIH^-W)o3.^Oj5';
%IGKta/c*&Jks>"8#r/\cdWRad[,(U"@^SI47#Xh"?r0s,7_+N--)^jCEG3@?FVD7E^?\?7mM!T`W!eQ02^Eh5mP5`6L;<-FP^_*o
%#CWTF)o?Oq+lNlS>@l(=^sbt\HJZ'N_kN*b`X%0$\Ai]X*R(CD6!/$kFGl"ZaQQ)TQg,lJ?M)<kgV=J@^3Tenc\$[,#(=kMac@t>
%V,jYea/fR:@-&=/(_MFnr.2XX[-FW5"dk"PPP@j]N#Qp0l]\qtS.7^4;U"WWRf7oK\G*ld?`Tj+c'TgY7M$drn!$kJY+ATM5)=LU
%Pj<K>4Kk<Qf_2s;$tU#X`>QQ5EHFeU$Q<c)=ric(4qCF`]QSMN)lh==B5T(1n]niFptso>mrRsIFF,Ug^eMQbrV]<pG=TJTrENs-
%0gZE[Jk*#<,+-!<bSgA8>tH67KDi1?VW_EZ,E[#@`U.:p-)j_sEo)(A]"uYZd.IC,qnf!6%q=7FW_e_;>#IV"$f"EFPN=(uEe*$D
%_Bo3IMHuQ+TUis&P`Y+K?TEhMFhYr"Z%-_*&I2QZ:.VS"U5+[f_`*54j0I&ZaV+#I%E*JlAH.dJG%(VHiG.UkZs""h]O0f>Zg@3c
%KDQ&M6GD#;KZrZj`tWNBZH<_H\VlfQ$!3h[Q<;ZdTE,d=m^#FaLT;Cu]:pS3kl`EB5<0:G[P$3)L&+eDZn!Ic!+K)/9UI9u,/Kj2
%(\$n/q*ZN+du:o:Q?IC*$2rM14!_3AY//>m0H(goW8FN<d`'S-b=Eu/g'qO/aD!de_#sUGA="MH/Um(r\oR3P:57^O"qM]Ob:+]n
%:[8(nXfa8Bkq@dRdNbD>!hft:Y&sMZ2;`,X.2i2ej.&H^[=E=fl'T!N1AHVM%\jjhF[VW_8N.J2^cNDC[CL3C/BRGp):'HU.^:8n
%d(.mor8mJgLGZ>8mMa(H&-.RP&TAp%5TWtfqD$=\;ANK+`n\I91b`Ba]%E]8eLFJ=;`$rjH<>%"H!6qn9S/=rHa#kUa24(/XA#/:
%L[Et=iZ2rLL3^7p^\@gDolVO@dXEa)RT%_8_,05W!17R&W@3WgigKC9=-[Q]4G4BamR$f]Qqb3gN<3#+cX)3#PKF*4$b6k?[lo\Y
%9WknKS""ANc,RG.9sij^K%n7(]t*#f$a-[7h4XeqBDuoibT#B8!d=FX2bu0T^gV@L@(a+]>9_ArT!(&9%UU=4adXGm!X'4Sm_=+f
%O$EOW[dEk[=S<M/L,>7j**ts6&eAi5%2Z_=k[G<:#O!XZT1;/;5*Y$e9NlQqZ:LN^ATN,dUZL!qV9s%s5:)e^4\$'%LdHOQ`,3>n
%/c,3FgkKnjdOBT).m!H7Bs(;ZiF@5W3:q2**6#Nkr8&_&R!X,@kDrt9$<=toYn-/JBuJRc]]i>:<o2sp([ad!\'qtq.Y$jJojFPb
%@O3On:HbOgbjGrpU^DkfK>(sSm7&De`ZQAO81D@i2"EM;gFoC>8ER?.6[Lh.p7@0d?FkoTar0CtOiK73q#)`BUarD)7St*FV5H=q
%i%P+teG1o0EI$Z/>Y[9^9PS\8`n[Nk[r4/W!a9uW5$$j]?;6O9/ZA$[80=kiFET7Igcl^QY$o!>20^a,]>;IpH3ALb)SUDkf$Ib4
%UT/n8176uTAI6Ol<MSNAg5gA4mCW48!_;GB?9Pi"8$7RBDo2g_:NPd(?9Jc<S.f16*rGaiBLan`F5Y?J,^5_tEL473U!6!1;p$V7
%2.=4)d@XJ>/"K3YLPEXq[[Pl3nOkue/fGD1lZIjbUt3rg?6Cdj:kicEBj4$UB16$*NJ[D4NZeL1+O"o;186jp_.MThR.f\7q*qE@
%Np/MdlqT.kGt_".5U*cHLHr!]QPg+3+^`JM/^r'^fMf6pd.:t>4YUQZYc_k@nm34X#H$Jg)^i&Zksfe,Odr/:]4^7&h2;1;;t6c5
%YYp+O>bf'Zjs*pT\a>9@XKFH#%tU?u/86k6/!t[.\%C=^2$\[$'ZGJ\PJ`pEd'b&o/t`S^m18S8UhI3[m^jGfe6',6SY/&RY413;
%76+];M#C*#/_aJ3+6@N#qajDTIpq*7:.KT<=K!\[F81GXo(d`?IbKGF_pQ[Ak4KMsCT,0%<P<>5r8=[%81X+MCDS^@a;Y:9!d7\:
%:o@HWOXT6?Iss=oWDc-Kdm&KaBo=DXS4ePF4'R#k:s*</pkC,0)7iL<O+,A>BB/8S!:K3Efp7=jfLpVV6V\elD^Ze7T^-7;[M)l:
%1E&VP&sL.$8A]lne0_]T^s?<C/*9f/[].K:c'e`r^Z\hbVPRMIe:50"$IVsF3ML4g[>upFeQP*l5sW:r)@q"<<s(%&a%?l@0>UXY
%^uUrc722h'!&lOKC00#T$L&e:#7?aaSM-LL2VTcb'/\%:7cnn+>jAqn'S"JEPC2h<R%kWA+-7Q]6LCE-M$'`nPLffJ>l*-U#[]P'
%Y+F0mi#rY[[@drnC'4bqVZ7RA5f3d%5%(A\'U9a_B3@)0<#L<RN%+Il6!m+\Qu"og53$l9glj,``b?#.rTN+lAa*kp+<s;nXmPOb
%&a%76S7NrRNj*OJNlC0LeHLk?G7L^1PU:"Oku3%Q=2C;i0)FcH5bC'V$n<kr>XRJ-B#E7I!-bGh)_-W!L6Jr@mbZLlil9-)H'N^J
%@Ql6H,/Tr<7<ojr]7dg_TL.,>oDC>k<`uQ%:U@TMM+umk!hh5jN9[d.l)=_Sc7pD'29/^:dRQ6`*2r(,#U&VI#Co6K<bsTqM:TcZ
%_24E$cM0n/4SXR$ZH?2JhVGZ.T(HlA3tna`!jSMLU5$Td@b^`j"G7ohUW`9<"$\V7SGW_aang:OCcWS9/^?OIfoOqo7W&dBR0g).
%o0XqSTE.FF@4O2u$3bAR`.ZNqF=F[BSY9l(&n!8nQn8!a,V2)8KVJ-@Vs-MG@$oSIaChpIcQHR2FtJru3-cUoaMKKf/W0K0OmEQ5
%XB!/M+:sR$TMuppZ@Y\eW@C:+_T*5TR7LXBU&W'9AN+-(YG9sX#gh:r>j86nL^enPR0T?&L4,r%Z%iP3X,A?93l0]b,Qb=<O+i19
%!pL)*O@@dKB+-m:Bns!*A76X0&<n1/?L=AOp<3*+n<3X+o_KNIM<'J<?KsqF`hhW!>fRXMEHlTH!Vrkhk*,lpK8jP);^XV5PtW`7
%DT[]7mB\ra[[K<NF^g9NRll67mMt.[%_lbIB?X1O2DnIY(;odEe@1rh'.[Arb#+)`NCNk_k)1#IU\,7Q[tcnhWA>BE3P#prq-#kd
%hs7Q6S8qtM+&TP*2[h$3dT8l,E<KpQqNRQG?mD/RQYF!_o*f)(3+&%SkZrG:;SK&`Iso6'kq!G(nCFn9A'<>#4@9W*XL3$_T-=s7
%np30)r&"m5Y#cM@a8Yksht,mX3u+g0r:GW1kKe:neD^d#hV]4lB;W9D;&s&o74f0!QN96,)8.5A3.u?a3d-DGo`1(1C(N)!m>QY@
%&?/;1Nj.=A/.i5HXtC!'fhbg[X=adH:>r'oFX0ZLV*R\)J3]B3BR'e&dQJY(3Xt&oR*@4,P^YH<@Sd.>',aOKI2#<ePt(GV#c1$I
%"MP4SIgXA_MKZ@6D2bcl;Nh5TA!kMZ;X#oRS"p8`q_jF(%Od[DPlU_X[&F&F5g6ac4fed2:ju/6jXWhJoq\)?Q99S6^Y6/t+)Z["
%7'+Kh&HFcJ6@@%KlF'#YOS2&[oi'/:Ens"K7B[8&6FHe%0hA(#''_/?A9d-MZAt#BS37dO=Yg&8ANi.Y0Q;X[!9prX#s0R=qU<Ej
%XR\6A8%th*`?,Ol<oHtq"F.UPO`,WX-JfM#9YJYIS7;NnZ^]\T^qjb%TR8RRQ8l[_,HT$%iVP;bT6Mo#qG<5oQFA9LDd*2c2&r%Q
%Tt*KVMFWm''M7iWU^@!c+:0m@.O'6LGb2^@S(s+7+7.bN;.\MV!0Ta33<KHgUPck08gltHYC1Zo]G2;^ndqu@Il=L'fs'nW>hfFN
%X/nPTbFa:10=,YoeXsVRQf/aUHYJ"!aC^?+p>X&r4YZ0f#0qmVg4HXC1?_pa'Z!O@?Qpmb+rJBtef(=Vhr75l<4=3M0iVpK.0?g#
%)Y_9^M3XAYYJrk#q!((01+5AkbbFkJ$Dn!+,5/bg),gupcqK:qU"905cfb/-7H[JuB,WgWmCB3)WaNh-96Bs-*a?DeTRN\LDCQ#)
%4@hH#_f-mk2SitX/nb!C<9T`uJ8+pk/C4Ae_j=;k&6fkqWI`sqGLFOH8CohMQtTEr7])1/K-9#;mF6CY+pNU(YBmb7:$rZ'5Z8qn
%-I.1VeI=ogC8ocOWujM_HU,p`Z,U&;3D"Jf/;C/4"kdHCmAjr]#ndi*R\$h\RN)IubI!5+i>MWoG/R1AoBi1I_I6972/<Ik6rjuI
%:'R2bPtgB,C&aVc1emfQq`1Y'Z;hi,;o0rQoJ@sN\GN11=7_1[B@d5*kDuf`IJCd2iBMhP\$*ZcSQ=mF,!Z;6BY1%9X9Ru#[83h.
%pGD=qY".lI:\"e\EPquMm/W<2HoQ,6qUMTCFZmaFE--d%(D^,DZRWkm5EJH2e[6FB#gq<S2%#&nJW\Y/b2t1?W1jG2X0=(dID[.!
%rcVHMk)Z[rC+W"_mToe:fBFSOWkf?Kp>BhK^/"+IeJ$ct-f0B!1&Xt')G9H,8Qs8&9)gS0s&>Vrl+[@MR"CR\:K$M6mrq=o8$a07
%p=c#DXbT:>_:BOc]?'oS/=P54a3k<E@FpD]UDu$g=0UISrDI4\4Psm`>iJTEZS'b[okm-d\mt>">!h4\C-o64oA74=:V3TU!qpLM
%Y0dSY/TnCKnn/h:@cM&qIRP9/5QoH5C.;)l45HnB_R6=G!VD^V%6)ioROj138%Z0rP^$#U&"5]$+Uj"d!-+jlcsV4OA.I;K&I`@A
%*]EgZeopqcs24l/K]Qqb`5F1&q^KDR;uD_In;\,'FnXIj@dS&B*2ml^>\%9)KT-,r]196/I=Yl`1i]P'[8_HmW6FpE/Z(5l/krUr
%[8a/^%*\n_49<63H>LE$dH#;bMA+^CV4,eH!.-G7M>&\!;c0HKS.+L<khA0.3#)T?aU+3.fSJHm4NNTn;&MhJ-s1=PV]j<'S%0L"
%0_".CdFmlsoB9JiF![T#dq3\B+OSO]2U#V5KKld%2N>U.4h6+fL>EI8N`gtkY*h]Bglp/cLeQm&Z0^Z`_VJO"oB93tDMM1Ye`1ha
%W6=napt"3iJ>ot(A94-mBIGS`&po^?U,qI6j]NLn"[,9I%ad.;&&(]fGuPAB]j5oaFkIQ>#Je5D_GLMSEuGI\P#1.tKI((I2ig'`
%h,>AJR$Z$hTts73KQ8oHYL\U^IpUZg6!jV0J.V7?q&RI+VB?7&[F=d-D\e;jK,Pj\8j&i'T\.j+/ae>F2139ZOB#TQOM4&;(>m"^
%5LWZslZ/25[3KppMZ$;NHup]sE,m@fHrt0bY=ni_dG>8;kd>)-4O)<$^W,/$MR&L3*q.Ln%IdDLQ9p:78u_n_L^$0e,4\ci-\/j7
%9A8ZQGr)WN.f45#qtV?6h6gM6?i:9E<`Kg<2E,4TQ7\j.lIH0p5.0F7JPcaZDoTH42-La!Zuq*BUuFphGT`fi5^VjRH.\AqK*aGO
%7Th]+!'=-k#fX%sg=jt,)<./6R$f*hQ5j2\r*s19eh9mknh88Vpj6BCphTA=lr->[XV"shVompMU<*iI/,J1_H&F@P9RI@S.RYpf
%7B^(c?+<nnh1C(f_\JN=>AFY1-36OTT0]lF%LHS($\teD\FCo$Xker%/ER\O0"*F0HaO(-.VOi^:Fg.+0cIlZ4a"Jp1=$^'Oe(MU
%=tqD6d-_6?LRApRXDiRkg%ad5;2U`(H8^h$-3`MF;p@OFhsUdjh0+4H*t:^9ko<uC\=rXY,/#@=nLDD>1E_E4c=^`(*AR[B>$9-&
%7\k*%'f>N%1d;7T>tkom#+j:jGkZXj3g<b7TKQZ9Sh25e(#nIV<;gQ1Y&7JScG<?d]pPi<O4O4,n=u%CTCgA9Idn)^)_15p?:_c/
%g@WK>Jlm//B=aV+5h*>Al#<e:_7#G]./9QW7RacON#fBT$XQSRqJUdb;c]!#jTmQ;HGl["++'/%GL;%1QU&1BqksBNL3s]I7H/+I
%6(\[7Sf.fX(eV%_4u[VRG6?63K%9fS7*QNd_42g%q@ZhnOdMn')'f:(m1eQ['6]8ZT'rkkM'35noPBCtn0%(,TQp48nIiJJ`c05f
%$M>e,.E#"HageCNR7\>'<6a)36JL<NlDQ1L_5]r&U^YV+\t+!Sa'Gq<7<10L]F"R+b_T;56*mJO,idSBoke6,0OeLq@"t[PQL/,:
%G2@pRa7tP<`&S9@2.oPcNAqKL8[Q9FN6$2#!NAp9l9<51W<;W<fqkF\X#O"!k0`H?/M:?0-5!8g+,3@hIuRuJFKT:USl%dn>8k:Q
%ktIu=5ef*DTjf;5qQVJ73Cag6NaXT:$apY2OsmeSq?O,uB\"'GN<k1ONtDf;b4=LbOcVq8BS=R^-IpRH:N`aV,.T%'/G]pcZ4BkK
%bJTf[9LfN:WEL_4P%^0O/p4=*c#`:WT85%_!-1uI`SQ)lJ31:-1/8%T$NMkNE"RM.N10O+\Q?F@pTIHCKLRhdZdh;q7=i]*ICIV=
%M$$#OJ\NDLTU;<<.V74=QGkIJ1d1T3"S$i=_U/Rta4PS5'p1#O]C!F4&8k*t0b)=2o6Io!Y\bFXNCD2*Qg#B/Z*EP)Er%/ls60`/
%[_GLJ<=jR^J]7C3($?HQF(ij<n6H(cAbX64"StjNYn0)IepdhOR-Je'N*j3.-;^S0#a"DC/ko:f'/kI?;&bo9g(92-nA#0,iha5I
%TPNHsdJ=3qAE'-e["S<$%O^J.GTse&)504k]6Ti#"rG+;<t^lXr(2#u"?VrLmhFi*GAF="B1PMW7c(<u$*H#=m8!W+hEARq:4NkQ
%P`qb5mX\^-6qg9ALLbUuoLFZSQ[WKM75K4Q3:F6SCFF@k*iWr&YZQ4trNC&-e:ai2hj:a@)L9_?bX4'ubpcC"6_K+-@]+"]7@Y!E
%Q]pE\LMXWZk2-j<m,(a<fCY368m<Meg^$W,YAd0"Kn:<pk;3O\?L1^>-"PTgMKT,2HZQI4=C;<aV18E0=-;V+G9?A#V+8f)=Ec^"
%FSbFj950<@=YC45QYN""s,QrAAueeNSf4jgU0`?+D8_lZ/'h^]WfE2j!U]jSb2`N"b!TnC.2ImA_,*^n6eZd3=F/9#9`8]t+*7li
%ZQ(=4fqOt+:@&]a=s?:8]RYo&G^;o%!15T_XJpg;,qD;;JQs&Q2t+oGmeA3"aXld9n<7d.PD2AqYidWM)"<9h]DO<<rC13B2B-NK
%!=M?l8aVJ$j,>E"ln$43(#_t*TOOk1G'"Gm#8,tIht<IGa0T+beZ%PODlV&Z`]aEebI\o/VQ=!0Ds-+n9PKU)[Kuo%R=$tFl;RIg
%(KFBuE'?.#=+f4Wf,U87NZprOU+XcAXl.eC3&XVf'[:u+4O":,,'j\^q8RpU?q;K0Xs0XJMr`ZU*P(/'O7cFO9(,aT)-$!qXL(AY
%0Z5nLe@`M4)F5)ahVc@bT.t#:c2;_ZHQiM+g%=OS`m/n6bJ*eT5PiiW^cW)N`X%=gj`IM99.G`&<UlO$7'.0F7'Ypm(a^g!f.R*&
%LK9@BmP!pEPN+D6g%W5Z]3kSKEV1ped44=7.kCN@mZ)gNX5`\rlq&"%=s31t66JU+O(M%:eSfn[&,5"fN@++<Il$;8Qem;tm;VgG
%JtuiK`39hD<*tg/d5\=`f3#BshaHr=CE\11D7/j47!S@&%-Qu7HcsC?6LKT<*(AbSA$*S'"4AG=Ckto*3"J2>PKkBcoHGe:T&2p)
%+W;@.N(Wjo,m.=FfV&_^(]m5(>&g*,eE-ln;5Q+5hhFWN?9+n'eZ`Rg;]XjO?n"FO!aWdlr8b3>1pZ34<J--8;oh0k"%>6RZcg:A
%f3a0JN_#I@^..P(>IR9<d+*U;."6#GSpS^[JE9OCAQ?(L3"hcMQPgie!#f[SW2U]aOC!D&QTnG4^!8tEdFg\.Y9q4@@Y(J+;G"Lo
%&iggS`3=5HRMBajj2b4Ph-Ct0GKrUJ5A^t,`SBHsSI]'t-<X'Uo.UHig^-^-B8oSMNEhKj'/k+gZB<rVW/lc3"hk!FduP?snEkG5
%e(9YNYi]L.&qK'aZaHmD>6s"l4,n-BecD[!RR)YU-ZJpTP`GGpqCdqQOlF_`.1e]0B%9]`;'1Dj5"]2W"cpY=3K^lj&'q[h3+NK)
%!o!-3-;31_03>9bJKj4.5J2K\O8kLIZ">DSDPWBo)ng*ZTj-rSLm$,-P`9o']8_-OR!OeDgs9Z:%p53D@A,X0LD15f4uC.[#gh]O
%*>gSB4G@?.IB0u!hpW8W!b.c?h?EJN$UDE18Fl.+oln=c%J:4Kr)&pIr859H%qX#EhE?<E4N&O.ID'<*%jj@uKF!Q)j7U_dN,*A`
%/26.O[14G'E_^fuY[$H3E"ab^h=V03OSET7]n!XV9/KKg;ftHa*\'f6C"X"-1t9lZIFO_7KO[PCXE/4),9ZJ]C@^12rj5=cKnm'-
%HT@a@d0pfU*D]]=Ado#MM4&@K!ak4S@aK>$3Ji.[\$b?tB>6lW]5Q)9#8O^gl69GgH0n-ZK_u4)*[b62C=Zg+(JWo:V]omd#pK9]
%mE)u;V2g^uf\>2pP8-im$P5Ghc:M]gm8Tenfn"(cTW,rEV4hBXkUM[!ODL[E2=F$h\`mUFB$4NuHTnb#g8k^R(]8]+-WWn#CF=c>
%Wug+sn8Zk_Ja.\@6Bn+S=5rY#TK-J!C0CCs>-%Wo4nBsXbYJ[fUoY-"6(VE4&*9aIS$C%&2UBTJ\!:E)J7fR+[2!;e+T^q'DB&m9
%//t\:(<TMG8o`?oZCiZ/4;Kl1.K2k\+,</9_MHU((H/UHeC6)b<e(a[XMOb<_aPE+018FN"KCXb>H]^T6g(sb?`&cHJ_/sY1-FM`
%W.U/IXImqbSi-^0r0S:(??[RLJDI7$J<R5AmQ!ljU*/$dg,3BAR>@(<E/N\\m%3jZDikkCdhCFlc4G/!UHGBQCH'O[f)\cA0bKE1
%;IFK5aWt6Y$q@\!M$NM+nGChL#QZXUO#K4D^$=52DZqr-l97>1\lU_,A_XnmWn*SZ.9m\CYnIqL3F+1gVcdrUS4L.PZYQfC1uM(I
%\-L3haNREJC=/Q.+/h+MhgT`u6BtMqW%AWlZ>V&5ZA1"BPH@F8O9p71IQt2cjbh$c5Gbpgd5q9U-ksM-X%:3]bk]^d8E+;X(V1b2
%VHZYpO)J:gdp040<&@Imq]G^s_n1VUY2LhN'Jd'sr<<\fg]W70$K+f79bRl'qBBMBW7U?D7kcded!=WPIBnsQq^rA,NS=ZDJiZf#
%9,sb`quN-GCYed53DK$Z+`&?"!Z)'q$U5rO7E&+ch0."`m*Q@uL-+U$SV'l'PTXJ>qdaSGd9dSZ*0P.LQUg(KfKfcDD,I93DO[7:
%kM^-'YHR`7HYB1KGNk,0I/nU#kD>WNWTF3V1j[5FY_JPMf%;+J?u7gu2h@-J@T\d3<'YkUAA'oaI$)>W2uLHQ/C$Nna_H'SW!9S(
%TY$tMF]IiE3^m_)=GX8`0qfL2#XP$Z_eauF5r>R.9&.?=GHtP0#JGK'+':h?2Rad1_XcVjg(CEs49pkVJg-Efn?`,P3E&892f8JA
%Ds"OChflMMmnf3<h_[cKi.$=km/g4X0s>bEZatg78YU-u?D2mgherjA0"Eh'=?WVTs5=b663=rB(K:kZP[hq;</,Sp8\c<IP\E^?
%L,LY_E'S'Ek8sbX_`aiC45,-YOsl)([C;`D3b2e9-P,efY0h\TCUZK$>,OoCCUPp1l6-C:MU3&[0iV@V$H(r,]_TZOXY-:4kkA7'
%RHCId58UjD$![C&/<3WSSL3tP*.N*T:m^nq@oCNJV\)OBq:urRbT^r3nr!bW7QT+':#WUbM@?teOT-/XISBls;hN!"HW3GJ_+4CJ
%%UJWdC7O<,f'#@5Am45TMTh1g%YU\6,#1rf_`&1:UV(9$/o<C-N^cQsS=pDT)9#msP%@S')8nFS7(=&;9QQ>1nACY7dq3K'bsd5B
%6#`dfI?Xb9NHp5U7]u3J=75)p<DjPh1Vs^5DVb4LF]!3V'_?>T"YcF0NrkSiOV32m_#];]l0NR7jE5kJ=j.@j:17s;>afT_p"N#>
%eAgPmXHTT,0t3sYFo(hZa\6b;11T,jO>E@]%F0_.BC&CkIBl]>(#AFq0LqiW2N+Cp"M(g?8?9po6BrOn!U0`dg3Bu4$N[R>P(]X.
%E^nCN5W*$i5+(>\04"+"r2jTLm<u$""Y\+S4\Q*$D<\SP9WcQ*.up@V?id+&W#X;!9f2A3H8*e,3rl\'Hf"'_MpR+-m&!Nc/B"7[
%`*ugkRI;uS'm?$)\F5nk:sksTj5#7jE+Cq/%9-&'H/9N+$L^AI[]akKlVIDuB7K_u567G[T1lK:^=/+HH$J&][Ct/,'.p4Dc67V/
%7tA$!4rI:560e*),OF&S"Ikq_HMCS1pXW]M_[Zb4QiO!Z*i/#EN7!EuCo-H_:EpC"<&]:WaFI4L$u_(M3a7)8WHg:&7>Fe%dW_S>
%rmmF,TFH&uj(L#bjN:K?26=fXKLUMXg,2?3oCSE:B2.;+mHl/$1d]$CMBn*5T;OfMGAEOS>E9s[_\f1]SmA03DT^gkqtp@GHlX^6
%c)?k&eq1mmbB+<2[,'7Ikj=G0mkhq(pG6H?JJOn1F?I_GE)!9>%Wk/<Y1YA*b5P'm^UH1[S6gfem'XUPl89UIoh/Zhb1_H'<pb4U
%=HNsX>4,S"h*be9,.\fV0`VrK?6/a4Qk9@J(I!89)Gt&#0Jj+*'u/>/i;6Osa8KgrR"Ig)enV"=BTRBY0Qpen.j:_oYe*`fhrIo8
%+Q%Ru!rQ"D_>!<8DIC`I1YSW-W\#LK@0K]De'?t(ii"oZ:'d6p_b))tEPEkBRSq\4XU3'9j1EKdnA"tE]1R9P*tk=^*GUsbMVCWq
%!h&ISM_OeN;kpqZ[<tKC/()F:jFrZ/KQf2P-dtFF:63Jc5PBPLk*M]INqtF.rVd?-m^N5kjfcGtlM$p!Fp\0Es8;P.^A<o*s7JU+
%rRL@dp/f$)QX>76eV@N3p:%R,?i?>W?[_^on%\^c5Q'sD?[_^9s8.$?%h`b`2uN>Us1A<kJ,.c)rP(7*3Hb~>
%AI9_PrivateDataEnd
