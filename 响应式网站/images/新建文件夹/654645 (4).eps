%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Fat.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Diana
%%CreationDate: 8/13/2010
%%BoundingBox: 0 0 596 639
%%HiResBoundingBox: 0 0 595.2798 638.5821
%%CropBox: 0 0 595.2798 638.5821
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 120 128 8%%BeginData: 31680 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A8A8A8A7FD08A8CAA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8
%FFCAFFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8
%FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAFD0BA87DA8A1A8A1A8A7A8A7FD
%08A8CAA8A8A8CFA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD0AA8
%A7A8A7A87DA87DFFA8A1FD08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FF
%A8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7A8A8
%7DA87DA8A1A8A1A8A8A8A7FD08A8CAA8A8A8CFA8CAA8CFA8CFA8CFA8CFA8
%FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8
%CFA8A8A8CAFD0AA8A7A8A8A8A1A8A1A87DFFFD06A8CAA8A8A8CFA8CAA8FF
%A8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CF
%A8FFA8CAA8CFA8A8A8CAFD04A8CAA1A8A1A8A8A8A7FD08A8CAA8A8A8CFA8
%CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8A8A8CFA8A8A8CAFD06A8
%A7A8A8A87DFFFD08A8CAA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FF
%CAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD07A87DA8A7
%A8A1A8A8A8A7FD08A8CFA8CAA8CFA8CFA8CFA8CFA8FFA8CFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CF
%A8CAA8CFA8A8A8CAFD06A8A7A8A8A8A1A8A1FFFD04A8CAA8CAA8CFA8CFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8
%FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAA8A8A8A1FD08A8CAA8A8A8CFA8CAA8
%CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CAA8CFA8
%A8A8CAFD08A8A7FFFD06A8CFA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFF
%A8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CF
%FD04A8CFA7A8A7FD08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8
%FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CAFD0AA8A1FFA8A8CFA8CAA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCA
%FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CAA8CAFFFD07A8CAA8A8A8CF
%A8CAA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CF
%A8FFA8CFA8CFA8A8A8CFFD06A8A7FFCAA8A8A8CFA8CAA8FFA8CFA8FFA8FF
%A8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FF
%A8FFA8FFA8CFA8FFA8CAA8CFA8A8A8A7FD08A8CAA8CAA8CFA8CFA8FFA8CF
%A8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CF
%A8A8A8CAFD05A8FFCFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFCAFFCF
%FFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD23FFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8
%CFA8FFA8CACAFD05A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FF
%CAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFA8FFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFF
%CFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8
%A8CAA8FFA8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCF
%FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD05FF7D75A7FFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8
%CFFFFD07A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFA74B447DFD04FFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CFA8CFA8A8A8CAA8A8A7FFCFA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFF
%CFFD0FFFA1756F757CA7A1A7A8FD1BFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%CFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFFFA8A8A8CFA8CAA8CFA8
%CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFA84A6E756F6E446E4A4BA1CFA8FFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8
%FFA8FFA8FFA8CFA8FFA8CFA8FFA8CAA8CFA8A8A8FFCFA8CFA8FFA8CFA8FF
%A8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFA87C4A756F754B7675754A6F4A76CFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFF
%CFFFCFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFA8CACAFD05A8CFA8CAA8CFA8
%CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFCA
%FFCFFFCAFFA77CA17C4A4A51A7A8CA516E4A4A51FFCFFFCAFFCFFFCAFFCF
%FFCFFFFFFFCAFFCFFFFFFFCFFFA8FFCFFFCFFFCFFFA8FFCAFFA8FFA8FFA8
%FFFFFFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8FFFFA8FFA8FFA8FFA8FFCAFF
%A8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD0DFFA87CCAFFCAA1
%A1FFCFCFCACA6F6F4AA1FD0CFF7C7CA1FFFFFFA1A8A1FD05FFCFFFA7FD0B
%FFCF7D7CFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFCFA8CFA8CAA8CFA8CFA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFA87CA8CAA7CFCACF76A1CACAA8764A6E20A7FFFFCFFFCFFFCFFF
%CFFF514A7C7DA7CFA84A2651A8A8A8A7A8515151A7A7A8CF7DA8CAFFA8A7
%A87C267CA8FFA8CFA8FFA8CFA8FFA8CAA8CFA8FFCFA8FFA8FFA8FFA8FFA8
%FFCFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFF7CA7CFA17CA8CFCA7C267CCACF756F4A4A76FFFFFFCFFFFFFFCF
%FFFF4A51FF51514A514A514A51514B4B7626514B5151514B4A26A8A8514B
%5126A7FFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFFFA8A8A8CFA8CAA8CFA8CF
%A8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFF
%CFFFCFA17CA14B7C7DCAA7CAA8CA7CA1A775446E2076FFFFCFFFCAFFCFFF
%CAFF7D767C764B514A7C5176517C517C765151514B5126517C517DCA4B51
%264AA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8FFFFA8FFA8FFA8FFCAFFA8
%FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD11FF51A77DCFCACFCACFCACFCA
%FFA8CA516E4A4A76FD0BFFCFFFFFFFCFFF7D767CA7A7FD0EFFCAFF7D76FD
%05FFCFFFCAFFCFFFA8FFA8FFA8FFFFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8
%FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFFFA77C
%FFA8CAA8CAA8CAA8CAA8CFCAA7514A2075FFFFA8FFCFFFCFFFCFFFCFFFCF
%FFFFFF7D267DA12051A8A87CA7A87D7CA77DA1A7A87C7D26A776A87D7C7D
%A17CFFA8FFA8FFA8CFA8FFA8CAA8FFFFA8FFA8FFA8FFA8FFCFFFA8FFCFFF
%CFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA8A7
%7C517DCACACFA8A74B75A1CACACFA1754AA77676A7FFCFFFFFFFCFFFFFFF
%CFFFFFA720FF7D4A264B2651267C267C4A512651267C264B2651514A4B51
%2076FFFFCFFFA8FFCAFFA8FFA8CFCFA8CFA8CAA8CFA8CFA8FFA8CFA8FFA8
%FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFA8A7A8
%A152A7A7CAA8CA7D5152A7A1CAA8A74A444B7C767CA8FFCAFFCFFFCAFFCF
%FFCAFFCF7D76767C7C517C527C7C7CFFA751FD057C517C51A751A87D51A1
%FFA8FFA8CFA8FFA8CFA8CFA8FFFFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFF
%FFFFCFFFFFFFCFFD11FFA17C7CA7A1A7A8FFCACFCACFA7CAA8CFCACFA175
%75A176CA7CCFFD28FFCFFFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8CF
%A8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFA851A1CAA7CAA8CAA8CAA8CAA8CFCACAA7CAA7CAA7CAA1A17CA1A8FF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8FFCFA8FFA8FFA8FFCF
%FFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD07FFCFFFFFFF7DCAFFA77C
%7CA8CAA7CFCACFA8CFCACAA8CFCACAA8CACACAA7A7A17CA8FFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFFFA8CAA8CFA8CFA8FFA8CFA8FF
%A8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFA7A7A7FFFFFFCFCA7DA77DA77CFF
%A17C51A1A8CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA1A17C7DCFFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFF
%A8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFFFA8FFCAFFA8FFCFFFCFFFCF
%FFCFFFFFFFCFFFFFFFCFFD06FFA77CA8A8CAA8A87DA8FFFF7CA8A7A17CCA
%CAFFCACFCACFCACFCACFCACAA8CFFD04CAA1A776CFFD22FFCFFFFFFFCFFF
%CFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCF
%FFCAFFCFFFCFFFCFFFCFFFA86F93A1A7A776FFFFFF7CA1CAA152CACACAA8
%CAA8CAA8CAA8CAA7CAA8CAA7CAA7CAFD04A17CFFFFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FF
%CAFFA8FFA8FFA8FFA8CFA8FFFFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFFF
%FFCFFFFFFFCFFD05FF6F938C93A1A87DCFCF7CA8FFA87CA7FFCACFA8CFCA
%CAA8CFCACAA8CFCACAA8CACACAA1A7A1A07CFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFD07FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCF
%FFA8FFCAFFCFA8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFF
%CAFFCFFFA86F68B58C926F76527C7CCFA8CFCACAA8CAA8CAA7CAA8CAA7CA
%A8CAA7CAA7CAA7CAA1A17CA1A17652FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCFFFA8A7A1FFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FF
%A8CFA8CFA8FFFFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD08FFA7
%A19A8C93686875CF76CACAFFCACFCAFFCACFCACFCACFCACFCACFCACFCACA
%A8CFCAA7A1A7A1A7A17CFD14FFA7C9A7C97CCFFD08FFCFFFFFFFCFFFCFFF
%CFFFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCF
%FFCFFFCFFFFFA752A8A16E446E76FFA876CACAA8CFA8CAA8CFA8CAA8CAA8
%CAA8CAA8CAA7CAA8CAA7CAFD04A1A07C75A8A8FFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFCFA0CEC9CFC9A07DFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFF
%A8FFA8CFA8FFA8FFFFA8FFCAFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFA7A7A8A17CA176FFFFA176FFCACFA8FFCACAA8CFCACFA8CFCA
%CAA8CFCACAA8CACACAA1A7A1A17CA1A1A17CA07CCFFD04FFCFFFFFFFCFFF
%FFFFCFFFA7CECECFCECFA7A1CFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFF
%A8FFCFFFA8FFFFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCA
%FFCFFFCAA17DA8527C7DA7CFFF517DA8CAA8CAA1A1A7CAA8CAA8CAA7CAA8
%CAA7CAA7CAA7CAA7A1A1A176FD05A1A0A051A8FFFFCFFFCAFFCFFFCAFFCF
%FFCFA7A7CFCECFA77C7CFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8
%FFA8CFA8FFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFD07FFA8A87C7C
%7699446FFFFF5151A7FFCACFCAA1A7FFCACFCACFA7FFCACFCACFCACAA8CF
%CAA7A1A776A7A1CACACAA1CAA1A151FD0DFFCFA7A7A77C76267DFD0AFFCF
%FFFFFFCFFFCFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFF
%CFFFCFFFCFFFFFFF7DA1A79968938C6E6FFF51A151A1A8CFA8CF76A7CACA
%A8FF7DA1A8CAA8CAA7CAA8CAA7A7A1A176A1A7CAA7CAA7CAA7CAA1A051CF
%FFFFCFFFCFFFCFFFCFFFCFFF7C51517C514B7CFFCFFFCFFFCFFFCFFFCFFF
%CAFFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFFA8FFCFFFCAFFCFFFCFFFFFFFCF
%FFFFFFCFFFFFA776A7CAA168B5939368A1A7A1FF7C7CFFA8CFCAA851A7A8
%CA7C7CA8CFA8CFCACAA8CFCAA7A1A776A1A7CACACAA7CACACAA7CAA1A175
%A7CFFD05FFCFFD04FFA8757C76764BA8FD04FFCFFFFFFFCFFFFFFFCFFFCF
%FFCFFFCFFFA8FFCFFFFFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFF
%7D7676CAA8CAA1A1756F68687C7DA7CF7D51A8CFA8CACAA75176517CA7CF
%A8CAA7CAA8CAFD04A176A1A1CAA1CAA7CAA1CAA7CAFD04A1767C7DFFCFFF
%CFFFCAFFCFFFA87675764B75A8FFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FF
%A8FFA8CFA8FFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFF7C76A7
%FFCACFCACFCACA7DA74B7CA1FFCAFF7651A8FFCACFCAFFA8CACAFFCACFCA
%CFCACAA1CAA1A176A1CACAA8CACACAA7CACACAFD05A1C9A17C76CFFD08FF
%7C7675A1A1A1FD0CFFCFFFFFFFCFFFCFFFCFFFCFFFFFA8FFA8FFA8FFA8FF
%A8FFCFFFA8FFCFFFCFFFA851A8CFA8CAA7CACACA7C7C7CA7A7CFA8CAA8CF
%5151A1CAA8CAA8CFCACAA8CFA8CAA7CAA1A17C7C76A1A7CAA7CAA7CAA7CA
%A7CAA1A1A0A1A1A1A0A1A1A151CFFFFFCFFFCFFFCFA176767CA176A8A8FF
%CFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFFA8FFCFFFCAFFCF
%FFCFFFFFFFCFFD04FFA17CCFA8CFFD04CA7CA1A7FFCACFA8CFCACFCAFF7C
%5176A8A8CAA8CAA8CAA7CAA7A87DA1767C7CCACACAA7CACACAA7CACACAA7
%CA7CFD09A151FFFFFFCFFFFFCF767675A1A1A176A7FD04FFCFFFFFFFCFFF
%FFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCF
%FF76A8A8CAA7CAA8CA51A7CACFA8CAA8CAA8CAA8CAA8FFA1765176767D76
%A17C7D767C767676A7A7CAA7CAA7CAA7CAA7CAA1CAA7CAA1A176A1A0A1A0
%A17CA1A17676FFFFFFCFFFFFA14B764B76517CA8FFCAFFCFFFA8FFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFF
%CFA1A8CFA8CFCACFA77676A1CAFFCACFCAFFCACFCACFCAFFCACAA1A17CA1
%7C7C7CA7A1CACAFFCACAA8CACACAA8CACACAA7FD04CACFA17C76C9A1A1A1
%A7A1A1A17CA7A7767C7CA77C7C767575A7FD0AFFCFFFFFFFCFFFFFFFCFFF
%CFFFCAFFFFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFF7CCAA8CAA7CAA8
%A8517645A1CACAA8CAA8CAA8CAA8CFA8CAA8FFCACFCACFCACAA8CAA8CAA7
%CAA7CAA7CAA7CAA7CAA7CAA7CAC9A77CA17C76FD04A1A0A1A1A1767676A0
%76A076A176754B7DCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FF
%A8FFA8FFFFCFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFCFA1A8CFCACAA8CFCA
%767CA176A1A1CACAFFA8CFC9C9C3C9C3C9C3CFCACAA8CFCACAA7CAA8FD05
%CAA7CACACAA7CACACAA7A14B76A1A151FD0AA1C9A1A1A1A7A1A14AA7FFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFFFA8FFA8CFA8
%FFA8FFA8FFCAFFA8FFCFFFCAFF7CA8A7CAA7CAA7CA7C4B51A1A7CAA8CAA1
%C2BCC2BCC2BBC2C2C3A1CAA7CAA7CAA7A77CA17CA1A1CAA8CAA7CAA7CAA1
%CAA7CA517676A1755176A1A0A1A0A17CA1A0A17CA1A0A17CA17C51A8FFCF
%FFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFF
%CFFFCFFFFFFFCFFD06FFA1A7FFCACFA8CA7C7576CFCFFFCAFFC2C2C2C9C3
%C2C2C3C2C9A8CAC3CAA8CFCACACACFCACAA1A17CA7CACFFD04CAA7CAA1C9
%A1CA7651A1A151A7A1A1A1A7A1A1A1A7A1A1A1A7A17CA8FD0FFFCFFFFFFF
%CFFFCFFFCFFFCFFFFFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFA176A1
%A7A1A17551A1FFA8CFA8CAA8CAA7CAA8CAC2C3A7CAA8CAA8CAA8CAA7CAA8
%CAA7CAA8CAA7A7767676FD07A17C7C4B4B76A1A17C51A1A1A1A0A1A1A1A0
%FD04A1767CFF7DA8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFF
%A8FFA8FFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFD05FF7C7C7CA1517CA8FFCA
%CFA8CFCACFA8FFCACFA8FFCACFA8CFCACAA8CFCACAA8CACACAA8FD04CACF
%A7A1757651514B514B514B7CA1C9FD04A151FD0AA17C51FFCFA7A1FFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8
%FFA8FFA8FFCFFFA8FFCFFFCFFFFFFF517CCACAA8CAA8CAA8CAA8CAA8CAA8
%CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CAA8CAA1A17CA076
%A17CA1A1C9A1CAA0A1A1A04BA1A1A17CFD04A17651FFCFFF76A1CFFFCFFF
%CAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFCAFFCFFFCFFFFF
%FFCFFFFFFFCFFD07FF51A7FFFFCAFFCACFCAFFCACFCAFFCACFCACFCACFCA
%CFCACFCACFCACAA8CFCACAA8CFCACAA8CFCACACACFFD06CAA7CACACAC9CA
%FD04A151A1A1C9A1A176767CFD15FFCFFFFFFFCFFFCFFFCAFFFFA8CFA8FF
%A8FFA8FFCFFFA8FFCFFFCFFFCFFFFFFF51A1CACFA8CAA8CFA8CAA8CFA8CA
%A8CAA8CAA8CAA8CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CA
%A7CAA7CAA7CAA7CAA7CAA7A7FD04A14BA076A17C7DA7FFFFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFFFCFFFA8FF
%CFFFCFFFFFFFCFFFFFFFCFFFFFFF51A7FFCFA8FFCACFA8FFCACFA8CFCACF
%A8CFCACAA8CFCACAA8CFCACAA8CFCACAA8CACACAA8CACACAA7CACACAA7CA
%CACAA7CACACAA7CAC9CAFD05A1A076FFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFFFA8FFA8FFA8FFA8
%FFA8FFCAFFA8FFCFFFCFFF517DCACFA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8
%CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA1CAA7
%CAA1CAA7CAA1CAA7CAA0A1A0A1A1767CFFCFFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFF
%CFFFFFFFCFFD05FF7C7CCFFFCAFFCAFFCACFCAFFCACFCAFFCACFCACFCACF
%CACFCACFCACFCACAA8CFCACAA8CFCACAA8CFCACAA8CACACAA8CACACAA7CA
%CACAA7CACACAA7C9A1A1A1A7A1767DFD17FFCFFFFFFFCFFFFFFFCFFFCFFF
%FFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFF7D51A8CFA8CFA8CAA8CFA8CAA8
%CFA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7
%CAA7CAA7CAA7CAA7CAA7CAA7CAA1CAA7CAFD04A1A0A1A151A7FFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FF
%FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFF51A1FFCACFA8FFCACFA8FFCACFA8
%CFCACFA8CFCACFA8CFCACAA8CFCACAA8CFCACAA8CACACAA8CACACAA8CACA
%CAA7CACACAA7CACACAA7CACACAA7CACAC9FD05A1C97C51CFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFFFA8CF
%A8FFA8FFA8FFA8FFA8FFCFFFFF7C51FFA8CFA8CAA8CFA8CAA8CAA8CAA8CA
%A8CAA8CAA8CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CAA7CA
%A7CAA7CAA1CAA7CAA1CAA7CAA1CAA1A17CA1A0A17CA14B7CFFFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFCA
%FFCFFFCFFFCFFFCFFD05FF4BA8CAFFCAFFCAFFCAFFCAFFCACFCAFFCACFCA
%FFCACFCACFCACFCACFCACFCACFCACAA8CFCACAA8CFCACAA8CFCACAA8CACA
%CAA7CACACAA7CACACAA7CAC9A1A1A7A1A1A1A7A1A14ACFFD16FFCFFFFFFF
%CFFFCFFFCAFFFFA8CFA8FFA8FFA8FFCFFFA8FFCFFF7C51CACFA8CFA8CAA8
%CFA8CAA8CFA8CAA8CFA8CAA8CAA8CAA8CAA8CAA8CAA8CAA7CAA8CAA7CAA8
%CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA1A1A0A1A1A1A0
%A1A17551FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCF
%FFA8FFA8FFA8FFFFCFFFA8FFCFFFCFFFCFFFCFFFFF7676FFCAFFA8FFCACF
%A8FFCACFA8FFCACFA8CFCACFA8CFCACAA8CFCACAA8CFCACAA8CFCACAA8CA
%CACAA8CACACAA7CACACAA7CACACAA7CACACAA7CAC9CAFD09A1A7A051A8FF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFF
%FFA8FFA8CFA8FFA8FFA8FFCAFFCAFF4AA1A8CFA8CAA8CFA8CAA8CAA8CAA8
%CAA8CAA8CAA8CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CAA7
%CAA7CAA7CAA1CAA7CAA1CAA7CAA1CAA1A17CA1A0A17CA1A0A1A0A14A7DFF
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8
%FFFFCFFFCAFFCFFFCFFFFFFFCFFFFF517CFFCAFFCAFFCAFFCAFFCACFCAFF
%CACFCAFFCACFCACFCACFCACFCACFCACFCACAA8CFCACAA8CFCACAA8CFCACA
%A8CACACAA8CACACAA7CACACAA7CACAC9A1A7A1A1A1A7A1A1A1A7A17552FD
%13FFCFFFFFFFCFFFCFFFCFFFCFFFFFA8FFA8FFA8FFCAFFA8FFCFFFCAFF51
%51CACFA8CAA8CFA8CAA8CFA8CAA8CFA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8
%CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7C9A1
%A1A0A1A1A1A0A1A1A1A0A17551CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCAFFCFFFA8FFCAFFA8FFA8FFFFA8FFCFFFCAFFCFFFCFFD04FFA74A
%CACAFFCACFA8FFCACFA8FFCACFA8CFCACFA8CFCACFA8CFCACAA8CFCACAA8
%CFCACAA8CACACAA8CACACAA8CACACAA7CACACAA7CACACAA7CACACAFD0EA1
%51FD05FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FF
%FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA84A7DFFA8CFA8CAA8CFA8CAA8CAA8
%CAA8CAA8CAA8CAA8CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7
%CAA7CAA7CAA7CAA1CAA7CAA1C9A0A17CA1A0A17CA1A0A17CA1A0A17651CA
%FFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFF7651A8FFCAFFCAFFCAFFCAFFCACF
%CAFFCACFCAFFCACFCACFCACFCACFCACFCACFCACAA8CFCACAA8CFCACAA8CF
%CACAA8CACACAA7CACACAA7CAA1A1A1A7A1A1A1A7A1A1A1A7FD04A151FD11
%FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFF
%CFCF26A1A8FFA8CAA8CFA8CAA8CFA8CAA8CFA8CAA8CAA8CAA8CAA8CAA8CA
%A8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA1A1A0A1A1A1
%A0A1A1A1A0A1A1A1A0A1A1A17551CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFFA8FFCFFFCAFFCFFFCFFD04
%FF7C4BCAA8FFCACFA8FFCACFA8FFCACFA8CFCACFA8CFCACAA8CFCACAA8CF
%CACAA8CFCACAA8CACACAA8CACACAA7CACACAA7CACACAFD13A17551FFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCFFFFFA8
%FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA85176A8A1CFA8CAA8CAA8CAA8CAA8
%CAA8CFA8CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7CAA7CAA7CAA7CAA7CAA7
%CAA7CAA1A7A1A17CA1A1A17CA1A0A17CA1A0A17CA1A0A1A0A1267CFFFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8FFFF
%CFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFA84B7DCAA8CFCAFFCACFCAFFCACF
%A7A7A7CFCACFCACFCACFCACFCACFCACAA8CFCACAA8CFCACAA8CFCACACACF
%CACAA1A7A1A1A1A7A1A1A1A7A1A1A1A7A1A1A1A7A1A1A1C97C4AA8FD0FFF
%CFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFFFA8FFA8CFA8FFA8FFA8FFCFFFA8
%FFCFFFCAFF7D4A7DA8A1A8A8CFA8CAA8CFA8A1767551A8A8CAA8CAA8CAA8
%CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA8CAA1A7FD0AA1A0A1A1A1A0A1A1A1
%A0FD04A15151FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCF
%FFA8FFA8FFA8FFA8FFFFA8FFCFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFF7C51
%7DCAA1A8A1CACACFA8FFCAFFCAA77CCFA8CFCACAA8CFCACAA8CFCACAA8CF
%CACAA8CFCACAA7CAA1A1A1A7A1A1A1A7A1A1A1A7FD0DA17C26FFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFFFA8
%CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFF7C4A76A8A1A17DA8A1A8A7
%CAA8CAA8CFA8CAA8CAA8CAA7CAA8CAA7CAA8CAA7CAA7A8A1A7A1A17CA1A1
%A17CA1A1A1A0A1A1A17CA1A1A17CA1A0A17CA1A0A1A1A020A7FFFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFFF
%A8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFA75176CAA1A8A1A8A1A8
%A1CAA7CAA8CAA8CFCACAA8CFCACAA8CAA8CAA1CAA1A7A1A7A1A7A1A7A1A7
%A1A7A1A7FD05A1A7A1A1A1A7A1A1A1A7FD04A126A1FD14FFCFFFFFFFCFFF
%CFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCF
%FFA8764BA1A1A8A1A1A1A7A1A1A1A7A1A1A1A7A1A1A1A7FD13A1A7767C7C
%A1A1A1A0A1A1A1A0A1A1A1A0A1A17526A7FFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8FFA8FFCFFF
%A8FFCFFFCFFFCFFFCFFFFFFFCFFD04FFA751767DCAA1A8A1A8A1A7A1A8A1
%A7A1A8A1A7A1A7A1A7A1A7A1A7A1A7A1A1A1A7A1A1A1A7A1A176A1A1C9A1
%C9A1A7A1A7A1A1A1A7A1A1765151CFFD04FFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFCAFFFFA8CFA8CFA8FFA8CFA8
%FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFFFFF7C514BA1A1A8A1A7A1A1A1A7FD
%0AA17DA1A1A17DA1A1A17DFD04A17C2651767C757C767C767C767D7CA176
%764A517DFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8FFA8FFFFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFF
%FFFFCFFD07FFCF75267676A8A1CAA1CAA1A8A1A8A1A7A1A8A1A7A1A8A1A7
%A1A8A1A7A1CAA1A776514A6F6E936E6F6E936E6F6E6F6E6F6E6F207CFD18
%FFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCAFF
%A8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFA84B6E6E4A75767D7DA8A1A7A1A7
%A1A1A1A7A1A1A1A7A1A1A1A7A1A17C764A4A446F6E6F6E936E6E44936893
%686E446E447CCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8FFFFA8FFCAFFA8FFCFFFCAFFCF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF7C9999996E754A75517C767D7D
%A7A1A7A1A8A1A8A1A8A1A1767C4B4A4A939293929392936E936E4A6E9392
%6F4A934451FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFFFA8CAA8CFA8CFA8FFA8FFA8FFA8
%FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFF6E99929992996E926E6E4A4A4A
%514B514B7651514B514A4A446E6E936E936E936E936E93686F206E689344
%936826A7FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFFFA8FFCAFFA8FFCFFFCFFFCFFF
%CFFFFFFFCFFFFFFFCFFD08FF7C6EBB99BB99BB93BB9999929992996E996E
%936E99929992BB939992999293929392939293924B6E936E6F8C4A7CFD19
%FFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8CFA8FFA8FF
%A8FFCAFFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFF7C6EBBBB98BB99BB92BB
%98999299929992999293929992939293929392939293929392936E936E4A
%44938C4451FFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFF
%CFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFA8CFA8FFFFA8FFA8FFCAFFA8FFCF
%FFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF5199BBBB99BBBBBB99
%BBBBBB99BB99BB99BB99BB93BB99BB93BB93BB92BB939392BB93936E936E
%6F8C4A52FD05FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8CFCFA8CFA8CFA8CFA8CFA8FFA8FF
%A8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFFFFF4B98BBBB92BB98BB92BB
%98BB92BB92BB92BB92BB92BB92BB929992936E93929392B592936893686E
%26FFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FF
%CAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8FFFFA8FFA8FFCAFFA8FFCFFFCF
%FFCFFFCFFFFFFFCFFFFFFFCFFD09FF5199FD04BB99BB999993BB99FD05BB
%99BB93BB93BB93936E9993BB93BB93B592936E9326A8FD16FFCFFFFFFFCF
%FFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8CFA8FF
%A8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFFFAE4A9998BB99BB
%98BB92936E756E6F6E999293929392936E6F6E9392BB929392B592936893
%4451FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFF
%A8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8FFCFA8FFA8FFA8FFCAFFA8
%FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD04FFA84ABB99BBBBBB
%99BB999992996E6F4A6F4A4A4A4B4A6F6E9993BB92BB93B592B59293684A
%A7FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFFFA8A8A8CFA8CFA8CFA8CFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFFFA74ABB92BB98
%BB92BB9299929992936E4B7DA8516E92936E9392B592B592939293686E26
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8FFCFA8FFA8FFA8FFCAFFA8FF
%CFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD0AFF7D4AFD05BB99996E996E756E
%6F4AFFFF514A6E6E93929992BB939392BB9293447DFD16FFCFFFFFFFCFFF
%FFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFFFA8A8A8CFA8CFA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFA74A
%6E6E6E4A754B514B754B7D7DA8CACF767C5175FD054A6E6E6E686E4426A1
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCF
%FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8FFCFA8CFA8FFA8FFA8FFCAFF
%A8FFCFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFA77DA8
%527CA1CAA7C97CA7FD0AFF7CA7A1A17676517C515126FD05FFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFCA
%FFA8FFA8FFA8FFA8CFCAA8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FF
%A8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFD05FF7CC9A7CAA17CA7FFCFFF
%CAFFCFFFCFFFFFA7A1CAC9CA76FFFFFFA8CFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CF
%A8CFA8A8A8CAA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFD0AFFCF7CCACACA76FD0BFFA7A7CACAA0A8FD16
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFA8
%FFA8CFCFA8CAA8A8A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFF76A7A7CA7C7C7CFFCFFFCFFFCFFF
%CFFFFFA1A1CAA77C7DFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CA
%A8CFA8FFCAA8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFF7CC9CACAA1A1A17CA8FFFFFFCFFFFF
%FFCFFFA1C9A7CA76A7FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CF
%A8CFFFFD07A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8
%FFCFFFA8FFCFFFCFFF7CA1A7CA7C7C767651CFCFFFCFFFCAFFCFFFA8A1A7
%CAA1A17CFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8
%FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8A8A8FFCA
%A8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFF
%FFFFCFFD04FFCF75A1A0A1767CA8FFA8FD0AFFCFA0CAA7CAA17CA8FD13FF
%CFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FF
%A8CFA8CFFFA8A8A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFA8FFCFFFCAFFCFFFA8A77CA87DA1CFFFCFFFFFFFCFFFCFFFCF
%FFCFFFA8A1A7A1A1A751CFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCF
%FFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8
%CFA8A8A8FFCAA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFF
%CFFFCFFFCFFFCFFFFFFFCFFD0BFFCFFFFFFFCFFFFFFFCFFFFFFF75A0767C
%4BA1FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8A8A8A7FD08
%A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFA77D7D51A1CFFFCFFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FF
%A8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD05A8FFCFA8CAA8FFA8CFA8FFA8
%FFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFD1FFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCF
%FFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8A8CAFD05A8CAA8A8A8CF
%A8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFF
%CAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CF
%A8FFA8CFA8FFA8CAA8CFA8A8A8CAFD05A8FFA8A8CAA8CAA8CFA8CFA8FFA8
%CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8
%FFA8FFA8FFA8CFA8FFA8CFA8CFFD04A8FFA7A8A7FD08A8CAA8A8A8CFA8CF
%A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF
%A8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CF
%A8A8A8CAFD06A8A1FFA8A8CAA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFF
%A8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FF
%A8CFA8CFA8CAA8CAFFA8A8A7FD08A8CFA8A8A8CFA8CFA8FFA8CFA8FFA8CF
%A8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFF
%A8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A1
%FFFD04A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCF
%FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCF
%FFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFA8A8A8CAA8A8A8
%7DA8A7A8A7FD08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8
%CFA8CFA8CFA8CFA8A8A8CAFD0AA8A1A8A1FFFD04A8CAA8A8A8CFA8CFA8FF
%A8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FF
%A8FFA8CFA8FFA8CFA8CFA8A8A8CAA8A8A8A1A8A8A8A7FD08A8CAA8A8A8CF
%A8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFF
%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CAA8CFA8A8A8CFFD0A
%A8A7A8A1FFA8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8
%FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAFD08A8CA7DA87DA8A7
%A8A1A8A8A8A7FD08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CFA8CFA8CAA8CF
%A8A8A8CAFD06A8A7A8A8A8A1A8A1A87DFFFD06A8CAA8A8A8CFA8CAA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8
%FFA8CAA8CFFD08A8CAA1A87DA8A7A8A1FD0CA8CAA8A8A8CFA8CAA8CFA8CF
%A8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7A8A8A8A1A8A7A87DFFA8A8A8
%A7FD08A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCA
%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8
%CFA8CFA8CAA8CFA8A8A8CAFD06A8A7FD04A87DA87DA87DA8A1A8A1A8A7A8
%A7FD08A8CAA8A8A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8CFA8CFA8CFA8CAA8CFA8A8A8CAFD0AA8A7A8A7A8A1A8
%A1A87DA87DCF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fat</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">OLYMPUS DIGITAL CAMERA         </rdf:li>
            </rdf:Alt>
         </dc:description>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-08-13T14:59:32+04:00</xap:CreateDate>
         <xap:ModifyDate>2010-08-13T14:59:32+04:00</xap:ModifyDate>
         <xap:MetadataDate>2010-08-13T14:59:32+04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>240</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6pHHkGxFRx4qiETAqIRM&#xA;UK6JgVWVMVVVTAqqqYqqKmKrwmKrwmBVwTFVwTFW+GKu4Yq7hiruGKtFMVWlMVWlMVWlMKqbJiqm&#xA;yYqpsmKqTJhVRdMVUHTCqHdMUoeRMKqukJTWLP8A4zJ+vEIKHjTFKJjTAqJRMUK6JgVXRMVVlTAq&#xA;qqYqqqmKqgTAq8Jiq4Liq4Liq4LirfHFXccVdxxV3HFWuOKrSuKrSuKrSuKrCmKqbJhVTZMVUmTF&#xA;VF0wqoOmKqDphVDyJilfpSU1W0/4yr+vCEFRjTAlExpihEImBVdExVXRMCqqpiqqqYqqquBV4XFV&#xA;4XFVwXFVwXFDfHFW+OKW+OKHccVa44q7jilaVxVoriq0riqwriqmy4qpsuFVJkxVSdMVUHTCqg6Y&#xA;qh5Ewqu0xP8Acna/8ZV/XhClRjTAlEomBCIRMVV0TAqui4qqquKqqrgVUVcVXhcVXhcULguKt0wK&#xA;3TFW6Yq6mKupirqYq1TFWqYq0VwqtK4qtK4pU2XFVjLiqky4qpMuFVB1xVQdMKod0xVdpy/7krb/&#xA;AIyL+vCFKjGuBUTGuKohFwKrouKqyriqqq4FVVXFV4XFV4XFC4DAq4DFWwMUpP5t8y2PlrQp9WvT&#xA;SKIpGoAqS8rhFPEfEQvLk3GrcQaA9MjOYiLLKEDI0ED+XfniDzloDaolo1lLDM1tc27NzCyKiSfA&#xA;9E5LxkXfiN6jI4snGLZZsRxy4SyfLGt2KuoMVdTFWqYq1TFDRGKrSMKrCuKVNlxVTZcVUmXCqi64&#xA;qoOuKod1wq3YL/uQt/8AjIv68IUqUa4FRCLgVEIuKq6Liqsq4FVFXFVVVxVeBihcBgVcBilumKoP&#xA;VtXsNKtDdXsnpxlhHGoBZ5JG+zHGi1Z3bsAMBNJAt8yfmlrevX/m66k1xJLKJaHSrOdk4x2rKKFe&#xA;DNGWZq+oQx32rQDNbqDIy3d1oBCMT/OX+W9E/M+XSzJol1e6fp9TJHGLma2WQt1ZI1PfxIFcMIZK&#xA;2NJyzwmVkWreW/z184+WZLu11jlrMSBo44rp+EsUytSpm4s7L1qre1CN8MNRKJo7teTQwmAYel9C&#xA;eTNfm8weWNP1ie2a0lvIhI0LKy03IqvL4ijdVJ6jfM+ErFupnHhJCd5Ji7FXYq1TFWiMVWkYoWkY&#xA;VWEYpU2XFVJlxVSdcKqDriqg64q6yX/ToP8AXX9eSClSjXAqIRcCohFxVWRcCqyriqooxVUAxQuA&#xA;wKuAxSuxVQvr20sbOe9vJVgtLaNpZ5nNFREHJmJ8ABgJpXl9x5t0+fWrbUtYZxqN0Amg6JGjST21&#xA;tMQvrTRpXhJN1dnoFUcB+1yp4t7LkRjSc6f9X1rTLG+1CwjE9PVjSVBJ6bHblGXWo5AVGwNMkNw2&#xA;JLY+YPM9jqU9p5j0xY9Nad0sNYtDzi9MuRELmMFniqtPj+z40yAkQd0vHfznW1/xvdrCgU+lF69P&#xA;2pGSpY/7EgZh6j6naaPeBex/843eaNU1zyHLDqUzXEmlXTWkE7klzAI0dFYnc8eRA9qZnYJEh0+r&#xA;xiM9nq+XOM7FXzvZ6r5lZvMOt+adR1qLzLpV/wA7Dy/YGdY/q0FXYIoX0fRloVaVlPwrXctviAnc&#xA;m7bqHRZrv58+Z9a8vXOm6fYPY6heNZrbatp7SSxw+vxlkQuoJEioQhpvUsKbYJZyRSjGAUN5V/N7&#xA;zrpTXby2l5qo1G4kSzk1N3jht4rZSIogX4r60hb96eXgfiO2COWQSYBOfMH57edDo2pzWOipp06O&#xA;9tbRv6kl7buDHSea3kjVRGyyHiSKchxPvOWeVcmIxhK9F/Ozzbptxey6os96Zp4rRJb1Pq1rALWE&#xA;mabiI4uMlxSqRchuDWm2RjmI5pMAmMn/ADkP5qnsxd2Plb93bRQjUBMZRS4mkYIsZVfssgDAsPH2&#xA;rL8we5HhjvZZ+YH5s3Plu30eS10skarBNdGe9JhSNYIjL6VDxrNIPsoSDWgpU5Zky8NbMYwti/lj&#xA;X/NX5n+bHnS7vfLmiaLbwfWbS1keJ2u5DzZWJAEg+AijrTj2qa5CEjkl3AMiBEPZ3XMpqUXXCqHd&#xA;cVdZr/psH+uP14RzUqUa4FRCLiqIRcVVlGBVVRiqooxQvAwKuAxSuxV2KpJ5ys9Iv/LV9p+rMwtL&#xA;xPRpF/elyax+kO78gCB9+2RmARRTG72YBZa/qOn6ha6ZLoMnrXMZk1bWkCLai4RfjaUxiRwW24Kw&#xA;5HkoUEUysE9zkGTLo2d4kZ09N2UFkJqVJG4qPDJMmIQeebq416bSZNAu1s44TNJqTcBbcOINGeTg&#xA;gbkfTZeVQ9V3yHEbql4wlf5hfllpfmMSaxHc/o/UFiBeaXaFkQV/eq1ONB+1271yvLiEt3JxZjA7&#xA;MR/Ivz/B5RsvMWiSwfXLlZ0uLQxuBA3+6ZC0wD/DURhOKszV2XBhyUCx1eIyIIe8+SvN7eYrWcXF&#xA;sLO/tShmgVmdTHLX05FLpE3xcGBVlBBB7UJyYStwcmMxLJMm1uxVgX52P5zXyFc/4SE51Ayxi4+q&#xA;Bjci2Nefo8AX5cuNeO/GuVZuLh2Zwq93knmKfWtE1exXyLca9dWljaxajqf1pb2KC4e2FFXgRBLI&#xA;srsTNuRvQUC0GPKwfTbYN+bIrj87/wAyWaMweV/q9PqkbwT2d9JKz3EfKSZeHHjErCiruzVHvk/G&#xA;l3MeAd6cwfmH+bV5da/Pa+X7NNP0Jkke1mW5+tTRmNneCFkLI868eJKrxr0rkvEmb25I4YpHF+dn&#xA;5mejcOfK4uuFpHcI0FpeqiPMyn94zFuSRKSr8RUuNtqnI+NLuTwDvQGtfmp+akevwSwae91a6fbS&#xA;yvBYWd19UvXLsglLSD1VjjQhuv2gRv1wHLO0iApW8t+afOumG0t9D8uQR3nmTVJZb+9ukuykjyBT&#xA;JLvLJwWIEcj6jKTULuGwxnIchzKCB1ZT5G88+f8AW/N9xo+taNHY2Wn28gvbuOKdUe6SQIvpvKac&#xA;HFWRdyV+KvbLMeSRlRDGUQA9EdcvYId1wq1aj/TIf9cfrwjmpU4xgVEIMVV0GBVZRiqqoxQvAwKv&#xA;AxShLTWdIu7mW1tbyGa5gZkmgR1MiFGKNySvIUZSMAIWkVNNFDGZJWCovUn3NAPmTsBhVj9v51sJ&#xA;dQnhKr9Sjb047xHL85FH7xOIXjVD1Cux3FQMVYHqBuL/AF5/MmqQ6hJoN3Gr6aLO5vEeyCKULy20&#xA;EqGlxHxc8UJU/Cw75jnnZ5OREUE40BfLOoldR003F0YKpHc3LXb05VqEa6PxU706ZKNHcM09OSVC&#xA;mxsvrP1r6vH9Z/3/AMF59KfapXpgpkF8iq6lWAZWFGU7gg9jiyDB73yT5c0iH09Oskgt7iQSyIpb&#xA;+9Q8kPKvL4e2+2Q4QG0G+bK/yut4HOoX7yUv6pbS2e5MUcbO0bliBy9UNyqNtqdQ2TxuHqJEmmfZ&#xA;a47sVdirsVdirsVWkYqtIxQpsMKqbDFKi4xVQcYVW2w/0uL/AFx+vCOalTQYFRCDFVdBgVVUYqqq&#xA;MULwMCrsUvnLz9501TQ/zB1bT7GeG80gTC4j064Vbi3WV4kecrX44n9eRyTGymtd65gZc0oyIHJ6&#xA;vsrsrBqsA4rjk9W48q6fFN9L/MzSdYaCPULiZTHs+hTzMROSACLe8NGPj6c9C1ePqldsux5hP3/j&#xA;q63tDsbLpjZ9UO8fpHT7mYatrul+YpNF8u6KOGlsp1DUo1Qxelb2cvpxW3Gg4l7pKED9mNh0OWE2&#xA;QA6uEe9C6x5P+tanpyLbQ3mjxyNNcwXkjsYplAEcsalX9Q0L/aYEbUYLVSyjbYBTKQqqoVQAoFAB&#xA;sABkkrTgSsOLILGwMkn8xU+qR+PqCn/AnAzikula7N5f1RNUSF7i2ZPQ1C3i3kaEnksiL+08Tbgf&#xA;ylqb0wA0bY5sfENub1jS9UsNV0+DUdPnW5srpBJBMlaMp+dCPcHcZcDe4deQisKuxV2KuxVQu72z&#xA;s4vWu547eKoX1JXVFqegqxAwEgc1pdb3NtcwrNbSpPC/2ZI2DqabbMKjCCq4jFCxhiqmwwpUnGKq&#xA;DjFVtuP9Ki/1h+vJDmgqcYwJRCDAqsgxVVUYoVQMCrgMUpf5jvpLHQb+7injtpYYXaKeYEor0ouw&#xA;DEktQABSSex6YJGgkDd4T5wsLK90Wwjnu4frlxOzQ6lftbqYRLykaNpbTlWMsaBeFASDXbMbLAGN&#xA;O47N1ctPl44i9tx3hX/Kz8ltPuNXlv8AX7mDWbS1CPBHa8ntJJWY7SO4Tnx41KAEb/FtsRiwAc92&#xA;zW9sZJw4BtfM9T+P2Mz8nejd6x5o1SJEjibUTplnHGAES10xBAioBsF9T1GoPHLYcyXVDkyK+v7O&#xA;yiEt1KIkZgiV3Znb7KIoqzMeygVOTJpK9XDorioDAEBgVNDvuDQj6cUtHAlYcWQWNgZMa8x3kZk4&#xA;FgI4AWkYmgB6mp9hgbIpAk9xcRK8CiNHFVeYMDQ7g+nsfvIORZJ75a84aj5a0i3017BNRs7blVrY&#xA;+jcfGxd2EcrNG7FmJpzQeGGMjEU42TTk7gvR9D1zTNb09L/TpvVt3+Eggq6OPtJIjUZHXupGXCQP&#xA;JxCCNimGFDsVQ2p3Zs9Nu7wAMbaGSYKTQHgpahP0YJGhaQErh09RIJ7mR7q6oQZZWJUV68I6+mnT&#xA;9kfOuaXJllPmXIAASPSGFn57aCxFYLuKQ3sA+AJQBlm4ivLiyhBWn2/ahy9JI3SMo2Zwc2DjrCMU&#xA;KbDCqk4xSouMVWwD/SYv9YfryQ5oKlGMCUQgwKrIMVVVGKFQYFYxqXn/AE2O7l0zRYzrOqxHjNHA&#xA;wFvA3hc3NGRD/kLyf/Jys5ByG7ZHGSw78wH81T+XppEjfU9Tn/dJFbKFhtI5AQ8kURbm7hfhDnk1&#xA;TUcVquVZeKvNz9Jjx+IPENQ6vA9fv9WliNpqtxcyTqaehdmQOm5P93Juvh0zDJkTu9pgw6PwyMXC&#xA;Sfn9u4e3+XNNuL7yl5e8oCaW20y1sY9Q14Qu0UkrXrNNBaF1KsoIZnlpvTiP2szYiwA8PqJCeacu&#xA;hkaRn5WNbWNprHlwBYbjR9SuVW26EW87maBwDvxZX2PthxbWO5rKdebYdQEOn6lYW5u59JuxdtZp&#xA;TnLG0MtvKsfKg5hLgsPGlO+Tl3qEB/ysfQXjCwxXcl4RtYi2mFxy6cTHx5jcU6YOMJpNdCXVDay3&#xA;OpL6Vzdymb6qCGECcVRI6gkcuKAtQ05E02xCUecKQlOqavHAGigIeY7Fh0X+3AzAYra20ut3Ppx/&#xA;FYK3KeY7iQg9B4rXr/N06VyHNmy+CytrdQIkAI/aO7H6cK2surC2uFIdAG7ONmH04Egsasb/AFLy&#xA;9rkmoaYUuEkAiv7JmKJcIh+B1YA8JUqeLUII+E9iqCQbDDLi4x5vRvL/AJ30HW5BbQytbajQs2nX&#xA;QEc9AKkqKlZAO7Rsw98tjMFwZ4zHmyDJsGiAQQRUHYg4q+d/Ndzr1trmq6Hc6jcHT7O6kW1skf0o&#xA;kt5aTQxUj4mRVikUAOWp0FM18sQEi5uOiLRX/OP+kwN5x1LUo41RILN4VKqAGM0yHYgb8RFv4VzI&#xA;xDdrz8nv2ZDjLTihYwwqpMMUqLjFVkA/0mP/AFhkhzQVNBgSroMCqyjFVVcUMU/Mm5vW0mz0axme&#xA;2n1y7WzluYjxkjtlR57hkb9ljFEUB8WyrIdq72zHGyoabpmn6ZZRWOn26WtpCOMcMYoo/qfEnABT&#xA;lqGrazFp720CxPc3t85js7WMqC7KpZiWcqqqoHxEn5VJAwEoSP8AwFd6pFcx6/PCLW8EYmsbaNJT&#xA;+6Lsv+kzoWG8h3jRD/lYnHfNHGbsbMm0nRNL0i2a206AQRO3OQ1Z3d6BeTu5Z3bioFWOTEQOTFIP&#xA;NnlC6vL6LX9BnWy8xWyenyeohuYa19Gfj8W37LjcfqhKO9jmkIOz/Mc2braeZLZ9IvB8JW7okbH/&#xA;AIquR+5lHhQ19sRkHXZNBkcHmbTJ4xJGxZT0ZaMPvUnJ2vCoX3m7SLRC0sgjA/alZY1+9jgJTwsf&#xA;uPOcmpH09Limvw3QWSFoyPe4bjD/AMPkOIdGYp1r5W1jUSH1l0tbQ7/o+3YsWHhLL8PL/VUAdjyG&#xA;CieabZVbWtvawrDAgjjXYKPbClecVS3Xpp4dNlkhBYrTmF+1wJo1PfAyDGIZopo1liYPGwqrDcHF&#xA;sU7uzt7uMRzrXiQ0bglXRx0dHWjIw7MpqMBCCAebOPy884Xl1cP5e1mX1tRhQzWF61Abq3UgHmBQ&#xA;erFyAen2hRvGlkJdC67Ni4T5M8y1peCfnEy/4quTJaD1po0gickhSsKCUN1/vX5lQ1NgvtvjZebn&#xA;YKEFHQ/OMFlqOn6jprrIImMRtwWjjMNDG0TBAQv+QgDHkAd+mINcmeSIlF7vpdzc3WnW1zdQG1nm&#xA;jV5Lc1qhYV4moBB8R2zIDryN0QcKFjYoUmGFKi4xVbCP9Ij/ANYZIc0FSQYEq6YFVlxVVXAhi3nB&#xA;V/TmgO4PW6VD2DmIH/iKtlc+YbsPNrA5Lzz81Uh9bTryWZobW3juba9nTcwJdiPhMR1oskS8qdjk&#xA;SaIKRtuj/wAutU8xnR1tHQ6tHHIwg1VmaK39Gg4qryLzl3BoyKy9uWWCV8mM6J2ZrNdwW6A3MiRs&#xA;RUiv6h1ORnkjHmaZY8M5/SLQEvmLTl+yXk/1V/5qpmNLW4x5uZDszKedBS/TdldgwPavMjijRlVc&#xA;Ee61yMdZGRqizn2bKIsyiov5K8lSuXfQdNkc/aY2kBNem5KZk8MT0DryKXw+XvLGmD1rTSLW2K71&#xA;trVA9T4CJOWHhA6KqpruktKsLXAgnc0SG4VoHY/5KShGb6BjxBKNOKVpwJWMaAk9sUsFHne+1bUp&#xA;bK0sGh0xQwe6mDK7U6UBoBXw60wkNgikui6jaHXdYsYn+H6wHiWhCmQRILhUPQ8WoXA7nKwd1B3T&#xA;/JMlC4hnaW3ubS4azv7ST1bW7RVZ4yQUegcMp5IzLuO+AsJwEhRUX0wyzfWLjUNRnu61Ny1/dq9f&#xA;8n05ECfJQBjTEYY9yV+cIpY9FmvZrm4vJ7YR8ZLqWS4fgGKkAuWb7Mr5GfK0mIiNnqX5Z/ltF5Zs&#xA;Ybm/ZbjVmiANFokBf4pAldyzMd28NgBvW+EK5uBkymW3RnmWNTRxVY2KFJsKVF8VWw/70R/6wyQ5&#xA;oKkmBKumBVZcUKq4FSLzloep6pY2kmlNCup6fdJdWouWdIX+B4ZEdkWRgGimalFO9MhON8mcJUWD&#xA;eY9Z826LHbR31hCLy+Yx2dnZXAmmlkHVUV1RqKN2elFHWmVyJDkxyAu0fyDJdzR6n5sZL27VvUt9&#xA;LU8rS3PYsD/fyD+dth+yO+EY73ksp2zTLWKCudJsLmYzTR8nNKnkwrT5HMeemhI2Q5eLWZIR4YnZ&#xA;DXOgWMpXjWJVH2Upv7kkE5XPRwPk3Yu0ckefq96vBpllbsHiiAdRQOak9KZZDBCO4DVk1eSYonZU&#xA;FvAshlWNVkb7TgAE/PJiABut2o5JEUSaXHCxUpoYZomimRZInBV43AZWB7EHY4lKTz+XpYBy0W9f&#xA;TWHS34ia1Pt6DkcB/wAYmTIcPclJr3UvzGsahtNtdQT/AH9aSmNj/wA8pUNP+DOCyyCQ3Xm7zlKx&#xA;ik8u3JYj7H1m2VPpIamDiPcm/JBfVfP+tfueEOiWr7SGFjc3VPBWAWNfn1GD1HyTufJN5PKFpY6R&#xA;DppiaOBfjikVv3qyg19Xn19SprX+G2ERFUyAFUo2l/NDcrp2oH/SWBNtcgcUuAu5p/LIo3ZfpG1a&#xA;FIKZYUrZZYoo2llcRxoCzuxAUAbkknFU+/LfQZdYvV8yXkRTSYAy6NDItDOzrxa7Kn9jixWKvWpb&#xA;+XJYxe7g6jLewZb5K1y41e3vZJhN+7uGp68EluYiwq1tSVIy/onbmo4mo3rXDimTdjq48gAyTLWL&#xA;R6YqsbFCm2FVF8UrYf8AeiP/AFhhHNBUkwJV0xVVXFVVcCEj83+bIPL1jEUhN7q18/oaVpiGj3Ex&#xA;9/2Y0HxSOdlX6MjOVe9lGNpD5f0C6tp5tX1m4F/5ivRS6ugCI4o61W2tlP2IU+9j8Tb4Ixrc824J&#xA;0cklacUrTgS0cCVpxStOBK04ErTilacCVpwJWMoPUV+eKWsCULf2wuLV46ValU/1h0xZBht9Y297&#xA;btb3CkoSCrAlWVlNVdGG6sp3BGLIhW8oaXeatfSaNqGrR2uoxKZLY/VuRuoFABlRvVVA6kgSJx26&#xA;jY7MRZpx8uWUGdWf5UeXlnSbVJrjWPTYOltdmMWwYGoJhiSNXp/xZyywYh13cWWeUmaAAAACgGwA&#xA;yxqbxV2KtHpiqw4oU2wpUnxVZD/fx/6wwjmgqSYEq6Yqqriqy+v7TT7G4v7yQQ2lpG81xK3RY41L&#xA;Mx+QGAmled+TYbzXb2bzzq8ZS51JOGjWj7/VNOrWMD/Lm/vHPyyrGL9Rb6rZlxy1VpwJWnFK04Et&#xA;HAlacUrTgStOBK04pWnAlacCVpxStOBK3FLEJ6etJx+zyNPlXFsQOo2ctxHHJbTG11C1cT2F4u7Q&#xA;zJ9lvcHow7gkYCGM4iQp6n5A84J5o0FbuSMW+p2rm11WzH+6rmOnKleqOCGQ+By6E+IOrnHhNMly&#xA;bF2KuxVo9MVWHFCm2FKk+KrIf7+P/WGEc0FRTAlXTFVZcVeefnVcvc6doflaN+A8yanDbXRBofqk&#xA;REs1PfZf1ZTm3od5Z4xvbKkRI0VEUKiAKqjYAAUAGWs3HFK04ErTilacCWjgStOKVpwJWnAlacUr&#xA;TgStOBK04pWnAlD3twLe2klPUD4fmemLIMTxZuxVQ8saofLv5mafLUrp/mZDp96v7P1qMcrWQ/5T&#xA;bx/LBE1L3uJqYbW90zJcJ2KuxVo9MVWNihTbCqi+KVsP+9Ef+sMI5oKgmKVdMCqy4q85/PW3mt/L&#xA;+k+ZYAS/lzU7e8m47n6uzenIKe5ZfoyjNsAe4tmM7srtbmG6tormFg0Uyh0YbggjLma84qtOBK04&#xA;pWnAlo4ErTilacCVpwJWnFK04ErTgStOKVjuqKWYhVG5J6DAljWqah9ak4ptCh+H3Pji2AIHFLsV&#xA;Y555ke306x1CP++07UbO6iPSjpKAKf8ABZDJytqyj0vpDMt1jsVdirRxVY2KFJsKVF8VWw/70R/6&#xA;wyQ5oKghwJV0OBVZTiqjqul2WraXdaZfR+rZ3sTwTp4pIpU08DvscBFilBp5N+X+rX3l67vPJOuM&#xA;WvNGbjBKf93WZ/uJ09uNFYdvnlOI16TzDk/ULejq6OodCGVtww3By5i0cCVpxStOBLRwJWnFK04E&#xA;rTgStOKVpwJWnAlB3mpWtsCHblJ/vtdz/ZiyAY/falPdmjfDGDtGOn0+OBmAg8WTsVdirG/O0cl6&#xA;mj6NBvcatqdrboo8PUDFj7LQVyE+g72rMai+kcy3WOxV2KrTiqxsUKTHClRc4qth/wB6I/8AWGSH&#xA;NBQ8ZwJRCHAqshxVVU4oYf8AmN5CfzFbwanpUq2nmfSwzabdH7EgO7W8/jG//CnfxrVOF7jm2QnT&#xA;EfLXm24kmnspo2sNYsm4alpU/wBpH/mX+aNv2XXqMYzv3uTsWWW/mC2cATqYm8ftL+G+TYmKKldL&#xA;y3eO2uzC7iizw+m0ie4EiyJ/wSnAUUx9NF84adfx3Frrj6tYlgLnT9QihWTgT8TQzwJDRh2Vl4n2&#xA;65DhkOqWTHJJWnFK04ErTgSh5ru1i/vJVU+BIr92LIBAXGv2qVEStKfH7I/Hf8MDIRSq61i9mqA3&#xA;pof2U2/HriyAQBPc4GTRxStwJdirTuiIzuwVFBLMTQADckk4qt/KrRJvNXnE+c54yNB0YSWuhFxQ&#xA;T3DfDNcKD+yoqoPjTupwYxxS4ugcHUZL2e4ZkuK7FWsVWnFCxjhVSY4pUXOKrID/AKTH/rDJDmgo&#xA;dDgSiEOBVZDiqqpxQqg4FY15x/L/AEbzQsVxIz2Os2o/0HV7aizxd+J7SRnujbdemQlAH3s4zIed&#xA;6l/ijysWTzRZ+tp6fZ8wWCNJblexuIhWSA+JoUr3yHER9TkRyAou0vbS8gW4s547iBvsSxMHU/Iq&#xA;SMmDbYikvLtNkmcDwDGmFNKn6W1Ef7vb8D/DAtBzaxqR29Y/8Cv9MCaCm2qag3Wdvo2/VimlCS5u&#xA;JPtyu3zYnAmlA4paOBKT635q0XR2SK7uUF3KQIrUOock9Kliqov+U5AyMpAKZALbTWdOdhJdalae&#xA;sx+CCKdCiV2pWoLt7/cBg4goKOGo6ezBVuYmY9AHUn9eGwysL1lic0R1Y+AIOKbS/UvMmj6fIsM0&#xA;/qXbnjFZQAy3Dt2VYkq1TkTIBEpgJlon5beZ/OEkc/maKTQ/LVQ/6J5UvbsA1AnK/wByh7r9r5bH&#xA;CMZlz2DiZdRewezWFhZafZQ2NjClvaW6COCCMBURFFAABmQBTiIjCrsVaOKrCcUKbHCqkxxSoucV&#xA;WwH/AEmL/WH68kOaChUOBKIQ4qrocCqqnFVVTiheDgVdsRv074pfNf5keQT5U85T3ejSyadYasrX&#xA;dobaQxCORCBcQ8f7vgCyuqkUoaDpmq1kpYpAx5F3nZWLHnEoT+ob2llp5y842agXIgv18JkNvLT/&#xA;AF4wUrT/ACMhDtHvDmZOxpj6T801t/zLhoBfaTdQMf2oDHcIPuZH/wCFzJjrYFw59n5o/wAPyRsX&#xA;5i+U3oJLqS3bus8EyU+kpx/HLRqIHq48sU48wR8EQnnjyhJTjq9qKmg5SKv38qUyfiR72FhbN558&#xA;nxAltXtjQ0PBxIfoCcq4PEj3rYSi9/NDQ0BGn29zqD/sskZijr7vLwp9xyuWpgOrkY9Pkn9MSWNa&#xA;p5z82akrRpImk2zfsW/xz08DKacfmoGYs9YTydlh7HnL6zw+7cscWyKMzeoXdzykkcBnYnuzH4jm&#xA;MZk83cYNFHEKifsCjcwlYpHAVnVSQCg3IGENmXDUSRRNdwQ9usU8IlaOPcnoo6AkD8MnyYaSEMsB&#xA;IxhzP8PmhLlURHlEcQjBIUFKknp2I75IOLqYxhCWQRxcA5XDc/aOv2bvqH8kvyksPLWnWvmK+ice&#xA;Y762/exPQJbxykMERKVD8AvMkk1qM2WHFwi+rxupz+JIkARHcOT1fL3HdirsVaxVonFCmxxVTY4U&#xA;qTnFVBziq23P+lRf6w/XkhzQULGcCUQhxVXQ4FVlOKqqnFC8HAq8HFLCvzY8l3vmfQYG05g2o6VN&#xA;9ctLWSgjnYIyNGxP2WKseDdm65j6nD4kKcnSajwcgnV08Rt7hLiIniyMrGOaGReMkcimjRyKd1ZT&#xA;sRnLzgYmi+g4M8csBKPIueztn6oB8tv1YBIthiFB9NgPRmH3HJDIUeGFCTSYmO7V8KqDkhkQcQKi&#xA;dIRTUOAfZf7cl4iRhAWNpo7yfh/bkvEbBjUJbS3j+3IR7bVyQkSy4AOZQjJHI3CFCfF2P9Mndc1A&#xA;B2CndWixxclNSPtfTkoystksdBIvRNs7Rq9LdlZyCN0Ap0P0+GZF26yOLwSQD+7IJ91dx/Z8Xsv5&#xA;Jfk8NVaz836/GBpsZEuj6aw3lZT8M8wIpwFKov7XU7fazdPg6l5PtTtLxyIx2hHkH0Vma6d2KuxV&#xA;2KrScVWk4oU2OFVNjilRc4qoOcKtWx/0uL/XH68I5qUHG2BUQjYqiEbFVZTgVVU4qqKcULwcCrwc&#xA;UvKfzX/LydpZPNfl+AyXigfpjTohvcxrt60Sj/d8Y6j9tduoFdfrdIMgsfU7TsztE6ee/wBB5vMr&#xA;a4guYI54HEkMgDI46EHOdIINF7nHMTiJR3BUr2HnGzoSsiioZSQTT5ZKBTONhJnutVT+6uFcfyyr&#xA;U/8ABLT9WXiMe5xicg5EH3j9X6kHd6/q1qnqT26cAQCySKeu3RlTJxwxPJoza7LijxSiK8pfrARm&#xA;v2fnTRoIp9X0a4sYZ5BDFJcOkas5BPEUJ7A5kS0hiLLhw7dE5CMY7nzpK0ju5CDO6oCf7uKv4ud/&#xA;uAyux0dpCGSX1kDyH6/1Um4ijiQIgooym7dpCIAoIW7FYH+WTjzZS5Ifyp5Yl80+b9P0BSVjvZQb&#xA;p16rawj1JWr2JFQPfM7DDiIDzHbmp8PGY9Z/cP2vsy2t4La3itrdBFBAixwxqKKqIOKqB4ADNu8U&#xA;q4q7FXYq0Tiq0nFCwnCqmxxSpMcVUXbFVB2wqttW/wBMh/1x+vCOalBxtiqIRsCohGxVWRsCqyti&#xA;qopxVUBxQvBwK2Dil5Z5z/JlrzU11DypNHpsl3MZdTglf/RTtu0cIidhI7GrcXVdulTXMHUaGOQ3&#xA;1djo+08mDYH09zDNW/LTzhY6xHYX2owRW12v+hXlvASjuoLPExkclZAo5AUPIVI6EDF/k2MTuXYx&#xA;7cyz5VH4ITUPyuSwtzPfazctGAxYxCGOgUVPWM9Blo0kAxOuzH+L7v1Mw8s/kB5ZvPL1hca5cahL&#xA;fXVtHJeQC44Rq8ihigVUB+GvHrmRDSQoGnWZO0M0rBkaZb55/KvSfOEOmx3moXtr+ikZLYQNEVbm&#xA;EDNIJI3LNSMb1y3LhExRaMOeWM3Hm888zf8AOPo0vR7nUdN1+4b6mBO8M8EL/uU3loUCHkqVYbb0&#xA;p3rmNPRRp2OLtnUAgcX2D9TGbn8pPNkMRkh1W2uFArR45IxQb/sSEZSdGO92Ee1s46g/P9BCGsfy&#xA;k/MjVNNkvLKG2lty7xxEXBjaTgaFkEyH4eQK7sK/KhwDRHmGZ9opD0kfI/8AFCTO/wAiPyz80+Xf&#xA;Mesar5lsvqk31eO1sD6kUodHcvKVMTPSnpr1p1zL0+ExJt0ev1hzz4iXtuZbguxV2KtE4qtJxQsJ&#xA;xVYxwpUmbFVJmxVRdsKod2xV1m3+mwf64/XhClAxtiqIRsCohGxVXRsVVlbAqqrYqqA4qvBxQuBw&#xA;K3yABJNANyTilgmvav8Ap/UBbWsi/oPTpVeW4Sh+s3URDBUftFC32iv2m+HorBqJyvbo5WDH1LDf&#xA;NuvaZc+pp9xeWsOnsrxXLSyCOQlkIojFlA+Fq+OQJDl7PTvy/wBdn13yhp+pXDLJO6vFLMgASVoJ&#xA;GhMqAbcZfT5rTahy/HKxbrJijTIsmxSPztK0flPVRHJ6c01u8EB3qZZh6caClCC7uFr2rXIz5FlA&#xA;WQxDVomj0WaG2+DjHwjodwBQbE+2UOzDMvJs6z+U9IcLEjC0hSWKCvpxyxoEkjWu9EdSu++2Xw5B&#xA;1khRTnJMXYq1XFWicVaJxQsJxVYThSps2KqTNiqk7YVUHbFVB2xV1k3+nwf66/ryQUpfG2BUTG2K&#xA;ohGwKro2KqytiqqrYFVVbFV4bFV4bFCW+ZPL9l5g0p9NvGkSJnSRXiYBg8bBlNCGRhUbqwIPhkZR&#xA;sUyjKjaSS/lpYTQBJNV1BZS1ZZoniXkmwEfBo3VVHioDf5XSkPCDb+YkybStK07SrCOw0+EQWkQP&#xA;GMVJJY1ZmZqszMTVmY1J65MCmkklG1wq6oxVjvn63uZfLjPa20l3cW1xa3CQQ7yFYrhGk4rQ8v3f&#xA;Lbqe2+QyDZniNSDzTUvMGtPcNanQtYklk/3ntEspVDVCcSZmVEAU8i3I/dTeiz3FzvGj3vT/ACJp&#xA;F/pHlWxsdR4C/HqzXSxnkqyXEzzugPfiZONcyICg4E5WSU+rkmLVcVarihonFVpOFVhbFKmzYqps&#xA;2KqTNiqi7YVUHbFUPI2FW7Bv9yFv/wAZF/XhClLo3xSiY3wIRCPiquj4FV0bFVVWxVVVsCqitiq8&#xA;Niq8NihcGxVuuBW64q3XFXVxV1cVdXFWq4q1XFWi2FVpbFK0tiqmzYqsZsVUmbFVJ2wqoO+KqDvh&#xA;VDyPiq7Tm/3JW3/GRf14QpS2N8UomN8UIhHwKro+Kq6PgVVV8VVlfFVRWwKvDYqvDYqvDYq2GxVv&#xA;lihvlirfLFXcsVa5Yq7liq0tirRbFK0tiqwtiqmzYqps2FVJnxVSd8VUHfCqg74qh5Hwqu0xv9yd&#xA;r/xlX9eEKUrjfFKKjfAqIR8UK6PgVXR8VVlfAqqr4qqq+KqivgVeHxVcGxVcGxVdyxVvliruWKu5&#xA;Yq7lirXLFVpbFWi2KrC+KrC+KqbPhVTZ8VUmfFVF3wqoO+KqDvhVDyPilfpT11W0/wCMq/rwhBSq&#xA;OTFKJjfFUQj4FRCPihXR8Cqyviqqr4FVVfFVRXxVeHxVeHxVcHwKuD4q3zxV3PFXc8VdzxVovirR&#xA;fFVhfFVpfCqmz4qsZ8VUmfFVJnwqou+KqDvhVDu+KUPI+KqukPXWLP8A4zJ+vCEF/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:5101A9C2C9A6DF11AA75DE9B6F5822C8</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:5201A9C2C9A6DF11AA75DE9B6F5822C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:5001A9C2C9A6DF11AA75DE9B6F5822C8</stRef:instanceID>
            <stRef:documentID>uuid:4F01A9C2C9A6DF11AA75DE9B6F5822C8</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:ColorMode>3</photoshop:ColorMode>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001480</stDim:w>
            <stDim:h>225.277550</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -638.582 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 638.582 li
595.28 638.582 li
595.28 0 li
cp
clp
[1 0 0 1 0 0 ]ct
595.278 638.586 mo
0 638.586 li
0 0 li
595.278 0 li
595.278 638.586 li
304.257 553.682 mo
304.238 554.596 304.65 555.03 304.65 555.03 cv
304.65 555.03 307.211 556.534 310.814 556.534 cv
312.521 556.534 314.462 556.196 316.476 555.201 cv
322.731 552.105 324.054 547.344 322.992 544.887 cv
321.921 542.439 324.639 541.476 324.198 539.739 cv
323.127 535.518 318.744 533.268 320.517 531.621 cv
323.397 528.939 320.283 527.058 319.455 525.402 cv
318.249 522.99 320.265 522.81 322.443 518.085 cv
323.748 515.254 325.695 512.808 327.047 511.302 cv
339.756 512.883 348.381 514.197 348.381 514.197 cv
348.381 514.197 350.154 502.83 354.492 492.822 cv
361.872 475.767 365.949 471.942 365.949 471.942 cv
379.026 462.681 384.75 446.607 384.75 446.607 cv
390.204 444.69 li
392.805 439.578 li
391.504 439.481 li
408.113 433.319 447.316 413.051 436.518 361.485 cv
432.595 342.728 419.662 325.526 404.343 309.391 cv
409.023 308.314 417.235 307.981 426.006 306.27 cv
436.16 304.281 447.88 294.787 456.328 276.214 cv
456.967 278.4 457.384 279.871 457.479 280.305 cv
457.479 280.305 458.646 276.513 460.346 270.49 cv
463.044 269.602 465.854 267.957 467.154 266.652 cv
469.467 264.321 470.079 261.504 471.771 260.667 cv
473.463 259.83 480.042 257.472 481.86 252.099 cv
482.508 250.171 481.685 249.323 480.537 249.323 cv
479.9 249.323 479.163 249.583 478.521 250.065 cv
477.537 250.798 476.005 251.602 474.362 252.141 cv
475.356 250.667 475.826 249.153 475.128 248.157 cv
474.403 247.129 473.818 246.924 473.466 246.924 cv
473.233 246.924 473.103 247.014 473.103 247.014 cv
474.435 245.016 473.517 241.965 470.097 241.578 cv
470.097 241.578 470.701 238.737 468.654 237.414 cv
469.838 231.895 470.905 226.333 471.717 221.067 cv
471.717 221.067 471.616 220.513 470.811 220.013 cv
471.283 218.344 471.078 217.332 471.078 217.332 cv
473.571 216.423 475.065 214.164 473.724 211.707 cv
472.5 209.475 471.177 208.746 471.177 208.746 cv
472.026 202.028 463.512 198.054 457.205 198.054 cv
455.291 198.054 453.578 198.421 452.394 199.188 cv
449.919 200.79 449.271 202.95 449.271 202.95 cv
449.271 202.95 442.179 202.986 439.155 208.098 cv
433.089 218.376 442.593 223.812 442.593 223.812 cv
441.806 225.379 441.882 226.396 443.132 227.014 cv
442.354 227.534 442.008 227.844 442.008 227.844 cv
441.893 227.844 444.38 236.218 447.392 246.282 cv
445.478 248.051 444.041 249.607 443.88 251.082 cv
443.676 252.943 445.543 254.139 446.433 258.185 cv
446.41 258.331 446.456 258.574 446.58 258.93 cv
446.58 258.93 li
446.74 259.86 446.898 260.669 447.063 261.378 cv
447.007 262.77 446.061 263.24 444.547 263.24 cv
442.98 263.24 440.804 262.736 438.381 262.233 cv
435.957 261.729 433.29 261.225 430.738 261.225 cv
430.694 261.225 430.649 261.225 430.605 261.225 cv
421.884 261.27 415.944 266.418 415.944 266.418 cv
415.944 266.418 412.515 255.366 401.958 245.313 cv
391.392 235.26 375.885 233.046 370.521 224.568 cv
365.392 216.47 356.913 212.379 356.181 212.037 cv
352.706 210.192 347.578 208.672 340.976 207.222 cv
345.525 200.726 343.214 197.327 339.309 194.832 cv
330.228 189.045 330.372 180.756 326.52 176.463 cv
322.659 172.17 322.02 172.134 322.02 172.134 cv
322.02 172.134 328.914 168.93 329.526 163.494 cv
330.147 158.058 325.323 150.39 322.758 149.769 cv
322.081 149.605 321.441 149.53 320.829 149.53 cv
317.539 149.53 315.066 151.711 311.985 154.071 cv
311.985 154.071 311.744 154.486 311.243 154.486 cv
310.658 154.486 309.718 153.92 308.394 151.461 cv
308.394 151.461 li
306.801 145.71 307.449 138.168 307.152 133.866 cv
306.513 124.767 301.086 122.382 298.944 120.096 cv
298.944 120.096 304.164 116.361 304.92 113.733 cv
304.92 113.733 303.762 113.489 302.291 113.489 cv
301.233 113.489 300.013 113.615 298.944 114.048 cv
298.944 114.048 300.303 111.663 303.21 109.728 cv
303.21 109.728 301.91 109.053 300.009 109.053 cv
298.146 109.053 295.707 109.701 293.346 112.266 cv
293.346 112.266 291.825 107.208 286.605 104.922 cv
282.976 103.327 280.134 102.94 277.507 102.94 cv
276.264 102.94 275.069 103.026 273.861 103.113 cv
272.637 103.201 271.4 103.291 270.086 103.291 cv
268.976 103.291 267.811 103.227 266.553 103.041 cv
262.557 102.456 267.273 99.306 266.517 95.283 cv
265.581 90.36 259.317 89.775 257.526 89.361 cv
257.526 89.361 259.38 91.107 259.938 93.753 cv
260.451 96.174 259.371 96.759 259.371 96.759 cv
259.371 96.759 258.435 93.996 254.718 92.358 cv
255.348 94.149 256.32 96.453 254.718 97.893 cv
252.37 100.008 242.165 104.619 243.58 111.234 cv
238.468 113.784 233.027 118.693 229.923 122.391 cv
222.696 131.022 214.398 140.967 215.496 142.614 cv
218.403 146.97 222.264 150.894 220.977 151.848 cv
219.095 153.252 214.791 157.223 209.49 163.416 cv
209.44 163.403 209.39 163.39 209.34 163.377 cv
208.783 163.231 208.215 163.082 207.779 163.082 cv
207.49 163.082 207.259 163.147 207.126 163.323 cv
206.799 163.747 207.09 164.856 207.355 165.967 cv
204.654 169.269 201.759 173.09 198.836 177.388 cv
190.745 172.458 190.288 170.261 187.15 170.261 cv
187.113 170.261 187.076 170.261 187.038 170.262 cv
185.042 170.294 170.311 182.705 166.806 185.681 cv
153.382 178.74 143.217 176.454 143.217 176.454 cv
143.505 182.808 li
143.505 182.808 143.817 182.865 144.411 183.007 cv
144.773 186.155 145.4 192.084 145.713 197.881 cv
145.392 197.812 145.075 197.774 144.768 197.774 cv
144.222 197.774 143.705 197.894 143.244 198.171 cv
140.886 199.584 140.832 203.571 145.602 206.343 cv
145.602 206.343 143.393 205.542 141.192 205.542 cv
139.757 205.542 138.325 205.883 137.511 207.009 cv
135.99 209.106 136.638 211.482 141.309 212.832 cv
139.158 213.156 138.123 214.146 138.123 215.667 cv
138.123 215.667 li
136.782 221.517 114.921 231.561 101.061 239.472 cv
88.524 246.627 89.865 278.487 95.049 290.223 cv
95.715 291.726 99.594 292.05 116.613 292.851 cv
116.743 292.857 116.872 292.862 117.001 292.866 cv
98.7438 307.75 74.398 331.991 70.947 357.597 cv
70.947 357.597 72.6331 409.17 139.916 439.135 cv
146.336 446.502 152.766 461.943 152.766 461.943 cv
150.777 464.148 li
150.777 464.148 181.053 500.292 185.958 504.108 cv
188.239 505.882 190.418 506.357 192.097 506.357 cv
194.029 506.357 195.3 505.728 195.3 505.728 cv
191.214 507.636 190.44 511.524 190.44 511.524 cv
193.04 510.617 197.939 509.775 203.988 509.013 cv
208.998 513.322 214.211 518.557 215.388 522.522 cv
215.388 522.522 207.207 528.894 203.364 537.273 cv
203.364 537.273 196.335 539.289 193.095 541.512 cv
193.095 541.512 196.323 546.853 200.924 546.853 cv
201.052 546.853 201.181 546.849 201.312 546.84 cv
206.118 546.525 205.614 543.735 207.747 543.42 cv
207.846 543.405 207.944 543.398 208.041 543.398 cv
208.946 543.398 209.803 544.007 210.843 544.608 cv
211.899 545.218 213.147 545.828 214.838 545.828 cv
215.193 545.828 215.568 545.801 215.964 545.742 cv
221.32 544.948 224.471 537.267 228.886 537.267 cv
229.324 537.267 229.773 537.342 230.238 537.507 cv
232.965 538.467 235.318 538.807 237.281 538.807 cv
242.038 538.807 244.512 536.814 244.512 536.814 cv
244.512 536.814 244.377 529.056 238.725 522.522 cv
238.725 522.522 241.925 505.924 244.465 505.562 cv
253.831 504.978 260.577 504.657 260.577 504.657 cv
261.117 502.209 258.066 494.568 258.066 494.568 cv
260.263 494.81 262.904 494.989 265.486 494.989 cv
268.659 494.989 271.743 494.719 273.807 493.965 cv
271.008 497.151 268.722 506.142 268.722 506.142 cv
276.842 506.451 285.388 507.036 293.749 507.756 cv
294.216 508.461 294.665 509.217 295.047 509.994 cv
297.126 514.197 299.124 520.11 298.755 521.028 cv
298.413 521.856 296.766 524.88 296.766 524.88 cv
296.766 524.88 295.56 528.273 298.602 530.064 cv
299.205 532.125 297.432 533.052 295.848 535.473 cv
294.264 537.894 291.897 542.457 296.037 545.76 cv
296.037 545.76 294.264 548.469 294.3 550.341 cv
294.3 550.341 294.211 555.615 299.883 555.615 cv
299.912 555.615 299.941 555.615 299.97 555.615 cv
302.558 555.593 303.736 554.601 304.257 553.682 cv
149.261 246.933 mo
149.164 244.257 149.133 241.583 149.219 239.013 cv
152.975 240.402 156.745 242.157 158.427 242.963 cv
155.773 244.124 152.589 245.507 149.261 246.933 cv
159.646 242.43 mo
160.18 240.721 161.311 236.963 162.306 232.731 cv
163.439 227.884 163.729 222.269 164.323 218.388 cv
168.015 217.396 170.565 214.771 169.605 212.49 cv
169.284 211.723 168.585 211.378 167.645 211.247 cv
171.281 206.989 177.311 202.312 179.573 200.615 cv
179.871 200.83 180.169 201.047 180.468 201.267 cv
185.04 197.145 li
179.95 193.298 174.899 190.108 170.162 187.479 cv
173.819 184.544 185.412 176.443 187.738 176.443 cv
187.788 176.443 187.834 176.446 187.875 176.454 cv
190.077 176.862 192.04 178.365 196.609 180.75 cv
195.988 181.712 195.369 182.695 194.751 183.699 cv
189.095 192.899 182.973 207.229 181.816 220.073 cv
181.744 220.072 181.673 220.071 181.601 220.071 cv
175.047 220.071 170.56 225.981 165.519 239.841 cv
165.519 239.841 163.186 240.879 159.646 242.43 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[482.792 0 0 537.776 299.65 318.198 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [1 .992157 .941176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [.6 .560784 .580392 ]
/N 1.66691 
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[482.792 0 0 537.776 299.65 318.198 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr2orrr2orrr)forVcZlr;?Hh
qtg0cq>'j]q"OOWp@e1Pp%7nJoCDJBnaQ&:n*]T1m-O'(lKRQski_*jjlGL_io8qThr!;Hh;$c=g=b-1
f%/C$e'c[ld*L"^c-4ARaiMNB`l5m6_SO%&^:h1k]",>[[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1<
~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nr;?Kjr;?Kjqtp9fqtg0cqYBs_
q"XXYp\4CTp%@tLo^h\Fo'u8>nF,i6md9B-lg*j#l0.?ok2tddjQ#7ZiS`VNhVI#CgY1?6f[n^*e^W'r
dF$=ecHXSVb/qcHa2Z*:_ns7*^V7Co]=PP_\$i]OZa-j?YHG"/Wi;qpVPU)`TqJ$LSXc1;R$X,(PEM&i
~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:n*f`6n*f`6n*]W3mdBN1mHs<-
m-O'(lg*j$lKRQskih3mk2tgfjlGL_j5].YiSi_Qhr!;Ih;$f?gY1B7f\"g-f%&=#eC2jodEp7dcHa\Y
bKJ&MaiMNB`l5m6_ns7*^V@Lr]Xtee\[],W[C*BJZE^X;Y-+n.X/`.tVl$;dUS=HTTV%gHS=>t8R$X,(
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
405.95 156.566 mo
404.293 157.423 402.309 157.855 399.992 157.855 cv
397.88 157.855 396.011 157.185 394.385 155.849 cv
392.759 154.513 391.947 152.714 391.947 150.455 cv
391.947 148.958 392.334 147.585 393.111 146.332 cv
393.884 145.082 394.881 144.052 396.095 143.248 cv
397.084 142.558 398.216 142.025 399.488 141.65 cv
400.757 141.279 402.076 141.089 403.44 141.089 cv
403.665 141.089 403.883 141.095 404.099 141.103 cv
404.313 141.115 404.534 141.128 404.757 141.146 cv
405.525 141.201 406.276 141.337 407.014 141.552 cv
407.751 141.767 408.411 142.136 408.991 142.66 cv
409.29 142.921 409.503 143.214 409.635 143.542 cv
409.766 143.871 409.832 144.203 409.832 144.539 cv
409.832 145.23 409.58 145.859 409.076 146.429 cv
408.569 147.001 407.916 147.294 407.113 147.314 cv
406.646 147.332 406.234 147.253 405.879 147.076 cv
405.525 146.898 405.187 146.679 404.869 146.416 cv
404.646 146.234 li
404.422 146.025 li
404.576 145.953 li
404.73 145.884 li
405.103 145.679 405.43 145.46 405.711 145.226 cv
405.992 144.992 406.214 144.652 406.383 144.203 cv
406.456 143.992 li
406.468 143.781 li
406.468 143.464 406.336 143.22 406.076 143.052 cv
405.814 142.884 405.497 142.8 405.123 142.8 cv
404.113 142.8 403.215 143.201 402.431 144.005 cv
401.646 144.808 400.983 145.697 400.44 146.669 cv
400.217 147.08 400.015 147.492 399.837 147.902 cv
399.66 148.314 399.506 148.687 399.375 149.023 cv
399.226 149.435 399.085 149.902 398.956 150.425 cv
398.824 150.949 398.75 151.472 398.731 151.996 cv
398.731 152.15 li
398.731 152.304 li
398.731 152.996 398.865 153.64 399.135 154.238 cv
399.409 154.835 399.908 155.265 400.635 155.527 cv
400.898 155.621 401.165 155.691 401.436 155.738 cv
401.707 155.785 401.982 155.806 402.261 155.806 cv
402.472 155.806 li
402.655 155.779 li
403.814 155.705 404.916 155.298 405.963 154.56 cv
407.009 153.822 407.785 152.966 408.291 151.996 cv
408.346 151.898 li
408.402 151.798 li
408.458 151.714 li
408.514 151.603 li
409.58 151.996 li
410.141 152.218 li
409 154.255 407.602 155.705 405.95 156.566 cv
cp
.270588 .196078 0 rgb
f
422.586 156.607 mo
421.616 157.607 420.251 158.107 418.495 158.107 cv
418.382 158.107 418.264 158.103 418.144 158.093 cv
418.022 158.083 417.906 158.078 417.792 158.078 cv
417.346 158.021 416.914 157.91 416.504 157.742 cv
416.093 157.574 415.748 157.304 415.467 156.929 cv
415.279 156.667 415.149 156.396 415.074 156.117 cv
415 155.835 414.962 155.546 414.962 155.248 cv
414.962 155.023 li
414.99 154.798 li
415.028 154.425 415.102 154.052 415.214 153.677 cv
415.327 153.302 415.449 152.958 415.579 152.64 cv
415.598 152.583 415.635 152.492 415.69 152.359 cv
415.748 152.23 415.803 152.08 415.859 151.912 cv
415.897 151.835 415.93 151.753 415.958 151.658 cv
415.985 151.564 416.008 151.472 416.028 151.378 cv
416.064 151.248 416.097 151.113 416.125 150.972 cv
416.153 150.832 416.167 150.707 416.167 150.593 cv
416.167 150.425 416.134 150.291 416.069 150.187 cv
416.003 150.083 415.887 150.035 415.717 150.035 cv
415.383 150.035 415.065 150.177 414.767 150.468 cv
414.466 150.757 414.214 151.07 414.009 151.408 cv
413.897 151.591 413.799 151.767 413.714 151.925 cv
413.629 152.083 413.57 152.23 413.533 152.359 cv
413.327 152.902 413.13 153.449 412.945 154 cv
412.756 154.55 412.569 155.099 412.382 155.64 cv
412.252 156.013 412.125 156.382 412.003 156.748 cv
411.882 157.111 411.756 157.48 411.626 157.855 cv
406.271 157.855 li
411.57 142.435 li
416.952 142.435 li
416.225 144.541 li
414.823 148.603 li
415.214 148.398 415.648 148.216 416.125 148.056 cv
416.602 147.898 417.092 147.789 417.597 147.734 cv
417.69 147.734 417.788 147.73 417.892 147.72 cv
417.995 147.71 418.092 147.707 418.185 147.707 cv
418.728 147.724 419.251 147.818 419.755 147.986 cv
420.259 148.154 420.691 148.445 421.045 148.855 cv
421.289 149.117 421.46 149.402 421.565 149.71 cv
421.667 150.019 421.718 150.332 421.718 150.65 cv
421.718 150.837 421.704 151.019 421.676 151.197 cv
421.648 151.375 421.597 151.556 421.522 151.744 cv
421.466 151.931 421.405 152.121 421.339 152.318 cv
421.275 152.513 421.205 152.714 421.129 152.919 cv
421.055 153.107 420.984 153.298 420.918 153.494 cv
420.854 153.691 420.792 153.892 420.737 154.099 cv
420.681 154.208 li
420.625 154.349 li
420.569 154.517 li
420.514 154.714 li
420.5 154.855 li
420.486 154.996 li
420.486 155.087 420.508 155.167 420.554 155.232 cv
420.602 155.298 420.691 155.332 420.821 155.332 cv
420.915 155.332 421.007 155.316 421.102 155.289 cv
421.195 155.261 421.289 155.218 421.381 155.164 cv
421.643 155.033 421.896 154.845 422.139 154.603 cv
422.38 154.359 422.605 154.107 422.812 153.845 cv
422.942 153.658 423.063 153.472 423.176 153.285 cv
423.289 153.099 423.372 152.929 423.427 152.781 cv
423.484 152.667 li
423.541 152.527 li
423.597 152.416 li
423.653 152.304 li
425.053 152.976 li
424.381 154.396 423.557 155.607 422.586 156.607 cv
cp
f
432.413 149.64 mo
432.346 149.511 432.182 149.445 431.922 149.445 cv
431.828 149.445 431.735 149.453 431.64 149.472 cv
431.548 149.492 431.456 149.519 431.361 149.556 cv
431.005 149.707 430.651 149.968 430.295 150.341 cv
429.941 150.714 429.622 151.117 429.342 151.546 cv
429.137 151.845 428.955 152.14 428.795 152.429 cv
428.636 152.72 428.521 152.966 428.445 153.171 cv
428.426 153.228 428.394 153.322 428.347 153.453 cv
428.301 153.585 428.258 153.732 428.221 153.902 cv
428.183 154.033 428.145 154.166 428.111 154.308 cv
428.071 154.449 428.043 154.593 428.026 154.742 cv
427.987 154.855 427.963 154.976 427.955 155.107 cv
427.946 155.238 427.941 155.359 427.941 155.47 cv
427.941 155.751 427.987 155.986 428.081 156.173 cv
428.174 156.359 428.342 156.453 428.585 156.453 cv
429.127 156.453 429.608 156.23 430.029 155.779 cv
430.45 155.332 430.81 154.835 431.109 154.292 cv
431.278 154.013 431.417 153.742 431.529 153.48 cv
431.64 153.218 431.744 152.986 431.838 152.781 cv
432.062 152.201 432.229 151.697 432.342 151.265 cv
432.456 150.837 432.51 150.472 432.51 150.173 cv
432.51 149.949 432.477 149.771 432.413 149.64 cv
cp
438.916 156.636 mo
437.954 157.617 436.575 158.107 434.782 158.107 cv
434.71 158.107 li
434.64 158.107 li
434.043 158.087 433.477 157.953 432.946 157.701 cv
432.413 157.447 432.015 157.033 431.753 156.453 cv
431.25 156.919 430.673 157.296 430.029 157.587 cv
429.385 157.876 428.727 158.05 428.052 158.107 cv
427.815 158.134 li
427.731 158.134 427.642 158.134 427.548 158.134 cv
426.894 158.117 426.263 157.984 425.656 157.742 cv
425.048 157.5 424.511 157.087 424.045 156.509 cv
423.689 156.08 423.432 155.63 423.273 155.164 cv
423.115 154.695 423.036 154.218 423.036 153.732 cv
423.036 152.875 423.264 152.042 423.722 151.238 cv
424.179 150.435 424.765 149.763 425.473 149.22 cv
426.015 148.808 426.642 148.468 427.352 148.197 cv
428.062 147.925 428.792 147.773 429.539 147.734 cv
429.778 147.707 li
430.016 147.707 li
430.613 147.707 431.194 147.794 431.753 147.97 cv
432.315 148.15 432.819 148.427 433.266 148.798 cv
433.548 147.958 li
434.462 147.958 435.374 147.958 436.281 147.958 cv
437.188 147.958 438.098 147.958 439.013 147.958 cv
438.901 148.294 438.785 148.636 438.665 148.982 cv
438.542 149.328 438.424 149.669 438.313 150.005 cv
438.07 150.677 437.833 151.355 437.598 152.037 cv
437.365 152.72 437.136 153.406 436.912 154.099 cv
436.883 154.166 li
436.855 154.292 li
436.8 154.449 li
436.772 154.63 li
436.744 154.742 li
436.744 154.855 li
436.785 155.08 li
436.94 155.218 li
437.065 155.261 li
437.22 155.248 li
437.332 155.248 437.44 155.224 437.542 155.177 cv
437.646 155.13 437.751 155.08 437.865 155.023 cv
438.07 154.892 438.275 154.724 438.481 154.517 cv
438.687 154.314 438.875 154.099 439.042 153.873 cv
439.21 153.667 439.355 153.462 439.476 153.255 cv
439.598 153.052 439.686 152.882 439.743 152.751 cv
439.799 152.64 li
439.855 152.527 li
439.883 152.416 li
439.94 152.304 li
441.397 152.949 li
440.706 154.425 439.878 155.654 438.916 156.636 cv
cp
f
456.058 149.64 mo
456.058 149.753 456.058 149.855 456.058 149.949 cv
456.058 150.64 455.848 151.187 455.427 151.589 cv
455.008 151.992 454.544 152.191 454.041 152.191 cv
453.998 152.191 li
453.957 152.191 li
453.563 152.191 453.19 152.062 452.833 151.798 cv
452.479 151.537 452.226 151.117 452.078 150.539 cv
452.022 150.369 451.952 150.244 451.867 150.16 cv
451.783 150.074 451.685 150.042 451.572 150.06 cv
451.386 150.06 451.175 150.167 450.942 150.382 cv
450.708 150.597 450.461 150.892 450.2 151.265 cv
449.751 151.845 449.368 152.492 449.049 153.199 cv
448.732 153.912 448.452 154.63 448.209 155.359 cv
448.096 155.675 447.994 155.986 447.9 156.285 cv
447.807 156.583 447.705 156.882 447.593 157.181 cv
447.553 157.294 447.517 157.406 447.48 157.517 cv
447.443 157.63 447.405 157.742 447.368 157.855 cv
442.181 157.855 li
444.508 151.351 li
444.564 151.154 li
444.564 151.015 li
444.564 150.808 444.484 150.673 444.326 150.609 cv
444.167 150.542 443.986 150.519 443.78 150.539 cv
443.292 150.593 442.865 150.818 442.49 151.21 cv
442.116 151.603 441.808 152.023 441.565 152.472 cv
441.508 152.566 441.453 152.667 441.397 152.781 cv
441.34 152.892 441.292 152.996 441.256 153.087 cv
439.855 152.527 li
440.341 151.255 441.055 150.113 442 149.093 cv
442.943 148.076 444.126 147.529 445.546 147.453 cv
445.676 147.435 445.813 147.425 445.952 147.425 cv
446.093 147.425 446.238 147.435 446.387 147.453 cv
447.003 147.492 447.595 147.646 448.167 147.916 cv
448.736 148.187 449.191 148.593 449.527 149.134 cv
449.938 148.837 450.373 148.556 450.831 148.294 cv
451.289 148.035 451.76 147.828 452.246 147.677 cv
452.47 147.603 452.689 147.552 452.905 147.523 cv
453.12 147.496 453.329 147.482 453.536 147.482 cv
453.817 147.482 454.091 147.519 454.363 147.593 cv
454.633 147.669 454.89 147.781 455.133 147.929 cv
455.375 148.099 455.568 148.304 455.708 148.546 cv
455.848 148.791 455.947 149.042 456.001 149.304 cv
456.041 149.416 456.058 149.527 456.058 149.64 cv
cp
f
465.435 149.64 mo
465.37 149.511 465.207 149.445 464.945 149.445 cv
464.851 149.445 464.758 149.453 464.665 149.472 cv
464.572 149.492 464.477 149.519 464.385 149.556 cv
464.03 149.707 463.673 149.968 463.32 150.341 cv
462.963 150.714 462.646 151.117 462.366 151.546 cv
462.161 151.845 461.979 152.14 461.819 152.429 cv
461.66 152.72 461.542 152.966 461.469 153.171 cv
461.45 153.228 461.417 153.322 461.372 153.453 cv
461.324 153.585 461.281 153.732 461.244 153.902 cv
461.207 154.033 461.169 154.166 461.132 154.308 cv
461.094 154.449 461.066 154.593 461.047 154.742 cv
461.011 154.855 460.988 154.976 460.979 155.107 cv
460.968 155.238 460.964 155.359 460.964 155.47 cv
460.964 155.751 461.011 155.986 461.103 156.173 cv
461.198 156.359 461.366 156.453 461.609 156.453 cv
462.15 156.453 462.631 156.23 463.052 155.779 cv
463.473 155.332 463.833 154.835 464.131 154.292 cv
464.3 154.013 464.44 153.742 464.553 153.48 cv
464.665 153.218 464.767 152.986 464.861 152.781 cv
465.085 152.201 465.253 151.697 465.366 151.265 cv
465.477 150.837 465.534 150.472 465.534 150.173 cv
465.534 149.949 465.501 149.771 465.435 149.64 cv
cp
471.939 156.636 mo
470.976 157.617 469.599 158.107 467.804 158.107 cv
467.733 158.107 li
467.665 158.107 li
467.066 158.087 466.501 157.953 465.968 157.701 cv
465.435 157.447 465.038 157.033 464.776 156.453 cv
464.273 156.919 463.698 157.296 463.052 157.587 cv
462.408 157.876 461.75 158.05 461.076 158.107 cv
460.838 158.134 li
460.753 158.134 460.665 158.134 460.571 158.134 cv
459.917 158.117 459.287 157.984 458.679 157.742 cv
458.072 157.5 457.535 157.087 457.068 156.509 cv
456.712 156.08 456.455 155.63 456.296 155.164 cv
456.138 154.695 456.058 154.218 456.058 153.732 cv
456.058 152.875 456.288 152.042 456.745 151.238 cv
457.203 150.435 457.786 149.763 458.497 149.22 cv
459.039 148.808 459.665 148.468 460.375 148.197 cv
461.085 147.925 461.815 147.773 462.562 147.734 cv
462.8 147.707 li
463.039 147.707 li
463.636 147.707 464.215 147.794 464.776 147.97 cv
465.338 148.15 465.842 148.427 466.291 148.798 cv
466.571 147.958 li
467.486 147.958 468.396 147.958 469.304 147.958 cv
470.21 147.958 471.123 147.958 472.037 147.958 cv
471.925 148.294 471.809 148.636 471.688 148.982 cv
471.564 149.328 471.449 149.669 471.336 150.005 cv
471.093 150.677 470.855 151.355 470.622 152.037 cv
470.388 152.72 470.16 153.406 469.933 154.099 cv
469.906 154.166 li
469.878 154.292 li
469.822 154.449 li
469.795 154.63 li
469.767 154.742 li
469.767 154.855 li
469.809 155.08 li
469.962 155.218 li
470.089 155.261 li
470.244 155.248 li
470.356 155.248 470.462 155.224 470.566 155.177 cv
470.669 155.13 470.776 155.08 470.888 155.023 cv
471.093 154.892 471.299 154.724 471.505 154.517 cv
471.711 154.314 471.898 154.099 472.066 153.873 cv
472.234 153.667 472.377 153.462 472.5 153.255 cv
472.62 153.052 472.71 152.882 472.767 152.751 cv
472.822 152.64 li
472.878 152.527 li
472.907 152.416 li
472.963 152.304 li
474.42 152.949 li
473.73 154.425 472.902 155.654 471.939 156.636 cv
cp
f
487.357 153.13 mo
487.288 153.312 li
486.857 154.191 486.38 154.972 485.857 155.654 cv
485.333 156.335 484.586 156.91 483.615 157.378 cv
483.035 157.64 482.395 157.839 481.694 157.98 cv
480.994 158.121 480.278 158.191 479.549 158.191 cv
479.368 158.191 li
479.185 158.191 li
478.101 158.134 477.06 157.923 476.06 157.56 cv
475.059 157.197 474.242 156.611 473.607 155.806 cv
473.27 155.378 473.022 154.943 472.865 154.503 cv
472.704 154.066 472.625 153.621 472.625 153.171 cv
472.625 152.314 472.886 151.494 473.411 150.72 cv
473.933 149.943 474.606 149.324 475.429 148.855 cv
475.97 148.556 476.634 148.3 477.42 148.083 cv
478.203 147.871 479.008 147.744 479.831 147.707 cv
479.944 147.687 480.045 147.677 480.138 147.677 cv
480.231 147.677 480.325 147.677 480.419 147.677 cv
481.127 147.677 481.801 147.761 482.438 147.929 cv
483.072 148.099 483.624 148.388 484.091 148.798 cv
484.315 149.023 484.501 149.291 484.653 149.597 cv
484.8 149.906 484.894 150.23 484.932 150.566 cv
484.932 150.664 li
484.932 150.761 li
484.932 151.003 484.89 151.248 484.806 151.492 cv
484.722 151.734 484.596 151.949 484.426 152.134 cv
484.221 152.378 483.979 152.556 483.7 152.667 cv
483.417 152.781 483.12 152.837 482.801 152.837 cv
482.675 152.837 li
482.522 152.808 li
482.353 152.789 482.179 152.748 482.002 152.681 cv
481.825 152.617 481.661 152.539 481.512 152.445 cv
481.269 152.294 481.073 152.103 480.923 151.871 cv
480.774 151.634 480.681 151.388 480.642 151.126 cv
480.642 151.07 li
480.642 150.986 li
480.615 150.931 li
480.615 150.875 li
480.615 150.445 480.754 150.07 481.036 149.753 cv
481.315 149.435 481.661 149.22 482.073 149.107 cv
481.96 149.07 481.849 149.037 481.736 149.009 cv
481.624 148.982 481.502 148.978 481.372 148.996 cv
481.218 148.996 li
481.063 149.023 li
480.911 149.05 li
480.754 149.107 li
480.1 149.332 479.536 149.794 479.059 150.496 cv
478.583 151.197 478.258 151.949 478.091 152.751 cv
478.054 152.919 478.027 153.099 478.008 153.285 cv
477.99 153.472 477.98 153.648 477.98 153.816 cv
477.998 154.544 478.194 155.177 478.569 155.71 cv
478.942 156.244 479.558 156.509 480.419 156.509 cv
481.858 156.509 483.027 156.113 483.922 155.316 cv
484.82 154.523 485.557 153.537 486.138 152.359 cv
487.457 152.949 li
487.357 153.13 li
cp
f
495.094 153.242 mo
495.047 153.326 495.006 153.416 494.969 153.509 cv
494.67 154.107 494.342 154.687 493.987 155.248 cv
493.631 155.806 493.202 156.314 492.698 156.761 cv
492.229 157.171 491.675 157.5 491.029 157.742 cv
490.385 157.984 489.642 158.107 488.801 158.107 cv
488.703 158.107 li
488.634 158.107 li
488.11 158.087 487.61 157.984 487.133 157.798 cv
486.657 157.611 486.268 157.294 485.969 156.845 cv
485.783 156.566 485.647 156.265 485.564 155.949 cv
485.479 155.63 485.438 155.302 485.438 154.966 cv
485.438 154.873 485.442 154.785 485.452 154.701 cv
485.459 154.617 485.474 154.527 485.494 154.435 cv
485.531 154.173 485.582 153.912 485.647 153.648 cv
485.713 153.388 485.783 153.134 485.857 152.892 cv
485.969 152.593 486.078 152.294 486.179 151.996 cv
486.283 151.697 486.38 151.388 486.474 151.07 cv
486.568 150.771 486.666 150.472 486.768 150.173 cv
486.871 149.875 486.979 149.576 487.09 149.275 cv
485.884 149.275 li
486.361 147.929 li
487.568 147.929 li
487.661 147.65 487.754 147.375 487.848 147.103 cv
487.941 146.833 488.045 146.556 488.157 146.277 cv
488.25 146.015 488.342 145.748 488.436 145.478 cv
488.529 145.207 488.622 144.931 488.718 144.652 cv
489.334 144.556 489.95 144.468 490.568 144.382 cv
491.184 144.3 491.801 144.212 492.417 144.117 cv
492.716 144.082 493.024 144.039 493.342 143.992 cv
493.66 143.945 493.969 143.904 494.268 143.865 cv
494.156 144.203 494.04 144.539 493.917 144.875 cv
493.795 145.212 493.679 145.548 493.567 145.884 cv
493.456 146.22 493.338 146.56 493.216 146.906 cv
493.095 147.253 492.979 147.593 492.867 147.929 cv
494.379 147.929 li
493.875 149.275 li
492.39 149.275 li
492.259 149.669 492.123 150.066 491.981 150.468 cv
491.843 150.869 491.707 151.275 491.576 151.687 cv
491.426 152.097 491.287 152.505 491.157 152.906 cv
491.025 153.308 490.884 153.705 490.735 154.099 cv
490.698 154.23 490.667 154.355 490.637 154.476 cv
490.61 154.597 490.596 154.707 490.596 154.798 cv
490.596 154.966 490.632 155.083 490.707 155.15 cv
490.783 155.214 490.884 155.248 491.014 155.248 cv
491.129 155.248 491.255 155.218 491.393 155.164 cv
491.535 155.107 491.679 155.033 491.83 154.939 cv
492.066 154.771 li
492.306 154.574 li
492.66 154.255 492.95 153.902 493.174 153.509 cv
493.399 153.117 493.604 152.714 493.792 152.304 cv
495.22 152.976 li
495.183 153.07 495.141 153.158 495.094 153.242 cv
cp
f
502.734 149.107 mo
502.567 148.978 502.323 148.904 502.005 148.884 cv
501.313 148.865 500.715 149.126 500.211 149.669 cv
499.706 150.21 499.323 150.808 499.062 151.462 cv
498.967 151.687 498.893 151.912 498.836 152.134 cv
498.781 152.359 498.735 152.566 498.697 152.751 cv
498.921 152.734 499.155 152.707 499.399 152.667 cv
499.641 152.63 499.882 152.576 500.126 152.5 cv
500.836 152.314 501.487 152.005 502.075 151.576 cv
502.665 151.144 502.966 150.546 502.985 149.781 cv
502.985 149.462 502.902 149.238 502.734 149.107 cv
cp
506.546 155.5 mo
505.966 156.265 505.163 156.89 504.136 157.378 cv
503.518 157.66 502.869 157.863 502.187 157.994 cv
501.505 158.125 500.808 158.191 500.099 158.191 cv
499.987 158.191 499.874 158.191 499.762 158.191 cv
499.65 158.191 499.548 158.181 499.456 158.164 cv
499.005 158.144 498.566 158.093 498.136 158.007 cv
497.706 157.923 497.287 157.816 496.875 157.687 cv
495.791 157.312 494.898 156.742 494.198 155.976 cv
493.497 155.21 493.147 154.302 493.147 153.255 cv
493.147 152.996 493.169 152.728 493.216 152.458 cv
493.262 152.187 493.333 151.912 493.425 151.63 cv
493.8 150.511 494.557 149.634 495.698 149.009 cv
496.835 148.384 498.052 147.986 499.341 147.818 cv
499.622 147.781 499.897 147.753 500.168 147.734 cv
500.439 147.716 500.706 147.707 500.968 147.707 cv
501.36 147.707 501.744 147.724 502.117 147.761 cv
502.49 147.8 502.836 147.865 503.155 147.958 cv
503.308 148 li
503.461 148.042 li
504.004 148.191 504.514 148.455 504.991 148.826 cv
505.467 149.201 505.715 149.707 505.735 150.341 cv
505.771 151.351 505.351 152.146 504.472 152.724 cv
503.593 153.302 502.631 153.722 501.584 153.986 cv
501.005 154.134 500.443 154.238 499.903 154.292 cv
499.359 154.349 498.893 154.369 498.501 154.349 cv
498.594 155.023 498.85 155.542 499.271 155.906 cv
499.692 156.271 500.249 156.453 500.94 156.453 cv
502.34 156.453 503.518 156.06 504.472 155.275 cv
505.424 154.49 506.172 153.5 506.715 152.304 cv
508.116 152.949 li
507.649 153.882 507.125 154.734 506.546 155.5 cv
cp
f
522.834 149.64 mo
522.834 149.753 522.834 149.855 522.834 149.949 cv
522.834 150.64 522.623 151.187 522.204 151.589 cv
521.783 151.992 521.32 152.191 520.816 152.191 cv
520.773 152.191 li
520.731 152.191 li
520.338 152.191 519.965 152.062 519.61 151.798 cv
519.254 151.537 519 151.117 518.852 150.539 cv
518.796 150.369 518.727 150.244 518.642 150.16 cv
518.558 150.074 518.46 150.042 518.348 150.06 cv
518.162 150.06 517.951 150.167 517.717 150.382 cv
517.483 150.597 517.236 150.892 516.975 151.265 cv
516.527 151.845 516.143 152.492 515.825 153.199 cv
515.507 153.912 515.226 154.63 514.983 155.359 cv
514.872 155.675 514.768 155.986 514.674 156.285 cv
514.582 156.583 514.48 156.882 514.368 157.181 cv
514.33 157.294 514.292 157.406 514.254 157.517 cv
514.217 157.63 514.18 157.742 514.143 157.855 cv
508.958 157.855 li
511.284 151.351 li
511.34 151.154 li
511.34 151.015 li
511.34 150.808 511.26 150.673 511.101 150.609 cv
510.942 150.542 510.76 150.519 510.555 150.539 cv
510.068 150.593 509.638 150.818 509.265 151.21 cv
508.89 151.603 508.583 152.023 508.34 152.472 cv
508.284 152.566 508.227 152.667 508.172 152.781 cv
508.116 152.892 508.068 152.996 508.031 153.087 cv
506.629 152.527 li
507.117 151.255 507.831 150.113 508.775 149.093 cv
509.718 148.076 510.9 147.529 512.321 147.453 cv
512.453 147.435 512.586 147.425 512.727 147.425 cv
512.867 147.425 513.012 147.435 513.162 147.453 cv
513.778 147.492 514.372 147.646 514.942 147.916 cv
515.511 148.187 515.965 148.593 516.301 149.134 cv
516.712 148.837 517.147 148.556 517.605 148.294 cv
518.064 148.035 518.535 147.828 519.021 147.677 cv
519.245 147.603 519.464 147.552 519.68 147.523 cv
519.894 147.496 520.104 147.482 520.31 147.482 cv
520.59 147.482 520.867 147.519 521.138 147.593 cv
521.409 147.669 521.666 147.781 521.908 147.929 cv
522.15 148.099 522.341 148.304 522.483 148.546 cv
522.623 148.791 522.721 149.042 522.778 149.304 cv
522.815 149.416 522.834 149.527 522.834 149.64 cv
cp
f
524.908 152.724 mo
525.019 152.875 525.099 153.037 525.145 153.214 cv
525.193 153.392 525.216 153.576 525.216 153.761 cv
525.216 153.949 525.188 154.126 525.131 154.292 cv
525.076 154.462 524.992 154.623 524.878 154.771 cv
524.692 155.052 524.44 155.271 524.124 155.429 cv
523.804 155.589 523.478 155.669 523.141 155.669 cv
523.072 155.669 li
523 155.669 li
522.931 155.654 li
522.862 155.64 li
522.992 155.826 523.161 155.99 523.367 156.13 cv
523.572 156.271 523.794 156.341 524.04 156.341 cv
524.804 156.341 525.416 156.134 525.875 155.724 cv
526.333 155.312 526.562 154.707 526.562 153.902 cv
526.58 153.322 526.589 152.748 526.589 152.177 cv
526.589 151.607 526.589 151.042 526.589 150.482 cv
524.908 152.724 li
cp
530.262 156.494 mo
529.159 157.308 527.944 157.781 526.618 157.91 cv
526.45 157.929 526.286 157.943 526.127 157.953 cv
525.967 157.96 525.814 157.966 525.665 157.966 cv
525.477 157.966 525.281 157.96 525.076 157.953 cv
524.87 157.943 524.666 157.919 524.459 157.882 cv
523.916 157.826 523.388 157.697 522.875 157.49 cv
522.36 157.283 521.917 156.986 521.543 156.593 cv
521.281 156.275 521.09 155.939 520.969 155.583 cv
520.847 155.23 520.787 154.863 520.787 154.49 cv
520.787 154.285 520.8 154.08 520.829 153.873 cv
520.857 153.667 520.899 153.462 520.955 153.255 cv
521.085 152.771 521.348 152.392 521.739 152.121 cv
522.131 151.851 522.562 151.724 523.029 151.744 cv
523.183 151.744 li
523.31 151.744 li
523.437 151.757 li
523.589 151.798 li
526.084 148.322 li
531.383 146.976 li
531.44 147.968 531.5 148.962 531.565 149.964 cv
531.63 150.962 531.701 151.958 531.775 152.949 cv
531.869 154.5 531.365 155.683 530.262 156.494 cv
cp
f
373.694 137.427 mo
372.04 138.289 370.052 138.718 367.735 138.718 cv
365.624 138.718 363.754 138.052 362.128 136.714 cv
360.504 135.378 359.691 133.58 359.691 131.318 cv
359.691 129.822 360.078 128.449 360.854 127.197 cv
361.629 125.945 362.625 124.917 363.841 124.113 cv
364.83 123.423 365.961 122.888 367.232 122.515 cv
368.502 122.142 369.819 121.955 371.185 121.955 cv
371.409 121.955 371.628 121.958 371.844 121.968 cv
372.058 121.978 372.278 121.992 372.502 122.011 cv
373.269 122.066 374.02 122.203 374.759 122.416 cv
375.497 122.632 376.156 123.001 376.735 123.525 cv
377.034 123.787 377.249 124.082 377.379 124.408 cv
377.511 124.734 377.577 125.066 377.577 125.402 cv
377.577 126.095 377.323 126.724 376.82 127.294 cv
376.315 127.865 375.661 128.16 374.857 128.177 cv
374.389 128.197 373.979 128.117 373.623 127.941 cv
373.269 127.761 372.932 127.542 372.614 127.281 cv
372.389 127.099 li
372.166 126.888 li
372.321 126.82 li
372.474 126.748 li
372.848 126.542 373.176 126.324 373.455 126.089 cv
373.736 125.857 373.96 125.515 374.126 125.066 cv
374.199 124.855 li
374.211 124.646 li
374.211 124.33 374.082 124.085 373.82 123.917 cv
373.558 123.75 373.241 123.664 372.867 123.664 cv
371.857 123.664 370.959 124.068 370.176 124.871 cv
369.389 125.673 368.726 126.56 368.186 127.533 cv
367.961 127.945 367.759 128.357 367.583 128.767 cv
367.406 129.177 367.25 129.552 367.12 129.888 cv
366.969 130.298 366.831 130.767 366.7 131.289 cv
366.569 131.814 366.493 132.335 366.475 132.859 cv
366.475 133.015 li
366.475 133.167 li
366.475 133.859 366.611 134.503 366.88 135.103 cv
367.152 135.701 367.653 136.13 368.38 136.392 cv
368.643 136.486 368.909 136.556 369.179 136.601 cv
369.451 136.65 369.727 136.671 370.007 136.671 cv
370.217 136.671 li
370.4 136.644 li
371.558 136.57 372.661 136.164 373.708 135.425 cv
374.753 134.687 375.53 133.832 376.034 132.859 cv
376.09 132.761 li
376.145 132.664 li
376.202 132.578 li
376.257 132.466 li
377.323 132.859 li
377.884 133.083 li
376.744 135.121 375.347 136.57 373.694 137.427 cv
cp
f
385.551 130.294 mo
385.356 130.042 385.108 129.916 384.809 129.916 cv
384.621 129.916 384.417 129.968 384.191 130.07 cv
383.968 130.171 383.745 130.318 383.519 130.505 cv
383.425 130.58 383.337 130.664 383.253 130.755 cv
383.168 130.851 383.079 130.945 382.986 131.037 cv
382.556 131.542 382.209 132.117 381.949 132.761 cv
381.687 133.408 381.5 134.064 381.389 134.738 cv
381.371 134.962 381.352 135.183 381.333 135.396 cv
381.314 135.611 381.305 135.822 381.305 136.027 cv
381.305 136.14 381.309 136.281 381.319 136.447 cv
381.328 136.615 381.352 136.785 381.389 136.953 cv
381.445 137.271 381.542 137.554 381.683 137.806 cv
381.823 138.06 382.042 138.185 382.341 138.185 cv
382.808 138.185 383.225 138.023 383.588 137.695 cv
383.954 137.369 384.248 137 384.471 136.587 cv
384.528 136.494 384.584 136.406 384.64 136.322 cv
384.697 136.238 384.743 136.15 384.781 136.054 cv
384.482 135.849 384.252 135.593 384.093 135.285 cv
383.935 134.976 383.856 134.644 383.856 134.291 cv
383.856 134.177 li
383.856 134.093 li
383.913 133.533 384.122 133.005 384.487 132.509 cv
384.85 132.013 385.314 131.691 385.875 131.542 cv
385.854 130.962 385.748 130.546 385.551 130.294 cv
cp
393.471 134.667 mo
393.322 134.976 393.153 135.289 392.965 135.607 cv
392.61 136.224 392.176 136.789 391.663 137.302 cv
391.148 137.818 390.545 138.074 389.854 138.074 cv
389.575 138.074 389.307 138.031 389.057 137.947 cv
388.803 137.863 388.565 137.755 388.34 137.625 cv
387.613 138.224 386.756 138.691 385.776 139.027 cv
384.794 139.363 383.79 139.56 382.763 139.615 cv
382.524 139.615 li
382.439 139.615 382.351 139.615 382.257 139.615 cv
381.286 139.615 380.351 139.47 379.455 139.181 cv
378.557 138.892 377.772 138.458 377.1 137.876 cv
376.556 137.392 376.165 136.873 375.922 136.322 cv
375.679 135.771 375.557 135.214 375.557 134.654 cv
375.557 133.775 375.818 132.935 376.342 132.13 cv
376.865 131.328 377.556 130.644 378.417 130.083 cv
379.164 129.597 380.005 129.214 380.939 128.935 cv
381.874 128.656 382.835 128.515 383.828 128.515 cv
383.977 128.515 384.122 128.519 384.262 128.529 cv
384.402 128.539 384.546 128.542 384.697 128.542 cv
385.5 128.617 386.286 128.791 387.051 129.062 cv
387.817 129.332 388.491 129.74 389.07 130.281 cv
389.575 130.728 389.957 131.24 390.219 131.808 cv
390.481 132.378 390.612 132.97 390.612 133.589 cv
390.612 133.812 390.594 134.037 390.555 134.263 cv
390.518 134.486 390.461 134.71 390.388 134.935 cv
390.649 134.896 390.878 134.826 391.075 134.724 cv
391.27 134.621 391.461 134.458 391.649 134.234 cv
391.76 134.121 391.873 133.976 391.985 133.798 cv
392.098 133.623 392.219 133.419 392.349 133.197 cv
393.864 133.869 li
393.75 134.093 393.62 134.361 393.471 134.667 cv
cp
f
399.191 137.47 mo
398.274 138.472 396.937 138.97 395.181 138.97 cv
395.088 138.97 394.989 138.966 394.886 138.957 cv
394.784 138.947 394.685 138.943 394.592 138.943 cv
394.125 138.888 393.668 138.769 393.219 138.591 cv
392.77 138.416 392.406 138.13 392.126 137.738 cv
391.938 137.478 391.799 137.185 391.704 136.869 cv
391.611 136.55 391.565 136.234 391.565 135.916 cv
391.58 135.705 li
391.593 135.523 li
391.629 135.244 391.676 134.97 391.733 134.71 cv
391.789 134.447 391.865 134.197 391.958 133.953 cv
392.573 132.177 393.185 130.398 393.793 128.613 cv
394.401 126.828 395.003 125.056 395.602 123.3 cv
396.068 123.3 396.531 123.3 396.99 123.3 cv
397.448 123.3 397.91 123.3 398.377 123.3 cv
398.825 123.3 399.278 123.3 399.737 123.3 cv
400.194 123.3 400.657 123.3 401.125 123.3 cv
400.453 125.244 399.779 127.187 399.106 129.132 cv
398.434 131.076 397.768 133.019 397.115 134.962 cv
397.041 135.13 396.984 135.285 396.947 135.425 cv
396.91 135.564 396.891 135.683 396.891 135.775 cv
396.891 135.888 396.937 135.976 397.031 136.041 cv
397.125 136.107 397.274 136.13 397.48 136.111 cv
397.629 136.111 397.815 136.05 398.041 135.929 cv
398.264 135.806 398.499 135.634 398.741 135.412 cv
399.079 135.074 399.353 134.72 399.569 134.347 cv
399.782 133.972 399.985 133.58 400.17 133.167 cv
401.573 133.839 li
400.899 135.261 400.106 136.472 399.191 137.47 cv
cp
f
407.094 137.47 mo
406.178 138.472 404.842 138.97 403.085 138.97 cv
402.993 138.97 402.894 138.966 402.792 138.957 cv
402.689 138.947 402.59 138.943 402.497 138.943 cv
402.03 138.888 401.573 138.769 401.125 138.591 cv
400.675 138.416 400.311 138.13 400.03 137.738 cv
399.843 137.478 399.704 137.185 399.611 136.869 cv
399.516 136.55 399.47 136.234 399.47 135.916 cv
399.485 135.705 li
399.499 135.523 li
399.535 135.244 399.583 134.97 399.638 134.71 cv
399.694 134.447 399.768 134.197 399.863 133.953 cv
400.479 132.177 401.091 130.398 401.7 128.613 cv
402.306 126.828 402.909 125.056 403.506 123.3 cv
403.974 123.3 404.437 123.3 404.895 123.3 cv
405.352 123.3 405.815 123.3 406.282 123.3 cv
406.731 123.3 407.184 123.3 407.641 123.3 cv
408.099 123.3 408.563 123.3 409.029 123.3 cv
408.357 125.244 407.683 127.187 407.011 129.132 cv
406.338 131.076 405.674 133.019 405.02 134.962 cv
404.947 135.13 404.89 135.285 404.853 135.425 cv
404.814 135.564 404.797 135.683 404.797 135.775 cv
404.797 135.888 404.842 135.976 404.936 136.041 cv
405.03 136.107 405.178 136.13 405.385 136.111 cv
405.535 136.111 405.72 136.05 405.947 135.929 cv
406.17 135.806 406.404 135.634 406.647 135.412 cv
406.983 135.074 407.258 134.72 407.472 134.347 cv
407.688 133.972 407.889 133.58 408.078 133.167 cv
409.478 133.839 li
408.804 135.261 408.011 136.472 407.094 137.47 cv
cp
f
416.991 129.972 mo
416.824 129.841 416.579 129.767 416.262 129.748 cv
415.57 129.73 414.972 129.992 414.467 130.533 cv
413.963 131.076 413.58 131.673 413.318 132.326 cv
413.224 132.55 413.15 132.775 413.094 133 cv
413.039 133.224 412.991 133.429 412.954 133.617 cv
413.177 133.597 413.411 133.57 413.655 133.533 cv
413.897 133.494 414.14 133.439 414.384 133.363 cv
415.094 133.177 415.744 132.869 416.332 132.439 cv
416.92 132.009 417.224 131.412 417.242 130.644 cv
417.242 130.328 417.16 130.101 416.991 129.972 cv
cp
420.802 136.363 mo
420.224 137.13 419.419 137.755 418.392 138.242 cv
417.775 138.521 417.127 138.728 416.444 138.859 cv
415.761 138.988 415.065 139.054 414.357 139.054 cv
414.244 139.054 414.13 139.054 414.018 139.054 cv
413.907 139.054 413.804 139.046 413.711 139.027 cv
413.261 139.007 412.823 138.957 412.393 138.873 cv
411.963 138.789 411.542 138.681 411.132 138.55 cv
410.047 138.177 409.156 137.607 408.455 136.839 cv
407.752 136.074 407.404 135.167 407.404 134.121 cv
407.404 133.859 407.426 133.593 407.472 133.322 cv
407.52 133.052 407.59 132.775 407.683 132.496 cv
408.058 131.375 408.815 130.501 409.955 129.875 cv
411.093 129.248 412.309 128.851 413.599 128.683 cv
413.879 128.644 414.154 128.617 414.425 128.599 cv
414.697 128.58 414.963 128.572 415.226 128.572 cv
415.618 128.572 416 128.589 416.374 128.626 cv
416.748 128.664 417.093 128.728 417.412 128.822 cv
417.565 128.865 li
417.718 128.908 li
418.261 129.056 418.771 129.318 419.248 129.691 cv
419.724 130.066 419.972 130.572 419.992 131.205 cv
420.029 132.214 419.608 133.009 418.729 133.589 cv
417.849 134.167 416.888 134.589 415.841 134.851 cv
415.26 135 414.701 135.103 414.16 135.16 cv
413.617 135.214 413.15 135.232 412.758 135.214 cv
412.851 135.888 413.11 136.406 413.528 136.771 cv
413.949 137.134 414.504 137.316 415.197 137.316 cv
416.598 137.316 417.775 136.923 418.729 136.14 cv
419.682 135.355 420.429 134.363 420.972 133.167 cv
422.374 133.812 li
421.906 134.748 421.382 135.597 420.802 136.363 cv
cp
f
435.059 133.996 mo
434.989 134.177 li
434.559 135.056 434.083 135.835 433.558 136.517 cv
433.035 137.201 432.288 137.775 431.317 138.242 cv
430.736 138.503 430.096 138.705 429.396 138.843 cv
428.696 138.986 427.981 139.054 427.251 139.054 cv
427.069 139.054 li
426.886 139.054 li
425.802 139 424.761 138.789 423.761 138.425 cv
422.762 138.06 421.943 137.478 421.307 136.671 cv
420.972 136.244 420.724 135.806 420.566 135.369 cv
420.406 134.929 420.328 134.486 420.328 134.037 cv
420.328 133.177 420.588 132.361 421.112 131.583 cv
421.635 130.808 422.307 130.187 423.13 129.72 cv
423.672 129.421 424.336 129.164 425.122 128.949 cv
425.906 128.734 426.709 128.609 427.532 128.572 cv
427.643 128.552 427.747 128.542 427.84 128.542 cv
427.933 128.542 428.027 128.542 428.121 128.542 cv
428.832 128.542 429.503 128.626 430.139 128.794 cv
430.773 128.964 431.325 129.251 431.793 129.664 cv
432.017 129.888 432.204 130.154 432.354 130.462 cv
432.503 130.771 432.596 131.093 432.634 131.429 cv
432.634 131.527 li
432.634 131.625 li
432.634 131.871 432.591 132.113 432.507 132.355 cv
432.423 132.599 432.297 132.812 432.128 133 cv
431.923 133.244 431.68 133.419 431.401 133.533 cv
431.12 133.644 430.822 133.703 430.503 133.703 cv
430.376 133.703 li
430.223 133.673 li
430.054 133.654 429.882 133.613 429.705 133.546 cv
429.526 133.48 429.363 133.402 429.213 133.308 cv
428.97 133.16 428.775 132.968 428.625 132.734 cv
428.475 132.5 428.382 132.251 428.343 131.99 cv
428.343 131.935 li
428.343 131.851 li
428.317 131.792 li
428.317 131.738 li
428.317 131.308 428.456 130.935 428.738 130.617 cv
429.017 130.298 429.363 130.083 429.774 129.972 cv
429.663 129.935 429.549 129.902 429.439 129.875 cv
429.326 129.845 429.204 129.841 429.074 129.859 cv
428.918 129.859 li
428.766 129.888 li
428.612 129.916 li
428.456 129.972 li
427.803 130.197 427.238 130.658 426.761 131.359 cv
426.285 132.06 425.962 132.812 425.793 133.617 cv
425.756 133.785 425.728 133.962 425.709 134.15 cv
425.691 134.335 425.682 134.513 425.682 134.681 cv
425.701 135.412 425.896 136.041 426.271 136.574 cv
426.644 137.107 427.259 137.373 428.121 137.373 cv
429.559 137.373 430.729 136.976 431.624 136.181 cv
432.521 135.388 433.258 134.4 433.84 133.224 cv
435.158 133.812 li
435.059 133.996 li
cp
f
442.796 134.107 mo
442.75 134.193 442.708 134.281 442.67 134.373 cv
442.371 134.97 442.043 135.55 441.688 136.111 cv
441.333 136.671 440.904 137.177 440.4 137.625 cv
439.931 138.037 439.376 138.363 438.731 138.607 cv
438.086 138.849 437.343 138.97 436.502 138.97 cv
436.406 138.97 li
436.335 138.97 li
435.812 138.953 435.311 138.849 434.834 138.662 cv
434.358 138.476 433.97 138.158 433.671 137.708 cv
433.485 137.427 433.349 137.13 433.265 136.812 cv
433.181 136.494 433.14 136.167 433.14 135.832 cv
433.14 135.738 433.143 135.648 433.153 135.564 cv
433.161 135.48 433.176 135.394 433.196 135.298 cv
433.233 135.037 433.283 134.775 433.349 134.513 cv
433.415 134.251 433.485 134 433.558 133.755 cv
433.671 133.457 433.779 133.16 433.881 132.859 cv
433.984 132.56 434.083 132.251 434.176 131.935 cv
434.269 131.636 434.367 131.335 434.471 131.037 cv
434.572 130.74 434.681 130.439 434.793 130.14 cv
433.586 130.14 li
434.063 128.794 li
435.269 128.794 li
435.364 128.515 435.457 128.238 435.55 127.968 cv
435.643 127.697 435.747 127.421 435.858 127.14 cv
435.952 126.88 436.045 126.613 436.138 126.341 cv
436.231 126.07 436.325 125.794 436.419 125.515 cv
437.036 125.421 437.653 125.332 438.269 125.248 cv
438.885 125.164 439.503 125.076 440.12 124.982 cv
440.417 124.945 440.726 124.904 441.044 124.855 cv
441.361 124.81 441.67 124.767 441.97 124.73 cv
441.857 125.066 441.74 125.402 441.62 125.74 cv
441.497 126.076 441.38 126.412 441.268 126.748 cv
441.157 127.083 441.041 127.427 440.918 127.771 cv
440.796 128.117 440.68 128.458 440.568 128.794 cv
442.082 128.794 li
441.576 130.14 li
440.091 130.14 li
439.96 130.533 439.824 130.929 439.685 131.332 cv
439.544 131.734 439.409 132.14 439.277 132.55 cv
439.127 132.962 438.989 133.369 438.859 133.771 cv
438.726 134.173 438.586 134.57 438.438 134.962 cv
438.399 135.093 438.367 135.218 438.339 135.341 cv
438.311 135.462 438.297 135.57 438.297 135.664 cv
438.297 135.832 438.334 135.949 438.409 136.013 cv
438.484 136.08 438.586 136.111 438.718 136.111 cv
438.831 136.111 438.957 136.083 439.095 136.027 cv
439.236 135.97 439.381 135.898 439.531 135.804 cv
439.767 135.634 li
440.007 135.439 li
440.361 135.121 440.653 134.767 440.875 134.373 cv
441.1 133.982 441.306 133.58 441.494 133.167 cv
442.921 133.839 li
442.884 133.935 442.843 134.023 442.796 134.107 cv
cp
f
448.949 127.154 mo
448.65 127.388 448.333 127.56 447.996 127.673 cv
447.799 127.716 li
447.631 127.757 li
447.482 127.777 447.328 127.794 447.169 127.814 cv
447.01 127.832 446.855 127.841 446.706 127.841 cv
446.294 127.841 445.883 127.791 445.473 127.689 cv
445.061 127.585 444.698 127.412 444.378 127.169 cv
444.136 126.984 443.945 126.763 443.804 126.511 cv
443.665 126.257 443.594 126.001 443.594 125.74 cv
443.594 125.591 443.622 125.441 443.678 125.291 cv
443.734 125.14 443.81 125.001 443.902 124.871 cv
444.165 124.533 444.506 124.281 444.925 124.113 cv
445.346 123.945 445.782 123.843 446.23 123.806 cv
446.384 123.806 li
446.538 123.806 li
446.745 123.806 446.949 123.82 447.156 123.847 cv
447.36 123.875 447.555 123.917 447.744 123.972 cv
447.911 124.029 li
448.051 124.085 li
448.444 124.253 448.803 124.488 449.131 124.787 cv
449.458 125.083 449.622 125.449 449.622 125.878 cv
449.608 126.06 li
449.565 126.271 li
449.454 126.626 449.248 126.921 448.949 127.154 cv
cp
450.786 134.095 mo
450.737 134.179 450.686 134.269 450.631 134.363 cv
450.333 134.962 450.005 135.544 449.65 136.107 cv
449.294 136.669 448.865 137.175 448.36 137.625 cv
447.893 138.037 447.346 138.355 446.72 138.578 cv
446.094 138.804 445.444 138.933 444.771 138.97 cv
444.646 138.97 li
444.52 138.97 li
444.24 138.97 443.96 138.953 443.678 138.916 cv
443.398 138.878 443.127 138.812 442.865 138.718 cv
442.156 138.476 441.651 138.095 441.353 137.58 cv
441.053 137.066 440.903 136.498 440.903 135.878 cv
440.903 135.673 440.917 135.462 440.945 135.248 cv
440.973 135.033 441.015 134.812 441.072 134.585 cv
441.11 134.474 441.142 134.365 441.169 134.263 cv
441.198 134.16 441.23 134.05 441.267 133.939 cv
441.567 133.078 441.861 132.22 442.152 131.367 cv
442.439 130.515 442.735 129.658 443.034 128.794 cv
443.483 128.794 443.934 128.794 444.393 128.794 cv
444.851 128.794 445.313 128.794 445.782 128.794 cv
446.249 128.794 446.71 128.794 447.169 128.794 cv
447.625 128.794 448.079 128.794 448.528 128.794 cv
448.417 129.132 448.299 129.474 448.177 129.822 cv
448.056 130.167 447.939 130.509 447.829 130.847 cv
447.584 131.523 447.346 132.203 447.113 132.886 cv
446.879 133.572 446.651 134.259 446.425 134.955 cv
446.37 135.083 446.324 135.22 446.287 135.361 cv
446.249 135.503 446.23 135.628 446.23 135.742 cv
446.23 135.855 446.272 135.947 446.356 136.023 cv
446.44 136.097 446.584 136.126 446.79 136.107 cv
446.939 136.107 447.127 136.044 447.351 135.923 cv
447.575 135.802 447.809 135.628 448.051 135.404 cv
448.389 135.068 448.664 134.71 448.879 134.335 cv
449.094 133.96 449.294 133.566 449.482 133.154 cv
449.72 133.267 li
449.958 133.38 li
450.107 133.455 450.26 133.523 450.42 133.589 cv
450.58 133.656 450.744 133.736 450.912 133.828 cv
450.873 133.921 450.832 134.011 450.786 134.095 cv
cp
f
458.97 130.294 mo
458.775 130.042 458.526 129.916 458.228 129.916 cv
458.041 129.916 457.835 129.968 457.611 130.07 cv
457.387 130.171 457.163 130.318 456.938 130.505 cv
456.845 130.58 456.755 130.664 456.672 130.755 cv
456.587 130.851 456.499 130.945 456.406 131.037 cv
455.975 131.542 455.629 132.117 455.369 132.761 cv
455.107 133.408 454.919 134.064 454.808 134.738 cv
454.79 134.962 454.77 135.183 454.751 135.396 cv
454.734 135.611 454.723 135.822 454.723 136.027 cv
454.723 136.14 454.729 136.281 454.738 136.447 cv
454.748 136.615 454.77 136.785 454.808 136.953 cv
454.864 137.271 454.961 137.554 455.102 137.806 cv
455.243 138.06 455.461 138.185 455.761 138.185 cv
456.227 138.185 456.644 138.023 457.008 137.695 cv
457.373 137.369 457.667 137 457.892 136.587 cv
457.947 136.494 458.002 136.406 458.059 136.322 cv
458.115 136.238 458.162 136.15 458.2 136.054 cv
457.901 135.849 457.671 135.593 457.512 135.285 cv
457.355 134.976 457.275 134.644 457.275 134.291 cv
457.275 134.177 li
457.275 134.093 li
457.332 133.533 457.541 133.005 457.906 132.509 cv
458.27 132.013 458.733 131.691 459.292 131.542 cv
459.274 130.962 459.167 130.546 458.97 130.294 cv
cp
466.89 134.667 mo
466.741 134.976 466.572 135.289 466.385 135.607 cv
466.029 136.224 465.596 136.789 465.082 137.302 cv
464.568 137.818 463.964 138.074 463.274 138.074 cv
462.995 138.074 462.727 138.031 462.474 137.947 cv
462.223 137.863 461.984 137.755 461.76 137.625 cv
461.032 138.224 460.176 138.691 459.195 139.027 cv
458.213 139.363 457.208 139.56 456.181 139.615 cv
455.944 139.615 li
455.859 139.615 455.77 139.615 455.677 139.615 cv
454.705 139.615 453.77 139.47 452.874 139.181 cv
451.977 138.892 451.191 138.458 450.519 137.876 cv
449.976 137.392 449.584 136.873 449.341 136.322 cv
449.098 135.771 448.977 135.214 448.977 134.654 cv
448.977 133.775 449.238 132.935 449.762 132.13 cv
450.285 131.328 450.976 130.644 451.834 130.083 cv
452.583 129.597 453.423 129.214 454.358 128.935 cv
455.292 128.656 456.255 128.515 457.247 128.515 cv
457.396 128.515 457.541 128.519 457.682 128.529 cv
457.822 128.539 457.965 128.542 458.115 128.542 cv
458.919 128.617 459.703 128.791 460.471 129.062 cv
461.237 129.332 461.911 129.74 462.489 130.281 cv
462.995 130.728 463.375 131.24 463.638 131.808 cv
463.898 132.378 464.031 132.97 464.031 133.589 cv
464.031 133.812 464.013 134.037 463.975 134.263 cv
463.937 134.486 463.881 134.71 463.805 134.935 cv
464.068 134.896 464.297 134.826 464.493 134.724 cv
464.69 134.621 464.881 134.458 465.068 134.234 cv
465.179 134.121 465.292 133.976 465.405 133.798 cv
465.518 133.623 465.638 133.419 465.768 133.197 cv
467.283 133.869 li
467.17 134.093 467.04 134.361 466.89 134.667 cv
cp
f
479.997 137.47 mo
479.014 138.472 477.665 138.97 475.946 138.97 cv
475.833 138.97 475.721 138.966 475.609 138.957 cv
475.497 138.947 475.385 138.943 475.273 138.943 cv
474.805 138.888 474.358 138.775 473.926 138.607 cv
473.498 138.439 473.142 138.167 472.862 137.792 cv
472.674 137.533 472.539 137.257 472.457 136.966 cv
472.372 136.677 472.329 136.382 472.329 136.083 cv
472.329 135.935 472.338 135.785 472.357 135.634 cv
472.375 135.484 472.394 135.345 472.413 135.214 cv
472.469 134.916 472.549 134.617 472.652 134.318 cv
472.753 134.019 472.853 133.738 472.946 133.476 cv
472.963 133.419 473.001 133.328 473.059 133.197 cv
473.114 133.066 473.18 132.916 473.254 132.748 cv
473.274 132.654 473.295 132.564 473.324 132.482 cv
473.352 132.396 473.385 132.308 473.423 132.214 cv
473.459 132.066 473.492 131.919 473.521 131.779 cv
473.548 131.64 473.563 131.513 473.563 131.402 cv
473.563 131.253 473.529 131.126 473.464 131.023 cv
473.399 130.921 473.292 130.869 473.142 130.869 cv
472.955 130.869 472.741 130.958 472.497 131.134 cv
472.254 131.314 471.974 131.617 471.657 132.046 cv
471.208 132.683 470.824 133.369 470.507 134.107 cv
470.189 134.847 469.89 135.597 469.61 136.363 cv
469.498 136.718 469.385 137.068 469.274 137.414 cv
469.161 137.761 469.049 138.101 468.937 138.439 cv
468.881 138.564 li
468.824 138.718 li
463.611 138.718 li
464.171 137.074 464.733 135.435 465.292 133.798 cv
465.854 132.166 466.422 130.523 467.002 128.878 cv
472.217 128.878 li
472.161 129.048 li
472.105 129.214 li
472.021 129.412 li
471.963 129.58 li
472.394 129.337 472.876 129.128 473.408 128.949 cv
473.941 128.771 474.488 128.656 475.047 128.599 cv
475.142 128.58 475.235 128.572 475.329 128.572 cv
475.422 128.572 475.515 128.572 475.609 128.572 cv
476.151 128.572 476.668 128.658 477.165 128.837 cv
477.66 129.015 478.095 129.308 478.469 129.72 cv
478.71 129.982 478.889 130.271 479.001 130.589 cv
479.113 130.908 479.169 131.232 479.169 131.57 cv
479.169 131.644 479.164 131.728 479.156 131.822 cv
479.145 131.916 479.131 132 479.113 132.074 cv
479.094 132.167 479.077 132.255 479.057 132.339 cv
479.039 132.425 479.01 132.513 478.973 132.609 cv
478.917 132.794 478.85 132.986 478.777 133.183 cv
478.703 133.378 478.636 133.58 478.581 133.785 cv
478.505 133.972 478.431 134.164 478.357 134.361 cv
478.282 134.556 478.214 134.755 478.16 134.962 cv
478.104 135.103 li
478.047 135.298 li
477.992 135.425 li
477.964 135.58 li
477.922 135.72 li
477.909 135.859 li
477.909 135.953 477.936 136.033 477.992 136.097 cv
478.047 136.164 478.141 136.197 478.273 136.197 cv
478.384 136.197 478.492 136.177 478.594 136.14 cv
478.697 136.101 478.804 136.054 478.917 136 cv
479.141 135.849 479.37 135.658 479.604 135.425 cv
479.836 135.191 480.047 134.953 480.234 134.71 cv
480.383 134.525 480.515 134.335 480.627 134.15 cv
480.738 133.962 480.823 133.794 480.879 133.644 cv
480.936 133.533 li
480.992 133.394 li
481.02 133.281 li
481.077 133.167 li
482.478 133.839 li
481.804 135.261 480.978 136.472 479.997 137.47 cv
cp
f
497.994 130.31 mo
497.797 130.058 497.55 129.931 497.25 129.931 cv
497.063 129.931 496.859 129.982 496.633 130.085 cv
496.41 130.187 496.186 130.332 495.96 130.519 cv
495.868 130.593 495.78 130.677 495.695 130.773 cv
495.61 130.865 495.52 130.958 495.427 131.052 cv
494.999 131.556 494.653 132.13 494.391 132.775 cv
494.128 133.421 493.943 134.08 493.832 134.753 cv
493.812 134.978 493.792 135.197 493.775 135.412 cv
493.755 135.626 493.748 135.837 493.748 136.042 cv
493.748 136.154 493.751 136.294 493.76 136.462 cv
493.769 136.63 493.792 136.798 493.832 136.968 cv
493.886 137.285 493.985 137.57 494.125 137.822 cv
494.265 138.074 494.485 138.199 494.783 138.199 cv
495.25 138.199 495.668 138.037 496.03 137.71 cv
496.396 137.384 496.69 137.015 496.915 136.603 cv
496.971 136.509 497.027 136.421 497.083 136.337 cv
497.138 136.253 497.185 136.166 497.223 136.07 cv
496.923 135.865 496.694 135.609 496.536 135.298 cv
496.376 134.992 496.297 134.66 496.297 134.304 cv
496.297 134.193 li
496.297 134.107 li
496.354 133.546 496.563 133.019 496.928 132.523 cv
497.292 132.029 497.755 131.707 498.316 131.556 cv
498.296 130.978 498.19 130.562 497.994 130.31 cv
cp
505.914 134.681 mo
505.763 134.992 505.595 135.304 505.407 135.623 cv
505.052 136.238 504.62 136.804 504.105 137.318 cv
503.59 137.832 502.988 138.087 502.295 138.087 cv
502.016 138.087 501.75 138.046 501.499 137.962 cv
501.245 137.878 501.006 137.771 500.783 137.64 cv
500.054 138.238 499.198 138.705 498.217 139.041 cv
497.237 139.378 496.232 139.574 495.205 139.628 cv
494.965 139.628 li
494.882 139.628 494.794 139.628 494.7 139.628 cv
493.728 139.628 492.793 139.486 491.896 139.197 cv
490.999 138.906 490.213 138.472 489.541 137.892 cv
488.999 137.406 488.607 136.888 488.364 136.337 cv
488.121 135.785 488 135.23 488 134.667 cv
488 133.791 488.261 132.951 488.784 132.146 cv
489.309 131.343 489.998 130.66 490.859 130.099 cv
491.605 129.613 492.448 129.23 493.381 128.949 cv
494.316 128.669 495.278 128.529 496.27 128.529 cv
496.419 128.529 496.563 128.535 496.705 128.542 cv
496.845 128.552 496.989 128.558 497.138 128.558 cv
497.943 128.632 498.727 128.804 499.494 129.076 cv
500.26 129.345 500.932 129.753 501.512 130.296 cv
502.016 130.744 502.4 131.253 502.661 131.822 cv
502.922 132.394 503.053 132.986 503.053 133.603 cv
503.053 133.828 503.035 134.05 502.997 134.277 cv
502.959 134.5 502.903 134.724 502.829 134.949 cv
503.091 134.912 503.32 134.841 503.516 134.74 cv
503.712 134.636 503.903 134.472 504.091 134.248 cv
504.203 134.136 504.315 133.99 504.427 133.814 cv
504.54 133.636 504.662 133.435 504.792 133.21 cv
506.305 133.882 li
506.193 134.107 506.063 134.375 505.914 134.681 cv
cp
f
517.588 124.296 mo
517.748 124.593 517.846 124.904 517.884 125.22 cv
517.884 125.347 li
517.884 125.474 li
517.884 125.96 517.734 126.404 517.435 126.804 cv
517.135 127.207 516.688 127.464 516.089 127.576 cv
515.978 127.589 li
515.865 127.603 li
515.752 127.603 li
515.64 127.603 li
514.987 127.603 514.456 127.39 514.043 126.958 cv
513.632 126.529 513.426 126.052 513.426 125.529 cv
513.426 125.431 li
513.426 125.333 li
513.464 125.052 513.571 124.783 513.75 124.521 cv
513.926 124.259 514.193 124.044 514.548 123.876 cv
514.477 123.876 li
514.379 123.876 li
513.799 123.876 513.309 124.152 512.907 124.703 cv
512.505 125.253 512.174 125.867 511.913 126.539 cv
511.745 126.968 511.593 127.39 511.463 127.8 cv
511.333 128.212 511.229 128.539 511.156 128.781 cv
513.736 128.781 li
513.259 130.156 li
510.652 130.156 li
505.493 145.154 li
500.474 145.154 li
505.605 130.156 li
503.951 130.156 li
504.456 128.781 li
506.11 128.781 li
506.166 128.595 506.221 128.412 506.277 128.234 cv
506.333 128.058 506.39 127.884 506.447 127.716 cv
506.726 126.894 507.044 126.132 507.398 125.431 cv
507.753 124.73 508.333 124.117 509.137 123.595 cv
509.642 123.277 510.262 123.015 511.001 122.81 cv
511.741 122.605 512.492 122.494 513.259 122.474 cv
513.372 122.474 li
513.483 122.474 li
514.136 122.474 514.773 122.552 515.39 122.712 cv
516.006 122.871 516.528 123.136 516.959 123.509 cv
517.22 123.736 517.431 123.998 517.588 124.296 cv
cp
f
193.779 501.048 mo
193.779 501.048 212.985 514.431 215.388 522.522 cv
215.388 522.522 207.207 528.894 203.364 537.273 cv
203.364 537.273 196.335 539.289 193.095 541.512 cv
193.095 541.512 196.506 547.155 201.312 546.84 cv
206.118 546.525 205.614 543.735 207.747 543.42 cv
208.764 543.267 209.691 543.942 210.843 544.608 cv
212.121 545.346 213.678 546.084 215.964 545.742 cv
221.85 544.869 225.072 535.68 230.238 537.507 cv
239.571 540.792 244.512 536.814 244.512 536.814 cv
244.512 536.814 244.377 529.056 238.725 522.522 cv
238.725 522.522 241.965 505.719 244.512 505.557 cv
249.363 505.251 193.779 501.048 193.779 501.048 cv
f
203.886 503.775 mo
203.886 503.775 215.586 516.186 217.584 523.044 cv
217.584 523.044 208.152 531.477 204.948 538.569 cv
204.948 538.569 199.44 539.757 196.74 541.638 cv
196.74 541.638 197.748 545.292 201.753 545.031 cv
205.758 544.761 205.533 542.304 207.315 542.034 cv
208.143 541.908 209.259 542.304 210.582 542.709 cv
212.058 543.15 213.804 543.6 215.73 543.321 cv
219.375 542.79 225.072 534.537 229.5 535.653 cv
236.268 537.345 241.965 535.329 241.965 535.329 cv
241.965 535.329 240.975 528.579 236.268 523.044 cv
236.268 523.044 240.444 506.718 240.174 502.614 cv
239.913 498.501 203.886 503.775 203.886 503.775 cv
.929412 .780392 .717647 rgb
f
212.157 513.648 mo
211.512 512.78 210.853 511.926 210.201 511.107 cv
210.853 511.926 211.514 512.779 212.159 513.646 cv
212.158 513.647 212.157 513.648 212.157 513.648 cv
.231373 .156863 0 rgb
f
201.349 545.044 mo
197.68 545.044 196.74 541.638 196.74 541.638 cv
198.061 542.532 199.292 542.861 200.389 542.861 cv
203.457 542.861 205.479 540.288 205.479 540.288 cv
205.62 539.971 206.026 539.857 206.603 539.857 cv
207.352 539.857 208.388 540.05 209.502 540.243 cv
210.629 540.44 211.835 540.636 212.912 540.636 cv
213.657 540.636 214.341 540.542 214.893 540.288 cv
223.358 536.343 225.692 528.062 228.929 528.062 cv
229.243 528.062 229.567 528.141 229.905 528.309 cv
234.747 528.075 232.452 524.763 231.093 519.039 cv
230.211 515.322 231.939 511.74 231.939 511.74 cv
228.983 510.839 226.281 510.5 223.886 510.5 cv
216.668 510.5 212.251 513.581 212.159 513.646 cv
211.514 512.779 210.853 511.926 210.201 511.107 cv
209.476 510.196 208.761 509.328 208.088 508.527 cv
217.966 507.423 229.929 506.513 239.938 505.853 cv
239.076 512.068 236.268 523.044 236.268 523.044 cv
236.268 523.044 li
236.268 523.044 li
240.975 528.579 241.965 535.329 241.965 535.329 cv
241.965 535.329 239.138 536.329 235.102 536.329 cv
233.408 536.329 231.501 536.153 229.5 535.653 cv
229.22 535.582 228.935 535.549 228.646 535.549 cv
224.36 535.549 219.145 542.824 215.73 543.321 cv
215.316 543.381 214.911 543.407 214.515 543.407 cv
213.067 543.407 211.741 543.055 210.582 542.709 cv
209.429 542.356 208.434 542.01 207.649 542.01 cv
207.533 542.01 207.422 542.018 207.315 542.034 cv
205.533 542.304 205.758 544.761 201.753 545.031 cv
201.615 545.04 201.48 545.044 201.349 545.044 cv
.8 .623529 .572549 rgb
f
228.258 527.59 mo
230.793 531.073 232.861 529.532 233.929 527.256 cv
233.929 527.256 231.094 528.781 228.258 527.59 cv
cp
.270588 .196078 0 rgb
f
290.358 503.55 mo
290.358 503.55 293.364 506.565 295.047 509.994 cv
297.126 514.197 299.124 520.11 298.755 521.028 cv
298.413 521.856 296.766 524.88 296.766 524.88 cv
296.766 524.88 295.56 528.273 298.602 530.064 cv
299.205 532.125 297.432 533.052 295.848 535.473 cv
294.264 537.894 291.897 542.457 296.037 545.76 cv
296.037 545.76 294.264 548.469 294.3 550.341 cv
294.3 550.341 294.21 555.669 299.97 555.615 cv
305.172 555.57 304.677 551.61 304.605 552.195 cv
303.795 554.13 304.65 555.03 304.65 555.03 cv
304.65 555.03 310.212 558.297 316.476 555.201 cv
322.731 552.105 324.054 547.344 322.992 544.887 cv
321.921 542.439 324.639 541.476 324.198 539.739 cv
323.127 535.518 318.744 533.268 320.517 531.621 cv
323.397 528.939 320.283 527.058 319.455 525.402 cv
318.249 522.99 320.265 522.81 322.443 518.085 cv
324.621 513.36 328.59 509.706 328.59 509.706 cv
290.358 503.55 li
f
295.38 503.55 mo
295.38 503.55 296.415 509.697 297.963 512.622 cv
302.067 520.38 301.14 527.877 301.077 527.022 cv
300.825 523.926 300.375 522.63 300.141 522.99 cv
299.466 524.016 298.395 525.429 298.395 525.429 cv
298.395 525.429 297.54 527.481 299.466 529.002 cv
299.628 529.137 299.817 529.263 300.024 529.389 cv
300.546 531.18 299.565 532.521 298.197 534.609 cv
296.82 536.706 293.967 540.936 297.333 543.906 cv
297.711 545.472 296.181 547.344 296.262 549.153 cv
296.262 549.153 295.902 552.636 300.042 552.987 cv
304.182 553.347 304.128 550.062 304.218 549.009 cv
304.461 546.174 301.779 545.274 303.498 544.941 cv
305.451 544.572 306.387 545.634 306.387 545.634 cv
303.75 551.196 305.631 552.366 305.631 552.366 cv
305.631 552.366 310.275 554.832 310.104 549.855 cv
310.104 549.855 310.14 552.429 311.544 552.717 cv
312.345 552.888 313.866 552.726 314.361 552.249 cv
315.324 551.34 314.586 549.252 314.784 549.153 cv
314.784 549.153 315.531 550.872 316.269 551.187 cv
317.214 551.592 318.51 550.566 318.861 549.747 cv
319.122 549.144 318.771 547.164 318.771 547.164 cv
318.861 547.29 319.491 548.937 319.626 548.856 cv
321.399 547.713 321.804 544.725 321.327 543.618 cv
320.4 541.494 322.623 540.351 322.245 538.839 cv
321.318 535.185 316.989 532.935 318.528 531.495 cv
321.021 529.182 318.762 527.319 318.042 525.879 cv
316.998 523.791 317.934 523.575 319.815 519.48 cv
321.696 515.385 325.017 509.922 325.017 509.922 cv
295.38 503.55 li
.929412 .780392 .717647 rgb
f
307.435 553.609 mo
306.404 553.609 305.386 553.095 305.019 552.501 cv
304.531 551.714 304.418 549.762 304.366 548.761 cv
304.471 549.112 304.69 549.427 305.038 549.701 cv
304.754 551.82 305.631 552.366 305.631 552.366 cv
305.631 552.366 306.782 552.977 307.916 552.977 cv
308.881 552.977 309.833 552.536 310.059 550.902 cv
310.061 550.902 310.063 550.902 310.066 550.902 cv
309.826 552.927 308.623 553.609 307.435 553.609 cv
312.766 553.067 mo
312.374 553.067 312.009 553.033 311.706 552.969 cv
311.293 552.884 310.985 552.576 310.755 552.186 cv
310.952 552.449 311.209 552.648 311.544 552.717 cv
311.751 552.761 312.006 552.783 312.28 552.783 cv
313.063 552.783 313.994 552.603 314.361 552.249 cv
315.072 551.578 314.856 550.263 314.773 549.582 cv
314.83 549.549 314.885 549.515 314.939 549.481 cv
315.196 549.996 315.735 550.959 316.269 551.187 cv
316.416 551.25 316.571 551.278 316.73 551.278 cv
317.594 551.278 318.564 550.439 318.861 549.747 cv
319.122 549.144 318.771 547.164 318.771 547.164 cv
318.859 547.287 319.461 548.859 319.615 548.859 cv
319.619 548.859 319.623 548.858 319.626 548.856 cv
321.399 547.713 321.804 544.725 321.327 543.618 cv
322.245 545.742 320.832 549.837 315.414 552.519 cv
314.649 552.898 313.64 553.067 312.766 553.067 cv
310.066 550.902 mo
310.095 550.651 310.11 550.379 310.108 550.086 cv
310.108 550.08 310.108 550.074 310.108 550.068 cv
310.108 550.038 310.108 550.009 310.107 549.978 cv
310.107 549.949 310.106 549.919 310.105 549.889 cv
310.109 550.007 310.129 550.417 310.229 550.891 cv
310.174 550.895 310.12 550.899 310.066 550.902 cv
304.215 549.049 mo
304.216 549.035 304.217 549.022 304.218 549.009 cv
304.271 548.396 304.298 548.147 304.317 548.147 cv
304.336 548.147 304.347 548.388 304.366 548.761 cv
304.365 548.757 304.363 548.752 304.362 548.748 cv
304.325 548.853 304.275 548.953 304.215 549.049 cv
306.274 545.877 mo
305.436 545.855 305.164 545.022 304.198 545.022 cv
304.192 545.022 304.187 545.022 304.182 545.022 cv
304.43 544.988 304.672 544.952 304.911 544.915 cv
305.905 545.087 306.387 545.634 306.387 545.634 cv
306.348 545.716 306.31 545.797 306.274 545.877 cv
.231373 .156863 0 rgb
f
300.649 553.014 mo
300.457 553.014 300.255 553.006 300.042 552.987 cv
296.484 552.685 296.25 550.071 296.254 549.341 cv
296.255 549.222 296.262 549.153 296.262 549.153 cv
296.942 550.082 298.551 550.53 300.165 550.529 cv
301.883 550.529 303.605 550.022 304.215 549.049 cv
304.133 550.085 304.132 553.014 300.649 553.014 cv
307.916 552.977 mo
306.782 552.977 305.631 552.366 305.631 552.366 cv
305.631 552.366 304.754 551.82 305.038 549.701 cv
305.851 550.344 307.371 550.766 309.789 550.917 cv
309.879 550.913 309.969 550.908 310.059 550.902 cv
309.833 552.536 308.881 552.977 307.916 552.977 cv
312.28 552.783 mo
312.006 552.783 311.751 552.761 311.544 552.717 cv
311.209 552.648 310.952 552.449 310.755 552.186 cv
310.521 551.791 310.369 551.31 310.271 550.888 cv
312.109 550.744 313.634 550.252 314.773 549.582 cv
314.856 550.263 315.072 551.578 314.361 552.249 cv
313.994 552.603 313.063 552.783 312.28 552.783 cv
316.73 551.278 mo
316.571 551.278 316.416 551.25 316.269 551.187 cv
315.735 550.959 315.196 549.996 314.939 549.481 cv
316.706 548.379 317.475 546.841 316.953 545.571 cv
316.86 545.475 316.708 545.435 316.505 545.435 cv
315.979 545.435 315.107 545.701 313.992 545.967 cv
312.873 546.234 311.506 546.501 310.006 546.501 cv
308.827 546.501 307.566 546.336 306.279 545.877 cv
306.277 545.877 306.275 545.877 306.274 545.877 cv
306.31 545.797 306.348 545.716 306.387 545.634 cv
306.387 545.634 305.905 545.087 304.911 544.915 cv
316.783 543.045 316.843 536.669 314.973 532.593 cv
313.569 529.515 314.496 526.167 315.171 525.141 cv
315.423 521.901 317.079 520.056 318.861 515.601 cv
314.972 512.307 310.216 511.421 306.223 511.421 cv
301.575 511.421 297.963 512.622 297.963 512.622 cv
297.963 512.622 li
297.32 511.408 296.766 509.638 296.338 507.984 cv
306.42 508.889 316.139 509.97 324.389 510.975 cv
323.335 512.762 321.19 516.486 319.815 519.48 cv
318.463 522.423 317.599 523.363 317.608 524.433 cv
317.611 524.852 317.748 525.292 318.042 525.879 cv
318.514 526.824 319.65 527.951 319.67 529.268 cv
319.68 529.958 319.385 530.7 318.528 531.495 cv
318.288 531.72 318.19 531.965 318.201 532.232 cv
318.259 533.672 321.463 535.756 322.245 538.839 cv
322.275 538.957 322.288 539.073 322.289 539.187 cv
322.294 540.284 321.088 541.233 321.099 542.603 cv
321.101 542.917 321.168 543.253 321.327 543.618 cv
321.327 543.618 li
321.804 544.725 321.399 547.713 319.626 548.856 cv
319.623 548.858 319.619 548.859 319.615 548.859 cv
319.461 548.859 318.859 547.287 318.771 547.164 cv
318.771 547.164 319.122 549.144 318.861 549.747 cv
318.564 550.439 317.594 551.278 316.73 551.278 cv
310.229 550.891 mo
310.129 550.417 310.109 550.007 310.105 549.889 cv
310.106 549.919 310.107 549.949 310.107 549.978 cv
310.106 549.937 310.105 549.896 310.104 549.855 cv
310.104 549.855 310.138 550.318 310.271 550.888 cv
310.257 550.889 310.243 550.89 310.229 550.891 cv
310.108 550.086 mo
310.108 550.08 310.108 550.074 310.108 550.068 cv
310.108 550.074 310.108 550.08 310.108 550.086 cv
.8 .623529 .572549 rgb
f
313.65 433.692 mo
392.805 439.578 li
390.204 444.69 li
384.75 446.607 li
384.75 446.607 379.026 462.681 365.949 471.942 cv
365.949 471.942 361.872 475.767 354.492 492.822 cv
350.154 502.83 348.381 514.197 348.381 514.197 cv
348.381 514.197 304.416 507.501 268.722 506.142 cv
268.722 506.142 271.008 497.151 273.807 493.965 cv
270.063 495.333 262.962 495.108 258.066 494.568 cv
258.066 494.568 261.117 502.209 260.577 504.657 cv
260.577 504.657 202.158 507.438 190.44 511.524 cv
190.44 511.524 191.214 507.636 195.3 505.728 cv
195.3 505.728 190.863 507.924 185.958 504.108 cv
181.053 500.292 150.777 464.148 150.777 464.148 cv
152.766 461.943 li
152.766 461.943 144 440.892 136.719 436.221 cv
313.65 433.692 li
.270588 .196078 0 rgb
f
343.287 509.706 mo
320.401 506.187 307.776 504.75 294.839 503.776 cv
295.305 503.811 295.77 503.847 296.235 503.883 cv
298.404 500.967 298.629 486.333 298.629 486.333 cv
317.583 471.816 326.034 463.869 326.034 463.869 cv
339.471 469.746 336.249 503.901 335.682 508.554 cv
338.094 508.914 340.614 509.292 343.287 509.706 cv
343.287 509.706 li
195.426 507.834 mo
195.426 507.834 196.947 505.548 200.763 503.766 cv
200.763 503.766 198.918 504.212 196.5 504.212 cv
194.083 504.212 191.092 503.766 188.802 501.984 cv
184.221 498.42 154.71 463.806 154.71 463.806 cv
154.71 463.806 158.63 459.965 161.411 454.895 cv
175.204 459.435 200.537 466.56 226.953 467.865 cv
236.351 468.332 245.071 468.529 253.081 468.529 cv
296.332 468.529 319.113 462.789 319.113 462.789 cv
319.113 462.789 307.458 474.066 270.504 482.643 cv
262.839 484.421 255.061 485.092 247.673 485.092 cv
236.323 485.092 225.892 483.509 218.178 481.923 cv
210.473 480.348 205.479 478.767 204.994 478.767 cv
204.933 478.767 204.943 478.792 205.029 478.845 cv
221.557 489.136 218.217 504.017 218.178 504.187 cv
208.315 505.219 199.358 506.463 195.426 507.834 cv
228.54 503.199 mo
241.797 502.037 254.148 501.305 256.007 501.197 cv
254.148 501.305 241.796 502.039 228.54 503.199 cv
256.068 501.193 mo
256.094 501.192 256.116 501.191 256.137 501.189 cv
256.116 501.19 256.093 501.192 256.068 501.193 cv
256.258 501.076 mo
256.244 500.298 254.666 498.237 250.42 498.136 cv
254.667 498.237 256.244 500.298 256.258 501.076 cv
249.984 498.133 mo
250.021 498.133 250.058 498.132 250.094 498.132 cv
250.094 498.132 li
250.058 498.132 250.021 498.133 249.984 498.133 cv
263.671 489.791 mo
263.671 489.791 li
263.774 489.791 263.874 489.79 263.977 489.789 cv
263.874 489.79 263.774 489.791 263.671 489.791 cv
263.67 489.791 mo
263.388 489.791 263.109 489.789 262.824 489.786 cv
263.107 489.789 263.389 489.791 263.67 489.791 cv
353.32 484.079 mo
353.585 483.46 353.839 482.872 354.081 482.314 cv
353.839 482.872 353.585 483.46 353.32 484.079 cv
354.157 482.139 mo
355.675 478.649 356.75 476.346 357.51 474.83 cv
356.75 476.346 355.675 478.649 354.157 482.139 cv
357.568 474.714 mo
357.804 474.245 358.009 473.855 358.186 473.53 cv
358.009 473.855 357.804 474.245 357.568 474.714 cv
358.227 473.455 mo
358.364 473.206 358.483 472.998 358.588 472.823 cv
358.483 472.998 358.364 473.206 358.227 473.455 cv
359.004 472.196 mo
359.048 472.139 359.086 472.093 359.119 472.058 cv
359.086 472.093 359.048 472.139 359.004 472.196 cv
359.187 471.991 mo
359.24 471.946 359.273 471.934 359.294 471.934 cv
359.294 471.934 359.294 471.934 359.294 471.934 cv
359.273 471.934 359.24 471.946 359.187 471.991 cv
155.725 459.623 mo
152.683 459.623 149.535 446.957 147.756 442.407 cv
147.762 442.409 147.753 442.405 147.759 442.408 cv
148.521 444.353 149.532 447.783 150.678 451.071 cv
150.678 451.071 154.153 452.468 160.106 454.461 cv
158.251 457.63 155.79 459.621 155.79 459.621 cv
155.768 459.622 155.747 459.623 155.725 459.623 cv
level3{
gsave
clp
[237.28 0 0 237.28 147.124 472.965 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.921569 .388235 .156863 ]
/C1 [.921569 .388235 .156863 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.921569 .388235 .156863 ]
/C1 [.85098 .109804 .109804 ]
/N 1.48365 
>>
]
/Bounds [.212121 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[237.28 0 0 237.28 147.124 472.965 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m%lK[["lK[["
lK[["lK[["lK[["lK[["lK[["l07Hsl07Hsl07Hsl07Hsl0.?pkih6okih6okih6nkND$kkND$kkND$k
k2tggk2tggk2tggjlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,@]j5]1[j5]1[io8tWio8tWio/kTiSibSiSibR
i8EPOi8EPOhr!>Khr!>KhVR,GhVR,GhVI#Dh;-oCh;$f@gt^]?gtUT<gY:K;gY1B8g=k97g=b04g"G'3
~>
<~@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"X@U`eU@U`eU
@U`bS@:<SQ@:3JN?smAL?XI/I?=$rE?<piB?!LW>>[(E:>?Y36>$5!2=]ed.='&I)<`W7$<E3!t<)cdp
;c6Lk;,L1e:f'q`:JOY[9he;T9M8#O8kM]I8OuBC7n6'=7R]a76psC06UF+*5s[b$5<h=q5!;%k4?GVd
3]]8]3&ilV2`<QO2)I-H1G^dA0ek@90/"q1/M/P*/1W5#.Ocep-mpAh-7'r`,U4NX+sA*P+<M[H*ZZ7@
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jk-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RL/e-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`
,pai`,paf^,U=W\,U=W\,U=W\,U=W[,9nEX,9nEX,9nEX,9nEW+sJ3T+sJ3T+sJ3T+sA*Q+X&!P+X&!P
+X&!O+<VdL+<VdL+<VdL+!2RH+!2RH+!2RH+!)IE*Zc@D*Zc@D*ZZ7A*??.@*??.@*?6%=*#oq<*#oq<
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
339.471 446.841 mo
339.471 446.841 338.373 467.631 353.043 467.37 cv
353.043 467.37 348.633 483.444 344.052 494.478 cv
344.052 494.478 349.659 478.71 351.18 468.729 cv
348.381 468.81 337.392 467.631 337.437 446.544 cv
339.471 446.841 li
.270588 .196078 0 rgb
f
343.116 506.52 mo
343.116 506.52 li
344.943 502.812 348.606 495.144 352.854 485.172 cv
353.013 484.797 353.168 484.433 353.32 484.079 cv
353.168 484.433 353.013 484.797 352.854 485.172 cv
348.606 495.144 344.943 502.812 343.116 506.52 cv
218.178 504.189 mo
218.178 504.189 218.178 504.188 218.178 504.187 cv
221.58 503.831 225.091 503.501 228.54 503.199 cv
225.091 503.501 221.58 503.832 218.178 504.189 cv
294.839 503.776 mo
288.127 503.273 281.327 502.895 272.961 502.407 cv
272.961 502.407 li
281.324 502.89 288.123 503.271 294.839 503.776 cv
256.007 501.197 mo
256.029 501.196 256.049 501.194 256.068 501.193 cv
256.049 501.194 256.029 501.196 256.007 501.197 cv
256.137 501.189 mo
256.21 501.185 256.248 501.183 256.248 501.183 cv
256.255 501.151 256.258 501.115 256.258 501.076 cv
256.258 501.115 256.255 501.151 256.248 501.183 cv
256.248 501.183 256.21 501.185 256.137 501.189 cv
248.193 498.249 mo
252.273 496.437 254.804 497.274 254.794 495.222 cv
254.804 497.274 252.273 496.437 248.193 498.249 cv
248.834 498.174 249.43 498.137 249.984 498.133 cv
249.43 498.137 248.834 498.174 248.193 498.249 cv
250.42 498.136 mo
250.313 498.134 250.205 498.132 250.094 498.132 cv
250.094 498.132 li
250.205 498.132 250.313 498.134 250.42 498.136 cv
263.671 489.791 mo
263.67 489.791 li
263.671 489.791 li
263.671 489.791 li
263.977 489.789 mo
289.978 489.679 307.43 475.734 308.808 475.137 cv
308.808 475.137 li
307.43 475.734 289.981 489.681 263.977 489.789 cv
262.824 489.786 mo
262.542 489.783 262.257 489.778 261.972 489.771 cv
236.871 489.177 217.557 483.174 208.143 479.844 cv
208.143 479.844 li
217.557 483.174 236.871 489.177 261.972 489.771 cv
262.257 489.778 262.542 489.783 262.824 489.786 cv
354.081 482.314 mo
354.107 482.255 354.132 482.197 354.157 482.139 cv
354.132 482.197 354.107 482.255 354.081 482.314 cv
357.51 474.83 mo
357.529 474.791 357.549 474.752 357.568 474.714 cv
357.549 474.752 357.529 474.791 357.51 474.83 cv
358.186 473.53 mo
358.2 473.505 358.214 473.479 358.227 473.455 cv
358.214 473.479 358.2 473.505 358.186 473.53 cv
358.588 472.823 mo
358.765 472.528 358.901 472.329 359.004 472.196 cv
358.901 472.329 358.765 472.529 358.588 472.823 cv
359.119 472.058 mo
359.145 472.03 359.167 472.008 359.187 471.991 cv
359.167 472.008 359.145 472.03 359.119 472.058 cv
359.325 471.951 mo
359.325 471.951 359.318 471.934 359.294 471.934 cv
359.294 471.934 li
359.318 471.934 359.325 471.951 359.325 471.951 cv
371.538 463.302 376.884 448.281 376.884 448.281 cv
381.978 446.499 li
384.408 441.729 li
381.978 446.499 li
376.884 448.281 li
376.884 448.281 371.538 463.302 359.325 471.951 cv
161.411 454.895 mo
160.964 454.747 160.529 454.603 160.106 454.461 cv
161.257 452.495 162.174 450.076 162.126 447.399 cv
162.729 447.585 163.342 447.77 163.953 447.953 cv
163.953 447.954 163.953 447.956 163.953 447.957 cv
163.572 450.358 162.595 452.737 161.411 454.895 cv
.231373 .156863 0 rgb
f
343.287 509.706 mo
340.614 509.292 338.094 508.914 335.682 508.554 cv
336.249 503.901 339.471 469.746 326.034 463.869 cv
326.034 463.869 317.583 471.816 298.629 486.333 cv
298.629 486.333 298.404 500.967 296.235 503.883 cv
295.77 503.847 295.305 503.811 294.839 503.776 cv
288.123 503.271 281.324 502.89 272.961 502.407 cv
272.961 502.407 274.644 496.764 276.354 493.632 cv
296.586 488.367 308.403 475.668 308.808 475.137 cv
308.808 475.137 li
308.808 475.137 li
307.43 475.734 289.978 489.679 263.977 489.789 cv
263.874 489.79 263.774 489.791 263.671 489.791 cv
263.67 489.791 li
263.389 489.791 263.107 489.789 262.824 489.786 cv
262.542 489.783 262.257 489.778 261.972 489.771 cv
236.871 489.177 217.557 483.174 208.143 479.844 cv
208.143 479.844 li
208.143 479.844 li
208.143 479.844 221.535 489.006 254.673 494.325 cv
254.753 494.674 254.792 494.97 254.794 495.222 cv
254.804 497.274 252.273 496.437 248.193 498.249 cv
248.834 498.174 249.43 498.137 249.984 498.133 cv
250.021 498.133 250.058 498.132 250.094 498.132 cv
250.205 498.132 250.313 498.134 250.42 498.136 cv
254.666 498.237 256.244 500.298 256.258 501.076 cv
256.258 501.115 256.255 501.151 256.248 501.183 cv
256.248 501.183 256.21 501.185 256.137 501.189 cv
256.116 501.191 256.094 501.192 256.068 501.193 cv
256.049 501.194 256.029 501.196 256.007 501.197 cv
254.148 501.305 241.797 502.037 228.54 503.199 cv
225.091 503.501 221.58 503.831 218.178 504.187 cv
218.217 504.017 221.557 489.136 205.029 478.845 cv
204.943 478.792 204.933 478.767 204.994 478.767 cv
205.479 478.767 210.473 480.348 218.178 481.923 cv
225.892 483.509 236.323 485.092 247.673 485.092 cv
255.061 485.092 262.839 484.421 270.504 482.643 cv
307.458 474.066 319.113 462.789 319.113 462.789 cv
319.113 462.789 296.332 468.529 253.081 468.529 cv
245.071 468.529 236.351 468.332 226.953 467.865 cv
200.537 466.56 175.204 459.435 161.411 454.895 cv
162.595 452.737 163.572 450.358 163.953 447.957 cv
163.953 447.956 163.953 447.954 163.953 447.953 cv
183.039 453.641 206.039 457.738 233.757 459.324 cv
236.17 459.463 238.548 459.528 240.88 459.528 cv
282.018 459.528 310.113 439.137 310.113 439.137 cv
384.408 441.729 li
381.978 446.499 li
376.884 448.281 li
376.884 448.281 371.538 463.302 359.325 471.951 cv
359.325 471.951 359.318 471.934 359.294 471.934 cv
359.294 471.934 li
359.294 471.934 359.294 471.934 359.294 471.934 cv
359.273 471.934 359.24 471.946 359.187 471.991 cv
359.167 472.008 359.145 472.03 359.119 472.058 cv
359.086 472.093 359.048 472.139 359.004 472.196 cv
358.901 472.329 358.765 472.528 358.588 472.823 cv
358.483 472.998 358.364 473.206 358.227 473.455 cv
358.214 473.479 358.2 473.505 358.186 473.53 cv
358.009 473.855 357.804 474.245 357.568 474.714 cv
357.549 474.752 357.529 474.791 357.51 474.83 cv
356.75 476.346 355.675 478.649 354.157 482.139 cv
354.132 482.197 354.107 482.255 354.081 482.314 cv
353.839 482.872 353.585 483.46 353.32 484.079 cv
353.168 484.433 353.013 484.797 352.854 485.172 cv
348.606 495.144 344.943 502.812 343.116 506.52 cv
343.116 506.52 li
343.116 506.52 li
343.287 509.706 li
351.18 468.729 mo
349.659 478.71 344.052 494.478 344.052 494.478 cv
348.633 483.444 353.043 467.37 353.043 467.37 cv
352.951 467.372 352.861 467.372 352.77 467.372 cv
338.389 467.37 339.471 446.841 339.471 446.841 cv
337.437 446.544 li
337.393 467.066 347.8 468.733 350.938 468.732 cv
351.024 468.732 351.105 468.731 351.18 468.729 cv
160.106 454.461 mo
154.153 452.468 150.678 451.071 150.678 451.071 cv
149.532 447.783 148.521 444.353 147.759 442.408 cv
152.276 444.172 157.062 445.843 162.126 447.4 cv
162.174 450.076 161.257 452.495 160.106 454.461 cv
level3{
gsave
clp
[237.28 0 0 237.28 147.124 472.965 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&
:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU
+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&b"j/&:E[eU+NdJ&
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~b"j/&:E[eU+NdG%b"a)%:*@YR+N[>#a\<l!9HVAL+3@.ta@[Pq8fu,G+37"qa@IAm7io]?*lg_ka$h&h
6ls?8*l^Mf`^1`d5p"$2*l^Dc`]bE^4rqU)*Q:)\`&\pW3ZQ'u*5a]T__rLP2B9Rj)o=BM_D3(H0cRq_
)Sn'F^b-P@/K2DT)Sdg@^a^8<-lTiJ)8@L9^*OZ2,8n3>(qh(0]cS*(*Z2O1(VC_(],DKt)&Kk$(:k7s
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.212121 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[237.28 0 0 237.28 147.124 472.965 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~aiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
aiVZHaiVZHaiVWFaN2HDaN2HDaN2HDaN2HDaN)?Aa2c6@a2c6@a2c6@a2Z-=`l?$<`l?$<`l?!:`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`5KU4`5KU4`5BL1_o'C0_o'C/_SX1,_SX1,_83t(_83t(_83q&^qdb$
^qdb$^V@Ou^V@Ou^V@Ou^V@Ou^V@Ot^:q=q^:h4n]tM+m]tM+l]Y(ni]Xtef]=Y\e]=Y\d]"5Ja]",A^
~>
<~:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ
9he>V9he>V9he>V9h\5S9MA,R91qoM8kM]J8kDTG8P)KF84Z9B84Z6@7n,s;77BX677BX56psC06UF++
5s[e&5s[e%5X7Ou5<_7p4Ztqk4Zkhg4$,Ja3]T2\3B9)[3&`cS2E!EM2)R6J1G^gC1,:U>0ek@90J>(4
/hSb//M/P*.k<)!.Oceq.4HYn-RU8g-71#b,pX`\+sJ3T+X&!O+!2OF*ZZ7A*#oq<)]BV4)&X8.(`*u(
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc=B*??.@*??.@*??.@*??.@*??.@
*??.@*??.@*??.@*??.@*#oq<*#oq<*#oq<*#oq<)]K_8)]K_8)]K_8)]K_8)B'M4)B'M4)B'M4)AsD1
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;/(`4),(`4),(`4),(Ddl((Ddl((Ddl(()@Z$()@Z$()@Z$()7Q!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
344.052 494.478 mo
344.052 494.478 349.659 478.71 351.18 468.729 cv
351.105 468.731 351.024 468.732 350.938 468.732 cv
347.8 468.733 337.393 467.066 337.437 446.544 cv
339.471 446.841 li
339.471 446.841 338.389 467.37 352.77 467.372 cv
352.861 467.372 352.951 467.372 353.043 467.37 cv
353.043 467.37 348.633 483.444 344.052 494.478 cv
.231373 .156863 0 rgb
f
444.537 227.457 mo
441.999 226.944 441.576 225.837 442.593 223.812 cv
442.593 223.812 433.089 218.376 439.155 208.098 cv
442.179 202.986 449.271 202.95 449.271 202.95 cv
449.271 202.95 449.919 200.79 452.394 199.188 cv
457.479 195.894 472.284 199.989 471.177 208.746 cv
471.177 208.746 472.5 209.475 473.724 211.707 cv
475.065 214.164 473.571 216.423 471.078 217.332 cv
471.078 217.332 471.375 218.79 470.439 221.094 cv
469.512 223.398 444.537 227.457 444.537 227.457 cv
.270588 .196078 0 rgb
f
446.553 225.063 mo
444.357 226.161 442.935 224.91 443.862 223.047 cv
443.862 223.047 432.981 216.594 441.018 207.522 cv
444.726 203.337 451.71 203.445 454.338 203.958 cv
454.338 203.958 452.826 203.328 450.675 203.058 cv
450.675 203.058 451.521 200.772 453.177 199.764 cv
457.812 196.92 470.628 201.411 470.034 208.179 cv
470.034 208.179 469.017 207.18 465.876 208.098 cv
469.368 207.693 475.461 212.562 469.953 216.945 cv
469.953 216.945 470.223 218.295 469.368 220.419 cv
468.513 222.534 446.553 225.063 446.553 225.063 cv
1 .94902 .690196 rgb
f
138.123 215.667 mo
136.782 221.517 114.921 231.561 101.061 239.472 cv
88.524 246.627 89.865 278.487 95.049 290.223 cv
95.715 291.726 99.594 292.05 116.613 292.851 cv
133.623 293.652 146.745 279.198 149.823 274.113 cv
152.901 269.028 144.252 231.984 153.855 222.057 cv
163.458 212.13 138.123 215.667 138.123 215.667 cv
.270588 .196078 0 rgb
f
140.814 216.207 mo
134.937 222.894 117.882 232.884 104.391 241.533 cv
90.909 250.191 91.827 276.156 96.759 287.307 cv
97.389 288.738 100.8 290.151 116.973 290.916 cv
133.155 291.672 145.629 277.929 148.554 273.096 cv
151.479 268.263 143.262 233.046 152.388 223.605 cv
161.514 214.173 140.814 216.207 140.814 216.207 cv
.933333 .827451 .776471 rgb
f
118.258 290.946 mo
117.833 290.946 117.404 290.936 116.973 290.916 cv
100.8 290.151 97.389 288.738 96.759 287.307 cv
96.759 287.307 98.3559 287.572 100.932 287.571 cv
106.278 287.571 115.839 286.432 124.074 279.423 cv
127.01 276.92 129.439 273.956 131.466 270.7 cv
133.638 275.675 137.511 277.875 137.511 277.875 cv
137.511 277.875 129.702 282.751 119.418 290.921 cv
119.033 290.937 118.648 290.946 118.258 290.946 cv
139.14 251.2 mo
140.362 246.209 141.209 241.247 141.927 236.717 cv
143.412 237.137 144.974 237.599 146.547 238.095 cv
147.033 238.247 147.529 238.412 148.029 238.586 cv
147.961 239.984 147.932 241.419 147.934 242.874 cv
147.936 244.389 147.971 245.925 148.028 247.461 cv
145.051 248.733 142 250.02 139.14 251.2 cv
.8 .662745 .619608 rgb
f
401.445 310.428 mo
404.757 308.394 414.936 308.43 426.006 306.27 cv
437.076 304.101 450.009 293.013 458.532 270.963 cv
458.532 270.963 444.843 253.953 446.58 258.93 cv
448.569 264.645 444.186 263.439 438.381 262.233 cv
435.915 261.72 433.197 261.207 430.605 261.225 cv
421.884 261.27 415.944 266.418 415.944 266.418 cv
415.944 266.418 412.515 255.366 401.958 245.313 cv
391.392 235.26 375.885 233.046 370.521 224.568 cv
365.157 216.099 356.13 212.013 356.13 212.013 cv
356.13 212.013 350.415 234.711 351.693 244.764 cv
352.962 254.817 346.725 273.528 363.906 289.431 cv
381.087 305.334 401.445 310.428 401.445 310.428 cv
.270588 .196078 0 rgb
f
402.48 309.159 mo
405.594 307.242 413.721 306.405 424.125 304.371 cv
434.529 302.337 451.458 286.128 457.794 269.028 cv
457.794 269.028 461.367 255.078 450.675 263.052 cv
446.778 265.95 442.224 265.392 436.995 264.834 cv
434.835 264.6 432.558 264.366 430.164 264.384 cv
421.974 264.438 414.801 269.811 414.801 269.811 cv
414.801 269.811 409.419 256.059 399.492 246.618 cv
389.565 237.168 373.203 233.892 368.163 225.927 cv
363.123 217.971 358.677 216.945 358.677 216.945 cv
358.677 216.945 349.902 236.592 351.099 246.033 cv
352.296 255.483 351.063 274.482 367.209 289.422 cv
383.346 304.371 402.48 309.159 402.48 309.159 cv
.929412 .780392 .717647 rgb
f
183.852 220.284 mo
176.031 218.862 171.117 224.451 165.519 239.841 cv
165.519 239.841 146.439 248.328 134.622 253.035 cv
132.3 253.953 128.889 260.253 130.437 267.498 cv
131.994 274.743 137.511 277.875 137.511 277.875 cv
137.511 277.875 76.563 315.927 70.947 357.597 cv
70.947 357.597 73.962 450.18 233.757 459.324 cv
278.739 461.907 310.113 439.137 310.113 439.137 cv
384.408 441.729 li
384.408 441.729 450.117 426.429 436.518 361.485 cv
429.534 328.095 394.002 299.637 367.281 273.339 cv
367.281 273.339 368.145 267.921 365.94 263.052 cv
363.915 258.579 357.462 255.789 352.962 248.409 cv
345.168 235.611 356.544 228.852 359.298 224.676 cv
365.508 215.235 358.182 210.96 340.578 207.135 cv
324.216 203.589 183.852 220.284 183.852 220.284 cv
.270588 .196078 0 rgb
f
380.601 438.669 mo
315.045 436.383 li
315.045 436.383 315.047 436.382 315.049 436.38 cv
380.623 438.664 li
380.609 438.667 380.601 438.669 380.601 438.669 cv
205.799 424.097 mo
130.596 424.1 81.9883 396.77 76.5 357.012 cv
76.5 357.012 76.5621 360.786 77.9427 366.86 cv
76.4476 360.786 76.329 357.012 76.329 357.012 cv
81.783 316.566 142.443 270.639 174.384 267.075 cv
169.435 267.49 164.944 268.225 160.966 269.107 cv
159.367 269.405 156.629 269.809 153.526 269.809 cv
151.447 269.809 149.204 269.627 147.029 269.113 cv
147.23 268.079 146.951 266.867 146.151 265.851 cv
141.886 260.439 138.081 260.112 137.223 260.112 cv
137.105 260.112 137.043 260.118 137.043 260.118 cv
136.887 260.315 136.752 260.529 136.637 260.757 cv
136.033 259.218 135.637 257.43 135.504 255.357 cv
135.504 255.357 135.479 255.384 135.435 255.436 cv
135.865 254.906 136.325 254.537 136.782 254.349 cv
149.229 249.264 167.193 242.325 167.193 242.325 cv
171.551 230.349 176.088 224.734 181.625 223.692 cv
181.551 229.338 182.594 234.552 185.256 238.725 cv
192.487 250.054 207.897 261.909 235.13 261.91 cv
242.233 261.91 250.136 261.104 258.912 259.272 cv
259.661 259.116 260.403 258.953 261.132 258.787 cv
298.726 255.144 314.298 233.078 320.112 225.981 cv
326.524 221.182 332.738 219.386 338.389 219.386 cv
349.743 219.386 358.82 226.636 362.652 231.333 cv
360.927 235.012 358.645 239.102 356.729 242.375 cv
355.101 244.182 353.649 246.183 352.962 248.409 cv
352.963 248.464 352.965 248.518 352.967 248.572 cv
352.964 248.577 352.962 248.58 352.962 248.58 cv
352.964 248.584 352.966 248.588 352.967 248.592 cv
353.165 254.857 356.16 259.707 356.436 261.909 cv
350.032 277.415 329.777 286.113 307.682 286.114 cv
301.115 286.115 294.389 285.347 287.811 283.761 cv
306.805 295.749 322.832 299.573 335.704 299.573 cv
349.735 299.573 360.018 295.032 366.327 291.573 cv
387.828 319.248 382.635 342.828 371.538 360.99 cv
351.774 393.354 288.342 417.636 239.247 422.415 cv
227.602 423.55 216.429 424.096 205.799 424.097 cv
339.045 208.352 mo
338.92 208.344 338.79 208.341 338.657 208.341 cv
338.561 208.341 338.463 208.343 338.364 208.346 cv
338.433 208.328 338.501 208.309 338.568 208.291 cv
338.735 208.31 338.895 208.33 339.045 208.352 cv
level3{
gsave
clp
[356.652 0 0 356.652 76.332 331.993 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .886275 .854902 ]
/C1 [.929412 .780392 .717647 ]
/N 1.06376 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .780392 .717647 ]
/C1 [.929412 .780392 .717647 ]
/N 1 
>>
]
/Bounds [.812121 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[356.652 0 0 356.652 76.332 331.993 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~nF,i7n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2mdBN2mdBN1mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
~>
<~io/kTiSibSiSi_Qi8EPOi8EPNhr!>Khr!>JhVR,GhVR,Fh;-oCh;-oBgt^]?gt^]>gY:K;gY:K:g=k97
g=k96g"G'3g"G'2f\"j/f\"g-f@SX+f@SU)f%/F'f%/C%e^`4#e^W*ueC<!teC2mqe'ldpdaHRldaHRl
dF$@hdF$@gd*U.dd*U.ccd0q`cd0n^cHa_\cHXVYc-=MXc-4DUbfn;TbKJ)PbKJ)Ob0%lLb0%lKaiVZH
aiVWFaN2HDaN)?Aa2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@
~>
<~g=b04g"G'3f\"j/f\"j.f@SX+f@JO(f%/F'e^`4#e^`1!eC<!te'ldpe'landaHRldF$@hdF$=fd*U.d
d*L%acd0q_cHa_\cHXVYc-=JVbfn;TbKJ)PbKJ&Nb0%lLaiVZHaiVWFaN2HDa2c6@a2c3>`l?$;`Pog8
`Pf^5`5KU3_o'C0_ns:-_SX.*_83t(^qdb$^qd_"^V@Ot^:q=q^:h4n]tM+l]Y(ni]=Y\e]=YYc]"5Ja
\[f8]\[]/Z\@B&X\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
403.592 308.602 mo
403.592 308.602 li
407.282 307.058 414.786 306.197 424.125 304.371 cv
433.52 302.534 448.236 289.137 455.667 273.965 cv
455.673 273.984 455.678 274.002 455.684 274.021 cv
448.51 289.495 433.749 302.489 424.125 304.371 cv
414.786 306.197 407.282 307.058 403.592 308.602 cv
442.973 265.282 mo
441.088 265.282 439.096 265.058 436.995 264.834 cv
434.919 264.609 432.735 264.384 430.443 264.383 cv
430.602 264.383 430.763 264.382 430.92 264.382 cv
433.534 264.382 435.772 264.465 437.769 264.555 cv
439.802 264.639 441.589 264.726 443.28 264.726 cv
444.831 264.726 446.301 264.653 447.804 264.438 cv
447.907 264.423 448.01 264.402 448.115 264.378 cv
448.127 264.4 448.14 264.422 448.153 264.444 cv
446.527 265.071 444.8 265.282 442.973 265.282 cv
368.163 225.927 mo
367.54 224.943 366.926 224.065 366.328 223.282 cv
366.926 224.065 367.54 224.943 368.163 225.927 cv
366.293 223.236 mo
366.274 223.211 366.254 223.186 366.235 223.161 cv
366.254 223.186 366.273 223.211 366.293 223.236 cv
366.173 223.082 mo
366.163 223.068 366.152 223.054 366.142 223.041 cv
366.152 223.054 366.163 223.068 366.173 223.082 cv
361.695 218.573 mo
361.616 218.515 361.539 218.459 361.463 218.405 cv
361.462 218.392 361.461 218.378 361.46 218.365 cv
361.539 218.434 361.618 218.504 361.695 218.573 cv
.231373 .156863 0 rgb
f
403.592 308.602 mo
391.833 296.304 378.746 284.623 367.281 273.339 cv
367.281 273.339 368.145 267.921 365.94 263.052 cv
363.923 258.597 357.513 255.81 353.016 248.495 cv
353.315 248.023 354.845 245.595 356.729 242.375 cv
360.52 238.168 365.27 235.016 363.564 232.542 cv
363.305 232.165 363 231.76 362.652 231.333 cv
364.691 226.987 365.954 223.213 364.923 222.03 cv
364.028 221.001 362.896 219.796 361.47 218.526 cv
361.468 218.485 361.466 218.445 361.463 218.405 cv
361.539 218.459 361.616 218.515 361.695 218.573 cv
361.709 218.585 361.723 218.598 361.737 218.61 cv
362.967 219.525 364.488 220.919 366.142 223.041 cv
366.152 223.054 366.163 223.068 366.173 223.082 cv
366.194 223.108 366.214 223.135 366.235 223.161 cv
366.254 223.186 366.274 223.211 366.293 223.236 cv
366.304 223.252 366.316 223.267 366.328 223.282 cv
366.926 224.065 367.54 224.943 368.163 225.927 cv
368.163 225.927 li
373.203 233.892 389.565 237.168 399.492 246.618 cv
409.419 256.059 414.801 269.811 414.801 269.811 cv
414.801 269.811 421.974 264.438 430.164 264.384 cv
430.258 264.383 430.349 264.384 430.443 264.383 cv
432.735 264.384 434.919 264.609 436.995 264.834 cv
439.096 265.058 441.088 265.282 442.973 265.282 cv
444.8 265.282 446.527 265.071 448.153 264.444 cv
448.727 265.439 449.477 266.084 450.568 266.676 cv
451.209 267.349 451.969 267.934 452.877 268.423 cv
453.427 269.204 454.124 269.915 454.589 270.328 cv
454.978 271.635 455.34 272.857 455.667 273.965 cv
448.236 289.137 433.52 302.534 424.125 304.371 cv
414.786 306.197 407.282 307.058 403.592 308.602 cv
.8 .623529 .572549 rgb
f
239.723 456.444 mo
238.017 456.444 236.284 456.409 234.54 456.336 cv
109.568 451.112 83.4104 390.919 77.9427 366.86 cv
83.797 390.647 110.759 449.724 234.369 455.76 cv
236.082 455.844 237.796 455.884 239.497 455.884 cv
287.548 455.884 330.005 423.49 342.783 413.163 cv
333.715 423.069 315.355 436.162 315.049 436.38 cv
310.482 436.221 li
310.482 436.221 280.765 456.444 239.723 456.444 cv
380.772 438.669 mo
380.623 438.664 li
381.94 438.35 444.245 423.162 431.19 360.783 cv
424.404 328.374 391.707 299.097 364.5 273.861 cv
364.5 273.861 365.652 269.244 363.735 263.763 cv
362.143 259.194 356.02 255.37 352.967 248.592 cv
352.967 248.585 352.967 248.579 352.967 248.572 cv
352.974 248.561 352.991 248.535 353.016 248.495 cv
357.513 255.81 363.923 258.597 365.94 263.052 cv
368.145 267.921 367.281 273.339 367.281 273.339 cv
378.746 284.623 391.833 296.304 403.592 308.602 cv
403.592 308.602 li
403.171 308.778 402.799 308.963 402.48 309.159 cv
402.48 309.159 401.661 308.952 400.23 308.493 cv
415.152 324.792 427.482 342.279 431.352 360.783 cv
444.555 423.828 380.772 438.669 380.772 438.669 cv
361.47 218.526 mo
357.242 214.762 350.422 210.427 339.48 208.422 cv
339.344 208.397 339.198 208.374 339.045 208.352 cv
339.259 208.364 339.462 208.387 339.651 208.422 cv
350.439 210.403 357.219 214.642 361.46 218.365 cv
361.461 218.378 361.462 218.392 361.463 218.405 cv
361.466 218.445 361.468 218.485 361.47 218.526 cv
.231373 .156863 0 rgb
f
239.497 455.884 mo
237.796 455.884 236.082 455.844 234.369 455.76 cv
110.759 449.724 83.797 390.647 77.9427 366.86 cv
76.5621 360.786 76.5 357.012 76.5 357.012 cv
81.9883 396.77 130.596 424.1 205.799 424.097 cv
216.429 424.096 227.602 423.55 239.247 422.415 cv
288.342 417.636 351.774 393.354 371.538 360.99 cv
382.635 342.828 387.828 319.248 366.327 291.573 cv
360.018 295.032 349.735 299.573 335.704 299.573 cv
322.832 299.573 306.805 295.749 287.811 283.761 cv
294.389 285.347 301.115 286.115 307.682 286.114 cv
329.777 286.113 350.032 277.415 356.436 261.909 cv
356.16 259.707 353.165 254.857 352.967 248.592 cv
356.02 255.37 362.143 259.194 363.735 263.763 cv
365.652 269.244 364.5 273.861 364.5 273.861 cv
391.707 299.097 424.404 328.374 431.19 360.783 cv
444.245 423.162 381.94 438.35 380.623 438.664 cv
315.049 436.38 li
315.355 436.162 333.715 423.069 342.783 413.163 cv
330.005 423.49 287.548 455.884 239.497 455.884 cv
261.132 258.787 mo
301.757 249.525 313.054 224.897 320.985 216.153 cv
323.369 212.726 333.757 209.595 338.364 208.346 cv
338.463 208.343 338.561 208.341 338.657 208.341 cv
338.79 208.341 338.92 208.344 339.045 208.352 cv
339.198 208.374 339.344 208.397 339.48 208.422 cv
350.422 210.427 357.242 214.762 361.47 218.526 cv
362.896 219.796 364.028 221.001 364.923 222.03 cv
365.954 223.213 364.691 226.987 362.652 231.333 cv
358.82 226.636 349.743 219.386 338.389 219.386 cv
332.738 219.386 326.524 221.182 320.112 225.981 cv
314.298 233.078 298.726 255.144 261.132 258.787 cv
352.967 248.572 mo
352.965 248.518 352.963 248.464 352.962 248.409 cv
353.649 246.183 355.101 244.182 356.729 242.375 cv
354.845 245.595 353.315 248.023 353.016 248.495 cv
352.991 248.535 352.974 248.561 352.967 248.572 cv
level3{
gsave
clp
[356.652 0 0 356.652 76.332 331.993 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~cF'h#[B@f^Y0ODWcEs_!Z`VNZXNn,QcEaLrZE)9VWm7oMc*=:nZ)Q!QWQhZGc*4.kYG]XKVp2BAc*!qg
Y,9IHVTl9?c)medXea4CUWom8c)dYaX.mk>U<T^4c)RJ]Wh@S9TZjF.bc.5YWLh>4T$4.)bbq#UVk)&/
SBRk#bbglRVOPf,R`qUsbb^cPUm]H&REVFnbbLNKUR03!QHZ(hbbCEIU6a#sQ->qdbb13ETTdTlPK]Y^
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('B
T9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@Ej
P0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]bb('BT9@EjP0BP]
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.812121 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[356.652 0 0 356.652 76.332 331.993 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~c-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfe2QbKJ)PbKJ)PbKJ)PbKJ)P
bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
~>
<~['[3I['[3HZa7!EZa7!EZa-mBZEgdAZ*CR=Z*CR=Z*CR=Z*CR=Yct@9Yct@9Yct=7YHP.5YHG%2Y-+q0
Xf\_-Xf\_-Xf\_-Xf\_-XK8M)XK8J'X/i;%X/i;%WiE)!WiE(uWMukrWMukrWMukrWMukqW2QYnW2QVl
Vl-GjVl$>gVP^5eV5:#bV5:#bV5:#bV5:#bUnjf^Unjc\USFTZUS=KWU8"BVU8"BUTqS0RTqS0RTqS0R
TV.sNTV.sMT:_aJT:VXGSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OF
~>
<~Xf\_-Xf\_-Xf\_-Xf\\+XK8M)X/i;%X/i;$WiE)!WiE%tWMukrWMukqW2QYnW2QVlVl-GjVl$>gVP^5e
V5:#bV5:#bV5:#bUnjf^USFTZUSFQXU8"BVU7n9STqS0RTqS0RTqS-PTV%jKT:_aJSt;OFSt;OESXl=B
SXl=BSXc4?S=H+=S"#n:S"#k8R[T\6R@0J2R@0J2R@0G0R$a8.R$X/+QBmi&QBmi%Q'IW"Q'IW"Q'IW"
Pa%DrPEV2oPEV/mP*1ukOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcg
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
144.135 180.711 mo
144.135 180.711 146.646 200.241 145.683 209.151 cv
145.134 214.155 140.454 219.816 137.052 225.414 cv
134.397 229.779 131.967 234.225 131.85 234.18 cv
131.58 234.09 138.924 235.692 146.547 238.095 cv
152.289 239.895 159.336 243.405 159.336 243.405 cv
159.336 243.405 160.947 238.509 162.306 232.731 cv
163.863 226.071 163.827 217.962 165.177 214.893 cv
167.706 209.16 180.468 199.953 180.468 199.953 cv
180.468 199.953 163.773 185.22 144.135 180.711 cv
.270588 .196078 0 rgb
f
146.115 182.835 mo
146.115 182.835 147.348 201.042 146.439 209.34 cv
145.935 214.002 141.84 220.626 138.663 225.846 cv
136.197 229.914 134.739 232.974 134.631 232.938 cv
134.37 232.848 140.148 234.081 147.249 236.313 cv
152.604 237.996 158.094 240.993 158.094 240.993 cv
158.094 240.993 159.867 236.7 161.127 231.318 cv
162.576 225.108 162.18 217.818 163.44 214.956 cv
165.789 209.619 179.136 198.882 179.136 198.882 cv
179.136 198.882 164.421 187.029 146.115 182.835 cv
.858824 .141176 .141176 rgb
f
143.217 176.454 mo
143.505 182.808 li
143.505 182.808 159.327 185.724 180.468 201.267 cv
185.04 197.145 li
163.782 181.08 143.217 176.454 143.217 176.454 cv
.270588 .196078 0 rgb
f
144.963 178.695 mo
144.963 181.962 li
144.963 181.962 159.543 184.77 179.712 199.602 cv
181.836 197.343 li
161.559 182.007 144.963 178.695 144.963 178.695 cv
1 1 1 rgb
f
155.473 239.662 mo
154.535 239.28 153.282 238.824 151.623 238.302 cv
151.623 238.302 151.653 238.187 151.713 237.965 cv
153.127 238.557 154.423 239.155 155.473 239.662 cv
166.016 211.186 mo
166.61 210.483 167.269 209.757 167.964 209.027 cv
167.269 209.757 166.611 210.483 166.016 211.186 cv
166.016 211.186 166.016 211.186 166.016 211.186 cv
.211765 .141176 0 rgb
f
158.094 240.993 mo
158.094 240.993 li
158.094 240.993 157.562 240.513 155.473 239.662 cv
154.423 239.155 153.127 238.557 151.713 237.965 cv
152.171 236.277 154.355 228.4 157.983 218.222 cv
158.8 218.544 159.744 218.752 160.83 218.79 cv
160.962 218.794 161.095 218.797 161.226 218.797 cv
161.707 218.797 162.18 218.767 162.643 218.712 cv
162.249 222.217 162.129 227.026 161.127 231.318 cv
159.867 236.7 158.094 240.993 158.094 240.993 cv
161.559 211.401 mo
161.283 211.401 161.016 211.399 160.757 211.394 cv
164.174 204.828 170.416 197.167 171.87 195.417 cv
173.912 196.697 176.029 198.101 178.21 199.64 cv
176.262 201.25 171.601 205.207 167.964 209.027 cv
167.269 209.757 166.61 210.483 166.016 211.186 cv
164.69 211.224 163.138 211.401 161.559 211.401 cv
.670588 .101961 .101961 rgb
f
178.21 199.64 mo
176.029 198.101 173.912 196.697 171.87 195.417 cv
172.069 195.177 172.179 195.048 172.179 195.048 cv
174.42 195.891 li
175.974 196.928 177.572 198.041 179.207 199.232 cv
179.118 199.169 179.029 199.106 178.938 199.044 cv
178.781 199.17 178.533 199.373 178.21 199.64 cv
181.836 197.343 mo
179.996 195.951 178.185 194.658 176.415 193.458 cv
176.931 192.825 li
179.631 194.544 178.947 195.156 181.836 197.343 cv
.211765 .141176 0 rgb
f
179.712 199.602 mo
179.712 199.602 li
179.542 199.473 179.375 199.351 179.207 199.232 cv
177.572 198.041 175.974 196.928 174.42 195.891 cv
174.429 195.894 li
176.415 193.458 li
178.185 194.658 179.996 195.951 181.836 197.343 cv
181.836 197.343 li
179.712 199.602 li
.780392 .72549 .72549 rgb
f
154.323 210.231 mo
155.655 209.817 155.619 208.548 155.466 207.837 cv
155.07 206.019 152.982 202.968 151.326 201.312 cv
149.67 199.656 145.683 196.704 143.244 198.171 cv
140.886 199.584 140.832 203.571 145.602 206.343 cv
145.602 206.343 139.572 204.156 137.511 207.009 cv
135.99 209.106 136.638 211.482 141.309 212.832 cv
139.158 213.156 138.123 214.146 138.123 215.667 cv
138.123 216.855 138.357 218.07 140.715 218.61 cv
139.176 219.078 138.708 219.942 138.6 221.04 cv
138.393 223.362 141.255 224.388 146.475 223.011 cv
151.695 221.643 153.855 220.23 153.801 218.808 cv
153.774 218.034 153.063 217.296 152.19 217.188 cv
153.27 216.774 154.017 215.982 154.152 215.028 cv
154.197 214.659 154.062 214.074 153.648 213.822 cv
154.494 213.597 155.205 213.39 155.466 212.634 cv
155.79 211.644 155.394 210.834 154.323 210.231 cv
.270588 .196078 0 rgb
f
247.428 109.791 mo
241.434 111.168 233.829 117.738 229.923 122.391 cv
222.696 131.022 214.398 140.967 215.496 142.614 cv
218.403 146.97 222.264 150.894 220.977 151.848 cv
217.503 154.44 205.776 165.78 194.751 183.699 cv
186.003 197.928 176.139 224.433 185.256 238.725 cv
194.373 253.008 216.486 268.128 258.912 259.272 cv
301.347 250.416 312.912 225.054 320.985 216.153 cv
324.072 211.716 340.578 207.774 340.578 207.774 cv
345.654 200.916 343.323 197.397 339.309 194.832 cv
330.228 189.045 330.372 180.756 326.52 176.463 cv
322.659 172.17 322.02 172.134 322.02 172.134 cv
322.02 172.134 328.914 168.93 329.526 163.494 cv
330.147 158.058 325.323 150.39 322.758 149.769 cv
318.438 148.725 315.639 151.272 311.985 154.071 cv
311.985 154.071 310.851 156.024 308.394 151.461 cv
305.937 146.907 297.729 121.086 289.485 111.879 cv
281.25 102.681 272.682 103.572 264.879 105.246 cv
257.076 106.911 253.089 105.444 250.227 107.415 cv
247.428 109.791 li
f
237.386 253.501 mo
209.52 253.504 188.892 236.367 188.892 236.367 cv
188.892 236.367 li
181.724 225.137 187.51 201.986 198.822 181.868 cv
201.808 183.328 205.72 185.048 211.036 186.992 cv
210.653 187.121 210.253 187.279 209.898 187.668 cv
208.962 188.685 209.322 191.619 212.247 192.825 cv
212.247 192.825 215.613 189.279 217.224 188.937 cv
217.224 188.937 214.83 189.036 212.058 190.881 cv
212.058 190.881 210.573 190.197 210.726 188.811 cv
210.906 187.137 212.571 187.578 213.012 186.237 cv
213.651 184.293 211.563 183.771 212.409 182.259 cv
212.785 181.596 213.428 181.362 214.065 181.362 cv
214.327 181.362 214.589 181.401 214.83 181.467 cv
215.604 181.674 216.765 182.835 217.152 184.104 cv
217.458 182.79 217.053 181.908 216.675 181.305 cv
218.745 180.729 223.767 178.407 227.772 175.761 cv
227.772 175.761 218.334 180.162 213.398 180.163 cv
213.143 180.163 212.9 180.151 212.67 180.126 cv
212.67 180.126 210.843 181.881 211.266 183.15 cv
211.431 183.644 211.71 183.962 211.969 184.237 cv
207.247 182.064 203.612 180.167 200.766 178.53 cv
202.862 175.057 205.115 171.704 207.486 168.552 cv
207.837 168.082 207.608 167.024 207.355 165.967 cv
207.09 164.856 206.799 163.747 207.126 163.323 cv
207.259 163.147 207.49 163.082 207.779 163.082 cv
208.215 163.082 208.783 163.231 209.34 163.377 cv
209.39 163.39 209.44 163.403 209.49 163.416 cv
210.001 163.551 210.493 163.677 210.861 163.677 cv
211.094 163.677 211.277 163.626 211.383 163.494 cv
211.383 163.494 219.762 154.422 222.624 152.289 cv
223.857 151.371 222.093 146.736 219.294 142.515 cv
218.223 140.922 224.28 132.84 231.273 124.479 cv
234.547 120.581 240.542 113.943 243.761 113.943 cv
244.251 113.943 244.676 114.097 245.018 114.438 cv
245.382 115.035 245.763 115.587 246.156 116.099 cv
246.904 117.466 248.306 118.986 250.776 120.474 cv
252.46 121.49 253.968 121.9 255.392 121.9 cv
260.21 121.901 264.079 117.214 270.63 115.47 cv
271.484 115.241 272.375 115.106 273.287 115.106 cv
277.289 115.106 281.684 117.708 285.012 126.423 cv
286.353 133.785 281.196 139.311 285.93 145.719 cv
290.015 149.689 303.292 150.875 299.55 158.364 cv
299.525 158.365 299.501 158.365 299.477 158.365 cv
298.856 158.365 298.162 158.137 297.414 157.572 cv
297.414 157.572 297.708 161.25 299.834 162.509 cv
300.923 164.653 303.298 166.047 305.822 166.047 cv
306.347 166.047 306.877 165.987 307.404 165.861 cv
311.931 175.77 326.718 221.94 263.16 248.328 cv
254.18 252.056 245.475 253.501 237.386 253.501 cv
221.805 214.65 mo
215.955 216.261 212.679 218.952 212.679 218.952 cv
212.679 218.952 209.034 234.36 223.533 237.672 cv
225.415 238.102 227.204 238.301 228.89 238.301 cv
240.203 238.301 246.932 229.343 246.744 220.923 cv
246.744 220.923 li
245.36 227.08 236.574 233.018 227.428 233.018 cv
225.276 233.018 223.103 232.689 221.004 231.957 cv
212.184 228.879 214.326 219.393 214.326 219.393 cv
214.326 219.393 213.862 220.948 213.853 223.126 cv
213.862 220.948 214.326 219.393 214.326 219.393 cv
214.326 219.393 215.955 217.701 221.805 214.65 cv
level3{
gsave
clp
[154.842 0 0 154.842 185.738 183.01 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .870588 .827451 ]
/C1 [.929412 .780392 .717647 ]
/N 1.44114 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[154.842 0 0 154.842 185.738 183.01 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~nF,i7n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6mdBN2mdBN2
mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBK0mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
~>
<~hVI#Dh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-lAgt^]?gt^]?gt^]?gt^]?gY:K;gY:K;gY:K;gY:K:
g=k97g=k97g=k97g=b04g"G'3g"G'3g"=s0f\"j/f\"j/f[na,f@SX+f@SX+f@JO(f%/F'f%/F'e^`4#
e^`4#e^`1!eC<!teC<!te'ldpe'ldpe'landaHRldaHRkdF$@hdF$@hdEp7ed*U.dd*U+bcd0q`cd0q_
cHa_\cHa_\c-=MXc-=MXbfn;Tbfn;TbKJ)PbKJ)PbK@uMb0%lLb/qcIaiVZHaiMQEaN2HDaN)?Aa2c6@
~>
<~e'c[mdaHRldaHRldaHRldaHRldaHRldaHOjdF$@hdF$@hdF$@hdF$=fd*U.dd*U.dd*U.ccd0q`cd0q`
cd0q_cHa_\cHa_\cHa\Zc-=MXc-=MXbfn;Tbfn;Tbfn8RbKJ)PbKJ)Pb0%lLb0%lLb/qcIaiVZHaiVWF
aN2HDaN2EBa2c6@a2c6?`l?$<`l?$;`Pog8`Pog7`5KU4`5KU3_o'C0_o'@._SX1,_SX.*_83t(_8*k%
^qdb$^V@Ou^V@Ot^:q=q^:q:o]tM+m]tD"j]Y(ni]=Y\e]=Y\d]"5Ja]",A^\[f8]\@B&Y\@B#W\$riU
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
236.64 259.298 mo
210.27 259.298 195.931 247.399 188.892 236.367 cv
188.892 236.367 209.52 253.504 237.386 253.501 cv
245.475 253.501 254.18 252.056 263.16 248.328 cv
326.718 221.94 311.931 175.77 307.404 165.861 cv
306.877 165.987 306.347 166.047 305.822 166.047 cv
303.298 166.047 300.923 164.653 299.834 162.509 cv
299.879 162.535 299.924 162.561 299.97 162.585 cv
301.088 163.17 302.286 163.485 303.434 163.485 cv
305.678 163.485 307.729 162.282 308.61 159.543 cv
308.61 159.543 308.638 159.496 308.68 159.4 cv
309.482 160.4 310.014 160.947 310.014 160.947 cv
310.18 158.323 315.328 151.958 320.625 151.958 cv
320.777 151.958 320.931 151.963 321.084 151.974 cv
324.061 152.186 327.799 157.476 327.798 162.345 cv
327.797 162.848 327.757 163.347 327.672 163.836 cv
326.358 171.342 315.297 172.026 315.297 172.026 cv
315.297 172.026 li
315.297 172.026 li
315.297 172.026 316.338 172.488 318.586 172.488 cv
318.982 172.488 319.416 172.474 319.887 172.44 cv
320.886 173.277 323.001 175.284 325.017 177.525 cv
328.752 181.683 329.715 190.98 336.843 196.407 cv
339.739 198.612 340.589 200.778 340.578 202.573 cv
340.562 205.196 338.706 207.027 338.706 207.027 cv
338.706 207.027 328.401 210.267 320.895 214.65 cv
320.895 214.65 323.946 210.996 326.151 198.531 cv
326.151 198.531 li
326.151 198.531 li
326.151 198.531 322.299 210.456 319.689 214.614 cv
314.091 223.524 300.114 248.238 259.047 256.806 cv
250.755 258.536 243.314 259.298 236.64 259.298 cv
299.55 158.364 mo
303.292 150.875 290.015 149.689 285.93 145.719 cv
281.196 139.311 286.353 133.785 285.012 126.423 cv
281.684 117.708 277.289 115.106 273.287 115.106 cv
272.375 115.106 271.484 115.241 270.63 115.47 cv
264.079 117.214 260.21 121.901 255.392 121.9 cv
253.968 121.9 252.46 121.49 250.776 120.474 cv
248.306 118.986 246.904 117.466 246.156 116.099 cv
248.805 119.551 251.956 121.095 253.514 121.095 cv
253.652 121.095 253.778 121.083 253.89 121.059 cv
260.621 119.596 267.131 111.965 272.961 111.965 cv
273.227 111.965 273.49 111.981 273.753 112.014 cv
276.631 112.375 278.4 113.077 280.062 113.077 cv
280.64 113.077 281.205 112.993 281.799 112.779 cv
281.799 112.779 280.179 113.94 280.872 116.154 cv
281.565 118.368 287.388 121.5 287.046 126.891 cv
286.695 132.291 283.599 140.697 287.748 144.018 cv
291.897 147.339 302.94 151.812 302.508 155.412 cv
302.364 156.575 301.239 158.315 299.55 158.364 cv
level3{
gsave
clp
[154.842 0 0 154.842 185.738 183.01 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~cEaFpZDl-TWQqfKcEaCoZ)GsQW6VZHcEX=nZ)>mOVp;NEcEO1kYbo^LVTuBBcEF+jYGTUJV9Q0>c*!nf
Y,'=FUs6';c)mbcXeX.CU<Td6c)dYaX.mk>U!9X3c)RG]Wh@V:T?XC.c)RD\WLhA6T$4.)bc%)VW1D/1
SBRn$bbglRVOPf,R`qXtbb^cPV4,W)REVIobbUWMUR03"Qcu1ibbCEIU6a#tQ->qebb:9FTTdTmPK]Y^
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[154.842 0 0 154.842 185.738 183.01 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~c-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MX
c-=MXc-=MXc-=MXc-=JVbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;SbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*:I:Yct@9Yct@9Yct@9Yct@9Yck76YHP.5YHP.5YHP.5YHG%2Y-+q1
Y-+q1Y-+q1Y-+n/Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\\+XK8M)XK8M)XK8J'X/i;%X/i8#WiE)!WiE)!
WiE(uWMukrWMukrWMukrWMukrWMukqW2QYnW2QYmVl-GjVl-GjVl-GiVP^5fVP^5eV5:#bV5:#bV5:#b
V5:#bUnjf^Unjf^Unjf^USFTZUSFTZU8"BVU8"BVTqS0RTqS0RTqS0RTqS0RTV.sNTV.sNT:_aJT:_aJ
~>
<~W2QYnW2QYnW2QYnW2QYnW2HPkVl-GjVl-GjVl-GjVl-GjVl$>gVP^5fVP^5fVPU,cV5:#bV5:#bV5:#b
V5:#bV5:#bV59u`Unjf^Unjf^Unjc\USFTZUSFQXU8"BVU8"BVU8"?TTqS0RTqS0RTqS0RTqS-PTV.sN
TV.sMT:_aJT:_aISt;OFSt;OFSt;OESXl=BSXl=BSXl=AS=H+>S=H+=S"#n:S"#n9R[T\6R[T\5R@0J2
R@0J2R@0J2R@0J2R$a8.Q^=&*Q^=&*QBmi&QBmi&Q'IW"Q'IW"Q'IW"Pa%DsPa%DsPEV2oP*1ukP*1uk
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
259.834 153.086 mo
259.834 153.086 260.881 160.41 268.278 160.979 cv
275.674 161.548 280.614 155.08 280.614 155.08 cv
280.614 155.08 267.836 147.254 259.834 153.086 cv
cp
.270588 .196078 0 rgb
f
261.077 153.433 mo
261.077 153.433 261.755 159.438 268.373 159.947 cv
274.99 160.456 278.793 155.206 278.793 155.206 cv
278.793 155.206 267.582 149.375 261.077 153.433 cv
cp
1 1 1 rgb
f
267.921 151.507 mo
263.878 152.084 li
263.832 152.355 263.788 152.628 263.788 152.913 cv
263.788 155.673 266.026 157.912 268.788 157.912 cv
271.548 157.912 273.787 155.673 273.787 152.913 cv
273.787 152.628 267.921 151.507 267.921 151.507 cv
cp
.270588 .196078 0 rgb
f
223.773 153.784 mo
223.773 153.784 223.822 160.239 230.98 160.528 cv
238.138 160.819 240.56 152.99 240.463 151.539 cv
240.463 151.539 231.12 149.153 223.773 153.784 cv
cp
f
224.832 154.241 mo
224.832 154.241 224.556 159.167 230.834 159.421 cv
237.112 159.676 239.49 153.316 239.405 152.043 cv
239.221 152.034 230.102 150.924 224.832 154.241 cv
cp
1 1 1 rgb
f
229.847 151.679 mo
229.812 151.938 225.653 153.083 225.673 153.239 cv
225.987 155.635 228.074 157.448 230.54 157.369 cv
233.167 157.286 235.229 155.089 235.145 152.463 cv
235.137 152.192 235.087 151.935 235.034 151.678 cv
229.847 151.679 li
cp
.270588 .196078 0 rgb
f
222.62 142.519 mo
222.62 142.519 225.126 139.782 229.343 137.072 cv
232.326 135.155 235.804 134.561 237.513 132.65 cv
237.513 132.65 238.438 137.555 237.031 137.53 cv
232.294 137.445 222.62 142.519 222.62 142.519 cv
cp
f
261.17 126.671 mo
260.576 128.198 260.661 132.271 262.442 132.864 cv
264.225 133.458 272.538 133.373 278.9 140.5 cv
278.9 140.5 277.459 136.427 269.908 131.083 cv
263.412 126.484 261.17 126.671 261.17 126.671 cv
cp
f
239.466 128.736 mo
239.466 128.736 243.198 130.77 243.198 133.528 cv
243.198 136.287 239.948 138.462 239.948 138.462 cv
239.948 138.462 242.351 135.775 241.756 133.528 cv
241.162 131.281 239.466 128.736 239.466 128.736 cv
cp
f
232.985 163.999 mo
205.857 162.132 li
205.857 162.132 204.33 172.144 214.68 175.537 cv
225.03 178.93 229.187 174.857 229.187 174.857 cv
229.187 174.857 223.333 177.573 215.273 174.179 cv
207.224 170.79 208.216 163.964 208.216 163.964 cv
208.216 163.964 227.281 164.762 232.985 163.999 cv
cp
f
214.83 181.467 mo
215.604 181.674 216.765 182.835 217.152 184.104 cv
217.458 182.79 217.053 181.908 216.675 181.305 cv
218.745 180.729 223.767 178.407 227.772 175.761 cv
227.772 175.761 217.332 180.63 212.67 180.126 cv
212.67 180.126 210.843 181.881 211.266 183.15 cv
211.689 184.419 212.868 184.527 212.508 185.724 cv
212.058 187.218 210.825 186.651 209.898 187.668 cv
208.962 188.685 209.322 191.619 212.247 192.825 cv
212.247 192.825 215.613 189.279 217.224 188.937 cv
217.224 188.937 214.83 189.036 212.058 190.881 cv
212.058 190.881 210.573 190.197 210.726 188.811 cv
210.906 187.137 212.571 187.578 213.012 186.237 cv
213.651 184.293 211.563 183.771 212.409 182.259 cv
212.94 181.323 214.002 181.242 214.83 181.467 cv
f
254.718 92.358 mo
255.348 94.149 256.32 96.453 254.718 97.893 cv
252.18 100.179 240.462 105.381 244.161 112.878 cv
247.185 119.007 252.18 121.428 253.89 121.059 cv
260.928 119.529 267.723 111.258 273.753 112.014 cv
277.632 112.5 279.495 113.607 281.799 112.779 cv
281.799 112.779 280.179 113.94 280.872 116.154 cv
281.565 118.368 287.388 121.5 287.046 126.891 cv
286.695 132.291 283.599 140.697 287.748 144.018 cv
291.897 147.339 302.94 151.812 302.508 155.412 cv
302.31 157.014 300.249 159.714 297.414 157.572 cv
297.414 157.572 297.72 161.406 299.97 162.585 cv
303.273 164.313 307.278 163.683 308.61 159.543 cv
308.61 159.543 309.987 157.221 308.394 151.461 cv
306.801 145.71 307.449 138.168 307.152 133.866 cv
306.513 124.767 301.086 122.382 298.944 120.096 cv
298.944 120.096 304.164 116.361 304.92 113.733 cv
304.92 113.733 301.5 113.013 298.944 114.048 cv
298.944 114.048 300.303 111.663 303.21 109.728 cv
303.21 109.728 298.116 107.082 293.346 112.266 cv
293.346 112.266 291.825 107.208 286.605 104.922 cv
281.259 102.573 277.623 102.843 273.861 103.113 cv
271.602 103.275 269.298 103.446 266.553 103.041 cv
262.557 102.456 267.273 99.306 266.517 95.283 cv
265.581 90.36 259.317 89.775 257.526 89.361 cv
257.526 89.361 259.38 91.107 259.938 93.753 cv
260.451 96.174 259.371 96.759 259.371 96.759 cv
259.371 96.759 258.435 93.996 254.718 92.358 cv
f
300.141 161.28 mo
300.141 161.28 li
298.161 160.047 298.359 158.292 298.359 158.292 cv
299.036 158.803 299.713 159.032 300.344 159.032 cv
302.147 159.031 303.579 157.167 303.579 154.701 cv
303.579 151.371 293.652 145.818 289.836 142.767 cv
286.02 139.707 287.667 131.886 287.991 126.918 cv
288.306 121.959 282.582 117.756 281.943 115.722 cv
281.313 113.688 285.318 110.682 285.318 110.682 cv
284.006 111.503 282.514 111.786 280.799 111.786 cv
278.527 111.786 275.863 111.289 272.709 110.889 cv
272.425 110.853 272.139 110.836 271.852 110.836 cv
266.539 110.836 260.665 116.72 254.808 118.359 cv
254.55 118.431 254.234 118.476 253.875 118.476 cv
252.071 118.476 249.17 117.329 246.888 112.608 cv
244.152 106.938 252.999 100.8 254.655 99.72 cv
256.311 98.631 257.049 96.813 256.473 95.157 cv
258.822 96.363 258.147 99.945 258.147 99.945 cv
259.425 97.848 260.379 98.163 261.018 95.931 cv
261.666 93.708 260.244 91.674 260.244 91.674 cv
261.9 92.052 264.699 93.834 264.132 97.083 cv
263.556 100.323 261.459 102.492 265.788 104.013 cv
266.978 104.432 268.26 104.55 269.661 104.55 cv
270.549 104.55 271.484 104.503 272.475 104.454 cv
273.467 104.408 274.517 104.361 275.634 104.361 cv
278.014 104.361 280.698 104.574 283.779 105.462 cv
290.637 107.442 293.193 113.904 293.193 113.904 cv
296.032 110.821 298.476 110.276 299.849 110.276 cv
300.601 110.276 301.032 110.439 301.032 110.439 cv
298.359 112.221 298.17 114.831 298.17 114.831 cv
299.234 114.399 300.457 114.281 301.476 114.281 cv
302.708 114.281 303.642 114.453 303.642 114.453 cv
303.642 114.453 li
303.642 114.453 300.915 117.18 297.144 119.376 cv
297.144 119.376 295.821 117.72 294.084 116.28 cv
299.871 122.067 301.086 130.446 300.024 136.638 cv
297.279 152.676 307.728 149.769 305.748 157.887 cv
304.965 161.127 300.141 161.28 300.141 161.28 cv
305.802 133.479 mo
305.802 133.479 li
305.782 132.627 305.687 131.823 305.533 131.063 cv
305.7 131.831 305.796 132.636 305.802 133.479 cv
305.802 133.479 li
level3{
gsave
clp
[65.0386 0 0 65.0386 246.365 126.895 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.611765 .305882 .164706 ]
/C1 [.611765 .305882 .164706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.611765 .305882 .164706 ]
/C1 [.439216 .145098 0 ]
/N 1.47097 
>>
]
/Bounds [.0121212 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[65.0386 0 0 65.0386 246.365 126.895 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~S=H+>S"#n:S"#n:S"#n:S"#n:S"#n9R[T\6R[T\6R[T\5R@0J2R@0J2R$a8.R$a8.R$X/+Q^=&*Q^3r'
QBmi&QBd`#Q'IW"Pa%DsPa%DrPEV2oPEV/mP*1ukOcbcgOcb`eOH>QcO,o?_O,o<]NfK-[NK&pWNJrgT
N/W^RMi3LOMMd:KMM[1HM2@%ELkpkCLPLY?LPCP<L4t>8KnY25KS5#2K7ef/JqAT+JUrB'JUi9$J:N-!
It)orIXZ`oI=6NkI!g<gH[C*dH?sm`H$O[\G^+IXGB\7TG'8%PG'.qMF`__IFE;MEF)l;AEcH)=EH#l9
~>
<~:/4PZ9he>V9he>V9he>V9he>V9he>V9MA,R9MA,R9MA,R91qoN91qoN91qlL8kM]J8kM]J8P)KF8P)KF
84Z9B84Z9B7n6'>7n6'>7Rfj:7Rfj977BX677BU46psF26pj=/6UO4-6:+"*6:!n'5s[e%5X7S"5X.It
5<h@r5!D.o5!;%l4Ztqj4?P_g4$,Mc4$,Ja3]];^3B9)[3&ilW3&`cT2`EWQ2E!HN2)R6K1c.$G1c$pD
1G^dA1,:U>0ekC:0JG170/"t30.nk0/hJY,/M/M)/1`;%.k<,".Olns.4H\o-n$Jl-RU8h-71&d,pai`
~>
<~.Olnt.4H\p.4H\p.4H\p.4H\p.4H\p-n$Jl-n$Jl-n$Jl-RU8h-RU8h-RU5f-71&d-71&c,pai`,pai_
,U=W\,U=W[,9nEX,9nBV+sJ3T+sJ0R+X&!P+<VdL+<VdK+!2RH+!)IE*Zc@D*??.@*??+>*#oq;)]K_8
)]BV5)B'M3)&X;0(`4),(`4&*(Ddl'()@Z$'bqGu'bh>r'GM5p',)#m&eYfi&J5Te&J,Kb&.f?_%hB0\
%LrsY%1NaU$k*OQ$k!FN$OR4J$47(G#mgkC#RC\@#6tJ<"pP88"U,&5"9\i1!s8W-!WiE)!<E3%!!!!!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
307.206 150.732 mo
305.739 145.44 305.838 137.439 305.802 133.479 cv
305.901 137.439 305.739 145.44 307.206 150.732 cv
305.533 131.063 mo
304.302 125.404 299.204 121.772 297.468 119.925 cv
299.22 121.789 304.298 124.996 305.533 131.063 cv
.207843 .141176 0 rgb
f
303.25 162.117 mo
302.104 162.117 300.975 161.798 300.141 161.28 cv
300.141 161.28 304.965 161.127 305.748 157.887 cv
307.728 149.769 297.279 152.676 300.024 136.638 cv
301.086 130.446 299.871 122.067 294.084 116.28 cv
295.821 117.72 297.144 119.376 297.144 119.376 cv
300.915 117.18 303.642 114.453 303.642 114.453 cv
302.94 116.865 297.468 119.925 297.468 119.925 cv
297.468 119.925 li
297.468 119.925 li
297.468 119.925 li
299.204 121.772 304.302 125.404 305.533 131.063 cv
305.687 131.823 305.782 132.627 305.802 133.479 cv
305.802 133.479 li
305.838 137.439 305.739 145.44 307.206 150.732 cv
307.206 150.732 li
308.517 155.49 310.861 155.73 311.321 155.73 cv
311.372 155.73 311.4 155.727 311.4 155.727 cv
310.059 157.104 309.627 159.228 309.627 159.228 cv
308.034 155.727 li
308.034 155.727 li
308.084 156.171 308.105 156.587 308.101 156.978 cv
308.06 160.754 305.62 162.117 303.25 162.117 cv
level3{
gsave
clp
[65.0386 0 0 65.0386 246.365 126.895 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~GW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah
3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(
*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXcGW6ah3$*<(*dBXc
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~GW6ah3$*<(*dBXcG;gOd2][*$*Hj=]FuC@a2B?s!*-O4[FYt+\2&gWp)K[eSF#4eV1E(<j)0.MNE\\JO
1)P!c(iV2GD_W&H0G\R\(2bc?DD)`A/er1T'PoB8Cb6<9//)bL&nrm/Be'd0.M-8C&8*F&Agn4%-k9f9
%V7!sA1%dq-4=9/$Xt@h@O):h,RIj'$""k^?Qo_]+U23p#$`5S>9=#Q*s>ag"Bc`I=<.HF*!'+[!EL*=
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0121212 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[65.0386 0 0 65.0386 246.365 126.895 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~GB\7TGB\7TGB\7TGB\7TGB\7TG'8%PG'8%PG'8%PF`hhLF`hhLF`hhLF`hhLF`hhLFEDVHFEDVHF)uDD
F)uDDEcQ2@EcQ2@EcQ2@EH,u<EH,u<E,]c8E,]c8Df9Q4DJj?0DJj?0DJj?0D/F-,D/F-,Ci!p(CMR^$
CMR^$CMR^$C2.KuBk_9qBP;'mBP;'mBP;'mB4kjiAnGXeAS#FaAS#FaA7T4]A7T4]@q0"Y@U`eU@:<SQ
@:<SQ@:<SQ?smAM?XI/I?=$rE?=$rE?!U`A>[1N=>?b<9>$>*5>$>*5=]nm1=BJ[-='&I)='&I)<`W7%
~>
<~2`EZS2`EZS2`EZS2`EZS2`EZS2E!HO2E!HO2E!HO2)R6K2)R6K2)R6K2)R6K2)R6K1c.$G1c.$G1c.$G
1G^gC1G^gC1,:U?1,:U?1,:U?0ekC;0ekC;0JG170JG170JG170/"t30/"t3/hSb//hSb//M/P+/M/P+
/M/P+/1`>'.k<,#.k<,#.k<,#.Olnt.4H\p.4H\p-n$Jl-n$Jl-RU8h-71&d-71&d-71&d,pai`,U=W\
,9nEX,9nEX,9nEX+sJ3T+X&!P+X&!P+<VdL+!2RH*Zc@D*Zc@D*Zc@D*??.@*#oq<*#oq<)]K_8)B'M4
~>
<~*??.@*??.@*??.@*??.@*??.@*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<)]K_8)]K_8)B'M4)B'M4)&X;0
)&X;0)&X;0)&X;0(`4),(`4),(Ddl((Ddl((Ddl(()@Z$()@Z$'bqGu'bqGu'GM5q'GM5q'GM5q',)#m
&eYfi&eYfi&eYfi&J5Te&.fBa&.fBa%hB0]%hB0]%LrsY%1NaU%1NaU%1NaU$k*OQ$O[=M$47+I$47+I
$47+I#mgnE#RC\A#RC\A#6tJ="pP89"U,&5"U,&5"U,&5"9\i1!s8W-!s8W-!WiE)!<E3%z!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
322.845 157.372 mo
322.845 157.372 322.083 154.834 318.689 155.643 cv
315.934 156.3 313.599 160.512 314.108 163.486 cv
314.108 163.486 316.823 160.682 319.707 163.486 cv
319.707 163.486 318.18 160.521 315.719 161.284 cv
315.719 161.284 316.349 156.945 319.113 156.468 cv
321.876 155.99 322.845 157.372 322.845 157.372 cv
cp
.270588 .196078 0 rgb
f
221.805 214.65 mo
215.955 216.261 212.679 218.952 212.679 218.952 cv
212.679 218.952 209.034 234.36 223.533 237.672 cv
238.041 240.984 246.96 230.598 246.744 220.923 cv
245.988 228.816 237.168 239.814 223.335 235.431 cv
210.735 231.435 214.326 219.393 214.326 219.393 cv
214.326 219.393 215.955 217.701 221.805 214.65 cv
f
229.481 236.43 mo
227.564 236.43 225.512 236.121 223.335 235.431 cv
215.263 232.871 213.836 227.009 213.853 223.126 cv
213.862 220.948 214.326 219.393 214.326 219.393 cv
214.326 219.393 212.184 228.879 221.004 231.957 cv
223.103 232.689 225.276 233.018 227.428 233.018 cv
236.574 233.018 245.36 227.08 246.744 220.923 cv
246.107 227.574 239.743 236.43 229.481 236.43 cv
level3{
gsave
clp
[154.842 0 0 154.842 185.738 183.01 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[154.842 0 0 154.842 185.738 183.01 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
229.481 236.43 mo
227.564 236.43 225.512 236.121 223.335 235.431 cv
215.263 232.871 213.836 227.009 213.853 223.126 cv
213.836 227.009 215.263 232.871 223.335 235.431 cv
225.512 236.121 227.564 236.43 229.481 236.43 cv
239.743 236.43 246.107 227.574 246.744 220.923 cv
246.744 220.923 li
246.107 227.574 239.743 236.429 229.481 236.43 cv
.231373 .156863 0 rgb
f
144.009 199.152 mo
141.948 200.394 142.533 203.121 146.52 206.091 cv
150.507 209.061 153.342 210.033 154.449 208.845 cv
155.547 207.657 152.613 204.246 151.173 202.806 cv
149.733 201.357 146.133 197.883 144.009 199.152 cv
.941176 .886275 .854902 rgb
f
138.672 207.675 mo
137.196 209.709 139.473 212.526 145.557 213.03 cv
151.218 213.498 154.359 213.858 154.638 212.184 cv
154.899 210.564 149.805 208.503 147.591 207.864 cv
145.368 207.216 140.193 205.587 138.672 207.675 cv
f
139.293 215.334 mo
138.942 217.674 141.813 218.727 146.511 218.106 cv
151.452 217.449 153.486 216.27 153.261 214.668 cv
153.063 213.327 147.852 213.003 145.557 213.03 cv
143.613 213.048 139.653 212.922 139.293 215.334 cv
f
139.536 220.428 mo
138.987 222.291 141.894 223.362 146.448 222.165 cv
150.993 220.977 153.162 219.951 153.063 218.718 cv
152.937 217.233 148.149 217.755 146.268 218.016 cv
144.387 218.286 140.103 218.502 139.536 220.428 cv
f
153.513 212.454 mo
153.513 214.227 155.439 218.601 160.83 218.79 cv
166.212 218.97 170.847 215.442 169.605 212.49 cv
168.75 210.447 165.222 211.401 161.559 211.401 cv
155.709 211.401 153.513 210.312 153.513 212.454 cv
.270588 .196078 0 rgb
f
154.215 212.661 mo
154.215 214.281 156.168 218.016 161.082 218.178 cv
166.005 218.34 169.569 214.866 168.804 213.003 cv
168.039 211.131 164.907 211.923 161.559 211.923 cv
156.222 211.923 154.215 210.708 154.215 212.661 cv
.941176 .886275 .854902 rgb
f
153.165 209.392 mo
151.704 209.392 149.426 208.289 146.547 206.145 cv
144.994 204.988 143.961 203.87 143.397 202.861 cv
143.97 203.856 144.996 204.956 146.52 206.091 cv
149.399 208.235 151.677 209.338 153.138 209.338 cv
153.7 209.339 154.141 209.175 154.449 208.845 cv
154.752 208.517 154.747 208.019 154.552 207.44 cv
154.557 207.432 li
154.764 208.035 154.791 208.557 154.476 208.899 cv
154.168 209.229 153.727 209.393 153.165 209.392 cv
.215686 .137255 0 rgb
f
153.138 209.338 mo
151.677 209.338 149.399 208.235 146.52 206.091 cv
144.996 204.956 143.97 203.856 143.397 202.861 cv
142.861 201.9 142.751 201.038 143.028 200.34 cv
143.325 201.6 143.766 202.86 145.899 204.453 cv
148.868 206.665 151.593 207.908 153.248 207.908 cv
153.815 207.908 154.256 207.762 154.539 207.459 cv
154.552 207.44 li
154.747 208.019 154.752 208.517 154.449 208.845 cv
154.141 209.175 153.7 209.339 153.138 209.338 cv
.752941 .627451 .603922 rgb
f
143.816 218.333 mo
141.551 218.291 140.012 217.701 139.489 216.64 cv
140.057 217.706 141.676 218.281 144.045 218.281 cv
144.088 218.281 144.133 218.28 144.176 218.28 cv
144.057 218.297 143.937 218.314 143.816 218.333 cv
148.566 217.77 mo
152.018 217.08 153.452 216.026 153.261 214.668 cv
153.201 214.264 152.686 213.952 151.932 213.714 cv
153.207 213.715 153.27 214.596 153.288 214.722 cv
153.472 216.025 152.145 217.05 148.953 217.745 cv
148.824 217.753 148.694 217.761 148.566 217.77 cv
.215686 .137255 0 rgb
f
144.045 218.281 mo
141.676 218.281 140.057 217.706 139.489 216.64 cv
139.31 216.277 139.249 215.859 139.32 215.388 cv
139.347 215.217 139.392 215.064 139.446 214.92 cv
139.837 216.199 141.536 216.897 144.141 216.897 cv
144.892 216.897 145.718 216.839 146.61 216.72 cv
150.336 216.225 152.91 215.397 151.929 213.714 cv
151.93 213.714 151.931 213.714 151.932 213.714 cv
152.686 213.952 153.201 214.264 153.261 214.668 cv
153.452 216.026 152.018 217.08 148.566 217.77 cv
147.674 217.834 146.838 217.937 146.268 218.016 cv
145.723 218.094 144.976 218.168 144.176 218.28 cv
144.133 218.28 144.088 218.281 144.045 218.281 cv
.752941 .627451 .603922 rgb
f
144.075 218.335 mo
143.988 218.335 143.902 218.334 143.816 218.333 cv
143.937 218.314 144.057 218.297 144.176 218.28 cv
144.976 218.168 145.723 218.094 146.268 218.016 cv
146.838 217.937 147.674 217.834 148.566 217.77 cv
148.694 217.761 148.824 217.753 148.953 217.745 cv
148.242 217.9 147.439 218.039 146.538 218.16 cv
145.649 218.278 144.825 218.335 144.075 218.335 cv
f
142.961 222.724 mo
141.195 222.724 140 222.239 139.624 221.47 cv
140.027 222.208 141.205 222.67 142.93 222.67 cv
143.933 222.67 145.12 222.514 146.448 222.165 cv
150.993 220.977 153.162 219.951 153.063 218.718 cv
153.03 218.326 152.672 218.074 152.128 217.92 cv
152.128 217.919 152.127 217.918 152.127 217.917 cv
153.09 217.917 153.072 218.556 153.09 218.772 cv
153.189 220.005 151.02 221.022 146.475 222.219 cv
145.15 222.568 143.963 222.724 142.961 222.724 cv
.215686 .137255 0 rgb
f
142.93 222.67 mo
141.205 222.67 140.027 222.208 139.624 221.47 cv
139.481 221.178 139.456 220.845 139.563 220.482 cv
139.608 220.347 139.662 220.221 139.743 220.104 cv
140.157 220.83 141.326 221.285 143.03 221.285 cv
144.03 221.285 145.214 221.128 146.538 220.779 cv
149.9 219.898 152.535 218.793 152.128 217.92 cv
152.672 218.074 153.03 218.326 153.063 218.718 cv
153.162 219.951 150.993 220.977 146.448 222.165 cv
145.12 222.514 143.933 222.67 142.93 222.67 cv
.752941 .627451 .603922 rgb
f
161.45 218.237 mo
161.34 218.237 161.229 218.236 161.118 218.232 cv
157.796 218.118 155.827 216.383 154.9 214.769 cv
155.841 216.37 157.802 218.07 161.082 218.178 cv
161.193 218.182 161.304 218.183 161.414 218.183 cv
166.164 218.183 169.552 214.824 168.804 213.003 cv
168.831 213.048 li
169.579 214.878 166.191 218.237 161.45 218.237 cv
.215686 .137255 0 rgb
f
151.544 213.472 mo
151.345 213.472 151.137 213.468 150.92 213.462 cv
150.811 213.44 150.7 213.42 150.587 213.4 cv
150.924 213.413 151.241 213.421 151.537 213.421 cv
152.403 213.421 153.092 213.358 153.601 213.2 cv
153.604 213.218 153.608 213.235 153.612 213.253 cv
153.101 213.409 152.41 213.472 151.544 213.472 cv
145.055 213.033 mo
141.535 212.649 139.39 211.46 138.607 210.144 cv
139.455 211.505 141.768 212.716 145.557 213.03 cv
145.557 213.03 li
145.557 213.03 li
145.402 213.031 145.233 213.032 145.055 213.033 cv
154.044 210.995 mo
153.815 210.776 153.531 210.557 153.209 210.341 cv
153.317 210.231 153.417 210.127 153.513 210.033 cv
153.621 210.178 153.865 210.623 154.044 210.995 cv
f
151.537 213.421 mo
151.241 213.421 150.924 213.413 150.587 213.4 cv
149.01 213.124 147.085 213.028 145.824 213.028 cv
145.732 213.028 145.642 213.029 145.557 213.03 cv
145.557 213.03 li
141.768 212.716 139.455 211.505 138.607 210.144 cv
138.221 209.496 138.165 208.817 138.438 208.188 cv
138.951 209.772 140.265 211.248 144.54 211.914 cv
145.879 212.124 147.001 212.213 147.95 212.213 cv
151.282 212.212 152.452 211.117 153.209 210.341 cv
153.531 210.557 153.815 210.776 154.044 210.995 cv
154.092 211.095 154.136 211.19 154.17 211.272 cv
153.718 211.447 153.513 211.799 153.513 212.454 cv
153.513 212.668 153.541 212.921 153.601 213.2 cv
153.092 213.358 152.403 213.421 151.537 213.421 cv
.752941 .627451 .603922 rgb
f
150.92 213.462 mo
149.517 213.422 147.733 213.262 145.584 213.084 cv
145.404 213.069 145.228 213.052 145.055 213.033 cv
145.233 213.032 145.402 213.031 145.557 213.03 cv
145.557 213.03 li
145.642 213.029 145.732 213.028 145.824 213.028 cv
147.085 213.028 149.01 213.124 150.587 213.4 cv
150.7 213.42 150.811 213.44 150.92 213.462 cv
f
153.612 213.253 mo
153.608 213.235 153.604 213.218 153.601 213.2 cv
153.541 212.921 153.513 212.668 153.513 212.454 cv
153.513 211.799 153.718 211.447 154.17 211.272 cv
154.242 211.441 154.277 211.557 154.241 211.557 cv
154.235 211.557 154.226 211.553 154.215 211.545 cv
154.16 211.506 154.119 211.49 154.089 211.49 cv
153.876 211.49 154.247 212.365 154.215 212.436 cv
154.218 212.443 154.221 212.45 154.224 212.457 cv
154.218 212.521 154.215 212.589 154.215 212.661 cv
154.215 212.751 154.221 212.849 154.234 212.951 cv
154.07 213.077 153.863 213.176 153.612 213.253 cv
.215686 .137255 0 rgb
f
161.414 218.183 mo
161.304 218.183 161.193 218.182 161.082 218.178 cv
157.802 218.07 155.841 216.37 154.9 214.769 cv
154.511 214.092 154.305 213.436 154.26 212.931 cv
154.251 212.938 154.243 212.945 154.234 212.951 cv
154.221 212.849 154.215 212.751 154.215 212.661 cv
154.215 212.589 154.218 212.521 154.224 212.457 cv
154.921 214.245 157.686 216.487 161.559 216.621 cv
161.679 216.625 161.798 216.627 161.915 216.627 cv
165.581 216.627 168.072 214.756 168.804 213.003 cv
168.804 213.003 li
169.552 214.824 166.164 218.183 161.414 218.183 cv
.752941 .627451 .603922 rgb
f
151.562 202.26 mo
151.562 202.26 151.435 196.406 150.056 191.825 cv
150.056 191.825 150.205 196.778 149.229 200.351 cv
151.562 202.26 li
cp
.270588 .196078 0 rgb
f
157.84 211.125 mo
157.84 211.125 161.148 204.45 167.052 197.775 cv
167.052 197.775 162.94 202.928 160.172 211.125 cv
157.84 211.125 li
cp
f
161.912 211.125 mo
161.912 211.125 165.908 207.996 167.362 206.311 cv
164.822 209.254 163.402 211.125 163.402 211.125 cv
161.912 211.125 li
cp
f
159.157 218.578 mo
159.157 218.578 158.518 222.472 156.482 226.608 cv
156.482 226.608 159.536 222.812 160.3 218.792 cv
159.157 218.578 li
cp
f
156.156 217.178 mo
156.578 217.955 155.576 222.154 155.576 222.154 cv
155.576 222.154 157.14 218.581 157.58 218.046 cv
157.58 218.046 156.667 217.619 156.156 217.178 cv
cp
f
144.541 223.431 mo
143.502 225.981 141.755 227.832 141.119 228.532 cv
141.119 228.532 142.408 225.789 142.654 223.431 cv
144.541 223.431 li
cp
f
166.059 186.318 mo
166.059 186.318 184.77 170.298 187.038 170.262 cv
191.502 170.19 190.521 174.375 212.031 184.266 cv
213.75 185.697 212.355 187.038 211.608 187.2 cv
194.742 181.098 191.664 177.156 187.875 176.454 cv
185.688 176.049 170.991 186.534 169.227 188.28 cv
166.059 186.318 li
f
167.841 186.219 mo
167.841 186.219 179.64 175.482 184.437 172.665 cv
184.608 172.566 185.562 174.438 186.228 174.753 cv
186.228 174.753 185.13 171.765 186.12 171.522 cv
187.146 171.27 187.371 174.402 187.497 174.402 cv
187.497 174.402 188.037 170.955 188.892 171.297 cv
190.377 171.414 188.775 174.69 188.775 174.69 cv
189.45 174.213 190.152 172.224 190.818 172.611 cv
193.608 173.925 196.56 178.029 212.094 184.959 cv
212.841 185.841 212.139 186.345 211.473 186.489 cv
196.398 180.108 191.178 176.868 188.595 175.581 cv
188.172 175.365 188.334 173.628 188.334 173.628 cv
188.334 173.628 188.172 175.365 187.488 175.365 cv
187.047 175.365 186.858 174.564 186.597 173.97 cv
186.525 173.781 186.768 175.464 186.534 175.572 cv
186.21 175.716 185.841 175.896 185.445 176.112 cv
180.54 178.722 170.505 186.03 169.227 187.281 cv
167.841 186.219 li
1 1 1 rgb
f
169.227 187.281 mo
169.227 187.281 li
170.505 186.03 180.54 178.722 185.445 176.112 cv
185.841 175.896 186.21 175.716 186.534 175.572 cv
186.756 175.47 186.549 173.955 186.588 173.955 cv
186.59 173.955 186.593 173.96 186.597 173.97 cv
186.858 174.564 187.047 175.365 187.488 175.365 cv
188.161 175.365 188.329 173.682 188.334 173.629 cv
188.329 173.682 188.179 175.368 188.595 175.581 cv
191.178 176.868 196.398 180.108 211.473 186.489 cv
211.473 186.489 li
211.473 186.489 li
196.398 180.108 191.178 176.868 188.595 175.581 cv
188.172 175.365 188.172 175.365 187.488 175.365 cv
187.047 175.365 186.768 175.464 186.534 175.572 cv
186.21 175.716 185.841 175.896 185.445 176.112 cv
180.54 178.722 170.505 186.03 169.227 187.281 cv
211.552 186.47 mo
211.562 186.467 211.573 186.464 211.584 186.461 cv
211.573 186.464 211.563 186.467 211.552 186.47 cv
211.637 186.446 mo
211.656 186.44 211.675 186.434 211.694 186.427 cv
211.675 186.434 211.656 186.44 211.637 186.446 cv
211.73 186.415 mo
211.894 186.355 212.048 186.272 212.169 186.165 cv
212.169 186.169 212.168 186.172 212.166 186.174 cv
212.047 186.275 211.893 186.356 211.73 186.415 cv
186.228 174.753 mo
186.06 174.674 185.875 174.496 185.688 174.276 cv
185.801 174.221 185.913 174.169 186.023 174.12 cv
186.132 174.493 186.228 174.753 186.228 174.753 cv
188.775 174.69 mo
188.775 174.69 188.952 174.327 189.134 173.839 cv
189.212 173.879 189.295 173.921 189.382 173.966 cv
189.178 174.273 188.976 174.548 188.775 174.69 cv
187.497 174.402 mo
187.456 174.402 187.406 174.078 187.321 173.647 cv
187.437 173.617 187.549 173.593 187.657 173.574 cv
187.553 174.046 187.497 174.402 187.497 174.402 cv
.211765 .152941 0 rgb
f
169.227 187.281 mo
169.227 187.281 li
168.912 186.795 li
168.912 186.795 179.82 177.08 185.688 174.276 cv
185.875 174.496 186.06 174.674 186.228 174.753 cv
186.228 174.753 186.132 174.493 186.023 174.12 cv
186.496 173.909 186.932 173.748 187.321 173.647 cv
187.406 174.078 187.456 174.402 187.497 174.402 cv
187.497 174.402 187.553 174.046 187.657 173.574 cv
187.833 173.542 187.998 173.526 188.15 173.526 cv
188.393 173.526 188.603 173.567 188.775 173.655 cv
188.878 173.708 188.998 173.769 189.134 173.839 cv
188.952 174.327 188.775 174.69 188.775 174.69 cv
188.976 174.548 189.178 174.273 189.382 173.966 cv
193.958 176.32 212.127 185.759 212.169 186.165 cv
212.048 186.272 211.894 186.355 211.73 186.415 cv
211.718 186.419 211.706 186.423 211.694 186.427 cv
211.675 186.434 211.656 186.44 211.637 186.446 cv
211.619 186.451 211.602 186.457 211.584 186.461 cv
211.573 186.464 211.562 186.467 211.552 186.47 cv
211.525 186.477 211.499 186.483 211.473 186.489 cv
211.473 186.489 li
196.398 180.108 191.178 176.868 188.595 175.581 cv
188.179 175.368 188.329 173.682 188.334 173.629 cv
188.329 173.682 188.161 175.365 187.488 175.365 cv
187.047 175.365 186.858 174.564 186.597 173.97 cv
186.593 173.96 186.59 173.955 186.588 173.955 cv
186.549 173.955 186.756 175.47 186.534 175.572 cv
186.21 175.716 185.841 175.896 185.445 176.112 cv
180.54 178.722 170.505 186.03 169.227 187.281 cv
.780392 .780392 .780392 rgb
f
289.419 285.049 mo
267.245 274.884 254.086 275.219 254.086 275.219 cv
254.086 275.219 263.971 272.801 290.354 284.254 cv
316.234 295.489 358.816 293.671 364.669 273.862 cv
366.612 274.686 li
366.603 274.77 365.831 289.863 340.379 293.681 cv
326.602 295.748 308.423 293.762 289.419 285.049 cv
cp
.270588 .196078 0 rgb
f
137.043 260.118 mo
134.982 262.728 136.503 268.191 141.12 270.567 cv
146.457 273.303 148.446 268.767 146.151 265.851 cv
141.3 259.695 137.043 260.118 137.043 260.118 cv
.509804 .317647 .317647 rgb
f
339.163 275.325 mo
337.591 277.968 343.864 278.697 347.422 277.498 cv
352.666 275.733 354.516 269.387 352.48 267.859 cv
350.444 266.333 340.778 272.61 339.163 275.325 cv
cp
f
154.712 406.46 mo
159.338 403.236 173.025 400.86 178.115 412.906 cv
178.115 412.906 167.088 404.072 154.712 406.46 cv
cp
.270588 .196078 0 rgb
f
452.133 265.806 mo
451.422 267.453 454.455 270.315 455.013 270.666 cv
457.74 272.376 464.841 268.974 467.154 266.652 cv
469.467 264.321 470.079 261.504 471.771 260.667 cv
473.463 259.83 480.042 257.472 481.86 252.099 cv
482.868 249.102 480.321 248.715 478.521 250.065 cv
477.072 251.145 474.435 252.378 472.005 252.693 cv
470.952 252.828 467.127 251.532 462.897 250.245 cv
457.146 248.49 450.639 246.744 449.262 248.562 cv
447.363 251.073 454.455 260.424 452.133 265.806 cv
f
450.639 265.482 mo
451.242 266.769 453.897 268.965 454.428 269.28 cv
457.029 270.837 464.184 267.75 466.389 265.635 cv
468.594 263.511 469.359 260.46 470.97 259.695 cv
472.581 258.93 480.042 254.943 481.068 252.225 cv
482.085 249.516 480.051 249.516 478.863 250.533 cv
477.675 251.55 474.3 253.611 471.645 254.277 cv
470.619 254.529 466.722 253.062 462.483 251.604 cv
457.146 249.75 451.278 247.905 450.009 249.516 cv
448.2 251.793 448.371 260.613 450.639 265.482 cv
.858824 .690196 .619608 rgb
f
460.839 268.736 mo
460.839 268.735 460.839 268.734 460.84 268.733 cv
463.129 267.891 465.33 266.651 466.389 265.635 cv
468.594 263.511 469.359 260.46 470.97 259.695 cv
472.581 258.93 480.042 254.943 481.068 252.225 cv
481.068 252.225 li
481.068 252.225 li
480.042 254.943 472.581 258.93 470.97 259.695 cv
469.359 260.46 468.594 263.511 466.389 265.635 cv
465.33 266.655 463.129 267.896 460.839 268.736 cv
472.947 253.866 mo
473.314 253.488 473.661 253.089 473.972 252.682 cv
474.043 252.678 474.109 252.676 474.172 252.676 cv
474.631 252.676 474.875 252.788 474.822 253.044 cv
474.822 253.046 474.821 253.047 474.821 253.049 cv
474.205 253.353 473.569 253.634 472.947 253.866 cv
.207843 .141176 0 rgb
f
460.84 268.733 mo
461.738 265.515 462.755 261.775 463.811 257.707 cv
464.042 257.743 464.29 257.76 464.55 257.76 cv
466.286 257.76 468.586 257.002 470.457 255.879 cv
471.291 255.38 472.166 254.67 472.947 253.866 cv
473.569 253.634 474.205 253.353 474.821 253.049 cv
474.448 254.856 471.717 256.689 471.717 256.689 cv
472.04 256.812 472.386 256.868 472.745 256.868 cv
475.505 256.868 479.08 253.56 479.709 252.063 cv
480.304 250.637 480.08 250.288 479.411 250.288 cv
479.341 250.288 479.266 250.292 479.187 250.299 cv
479.57 250.052 479.998 249.908 480.37 249.908 cv
481.155 249.908 481.696 250.548 481.068 252.225 cv
481.068 252.225 li
480.042 254.943 472.581 258.93 470.97 259.695 cv
469.359 260.46 468.594 263.511 466.389 265.635 cv
465.33 266.651 463.129 267.891 460.84 268.733 cv
.658823 .494118 .443137 rgb
f
442.008 227.844 mo
441.729 227.844 456.84 277.389 457.479 280.305 cv
457.479 280.305 467.703 247.095 471.717 221.067 cv
471.717 221.067 471.024 217.242 458.658 220.617 cv
446.301 224.001 442.008 227.844 442.008 227.844 cv
.270588 .196078 0 rgb
f
444.33 228.816 mo
444.078 228.816 456.885 271.422 457.479 274.14 cv
457.479 274.14 465.624 247.221 469.359 223.047 cv
469.359 223.047 470.016 219.483 458.532 222.624 cv
447.048 225.756 444.33 228.816 444.33 228.816 cv
.611765 .486275 .368627 rgb
f
468.577 208.608 mo
467.81 208.266 467.015 208.074 466.298 208.074 cv
466.298 208.074 li
467.015 208.074 467.81 208.267 468.577 208.608 cv
470.034 208.179 mo
470.034 208.179 470.032 208.177 470.028 208.174 cv
470.032 208.177 470.034 208.179 470.034 208.179 cv
470.049 208.012 470.055 207.846 470.054 207.681 cv
470.055 207.846 470.049 208.012 470.034 208.179 cv
465.876 208.098 mo
465.938 208.08 465.999 208.063 466.059 208.046 cv
465.999 208.063 465.938 208.08 465.876 208.098 cv
466.013 208.082 466.153 208.074 466.297 208.074 cv
466.153 208.074 466.012 208.082 465.876 208.098 cv
466.513 207.931 mo
466.977 207.823 467.387 207.761 467.747 207.731 cv
467.387 207.761 466.977 207.823 466.513 207.931 cv
468.424 207.713 mo
468.366 207.711 468.307 207.71 468.246 207.71 cv
468.246 207.71 li
468.307 207.71 468.366 207.711 468.424 207.713 cv
453.177 199.764 mo
454.115 199.188 455.389 198.914 456.818 198.897 cv
455.389 198.914 454.115 199.189 453.177 199.764 cv
457.088 198.897 mo
457.044 198.896 457 198.896 456.956 198.896 cv
456.956 198.896 li
457 198.896 457.044 198.896 457.088 198.897 cv
.211765 .141176 0 rgb
f
469.677 219.533 mo
469.07 219.362 468.287 219.243 467.272 219.227 cv
468.195 217.927 466.712 215.405 460.375 215.405 cv
460.287 215.405 460.197 215.405 460.107 215.406 cv
468.594 213.885 468.252 208.476 463.338 208.098 cv
463.338 208.098 464.951 199.568 455.765 199.568 cv
454.983 199.568 454.123 199.63 453.177 199.764 cv
453.177 199.764 li
454.115 199.189 455.389 198.914 456.818 198.897 cv
456.864 198.897 456.91 198.896 456.956 198.896 cv
457 198.896 457.044 198.896 457.088 198.897 cv
462.528 198.955 470.011 202.624 470.054 207.681 cv
470.055 207.846 470.049 208.012 470.034 208.179 cv
470.034 208.179 470.032 208.177 470.028 208.174 cv
469.974 208.125 469.523 207.751 468.424 207.713 cv
468.366 207.711 468.307 207.71 468.246 207.71 cv
468.246 207.71 li
468.246 207.71 li
468.091 207.71 467.925 207.717 467.747 207.731 cv
467.387 207.761 466.977 207.823 466.513 207.931 cv
466.367 207.965 466.216 208.003 466.059 208.046 cv
465.999 208.063 465.938 208.08 465.876 208.098 cv
466.012 208.082 466.153 208.074 466.297 208.074 cv
466.297 208.074 466.298 208.074 466.298 208.074 cv
467.015 208.074 467.81 208.266 468.577 208.608 cv
471.587 209.949 474.17 213.589 469.953 216.945 cv
469.953 216.945 li
469.953 216.945 li
469.953 216.945 li
469.953 216.945 469.991 217.135 469.993 217.484 cv
469.996 217.929 469.941 218.633 469.677 219.533 cv
.780392 .690196 .501961 rgb
f
461.585 221.881 mo
461.619 221.521 461.637 221.328 461.637 221.328 cv
466.812 219.654 li
467 219.536 467.155 219.391 467.272 219.227 cv
468.287 219.243 469.07 219.362 469.677 219.533 cv
469.677 219.533 li
469.595 219.81 469.494 220.106 469.368 220.419 cv
469.224 220.751 468.552 221.101 467.512 221.452 cv
467.11 221.375 466.622 221.33 466.029 221.33 cv
464.939 221.33 463.495 221.483 461.585 221.881 cv
.211765 .141176 0 rgb
f
457.479 274.14 mo
457.479 274.14 li
457.245 273.069 457.841 264.638 458.65 254.817 cv
458.929 254.904 459.21 254.94 459.489 254.94 cv
460.47 254.94 461.416 254.498 462.132 254.322 cv
462.132 254.322 461.367 255.549 462.23 256.83 cv
459.631 267.027 457.479 274.14 457.479 274.14 cv
459.815 241.234 mo
460.628 232.065 461.383 224.016 461.585 221.881 cv
463.495 221.483 464.939 221.33 466.029 221.33 cv
466.622 221.33 467.11 221.375 467.512 221.452 cv
467.51 221.452 467.507 221.453 467.505 221.454 cv
469.575 221.841 469.359 223.047 469.359 223.047 cv
469.359 223.047 li
468.655 227.602 467.795 232.253 466.862 236.805 cv
466.633 236.774 466.406 236.759 466.18 236.759 cv
464.584 236.759 463.047 237.532 461.511 239.373 cv
461.055 239.922 460.459 240.557 459.815 241.234 cv
.478431 .352941 .266667 rgb
f
467.064 236.835 mo
465.147 236.511 463.329 237.195 461.511 239.373 cv
459.693 241.56 455.679 245.106 455.121 247.266 cv
454.662 249.03 455.697 250.065 457.524 250.065 cv
457.524 250.065 455.958 252.909 457.776 254.349 cv
459.288 255.546 460.998 254.601 462.132 254.322 cv
462.132 254.322 461.34 255.591 462.276 256.896 cv
463.437 258.525 467.487 257.661 470.457 255.879 cv
473.256 254.205 476.523 250.146 475.128 248.157 cv
473.922 246.447 473.103 247.014 473.103 247.014 cv
474.435 245.016 473.517 241.965 470.097 241.578 cv
470.097 241.578 470.97 237.474 467.064 236.835 cv
.270588 .196078 0 rgb
f
467.064 238.095 mo
465.273 237.78 463.59 238.311 461.889 240.354 cv
460.197 242.388 456.291 245.268 455.769 247.284 cv
455.346 248.931 456.849 251.595 465.84 245.016 cv
465.84 245.016 463.545 247.338 458.757 249.984 cv
457.551 250.641 457.227 252.612 458.442 253.566 cv
459.855 254.691 463.419 253.08 470.205 248.733 cv
470.205 248.733 467.532 251.127 463.464 253.773 cv
462.627 254.313 462.528 255.582 462.996 256.212 cv
464.094 257.724 467.325 256.806 470.25 254.862 cv
472.779 253.17 475.272 250.434 474.165 248.823 cv
473.067 247.212 471.78 247.572 471.78 247.572 cv
473.346 246.42 473.175 242.262 469.062 242.856 cv
469.062 242.856 469.827 238.581 467.064 238.095 cv
.858824 .690196 .619608 rgb
f
450.207 243.738 mo
447.039 246.627 444.114 248.94 443.88 251.082 cv
443.664 253.053 445.77 254.277 446.58 258.93 cv
447.651 265.14 448.578 265.968 452.853 267.714 cv
452.853 267.714 453.708 259.461 450.693 252.189 cv
450.693 252.189 461.529 246.825 455.823 239.508 cv
455.823 239.508 454.419 239.904 450.207 243.738 cv
.270588 .196078 0 rgb
f
450.189 244.674 mo
447.318 247.293 443.961 250.389 444.771 251.991 cv
445.536 253.494 446.562 254.637 447.174 258.255 cv
448.02 263.295 449.424 267.075 453.933 268.92 cv
453.933 268.92 452.16 261.729 451.206 258.165 cv
450.324 254.907 448.623 252.378 449.163 252.189 cv
449.163 252.189 460.449 247.482 455.274 240.84 cv
455.274 240.84 454.005 241.2 450.189 244.674 cv
.8 .611765 .552941 rgb
f
463.688 283.159 mo
462.536 287.959 458.695 292.471 460.135 295.446 cv
461.575 298.422 465.329 298.762 467.046 295.063 cv
468.295 292.375 464.743 287.767 463.688 283.159 cv
cp
.270588 .196078 0 rgb
f
463.644 286.284 mo
462.894 289.409 460.393 292.347 461.331 294.284 cv
462.268 296.222 464.712 296.442 465.832 294.034 cv
466.645 292.284 464.332 289.284 463.644 286.284 cv
cp
1 .94902 .690196 rgb
f
208.147 271.403 mo
199.156 271.016 160.978 276.831 165.56 282.6 cv
170.141 288.368 186.853 280.605 192.75 281.455 cv
195.107 281.794 184.508 284.148 188.423 286.863 cv
190.404 288.237 204.407 287.235 200.682 283.762 cv
200.682 283.762 202.652 282.863 207.044 283.279 cv
211.795 283.729 219.091 280.159 210.862 278.527 cv
205.11 277.387 212.644 277.679 216.207 277 cv
219.77 276.322 223.927 272.084 208.147 271.403 cv
cp
1 .588235 .411765 rgb
f
223.418 278.527 mo
221.756 279.14 222.061 280.733 225.284 281.582 cv
228.508 282.43 234.553 282.166 231.053 279.771 cv
229.417 278.652 224.627 278.082 223.418 278.527 cv
cp
f
296.377 445.483 mo
354.575 446.841 li
354.575 446.841 301.298 446.332 292.984 446.841 cv
296.377 445.483 li
cp
.270588 .196078 0 rgb
f
381.007 446.841 mo
381.007 446.841 367.3 447.351 365.094 446.841 cv
365.094 446.841 363.397 457.868 355.422 466.184 cv
355.422 466.184 360.682 463.639 366.112 449.727 cv
379.007 448.537 li
381.007 446.841 li
cp
f
343.887 446.591 mo
343.887 446.591 341.737 460.813 349.994 464.573 cv
349.994 464.573 340.576 462.537 341.786 446.543 cv
343.887 446.591 li
cp
f
343.291 509.705 mo
343.207 504.276 307.744 502.238 299.6 501.179 cv
299.6 501.179 316.94 502.111 343.409 505.929 cv
344.902 507.669 343.291 509.705 343.291 509.705 cv
cp
f
273.599 499.636 mo
275.401 498.611 278.415 499.443 283.292 499.636 cv
283.292 499.636 273.768 498.592 275.53 495.395 cv
273.811 496.174 273.354 499.775 273.599 499.636 cv
cp
f
309.537 546.374 mo
309.537 546.374 309.537 547.736 309.993 549.096 cv
309.993 549.096 310.491 547.301 310.65 546.47 cv
309.537 546.374 li
cp
f
139.266 278.379 mo
126.713 266.399 134.605 256.415 135.435 255.436 cv
133.785 257.471 132.592 261.875 133.785 267.453 cv
134.811 272.214 138.222 275.13 140.337 276.525 cv
140.337 276.525 147.867 272.013 160.966 269.107 cv
161.903 268.932 162.45 268.794 162.45 268.794 cv
139.266 278.379 li
.231373 .156863 0 rgb
f
140.337 276.525 mo
138.222 275.13 134.811 272.214 133.785 267.453 cv
132.592 261.875 133.785 257.471 135.435 255.436 cv
135.479 255.384 135.504 255.357 135.504 255.357 cv
135.637 257.43 136.033 259.218 136.637 260.757 cv
135.23 263.537 136.852 268.371 141.12 270.567 cv
142.277 271.16 143.277 271.412 144.11 271.412 cv
145.78 271.412 146.778 270.402 147.029 269.113 cv
149.204 269.627 151.447 269.809 153.526 269.809 cv
156.629 269.809 159.367 269.405 160.966 269.107 cv
147.867 272.013 140.337 276.525 140.337 276.525 cv
level3{
gsave
clp
[356.652 0 0 356.652 76.332 331.993 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[356.652 0 0 356.652 76.332 331.993 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
144.11 271.412 mo
143.277 271.412 142.277 271.16 141.12 270.567 cv
136.852 268.371 135.23 263.537 136.637 260.757 cv
138.579 265.707 142.666 268.081 147.029 269.113 cv
146.778 270.402 145.78 271.412 144.11 271.412 cv
.439216 .254902 .254902 rgb
f
457.366 249.399 mo
456.293 249.399 455.84 248.837 455.726 248.204 cv
455.735 248.193 455.743 248.184 455.751 248.174 cv
455.889 248.748 456.359 249.237 457.379 249.237 cv
458.846 249.237 461.451 248.228 465.84 245.016 cv
465.84 245.016 465.732 245.126 465.513 245.324 cv
461.285 248.418 458.784 249.399 457.366 249.399 cv
469.086 242.697 mo
469.109 242.527 469.142 242.232 469.154 241.871 cv
469.143 242.23 469.112 242.524 469.089 242.694 cv
469.088 242.695 469.087 242.696 469.086 242.697 cv
.207843 .141176 0 rgb
f
457.379 249.237 mo
456.359 249.237 455.889 248.748 455.751 248.174 cv
455.914 247.97 456.07 247.76 456.218 247.544 cv
456.449 247.705 456.792 247.802 457.281 247.802 cv
457.511 247.802 457.775 247.78 458.073 247.734 cv
461.295 247.221 467.739 242.217 468.252 240.84 cv
468.45 240.318 468.603 239.724 468.63 239.193 cv
469.104 240.006 469.178 241.093 469.154 241.871 cv
469.142 242.232 469.109 242.527 469.086 242.697 cv
467.87 243.794 465.516 245.322 465.516 245.322 cv
465.515 245.323 465.514 245.323 465.513 245.324 cv
465.732 245.126 465.84 245.016 465.84 245.016 cv
461.451 248.228 458.846 249.237 457.379 249.237 cv
.658823 .494118 .443137 rgb
f
455.726 248.204 mo
455.684 247.966 455.689 247.719 455.727 247.488 cv
455.799 247.402 455.869 247.316 455.936 247.229 cv
456 247.35 456.092 247.456 456.218 247.544 cv
456.07 247.76 455.914 247.97 455.751 248.174 cv
455.743 248.184 455.735 248.193 455.726 248.204 cv
.207843 .141176 0 rgb
f
458.375 253.511 mo
458.372 253.508 458.37 253.506 458.367 253.504 cv
458.37 253.506 458.372 253.508 458.375 253.511 cv
458.307 253.45 mo
458.306 253.449 458.305 253.448 458.305 253.447 cv
458.305 253.448 458.306 253.449 458.307 253.45 cv
471.78 247.572 mo
471.801 247.557 471.821 247.541 471.841 247.524 cv
471.821 247.541 471.801 247.557 471.78 247.572 cv
471.78 247.572 li
471.896 247.478 mo
471.897 247.477 471.899 247.476 471.9 247.474 cv
471.899 247.476 471.897 247.477 471.896 247.478 cv
f
459.596 253.913 mo
459.114 253.913 458.732 253.797 458.442 253.566 cv
458.442 253.566 li
458.419 253.548 458.397 253.529 458.375 253.511 cv
458.372 253.508 458.37 253.506 458.367 253.504 cv
458.346 253.486 458.326 253.468 458.307 253.45 cv
458.306 253.449 458.305 253.448 458.305 253.447 cv
457.66 252.838 457.543 251.912 457.821 251.136 cv
457.907 251.614 458.315 251.968 459.303 251.968 cv
459.56 251.968 459.857 251.944 460.197 251.892 cv
463.419 251.379 469.719 246.924 470.457 245.655 cv
471.141 244.485 471.312 243.531 470.727 242.91 cv
473.098 243.503 473.097 246.409 471.9 247.474 cv
471.899 247.476 471.897 247.477 471.896 247.478 cv
471.878 247.494 471.86 247.509 471.841 247.524 cv
471.821 247.541 471.801 247.557 471.78 247.572 cv
471.78 247.572 li
471.78 247.572 li
470.205 248.733 li
470.205 248.733 li
470.205 248.733 li
464.814 252.186 461.457 253.913 459.596 253.913 cv
.658823 .494118 .443137 rgb
f
464.798 256.967 mo
464.01 256.967 463.375 256.735 462.996 256.212 cv
462.877 256.057 462.797 255.859 462.755 255.643 cv
462.798 255.858 462.879 256.055 462.996 256.212 cv
463.375 256.735 464.01 256.967 464.798 256.967 cv
466.291 256.967 468.336 256.134 470.25 254.862 cv
472.344 253.461 474.414 251.344 474.435 249.742 cv
474.414 251.344 472.344 253.461 470.25 254.862 cv
468.336 256.134 466.291 256.967 464.798 256.967 cv
462.754 255.639 mo
462.749 255.616 462.745 255.593 462.741 255.57 cv
462.745 255.593 462.749 255.616 462.754 255.639 cv
462.739 255.553 mo
462.735 255.531 462.732 255.508 462.73 255.486 cv
462.732 255.508 462.735 255.531 462.739 255.553 cv
462.727 255.459 mo
462.725 255.439 462.723 255.419 462.722 255.399 cv
462.723 255.419 462.725 255.439 462.727 255.459 cv
462.721 255.387 mo
462.719 255.359 462.718 255.331 462.717 255.303 cv
462.717 255.303 462.717 255.304 462.718 255.304 cv
462.718 255.332 462.719 255.36 462.721 255.387 cv
.207843 .141176 0 rgb
f
464.798 256.967 mo
464.01 256.967 463.375 256.735 462.996 256.212 cv
462.879 256.055 462.798 255.858 462.755 255.643 cv
462.754 255.642 462.754 255.64 462.754 255.639 cv
462.749 255.616 462.745 255.593 462.741 255.57 cv
462.74 255.564 462.74 255.559 462.739 255.553 cv
462.735 255.531 462.732 255.508 462.73 255.486 cv
462.729 255.477 462.728 255.468 462.727 255.459 cv
462.725 255.439 462.723 255.419 462.722 255.399 cv
462.722 255.395 462.721 255.391 462.721 255.387 cv
462.719 255.36 462.718 255.332 462.718 255.304 cv
462.878 255.51 463.186 255.642 463.715 255.642 cv
463.9 255.642 464.112 255.626 464.355 255.591 cv
467.262 255.168 472.284 251.01 472.752 249.885 cv
473.085 249.075 473.409 248.202 473.004 247.77 cv
473.373 247.95 473.778 248.265 474.165 248.823 cv
474.355 249.1 474.439 249.41 474.435 249.742 cv
474.414 251.344 472.344 253.461 470.25 254.862 cv
468.336 256.134 466.291 256.967 464.798 256.967 cv
.658823 .494118 .443137 rgb
f
453.177 265.869 mo
453.177 265.869 453.176 265.866 453.173 265.861 cv
453.106 265.593 453.036 265.315 452.965 265.028 cv
452.965 264.983 452.965 264.937 452.965 264.89 cv
453.177 265.869 li
f
450.846 252.568 mo
450.796 252.442 450.745 252.315 450.693 252.189 cv
450.693 252.189 450.755 252.158 450.868 252.098 cv
450.853 252.225 450.846 252.384 450.846 252.568 cv
.207843 .141176 0 rgb
f
452.965 265.028 mo
452.395 262.756 451.694 259.987 451.206 258.165 cv
450.324 254.907 448.623 252.378 449.163 252.189 cv
449.163 252.189 460.449 247.482 455.274 240.84 cv
455.274 240.84 455.184 240.866 454.979 240.969 cv
455.526 240.651 li
455.526 240.651 457.434 242.748 456.858 245.448 cv
456.735 246.038 456.395 246.64 455.936 247.229 cv
455.903 247.167 455.878 247.101 455.859 247.032 cv
455.769 247.284 li
455.752 247.35 455.738 247.418 455.727 247.488 cv
454.033 249.503 451.098 251.318 450.909 251.892 cv
450.891 251.944 450.878 252.014 450.868 252.098 cv
450.755 252.158 450.693 252.189 450.693 252.189 cv
450.745 252.315 450.796 252.442 450.846 252.568 cv
450.847 254.059 451.287 257.148 451.287 257.148 cv
452.965 264.89 li
452.965 264.937 452.965 264.983 452.965 265.028 cv
f
453.173 265.861 mo
452.998 265.501 447.068 253.268 448.407 252.018 cv
449.757 250.74 457.281 245.943 454.365 241.326 cv
454.979 240.969 li
455.184 240.866 455.274 240.84 455.274 240.84 cv
460.449 247.482 449.163 252.189 449.163 252.189 cv
448.623 252.378 450.324 254.907 451.206 258.165 cv
451.694 259.987 452.395 262.756 452.965 265.028 cv
453.036 265.315 453.106 265.593 453.173 265.861 cv
.615686 .435294 .396078 rgb
f
455.727 247.488 mo
455.738 247.418 455.752 247.35 455.769 247.284 cv
455.859 247.032 li
455.878 247.101 455.903 247.167 455.936 247.229 cv
455.869 247.316 455.799 247.402 455.727 247.488 cv
.160784 .101961 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Diana) ()
%%Title: (Fat.eps)
%%CreationDate: 8/13/2010 2:59 PM
%AI9_DataStream
%Gb!j.Bj9=_gF,%Rqmu>?SBaS>N7O-p,XGb$OH>+uZ7j.H!@Pl6[cr8;r@l!7m]B)-=^L<@cC(7[;2jkr<Mc^B?V9mk>E.V'i4(^*
%D%-HN??9kaj4;(8eY9jip=l]R:O@#kj67n5cUjd4=SJO8Y!me;NtN8`[t[D>kM<sbG;MGINlTCQIlJ@Mf:%23#.58<;u!4gqq1<1
%LO[knrQ`edk`]n>#?e7fc%`"bcD7?&%KZM1lMPf6]jLhf0C\AF;?-3s]*nSLa4oeHrKt<U%d:f:G;=`k_Gt;>Dk8fPal!6i=S_ll
%HeKE77\*+h3;@e9S#4qt0=ocKkjTBB(lSR;$@GulF\b&br<^fIQFDITPIi[lidU:F"[^5Y9-Lb-E9,qQDJT=L=EX.`hJE$/^@uAk
%/`>s]m^DU'*]Hnj/I:<N:HH!a(I6%K9bMHUh`\a<G:$T>WL(Qr+A'FRi&Pp5EMifJ'2XNHX?(J/2uqS6h?>(8EL@c/`37.2>7Zs?
%an_Y-8$DgQHL5FUF5.cBg!e>ZYP17H?GfCXO6^6@anK^+qq]ZS6#Rsc9XbZ^d#6k&\$'3s:=ekVa_dj$?YQe&)4bpu^rsXp-.6G>
%(-DB)Q^?ksS\M`\lQWMb\qBt?4.>]>)nC*fU0=Js=DS]&gcE+GaK*:bTqqgP]G6=IkVs7dUb<<'q0%<b?]BB0]tq:O@s%3Ne2tsD
%(Ph0<[#THK]b::,l,)F-PO:]^ht7JJ0Ck5FVuC.$Y-EJ"H%%a:oFQ9h9\#&:0i"YJ_D#YG-Csgun#G"@3rPu-phN3jjhO+<a1k7*
%h^$%Qc)-6l5+[0E^\*$Qf(]!p/>MXg9dsnU'RipeRjj'9PfbaE-npaDJ$D]Ls/::-@'_,pB(ul9@^BY[Rl-\f[FrK:RS@U^Ab^,.
%.7N(!$l`^pGN)3cP^,`G:&Yp?lL0-C]&O*diO\M32T'\%eadpo./]!?E)HCseumE:ST.s1(I-lQn1P9jaPrn5;>?L/Nc,Jflb]\X
%:3d&r%$u]uYt^N-9N-cpc^8<L190gsGNIBH!dOQ(42*mQ?B[u?iIBJgf8+or-mg4CSA,`Si>ZTfCXeS\e8T&*,Q>YX\3T0Yr%!t$
%&H9X\\46D>`+4%"jRN`KR[P%+nsYb!l$/)EHYg^Ce%"Aeo)`Ur4>ji.O0-OD:%UYdK+$0kM@66J]Q3uif8+p])=onlOn$;ZnLq>e
%"[[FXj][faI=)LdFNr+"Bf+_pjI'SH.C>1Mg+rAIIZ/Wf1*_i,Y6guUa4&(@qYE<:&&@)o5FFVA.W[MsSe8n.AFtpc3L>3_"5UBW
%k&R>]Q-02L\s@o;'<-?(9j7+/C27);eA+(YFAhiQ-$m.Kb507C0R%YFL]678<2D,F4HI8"choF%piCoHJ'^=e)3gch?PN%nr653#
%Qp8Wr\U#h,dZhMhchsuoi6V4es$?B[Ma@0,s0^VZ3C!+"a8?T6O#4ei9OIe#5OfWCkQT3R9Og,XXQ@7.RE@&?=(\#j(DA4YO62u&
%qoX!=`SIlr?1a6P-*401+74p5M\Z=$C8>k!K#P:kMKkhN,$?E;fL;EFXkc1-Y("ofeU?:Sm+KbPE'YpqkB6:JU)%oCh4/laQ\+$d
%;mOMH5*ou8>%JJ'X2n=&9D@ES(9UgIl#?%&ArEN4k,hh#IL50"nb&&uS%"&R9>\*'BZ[<t(PBZeop1pgKWC\b'`lKu7oul,`T:Ff
%mSu*9,&E8[_f\nb%1'CmR)CoS"`jl;dV38MMac)tbG_*2/34TsM6O,uf\"RF$@9-'1@kWi=i/F1<=#gNY=;4Il>b@KS'm,V5"4-B
%i]3!N$=u)ed`(ejh<0oa-#TS8dUGip%Al^#W@jJKeWPd5ZG1IXmcCVf;VdFZL69W\X2[E4jqV0G7:A&50iq^m:TD_FFc4aIl'r[/
%)/:t^C8G0Eh!1^Af.Ek=2>MoE=/#C?H!fc*9p(^DcJ4q(DeV5H@]$0,&C$W]>>4dZ9%plQ>]35=?8p&bp=1kaHj6\sjW'+]rk,VN
%<ss#!kND=qiuhhXSWhUf]"]JmoA.8PY;BnGV#u8-/9C8(Zd#^Tf%@P":"bHR!kY7C0%8j!#crH?[Ek]?*./H:>Zm7BNpI+O>E7;.
%fldo*`jr0#QVu?;ARubAOGBj1E+)<BTuA-r0tCJZ^JNd"P-)m-bfQ[t:ghe1[H@WCEXOC(=V:6u$0R7Y<RLaPEEtlbb]<cb2/e%b
%MhpMK=VeE>ONdK9_C^8/@[gLE>)`h?n#V&G.\W@[M$kTSbTdH55lgEZ(irodk**PPoPUbuJl'O;V7G=lZ!:>LYfk_N9OjYBMUQU@
%:h<K@28N",d8e:lDIYlp8j#>-C&-Mh^LIZ<9[,>>.@"_5`^-WY\.mI'!dLP-,B]LO0_;p&'@A!9k@DfZ#(qb4CggJ77G=UGq\;"!
%,/e)T1(f..Uk"[Qi$&8j.M)1_/8U12eI&?D%pt1]F7X#JM+]($=;P$[U`m!['@'!i3*/[^d4J%MX"1Nu1eScn="ULW8FmV9AQ]4`
%&WK@;>>/.fB:;^1PZ@qmi"igBkY!WT[#UT2$^mP9Z"0f`(M7Ssm@_.^dsQ!gF4nD]V/7!9bQ?P7<,qPd(6V)nKJ^ZK71'4NF4e''
%F:V[8k[r>]Xsi\/$;EQ,NC+KmGXo1BF!a":adban:Z7T%M6,:1;r5L[<A#%.MsF3W2Gr?i$.C?LM6IO83Dj2-6O;9u:ZDfPSUSE4
%#"h!e,%rY7!!8NRXPeH,9t9[IdVLp:A?45P@\:),9_5Ta409BtKB+92P6[($&E=>P[HI&5m30D&"/Z5Y!IHYj"%"qup!UC-ms*Bm
%9S(&,n2#1\J>_Pa=B<mN>,]kCPf;,uWk]f^bg-#W8'j^S_>6D.Mo5&4OD3[c2I@>1>Z_;FMe\QC7C47cYfIudHEgp:P:sUG'h(Xs
%+BN6_</$#PNc+rR[o1h!=B'":0kqk")1*=D'?Hl?$0[kW7CisD<<_&fBio.'-0JgDLt\_je:m$/Ua1PBEC3c*`6)InEOq9AGH<cW
%1!jXq3J[\Ma.S"-M:.D;']&[CItpSF9P]JO=]DHPF+2E`5$+[NBgp.kKH#6YO<UF$O?^A<J4;67JAbQSBpFBH`R6.I>8#E3_fnLH
%?lq4#!dF/jdN/=uF#'RMbmS?)]r$2s&l3$abI9>Q.SIuB;3C93Aal,G)slqEf-naKEGbq[=Y\#EABtB'Lko;)(1g;"qW5"d'a)..
%F>(0#D!.^p?V6nT1"eN^>rn:eTR[ns;fiAjC@cMhX%+p#kN,)22q.Y8>&,\5f!i(P5JneABq(J-Ko36EK^p7s%]O>Z*EhPSHD@=Y
%LRsXr>BI;Qja:7dZ8X@ZZS:9W'N6oN>gX]>W]*Mu\EN\N<+fCCSW%7k\7sJ*`A&sj.pd$]+k7@SC"FY<KVbc-Y;B9_ifgs0ZpTRg
%L3!YaiC$U89kTTJP5f(4Z>B@]In*nK"^3pe1=<+]@SnVuKVN2]<uj56jY?QeR<FrpI:edURNcdKOLh6'*IHmh,gOW,_Nrp=P*O.K
%ca$+qgH@6XKK(H!KWo2%U1_GWWh=j=8?3DA<JhV6;fBD2g$/H/b\ek5X`i/&h2=aBQ8+mr0+L7@OIN%:AJM7*$8DOU=C!2U;AtNo
%b10&q]D;\QDRfe.hG!FX`m]dBa]C*nV)bm]NEdcS%N^A9SF/[/`>DKoUnt5JN(&<*.*@.!$lam]CU696@9f_`DC4j*JW?l._J4f)
%p.FL0$?JUiK3[P!<`"0U!R5G[S0>,FTF1#5fb*3I;joVZ2QXM""1?O/_?AU5EQu,M4M?\o[W,cQI:/4G7n?<&%=l82L\`IgI;oXT
%;j>bE?qY(EMDA-rq38`01\IcL&\5icCA)1NM/;]^.&8I_C"@qW/?rudOp!b7^?-,b(=L]YO7Oh,Y:f-S@DunK@[NBs)-A\]'2;2@
%;:)MeJ.2mu;d<B\O[V$+ZZ8JW`^*spW#0B2C+EI%c@l*;)A6[t[#K0q&mJdM,nr"I@j#F5B%le`r@JLD0UA+Yn!-nN9$KFdcB=/s
%r8ZkbhBY;M?^<q%hFVgUP5cU1do+s6Qec(;:7'AHX#@eF/$TM>LX#sa6j#r5'Y-NN#nrqonf1j;9rllJXfAFL%:iWLs)PB?]KB@;
%&R5\<6p5TdJTEmISS_g.c8MQ,/$']OBDjCl>ZB4-Ga&eA'Z3^8XOEnJWMgVh/@0L58M"1Z/r$lBj>+%3R,1]ACUCcd%-Z"oH!<].
%r+M5DXLc4D:_HH+>`,=r]r^0P4$6.f:D:!<6oH$H'2)])j*B45g=B0-;;tY=B!o3B%+D9j>\70jiXRV,T0p(j=p!)VYm"[54i=%d
%V4,TE47*XcA66_jjC!WsQJ0bF%1u0/LGG-X!TG,IbbE?rJ`X5Z4'X'T[;9gu.`@jQP]W@,TZau27q@OOOI<c&?-)jg.kF5XRTWm8
%?6JGE_s0?9B?$guZ6ckIFX)/Pl-@(R#+T_R.(ZK"iiGI_$`VG:?tc##o/#!oN:C=L8kX-(h;V,hPNU.&-OD+Eagno"Z"4.!<&b/"
%_W2u62sqIcS3.Vr$'t.\CH=WKP-1i>a&>*\N*:7]:ppDB@BO2.P`qtgafgdL.Qjd0Ku!ajkfD'WEa]^nEQGTiQW"J%9:)b1!M33?
%BgGn`$@3bi22QB18lli-iG-fg<s]k\Gnjgo66#2rZhC+51W(-g.V0@>N[atHb]/p^Y"[14fj;;8fS(5cfb*0W92:>BM2>fe2+F`a
%HB"f7)GL_PhZtS[/KnGhX)fN(B'lZ$d(5!u4A303R;uOIM3fN??HWOc"[-d'2$SQ=@Rfr'U00=>nE9k(db8]SplWMDcfo4i>iZJ]
%9,`]<(YtVh#U(_DIVWKC[s06b7@Ph8g1HooT&is-T,Mj')!?mFQ@]nK&i%T*j&.9N4uA0AD4i&YbiM6!4YP0j`ReWj/(l[ubR9),
%,d[`+SJ);!4sO+.DQ``;l&F%jQtr7*,bnhNG6N-1(:mnp01tUX]J(qE\9_$kOY3[f&D4;/;:``UJLr<$r"ls2*)'SkS8_Jb`i;/+
%O`QBDQ"=B$*PkfN;[9eQE&13j]leqnT-\Ib]]SJ*-stc:B,,F6e2/c0fRgN9>iJ(X>BL]i<Ok9tGu"mu1-`*+B&>=Y\RDn[bnjlf
%pIf&?8Oqp\\A@lAa"gYu--3#jii*ak'527$J5TWPk/YUWp*/ZZLJ2L;_HBbKZXcqr.d)q1g.f`9`-!@FS*7X8V&JS\M4C^Q<XWcd
%\kWQJ3Pd21i<m'(>%![/egVE']9biiD-aRK/MA83>8acJ>$&na)K?L7C^+,eZ:qd)7(/!Pdr`&]W/.`XmYk>#U&-$lC8E"E@]QWT
%*88[_ls,meR'U0uC*B&:D<AP^'3!K9B3823<b6:$B;90^/%[([kWHa//t<TG[m1=*SCu>%ghL%tWk[:\RhL6R"h!sR/4I7JptCV:
%/@IU'@l_GsG0K3XTT$M(g/dH`&mJ'%jWZcZI*4ONnnWgOcDGqDm2-(=Ug6W=Q`<CDj&fc[e.u:n?tWA]2G*'>Co%]0>[m)\0-RbM
%`beI$X5[lPSd$Q4N&jT@cW;"AALt%9Zk^T)L?2-cN)D61_ST?2DI*W$EjDgOnJ.k!4.E1tp%KtnCm"-YLoe&!6&LN].1:L1Gh10l
%btul"iFdtKZ*8^RCdlt#Tm\[@Sde&J[O/S7"^TC6k?20Gi>0`2QPU"t5ObbqO^N_lV3d%Y@Ha#D1B"6HXAW8Q/*nqPP+t98gaiQ?
%aSP&LJP$#,>D.!?C!)ghGD7asXHl=*PVT<+/8iVmLM/6A^L(,WV\O>,XN@Q>':flD>@l5s3FOcO\+qJm]Wa1DZoWg<RmK2,;9qiu
%jnT>:S`s;%Z+61Q1=p(Yk(OWq<ta7c3H$?d[:Br_=,<oc\r/t"WZ#PLGX3bp:rnoaB$e=b0."%_#WFQp.>k+jCM+j7Y*LBB"BB6r
%,m77`<c/ZJ[(mHl>+1D\^eX>SW>&<ZGtL0<9+,Rh+_Hn'4mEB]J\#UCm0N6(/Bc^5hXb_UlY>KD?hr\;#"3R6!bI:&d(RTE<k6?V
%,D@)`bu9&uilYgKhO%Ye@;!tLk,!(#Zn.IfYZguVjVAYg3optjXm0.#ga)??BM*J70em^FN(&a%Y&RTPkA+0NlS^o,@X/-D\@ci*
%gu=;j>iNTs8Vj=J+`:g(D@*"2j.^'f=^k%Ec4F1W>I[aMpAM4RXfD`or6.TYk3X@]aS_44N*0RX\AN,uUpBK![kJH+L9iH]>!_$6
%B[<]C\&krhZSer2_SYoO0uoOobuGZu.!2k!K$\8I(@?sm!Gmlo4+h4q`3P_='5gu%`V$'"@B2Z!LsNZ.V*S+b.3(n'QMl(BXd#9-
%]PV3A5,Ts$YA$W^KCNa#DIJflk%:"2P!rK2LsXu:4cQU8ZCLUEEK><H1hG^5Ic:6(/sUSKVFf!&bLC0lbA'VMd'SKi:MH4kVg.(F
%Qr9<mB2fD%bsnfaC?K5A=ogKlRm5a5Kf<ru5&LhRchYb*W,@gR\4XJ1F-9NR;i>@jeu7C,\7-CqXX9RIEZWIOY*qNDDT*=YQ-p>D
%KsZI4p\cE1,hQ4:;\.q1hjNIarOOoci.>\V<geso+,:Rgq,sqH90Ha7Dmi%bBRu-olEVR2<'Z1\-[t(:04$fugl%eEm27eg!X_E[
%#\V]@cC@i>WR8@m;-43_QW_2*#D7j[0QDETH]P];%uR$VCn-iSRF5qYBB^-UbJJHX/f;/ELt2#>@@\0;it>El]K(o87CFXRPkGPU
%:"=,<P!iV?SdRN.(Jin\#+M#-Idr,D_kJ*FUOiQ://HlSg2Q381TA[qY$a'7Mh1]CZ5eps"Im@*MQCMn9RiLRTf^CLX<t/1k:Q@!
%.g<@$KN?`+Zd`G4Zp7/K(Y?k]k;.53DbDb@3r=jagmY=j]Qt2mUa,%$QH^H3k9[bKbV%u9g8q%G4<)J4*fD%0EEPbId9T#&0;^t7
%-<b[cT48L>>e>"EY:QhL5,5NSjon1Z.CKQ3)HE^_.6buqcU]Ei]1lR<`7KC&[DLYfJH<`ibacrXp.B1Q/MaV#\9YYD?X=([#."u:
%22&jR7\Nr3UaVaL=bVq@ifV$^W*[HK>.'4_ehpfQ<M25j$5HTF+s_$M&(4]n2;o1MIaMQo"![4]EH.,(>\%j1HL1ab,-NJnq70Ic
%S)nAB?i,[YqGeEJ=)gLn,%G4iM_-A.9/K("0iN_X.Q#1L>k:teb#R1p$gTR5Y-:)Coh_N-(=d'amOM.=;DKetls[/c-(6_7D+9P)
%>LZPK:s9u,'!r%@Zid2l)U/iF.cLc`/eP9f1:39(E5LrpMi0uMHMROkg;T*Hr.he&?6$OFkQ-#[Fc0kk$DM:'aCP[%j`"V9\Bp5j
%LcW0r9bJ"/eC8iRUS\Mjocm-!W=NPr>0sX7c;SM^Am1br=T#,FjXdM"!hrm];r/L0\?>%aa@>s#BqAqS(;<rfX7GjbE@0/<HkG!&
%rNO8]0?qh7j`?t-$H\$LID:McF:7!Vd);JWA1eZf;YFmP8L?[*#rMOqRe*m\)6;=]hh[tu^0uM(_?!9*:i<Z27b/H\.hQZ&((K6.
%X?'COmkcR0).Z`=_7Ob0)*ph>6r;u^27(RCC#58XW<*mAp?Z]]\M0YgV5bpsX!pcsVHGVqa^$`7GJj';kF0FB^\SS;=d2RiYrXbr
%AiUGTCLB6g7)XsLa\/,$HYMG5*M'sCDd';nod@\DQ>)^eYZ^KUk;!P6-0E=)$D,6?5#)fUJE9d84J1)bdnL!,c[&`.T>)\Tnt8kY
%2D`p\.`G<!`7_<@e3gM-1Q^3Sd\8t`8DU9mbNRh6.kA;4IcPEBpSGfML8(7k;`:&jUYs09=d*4BFe6.N1i:VXb/JGY,CcW(Mck>a
%1=KhqdqVLe=!Uube';LTHm-$o?F,-*?l@d(7'#_0>VS`aF'Vfb@S&2B;O,d#/!Ot1KY*+1/JIVG:?hCrVJA"m5ttLM=UL!-X.RXc
%XM1g8Y9Kok%SI/qXE,gl3T!A&9BERuZac:nK`/kn[i!<4A(k(]]0Zh9l<LX!1TA#X=lfg'Z*`(8T$2YbG:AiGa8&XnRLVfQGDZ`p
%?^AuK+uAB+&"m/Z(aqV%mE1Z#9&=1gn$I!hgT)a(hKTk71H.*8HA2d!Br#@8WUa<`BkN@kX9DnYG:&X3?MssDC$E*DM@<`Dd'FU6
%(.i06[*,%RAW9;K4%jgrNDqf1h/qci;U%)G$ZK"7[ojuPp3C(qIO<fIMLZFaA/+Zp+(^mI8eot&:e<J-ZM<Rrq5S4e@\T]OKl#m!
%j(A3/e^>X'6W#N6Rb<+d`jM.3@:?A/lZ$u$V/sU6]c,jqV#-GKAif1@$5YMO>YWh7+!0:/7EeALs"=q$3FWc,51>\K`/Mq/3m*Lp
%b[At4oM/uq^/0(!Gq*_g:IRuf_6u+aX(M7'7C;u.SQ0I?RY>%CSnBOuChbJ@[9/a=Au,6"G5(6D&KBM?&!$1h^#a*PG`G#1Nkar*
%^\b]+)YSrannnAW^>%sK/haBt:RMmSi8kM2oEP*Nin&X+akt&B]DYCto#YQiH*KLl).*2W,s<:jG&+^\a]YanmgbAuGA@9?O#?>,
%d%0#8)HcJ#0((>/Epp4'_dU;=4uWSt&G(@=U%V!I,?RJ'e_uSWd0+b'+FgkEfpd)M)/9t;JpfJ#2;f410#qV4rSau!-7KDb/$o"m
%1uUXuRZ!QQ<>U0=s1O%D48jWsFO[i\lQ&ub?h(h?d#>]^>W1nl7brG;q?Z6t4>4\#7msbb)&L%CQ^I42n$ii?lD-?uL+X`23Tc+[
%(W4G4EGb0GF+I_8R9;,.R=D8a1)uih]Ksp<i/_c*G[V3"5WWl#pRT^N;PM_1$p(.%I::,Bc*Z4+D-,.d"NuQ0%mY3iRW3KCg2CE%
%0sEOuP>UMQ#E!`=[dnSqkaZjXCSq66\S_Bl<PrTic)W^^YPn1jg2EJ4IWN[3g_kl[%Nc1/p77jqKJ6j@LS?#F,Gl]:,Gh0o1n>C&
%D)a9uUZ(GRcJe9O#iNL=Xb%d<_;BBF3"e2)n_S5SEjXcGA5_(5LEh<ooFr:-(W2A[.3)'c"\7=j]F:YGiBB*krP/s&:jrO;lmI5a
%Ni(_)gMg]-(n?C("@3kQ32.N*'&!Q<$sGqYaDdRBM#K(6@FZMb0J!]tYRre2<nN-O!u/7!'d(#BpoEs8;R&hnWZ%m_mC,TDnaBIe
%5K>or5GnNW-kQ<3#6.:D^beT8#"Son6PF.[!\0E`i;t#^V?PmBVaa@`fV1e:W6hDC7as[qGX@=MBFt7[@\?%T.+,d&S"U!^".CD[
%nATLb=%]i5'/bje*`0]uC?1Um^`g&br&\jP+));gZ@s'nTghe8OQg0BhjQU[Kd4bO_@>MGF8;G(4Ngufmho=ns"92P^Q0"A5)-g,
%i@fbsWQ!0mX>gb4RtOAOAXi4H(^4_!<ZSt*@TMO?#Ma&&LO`lokCe(D!Gj^ReRFIN^>"<Xk's!K5g'.#5qGNYA>*.j#'dZo'ge&j
%U]f*)g2F@s(obn<dc$(2+B:70,,%^nPQ1[A^]32P3*U;;1q(DR<rU]'*%c4gc-_UtV'D*IV?=2J(;Z^.#iQ'QnDWm#5c,lJU'ono
%(***_lNS=X*!mT>*"a0jXfhVWb-VUOKrbQ]N5C-\$`DNmiP-]ZNE-BV!_;%_3hC);hubb:$\S"?Z#XOSm:P\<DpY32D"%o.bnuJ>
%WLBJ0RK5RBc3*[tcm%5(<hi5j"4K`fL`6pGWY'jJnJ`TW+M81,!Ak^$*/87)Bpqlj'W!8g_-HbCJDAWt,dh',c(pJt\2@CXh^TYk
%$;>5?kP1&p^.[)_9/I%:6II/6DW)NK#N.heGhZW=5o<r9hp#a6gV>%cmm-C0U+nFUDD&f7_6h3>n;*'>_R>0a,Yk(%-".G5VEQqY
%ilp?<.3CtZB\WPjE\ulkaH=UG(BnV0/fC.;:W=gC<-,=2F0ab9`i\B9iTP'l&WS`724c\&"kSFp2IX4RDo+KmgL)#jcTH)d\]s;+
%g_[6!nZR4$iLD04]B8i;NmHr4PT]l/[9Elq&\4W2%?<LE/P-B>>^2kdSf:/o-?.d3J_-p=3ckmIJQi@Pl=&j=E/>,):>a&.Y#tuc
%)L;^s$_/UTI!FZV4A=RN6h&[b%DG/_hrC3Y!>^:W6F`-;jAYj:6fEtBXZQU1%fWb/^L-C"!uR+tE;?8d,Ha"hd_QE@nPb=eGiMcg
%UM5a_@l<X_jj'."==ucq5o_GZi*^P<&/a"K[,*7e'?DB"iraSt-pDU7%qP[$%MT*]MO4kf'%/ie4T$E3G`OQd('k`_TMGV*P5%Hk
%N!Tf'K1**NJdVVgbAg+TI1Yt2`',A6OH=KrONM71*W[S7DJ-Imo^G+C#HYR(M+=Am'2nK41'0:S7eIs&=jbG<.3,=01h<ukOAU#Q
%.4=$qrqh$eraV:67d(1(c3e<iEd6^T*)U[UAfna8kk,h"@394&Od(m9E('PQ&T^<LS"&3ojG(^ab`=YJDJk9_'EQ6e`['YXM%,Y,
%:(:^-`:;:AK-6'_:C^G9Ldd`VBkh>%=<,0"5cBu8^]o>j"k"7)Kc"<-C]_GD7mcX*B@E^hK-$Bf+U?YA#XKXAd6e15HjW_U$s;H'
%!"oAOZq;0;7PHD"2'Dr,-j5-@#Ql:YP8Y..@L*]G8;/3&L0P2o.>DC\A>d@4ob#G2<98\i)n9^3Q6VbXr6eI?k8"P:3slkii#ko-
%MqA_Ujp.m/.?e"\@YcL$Yc'0W0tah3hS`mS>W=`0rhdO\rlkJr3'1F\K\/"Go8+5?;)fV"HSk4!c)i).@!Q`'D?ZooX$_R/ei^F%
%.']]A?Q/GVS*Hs+<(Bla\hV+((6@]"``+9P1Tt=/R[dfJgmKPc"@]D\fXVn7&B`DY^H>;Rp^K#g;eIXl1nFN#-jRef@5`_C&>TVT
%mQns>P4,(VSI2j=jH<S+k>dO'*(K7O]3P[]FjQM20^MngQ:p$h_.'.V(EQG"`ho[+1I4f(#<_!lq^/Ps@ASW;'p9@;M;nUIU5k+Y
%H3<SH+IidV/UeSB$OLb@QNSKJTQlpms7p%HOT>qW!p_2U[6uuu[6_H.kY]Xi\hK4I8)7,pW.odaej#G:^oN\d!10P/Q8OsqI^,,W
%*d*T52Ci<8141F$c1sMg7@hE[ghB@n1eT$fU-sm,#UC?qb_KuuDO@Lbk69\V+dYhmBXNdo8S>lcBGL\X9?PCKL1qN"9/>e%0Y'5@
%DAXh1jn+%`Um>iY59!-dB]Oh[`*@0(?n<r>92YqQ@^Np*)apoL&f)90oUh0::F.is%V_-+O;8hOkp)K=TbefMFYonKJ5q7L\Wf.)
%%9',TG()t[/X57P7%N%E_\B](W#?u?>"9Wil6)<Y:_#_[0$OU6)GU4_d_GG+!kBPa`DG'^5W#9%'ZGV*d=_Qu%RsYR8B0l85947_
%JY"UniKuXD>[g;++_H*$(Beo-/q+oJ<u`F3>Gu+T]r+HMRTJB/X8\u35#%mY5&ZB6+.?pTf6T2%4aL(K_g38&gKG/F45c-d&1hP<
%d?*-_9)0p[;!Ar7AuRb"LcIiF)IhQb@]pQ/%CAEk6?E&0C*?Uh]*)(unUUKWLrS3AS*J7s&Z%0l*(BM#63/Xl"6"Cp>RZ\$,d:uT
%E'k.XOT6aUN`K,'#q4$f.*O+E3Y^iZV@sX0:q.aDcCA:_=H6>j>-\mmjP`]RJIr,.NX76rLhK=j/*=DZeID\\Nk(g[16+*2H=A?Q
%Q5X=*PtVUkSS8i)CZQqT#+Ypg>75sB0'XT]+B>H7D[sQ4e\cJM#7WX$l96teW1[!(j1%^:2Em.^&/US;UH!E^Ph"EKZBCORm=CU$
%[[#UL.^p?Jk`bL[l"I@]q5`D,9<UK#%0%<oVqO1FmE_p&8a!BDq0KNYp(I"Am/aTIl^_DT];C]hHR5(eb1kqGTnAFcM"jO-U!e0`
%g=.D-1=G[n'9G*CkqDu,%,Up_fUoREp7h9VX&D*o#2d8$F:GGnCV10fj4\FZ24,i,Tk+6SX@4_\c>KQ;SP6W-N8;B%b^8IC)]2sF
%)0I:>iSa$-6G\HW6.?Xa\G"\F&\K%XFNd1W7\q+BZp:&D204traV:nq?h1'S*:!RPE#>YbSTP+(FDH,CM&Qh6X5Um`"sDsaa5.E&
%V_e0B!$>P6]Gqu:B7.Bi>PZTjIfKpY4-RdbGBc.4Npe/j6K</ElMPQ@k.c!QX520+YCA\"%]#@k>MB?]RBQ/,j=f:=7:37R*fLX/
%k`!M#+J!juKu%K.m2qnuV.klqN+Xt8f1ao?CrXGTs.;g3?o[@&K;JS:k\'X7.5^:d&,m:O4R<N;@D_FfMZfX)lV:d7C6hu#h>G%0
%'`T.%mX1f]LPfF$Yhr_Y17"X+s6GV_Feu>Aa7<sGg\s8O*nP[Z3M$Z*rrq]VIjp;YO#uQETa_/c>b4moGK:4ekhe:js0G+=I.HI8
%JA;+KTZP7QhU2?`C0^RS4bQXOm7k(=T<mghDX[46.1nC2rtXf\9L9#U+];[S^d!1dPI%+:-S>?5bB"H%lT`S7lG$jmY2e(r-X!sZ
%^Qr'R?iQEle^bYViOnh'%O^1BluZ#MY=:[df40[!9m?Hcp_'AJpP,$0UM^2&^%lk3'4Bl"(%XER:--GRAc3DlPPjI_gc1U!a\k66
%[H?nL?Z_?UQfkb8h=7_!.EO"p:qH&*23Wrl)`mMT[E54+k`0DiU[GWRWEBhjMAt'9\mp`h1Yp>/qgCWI]C'>@f77e_ZA"^Ag5-^E
%W8G4c*=^DirD.:[4bZX7#bk.W<pDI*N$mH/l6"iWa`(3@m.<Al,>6Eb?=nFBl1YD<g8+V<aatC9i+bc3FDJcY\t]X,@uV;sd"@B,
%UZ"un_tI'bR\iUBk?rQ,'7//'q)5O(D0nOKcD4Z+`#E(JSl;4NB^A=%S^^tfa(Me=KTt?n:jUN`Z?5W-6C1c?P7*bpJkdd(rL='`
%XYZCc%QgFqTN<3hn%u^GIsP/-af%!4?Z^hqO8a`Bp5WqKhZ%\a*V=I'2.D3'M0O2Rc^qti[T=AlA5YDq-_*,<$Y8&CN3j*h=)/oP
%-Cr%\^Gks=-b<pY.H0%G$r/H;Vqp(pnA9.dZr^Ef'78R7e'8(cg)1rSqC&LVC/AbH9P^"`GI60U['d[+a$9tbX]GhSW,Lh$-f41u
%rof=8E^ERHelS:D007.oA^3O/N.7/@35-5)b3_7gSl$&fl&IECFb'\t!of10[A;QboPu]D$t#\\P1i@f!ebjS42:-+/1GONdb]on
%b;pQ%Nk<=H/$H(g*);CK]Co50_d(U=H3;TL__Ksa];4T_C9Y?rg=g.3C>;4RgD$L]Au="Q[Z%N"GH>X#"`7I?7,2#`W9D6)ekC.-
%&bk!Fong/$@kSI]WF!bMYkIMAdYQi4F"f?)pm((=]n2ib0uiUH7iAeN1=!Da&kH5Y'5?`I\Hf]hEI.Vj%MIY^*hJnO0?7@[n-4=]
%)bO445`L8?";$TBQ`aQ2rR@[`PCEIta!1NOC6>M;(Rn&ZbM/H6p>Yie4JVm`q,prB0-$7@N-S&`Qi[mR7ePUu..DO)r;Pe]:52s"
%@l3P!o379WkWKF2HEs2,7j7J9EeKGP"JUshF(\26cH>OOd/%6s#\Y7Q:'\3cok(QV\fOHP13ZE,3BZR!]?<%tN":9!o?P=,[bPOq
%QCk2>8,Z<`BK-!_4[Js%Dn=TN./1W.kNM*A`hVSjE.iP1ZY0QincTZYfl6RJRU]qd,?%JWXb*-h@@1W@F&>/+[c&<Lk!p<m!YS<R
%o>QP)Z92:^SC86E2<dhUb1F>2P3]A)Lbrj^3t4#fZ54W,]tqg0;7hrj_dCoZ>_L#?BKTAm$d*XdXsg[&ou.Q'D0<*Oo7FDI1Y\OG
%7R+qiR4lrKTD9+Zm?oWT]WC:nLiY>=e;sJCUQaYEY4,bVlfa7X:)GXWp:(U$&Au<b['^A:<7CkPe43G0L0T>1VPd)O,A8LjW#4=8
%BukkjS2!OSUN&kWh($oQ3unTfa)`k^FC*RMp!NSBF7iqtE]?'8/jUfG_%<mJQuchT,j'M(o4fe7q1c;=6!jYj#h7+=mI7;_CXi4`
%-XNprTVpn6bV@(*br*ZUGDhVINDF@Z+o,CAMH6r@X\*Yh%b3lb0fiUWO?b%-6sOA:ZS=kR>r13OL@`V%\%:cFrABX3WR9+$4;Xj@
%BEFm?aiM[_!b:#8[AX[Oh1b!%A<^]V]NM9MWDhJ`I!KDVk#Z?)IeSn@J"B&f_-b'H@_P_[FAK_Lr\8WmW+3Z5)_>[PG>T*!be1"0
%!#>$,kI<V=Noqjn$W^Dr_MYAK-W$/Kgu9lU$D,mtofTlHRcdgMMt&n<:lFAWjW`Y]`s"6C)Z4Vp1fl\6X3P*\dP5g3/QBfai%7,u
%H!B1,fA:]^+Umg55_"5cfmEa6pWMCH+5X*o&hSbW!E94;cj1l8Sk4KOR'[iF>#O1^AnSQpM3@.[hjN#2J(aml-KSdD1Gc^@4c6Tq
%&$sjNl0(=eCMn(2@1+:WA(m>t.sV!Wp?2=BmiUE>k^7XEbeO*k[BVT8EdkHG3k5/?]Dc4"::&QOO)M&-:YY0SqUXCKO'VsMf6=sa
%H*K6<4GpGQpEI?5#/Lbh)7P(%:*2GS[l1tNmqlo*\/9.DT6k?mRB;I>lQb6Nfq`Wao_$M\B$f@Lp)ZCYC=VWo:8b8&F8QV&(q$YR
%ld;UXPLbeuNSr:NKCjQ$1JYFR->3&pW>h1,/%GDhnY:Ts4^=k,i]K<(*:7@&S4)gPJ,YW!2s]pE?e'&'rcN#JBD-I`I9]"Ohg08-
%10]$EHifWXHtD1G?<t!7^:oXHrN6'SoomDKUj3`(EXN`[I_0a`mekemI!k*?%g8(;2nto4)oB5A^KTC4gXdCFnW01(hWg($:Z=b)
%p_#3Cr)gLZe344HY;FRWK8n.JQ@Jd\j5kp^pU?T8hIb%#jh41QT%uB\3'-@&`-8olm?=(s^9m4-FeVb%k4eQ*[qEa@riO4b<_)o!
%>c'T0[t!?<mVZl(4/3n;h0A[:.ifVc3PYU``Pu)'roIQAMUocpIQBODG45H9GKl4>X_6[<J@Xl=2gXpSa6UG$=pKlM^3I/nqOlU,
%8%[rsL6"F*[[Ps?2r;"c,U%')DJal(2]bE4iOA]RmuBW9H\XPod^Y>B[pVdge@celQI"j0H9FMm4_jo-X&ap?h];/FmaiC2>&0\R
%gY)8sT14&CKjT5&;5ae+`]<sF4.m,Y+(^r4DY&;R3O`ojBRf3m]T:o-E:=+qrhE!N#@?`dksH?PrPQm>iu]qh&N.gl@D#[$:gXE1
%24g3bI*JSIXuq)aXh"PL_X!34!MR-U*Bt%`-hZLJh/E8%h`=neri=l>gpu*7LMpO<5&D<&9)$Yl-L'sCUDN1/k9CA1dFXF<T[WG/
%p4r*t0+F57GmiF(m:SUdgold1C8-+r[SHPMa+R>-[r_<CUDk0@R7]Fo>c)r-hLF,_5!7#s7\d<!_>9)aO,6JKfGc94i4TBi)oL`@
%)4SUAgSi`&@cHBDE1)^_%kh"i<o7aRcbai"o>Kn`5`aFRE,/s5np@tJCiVOqbn;lce8+?!(gTYa53fL^oj1fke`E9rS#tJ[\D',E
%Da(Q>S]uM`mV)7.l0^aj0Jd-r(j,+,8IqE'`,hEKh_Pu"kOmF"O/O:,J>jIUrAoG"^A?E*OYoq+`K'inn2P2)T78+\>![okNP9`6
%4s+$(Frl*I4PddBYVZZr%*YLDWqGH9XY*lEod2.-h`4hh5Fe<`\_Rk1HSB_cnbZaXgtrBDQ>j.7%H2942sr+mSZAB,]t653TB>In
%kcWf,#FU$^(RaX/rJ/]_4k!Iqr;o%)LMq+ugj:e:3'L.4^-?D8ocC8H4M](0V^gMP0g+9<\%gb@g@=J>E1+uJ:A]sca@6!Bn>2K-
%<pLiXn<Z`Dki]/(q?eJrr=5mmgRms$J?F9E-[jIY\7`9th0B@-n4jP.3P/?gT7>Y6a(8Em>rOaqg5g-dC@;#RG7,bYhX/lcHKSMK
%,eV7)K=fa]BHa%!#@.nCn?DPeAcZ`;ZXA'[me=Mu4rLdNllS@n7)"*\,6$Q`rC7B`:Z&$r&%2\e?LRPA0((bYfl'$'rcC$PCkm6!
%>?];9]`GV"J$F-sd=:<.O^=Z$6&jmE]mITH]>M$ipZ[SpmbtXaWIOgAc*hijk-q5bUq*gcmiDM-]+:J#iVI'Y_+O=(JN\V.'K^;5
%K&O`SC<.apUlT8/a*Wg'5,@W/$;H12Gc5_*22f?%ef4)9dmY4FCnc[(p'>B#CGi?HbBtGH$sp.t`g3%l,L^.TRc&:2BhgJk>R_++
%nml^9]OmZL,%r',)`1`I)&f9/-(K)-<U$8J)@j;Z6n!33^i*p1O)o,XA"4PaEcAV[g)sgb:hhVhBs/k]i1mjT?()TV9#,"1`8FCH
%YC(:m#be8SOb^<Hr$)Y^0)[&f"C.fpcpq)p2jZ'XBmOFC`E1;K$E$n0`tH%9NH`UXEdfHYY,l4^^)liK8V/cg*p0NC`ilE3=qXuJ
%N'ZLAdRjsPer+$#/l&=4pSDe$=4O\""jl7u!bib<bY*p-)/4fGCmZ[>)E#C5.]^YsQSe-9kdDfmQY?`ka9%/j1\d^pD+KR@13tfi
%,ao"e2U)tMQ>]ahhL.i]Qiq$'Oa:(n!HnCZ(IORcKCmF1l#Uf'T3miL8%S`gq&nF4h4JYS-b#Ze!*[5SAU,hnYA\8i#F#+5>8tlU
%p&"-#+.d6%[X-En0e?+o*(JWKOJ+CH@&F41npN$5Et\gmSi>.>n-SQ4Sf)E7)kV;ZeGjgc)+=kN-/GKg!A5#rT/fbqota5HHN*\@
%?sfdNcqWC+p>2ZnPO7u8rLL?]ij\l&/%Ker@u`KloC.^BYl/kI=8JrMfHnj5]WUi-DBMVAn#X$"b6*SZNo%KAUG'sM[%<9FIBOP3
%%A/+*:7o:NNBX_nmHq$J:WBTL,Ol(a<!,hiQb!JTlLRB$q/HSK*'1IBdA#jlfC&7]am8KR>&X-k\CBnQ9m4O)n+Y0"USXBP&mWG:
%Q?#I6`Gm%"+aoW`I_7mYp3rsJNK`s<Vr7F.ErdkR^.6S?iuu]c20YP._qjX.c%eW?QI5]X$9Zg$P;mg:3aKGrR'6#5J+Oa$\6!mC
%BD4VKf6WK!Xp_q#W%*HM5Cr^t=WT/i::'2hqijVO=7pK>Q=5Po?[1(hafLlip*42D>RkqLp+c'X_h2E7?qiNSfmV_1,otmh^)oI0
%>#.=O-P3]G';;!#0?W=h^4,fL.>AF0C[2@XJ)*/2HiFCcmB#F*4`7SS;E0R]+^l\jD=dJI=n3;=hnIsZOgPF\hn<79H)t.Vo>/\Z
%cZ+'6o;qJ.G7.ICnbf4/!\Q^o8mf?gH^D/.*pYJ"Sfcg4U7[d-]?\^n_i$X?/gi$Z:Hst"c*K(TfC(qMEc@]IlY@N^=F]3&q;ORt
%rjsPgn?-8%k$-lDp[EM.Kh3+@lc81:#AqUV7/3ZB07lJu`RY"CQPKhkV(KV%p"/p[^[(gG=4iSB2P,Er*C@uVlc$\IV0c!uIfO=,
%NkDL'f+Xk\&`M]kV:S/U4/"<(V`d3_?P93!f:ZU31>b,H`r<JrE8_jUD7mP\[utK4f`-B[jDsub])T51&[&@pGHrl+5"t/(WmTAY
%<!VR7qUt@K(>lX!l+RpCHaG*<fInKnk=`,@WUtB"0^.pV'Oto*.)r1+d+R72r^PHG5C)uFIJeD0HH7D<!S4bBQ5DQ(%aG?V8=N-7
%fk%5`k'2#arT0*4`b+V=hm5UIZAHAKWu&O*^"1nmN@g.<45I<Nm^MY@d]q$a8aE(Ke+XA?[/=7jr7*#KCB\qCA^G[El$ibV^DXNL
%hbtng$-Tji)+r_tnLNI"J,cRYEUrbkFDLhBAe2lWRm[,7&G+7^`A\ld<)74IbFV@*B*H0JaUunhdmgBbnS3i,%!?&-\:H?;omHeY
%n+lXOGQ"(\Y^DLM[L\nEf@J&m$PUJG#K%@EBt0FWDBJ9>n!:U7a_%.$q?bk5q)oY"]mQ17mqe[[-EGVEhd"hQXX9D!m[LVflb.6,
%#uLU!4f")!orrjj\-@>eEt@&l05n1LNO-%`<P:o;c@OEAf=-2l53h9;+MBDVq!d:MmQQ'n5[Ziho[EMPr`[QIL<89"GOFG8[[3%`
%9J0*:j_CQ?m[O:+r;<?3XhX_B[;h>=du0E56lTeX`NP'kB""E\lc7&$^S[KJ>&?:AV`S%fX+$rCXcD0"a#@JJHgn)F[JoH6T87)0
%Rjh[<lGg`:&"c.4=te;_qcgh4)<AfIfmEL']X=?elDVbg_is6+k.A[RD,f6G7%:lbc`QT02nP(-]f2@RrjNiu_3d3cZ^#0aGESk2
%ZACQ^6HD3lgN0dmr+:9'3kb&@Lt46E9lQ8Ap[Y$1*Q6?#\jPPlc^T,shE!nKheXC;IC^i<jZL"ss7X^Nm,5nN4]p\A0C<[B-:a</
%S4;b,8c,`3DZqc"ro1Zl3SiT-ID*EOO13BD4-J)+hUl8%X?V0%_'MlqABj`spl8S5QlXCS&,&ASB&rb75L]=T)C9;sPMgfJ*1#8s
%Ai;red(riLmcr`H^2_mM:>:9mpug5jUC/Ud2>RF<G/Y<S`m6`1B8tj0mr+g^r"@dfC9?Lq'h2?*J"b'`gjTRg8UG+YT\:<YI=-bU
%;HRo%hgc!l;j*3Hm`*jcAp6K-:=A;Ih.,cN&"gU!DB5>s%gj$^R+hrrrDu3ZF)B,NH2.=hZp`Kp5$7d?Il[GS3_>q9>DMs!\!!<N
%UWk@W%t:DrC5HYd"gB,Zrj'*.V=jc^jr4,9hWql*XR2U\AF&KLh_eEkYCIeK?W.KAoMJ!3\d2NpSc5`?<Rfp>$eY:O"r1peomHX\
%9QZOFC%K1&m`0.eR2c4c#D_"*HOjA;F5LH)_ug>:^OnX4Nid="HRj;#!0-]IDn>kSFfSKY'0L)A/)06$Eq\VVNNBPb@P>?9&V-Hu
%h`]fd)kV^e.)e9"GIcU"KtoP!]?s=2olOtj[=5U]1>(mc'2102JQ?W;>1d`j9S8VMg\/ebn13c<[u;tQr885#!@2p_j6XtUm52Jf
%-i90=\9FMb@po6t*M0sUB89OZ7$b@?"GLn#^uXlI;[!3djg@-r:VJs%p#Kls9_7l(C-:1k^&e[Yh'E#R8tG$1X0!2?qQ$qsMg6DD
%#K,obh$4;"UYlnU)I%Wi=`/>FUN]VV;pX=SCUJ3uO1fAi_=)Z>5L!oN.DIi+a]=ut8Sh!4bJ*sr"2F&tH\WCb*)LtHpX@.Xn*pq3
%J_GErn]Q`$DK"_on,:L+[.4"CDRt&feseQOiMa/4hA_(fCRi9Vq^VLBi`7hh.sSJ9M2ACtMrU?IeMPm<7[sn=NnT9+VlL3ZmGEBm
%[GCYmrHmT&rb]hj)c!_eP/f4?!4dI-5(M'pQ2j[^'b/C/!>+hd]jK]XDne+uR[!&td@Cg$mE:E*,IhPT-j0R]'tR>-o9C0BBt`>@
%r:mP/e_3394_[&`=imn>]$6M<[,3kkO/Y:Q]mX0nqAGT#/,\+l.d'hpgsM*kjLtl`l[&kE1QTge><+p[S2f8qT59h36E^UKQD=EO
%Qer9+ZgZeaF6#18eE0!K%/$jZYcIjt4CdB:oCFcjM@V5>PM6m4eE$Gd@<U#$Y8&_>qtAq^-o/LQXadstLD?Z_A_Qp'#<k*R5pm-0
%g_hI,qr_a/r+%q+I0ecpD0J0[NUM>k^%M<Vf3bZJk-s5hU2`Tj4TMg:EWMWibF2U!I!'ehmasILkj.K^lsTC,2;>^kh(Mh$'Zl7]
%)]^m(K!jH=4cA9N&"YoZ'^pNc+7?&q>GpHI?:g=u-)U@%1#/k9KIgsa#O[&V;J,OeoB*5-h;,YEIkeYW(:/iirGn)\XeTLkBBrlB
%m3p]\gYMS$PO5eMBi:-XOSuj$D,hsC=6mV2f&R-O0LjdaVeH,-e$Z9"R8S>%27OfR<a46"I/t++s)-l[`oa;2/YsUd6.tX2mN:V]
%6!,qcTW`i`KQf6-B@B%NDk1(3;]>#[&53K.hPP4G45\S`?[%"RJMj14EG'?jrSVJO3qW*jo9:ld$`rlb*[:"!YC"T!LEF*G5jTOT
%IIcpdi]AS_,=XJnD[7VV`J:,3=0ii\o_Rf^E/5Qf_LDKb6$"e1<U]V'"M&8G^"khX"-J$/+M6a<5]lu$c%FTRlR._+#&\hIWcu3Q
%;R-keXds.=1q77YS<i"1F?4*+%):Ys6rR[V>;UgS`iSb1PKWgA\+KKo]5c*t\>A+YqrmVFDt0m+rdNikGd`_T4F">A?B#h9^HF-9
%o&;plS#9oP*NYsTKh7a70%?),phRNs>=Mr,^@jbI.$VGe<NuJ(oBo&-JjQ^?)LUQ]fpsM"ZDZk4DLr/ZrQTZSg&2k`IHgalB)Cf]
%_(fe"Gjdd2nG2O^Ono=HaDD]5jBn[aNGkkal$bELJB7@"!qE\K:-)(\=["ng`Eu1q[Pkk6D+'$DICJnBoW*amJ\D'6RN;o;a6kYf
%@W)q2>jtYGg$L.K(\q+0qXrUb4/JPA:=]@/a%p%=qJ'O-CiJ1?R@Lu5_.91@2#?$_g[&5GHjAcqrk5(6/a)9]J4tE:]m7qXOQ$+]
%#R9-,5/D@,/_C$;+6C*;^"TgO@I;SKm]@J\>4`5RV/E6$]sh2&3]cO7:?UO!6ME*T::k\mWdU,aDZ$hbES0^gIP,<SpHnQMF*<.E
%ZVgIXmV(Cp"c\ff;6Oc_D-M6`@)q'Q>25&CaMo<*[C9W1T3Q5EEZZ[cq_Mc7P])&ZC%\d9h,WpJh!=mcI<!r4oIg!rZo$_i8fW2a
%VENY7gR0Q??[]fs/eZ`Sn7"?o*hA:FkM=_YcN-8GC[,f^b&,4$GkaQ>WGkEg!P[S9DtP/FG'W[1U2"o)n!X.DQ$:jD'tg:<rA%IV
%+Rm_9kiY]ibE$dECU*2G%k!`'mj?m[eYLr#n2?fRI'9ad>-C9\%YjG?X"8E#.W<50$(-oo)fM]L%u5Wc5lHjA\kmH#/-mpg,!GB(
%k20->Uc>%8R-jt04pK1(:3sHYcX$"';<P,CXEla)H"5[)id!>i4C@L+nQ^pMf9[NDBaaO9>?pT]/up)cO<0C9LRlO^kHF;eriJ'd
%A5`$Z;X1'H1Tj3=rOI-<kh4)e[g,G%b:-:nK)_mDOtmQS8<fP7SBnnq5+6[[I9C&3pM?(>o<)!bJ"&D,qgM!f>c9.GJOY!?-X=m0
%(u<d#=EMIAi^`7WB6/@foj8(J#,%IS9fh4TNTT%.V<>TXlCG]*)aEN@c]fXZD]n<[T"s@2[FonnLId<]@.FMi?tk;^'^jtO\^(.N
%kMjA6pGJSK-je@US^.S$_QCj7gPSGT\";9Z"H/cH:mP5IgMrS8]RB[;\X!+L:n'>P?u9r8XiV$@2*a,b21/[+o;k$PNB;V4=*4_T
%m=,*+0(l!oYJKlt>u^-Kn]T]fe5&i>fANA_0`2r4^V[d9%52K5i&]CR[(Buni@6er*qZhg)q909mRNV0Ma")UL!9T"TQP*,`.<r[
%[2qKEV,Q](\DLZgN$k8P-qRG_j3+2RSFH6F78H@n#NI>XomjG&@Fi>[HpYMdm;h\0T>Y*/mG8DS@H=1\mp\jOo`X@oI.I6BbO`V;
%Vq7PfX*T?;QSTL5*C)2.^L/YUng!ASpYE`2^$_Lccc5Z3jt2t>ZY-#/73YfM>j'?QFIfOq(:l#]#%H.n%E`GSrM!MGNJdl+b]`u1
%K.HbW9A8XQL!3mfitfko;U_prl/hhI)KWrX*Yj<pg+PSLZ)U;Zf8qB9R/"O]rRubeTf6PtdCMf:<Dg)D_+tF())hl]Aa%#d9@I.f
%HoW4->!IF4qU("$pp1G)OKiTP:Hsrmb!2]\b0Ot8289nQpn*$W.R`4?iO.QDW,XE!>MC#lA.0`bH=$$om1r+4h"h"SF3O(m5]c_c
%DEcAKr1OSr_2f+VRbnWYp:!91P@O8A8^Atjj<sUKEGIWq7cAu;]i-We^`&"(DjWB,&2DYK=QR-hP>ubGnbjl9Xl;E$EcKrRSKAd5
%em4ntL_>3a7CgbpM1W<2]\9CK3IX,3U0?ULg2B:D_:7tp@Gk5srMUdr%pUJR>m3et$Ttm>-GEi&^uA+.ArXf(bV+;'dkYtgjn#2K
%4Sp4`b`ueOXe/M!Iki"7o644j#>O[g17\?kOb8$&AQ&,\[?OPTrB1i&YL4hs)E"P'Ejtc$rO(N8l2SFir!A]dId!l9oWNS1h`Fd5
%Vg1E'X"J:A5O"1*#;QrP+gat<=r@-Z#UE\dZG6e3?34%2JU"n\q#q8@EIbsDfW?O8Wqeoq,]P%235XQmMWuqq,\#V$iNK2+1lcSf
%&CgY<o]^*E`Iti(LB%hb&@iOQjsSM?:bb50\eD'aL*Up!<rmNp^r34m5$/R?b4c"*35"dO&?k<L?.ZnNIQ[[Vi/Tup1k7*nHm0pE
%Bju)K+sa6[IN7t7P7ZjdDo0:#oa77W`fKDV&"*'S\F-oM-V1%t9:-%F#d5)s>p'5m$lo2uUrXokkQ4$]UCMe[&cqA#io@4(,rpW>
%qK8V9<GWGk4qFKQ0WlS0S-4\$&=E>,PL+NM;$?JX5R>$B&EP?mQoV,gjDJBhoE(TdTG@>Q+A0_:+S;o\+MeLLJp>#D*\9Nt6NT<?
%&!H<FHe2,J)&3?16'B0C#_G:H`>t/R(FP+0*304_:[4Y6#E3r(5!nb*_$K$(EMtr3_NAAc#Af0WfV^aF.Y,<'#lY[.mO1=c#n0'8
%N+`R6Q+k9M+c['7i5uZ5-&>l<Xsd$^'8[Y`]*4%##V\BM$)0tHYNeeJO'.Q`lMClR5^'D>=HB4&i3D+b0+l+&a,07_1H4H1\ZX,O
%O-N!.-k&!#@B>!)hKM(/[HDcC5nY;nkN(74:sTgE&W*T^-D=I+&oodn\-YMbO2iU>9?/17ISh(?CPA?F@al>Z[U:rcj$<?;T#8Id
%.[4X9`8&GqM+jI)-]X'@?<i8^=0N8,3YCBK%c\50Bco5B'&AUk(5dO'#]mV2.2^L2b:1e7^7Y"Y&26?Z6_ML15QX.cI1[_5#mjTT
%&$@uDQTN=k&JF^1M6C^q.SIhI-U?QfglM(K$\]6-7!M\9b*"'j0"3$H&SdC`$,Vp^V0\^:&P<>dRV#q<>`h%o"Mh`8C3*W'P*nAB
%_FHmTM*8e0_f$+G,_8Gsd;(rF2Q+t1d;t/K*`EChNZ5R2]+KUm8Rk!%e[Wg3Uk1lKKP7Ri8.pZ=clj,4*WT"C!RNDD]+Csoebrn+
%/ckp4/XR3,!LXW?*HcWo,X`l0e=qD34n_]j`pb>EHtjFJ<"Qula]8D[GKF)Y8JpZ?#3M6jWUa[V'/hC0g_Bg&KPWmRP$dRPq!p7S
%r3]OX\=o,5@U7ET?t7$b0W5,NL<Td+3*CAO@S#^:9MSX%!:a%HC#\+?:(kp58G0Rh97MgBi5uTVn/:0*"VDM1.V,2><XDHElmD'1
%`$@hoqJKULToNg<OV@(n!A\m3&p_qH8\l12.@_MH&s%G[Z;3;-[*<'(8WXJf\0O5U\irTSkcl6V$LJQ(/\\:1T]:h]P:0<W5lXr"
%&UQf3B$a2@YeVjs'F--t?\T[EXYA27"!E0c(m=)5!g%+:BepTa$:@?Tl534"6Wf@nc-h`>)R(qF*eL%b63(492#.`)3r*3q+9&i6
%!aXDj],i4cI.VYm[f%A[#RJhX8R#?2C^<MG6!tdk(d%j'eE8>-#mhG&WunWM<K?7rj='o-7he2CHcnT-fI0SRME/\9"86LRfMF3#
%9^kOY#RCFF!.=le=VX5-ZP\8Ogg*=Ik80VM3%uU)!*Ks4S4'XMk'5Yc@Lo-2$hsrcS09NS%RM:#$?HLGM_q+.#_[Cf.D%diM;2'`
%KFV8tgrMa^NJfD>&`.$Z)RuH>"(Hb@eHJ8@'lf^FHT!K;hWWW8ZH2M;KIDZg5@K'Uq2B5,"`hFE'?V+d6\t;8DS.)?6*q_>!%KoV
%2.KG"L1i/F!0T5e#`ChQBH/cQ:.23uDTDR:7fkeA\t,/.4=)UETn-pVR'WWaL`tF3=IKCZ/.t[O$BQs!RC,WD8k3iTRC,2TI].C'
%`"n@UEPd;FT][aEKkM(qVZ;MnTB2Y],soJ9qiTbarHR"!ls4]f*7#72KP5p[n[D`!+/q^4H=#YFG<$/E+54RDK[GQ]]r):R.97QZ
%=_>I*0;tVt,DbZ>I)/p#!X+6!&!i;EN"AF4+lNF%!-*u\=[4,S5^\OO@WVYkR0.a!!)ZL!-;"jR^`lL132W)F,ZGs;jH+&2-9eJ.
%X-o^g=YMsP58W!/Ed:QS(Mc2DPi@]?i_qXA0!Nq%"1SUK>9O?C3r202+Ae5/5G-b'+sI1k#iUoa0M"E^^V3H*_Fk$X?6ukq7KC4,
%8Wh^(SA!V7#)MS,/-S4qQj:2\@+gCP#]`Fr0gaGE5`ZL"*$=8dltNjF=E<A?.#(>=_JgS?_B_<,,R>!6q4QTOdQlpWZ0G4AL,Asn
%3P^>RQN5s8ZSn)M":)/Vk$j*9@amXcMY:V:GpE^PW!jp*_Vl_Yf++!&p;g6WagUSm!p)DY"a0(9b^rhi#_KgcD2A<Z-tEn7AAa-S
%/p@F/,4X;?FrZQ;6qC40&07g^O_>46,YJb?*+h6h!C0J)W#Z9aUgK9U0^?Rn.\Vt[(M)2dUFi&s6,]'X'%f6;+`S/MSX>.gB^-uk
%U%mqKaGps;fS$qZjhihbU(W5Y6Y6hqZ4g&)a,ga<?App&ES01l,Z"u[nqg@$Gt>dX&6b$7<*Dj]&\!YQQt;E?D]<.`1cZ,T&r(!(
%EI@IqoLP3?+cVhE1Q4Sn1oWqZ8kr=7TLZgA69J,`5nrO3U*>+_U#\PVc")Z2jAlB$pI2*7a>Xe*U4ALnji[qh"Dfg6:IBr]l2\a`
%EXcWN&5ua4<8.:B@WM:/340#X.uFlkd8L3u58:_#c920GCI+GB*Zm^r`B&U(?ht($!>qh-BM\I6+DrHdR/D@@\@k^_Uc=ioA6KNW
%Ycf&mYlMFeV[s","dPhq[dof!6jR1S48N9b(rC"p]cQ'Q$q"+')7`KJnJuL:\r.]te:tLm>QFVWN6fLBg^f&@lm;lrHTRB:N$\):
%OAI'e`%4/ITMPVLId)HS[\;4Slk>'qAiXbILGlMO5sttd"q]L0iZ'-_'3AX),<q2%nJ-[)FID%Yi1]0K%X/QmX?nQP7O=`t#c\Qt
%E([dkjE&^FJ^:)[?j!>F,mb09!TlM\^Sc_oO[o<V&'^(Y9L="e%td%-&RfqRHA1$c*9fr'BOYn%MSSH+.A;8-OPCoX\<0$)f0K:^
%]bi'hcGLotb7J]s&JB=#]5At-K0YXW7d$<b8k_;3@"bap7dQ:27m\g/0qh>RcZ1c1F!.`a$.h>^n`>3I66_7<IE]\C,a!qP6m;WQ
%a!(,.?6;JchZ=)'?NaeM0$d&k?H>Ds+i4CgKjgMgBMsU*;rmNWF?!<]g.G55+6t$h^;lT]UH1VKI8*QZ=UJN@c-=-`*uHGM/I9W7
%J]dRVc29OR6!UC'fH!uY]>\BPPq#$#a.;KdmL2U=.(m:?=Y'pIL_@GBX@]*k+tNg]+olmL!G9j^_W`g,Y`Xn>kREBtjQdL1!'O(X
%H#*`fhiSU'`e<O_+N3eZ^7se("dS:LNQ^<'Gj#1L<$Uu/!9/Yi!i[E+,8(\?15D";(:i-+7*HAM,5i^F;r%d?\-)i,qk\bW@YkYP
%r<0?0b3)pH%_>+NRNIMe*A&LsnmIi'FE+%JP]XH.<,3V:$"b&a.EN^Q95)Ps(s8j3b0Pki8:=CaC7)@=f_.<3q)tB`r(tTWX$Zu?
%OMtmN$^e/RiToh4+>&Be!`:Y`(coKgds%R?UE%FOGf]Cu-UB2Q6S+=/JWN\iM4W.p=@qX!KP?!$Rn#8'2d%960*D]7Gme]o.6^+j
%8R/E[3,X\^J3_A?<RI</0UU;F-$dZ>8c7639"fnqKn<A55Z4tCAkCo+('N=F<@)i)V8->uS"[7\frn2MQt$7+QfABiHjhk6p0K1d
%M\$54#r`2Y66F;o\Rq%Vn9n_O*"C@$40/tpb%GB1BEuo!IV;*!T497o+\/X+oJNH[](*%@6Ql#CIBV-21oMYE2j^TG_?ihnB;eSg
%a1CEsE:l[]L4RN>o`3I4#Q]\N#srocKM^&.4`=UK^j0o:RRk$:QOG6%bbP?94AulH6(f$-nsU9+d#rgr7YRBp+6C==7AmHleE.n4
%oI&o)FQIlr2,o6R@dO`*6p<u$:P=CaLI@Q9!T\t"DH*#i+;T;0ieePpnLR!H7nb#EeC$(/*USZW0Hqe5/18pKOCHVn3.;>`=bi*S
%(WF8(CdYSH.fcOQSO3Gbi<g-'Q21[De^,#Ks.bsFf+N$A;MlAKP!eER0?5b[>)YIu1fPFB%\]b-,^t=&*PEh778>`B3"7+8V3VFh
%#;VAY7S+&@Wu1p-W"*Pi,E^HR*isnu$-]J!fL6Pb4Dpp9C=&%,]&o\WmJFI#Y-C7)Y#fG&R(5`j&j67`6Fp!fCD<r(XVHF%PfoHY
%7m7"Vi^dN$p-;L;!t!1"Nh_%7WOn>@&WT/(^d0"H70&FF^>bBhoFnd"$6qm%Ge=>=2Fr-:3@,#^Un@E^3ZLQoZ[/F45bc_2<lu,,
%?t@7@Q0ZD<a:9k7@L*U4r*(+0mO\LImU5c)+hB"0gfm"jH9o0P#iV5.G&IuPlO9n=DZe5S8BqX?)84c)@U2K?3ThaZRNN=2(,5cT
%h,ec<h-/!FnPGd2]\SLI%93HBLNdb^`/QpZ@oE$=a'WlWJfGt`?gL4]fSn6R"C\+9ih@Vb#>kI81Z`:d]"52,F5W1.jm]u':M6t\
%N!UecA*bg^>:Qk?cf!iF;K=)UM@!pJNN#fN?3$=;0'?NYV+Xp-;FUi5$IY'`8dTDG$8HTHGn=$KjF7F;R>i0d<5-fYl#9/`APA'n
%!!/u['c/9o+#lS""_'5(!59^]!\3me+Gds(Bbqb?Nm$6l;\DF00_TQ@O!("sVRk9:5aTBI:kukhA.!Ca70$D*8:[;#p;/!SEX!='
%*-[(+9d^4H`.E\.f0*0>dJa:,&nf!$4$c38oPBjYOIQG(CkCm#!f,bN`7N;!%@$49R=`aF7%,Rep8IP8.3jh@.,^(q14H<-`7H.a
%&2aqjnIRI8(Bnt<X:n"gcVpDt%u7640E?_jMFsBA!D)Q<Co+YuJf^^$-RJN&A`HNRA1R+hSrflmLkLJ077DK<kpQ"rP1Ta<R-h*j
%eG'Y4(:";b(^b?U^'t'eSs4@2#p#!^O^6HK-?"@[ktch_[*JrO#?Jk\`/qh?E_4QC]h]VZe>>*-0rfFgrIlX,Z!11W2NTFk"qi<-
%U,F.FY*BIWjBW%3`<J2sZ4I'_1BXALGM<-p$=Aq^&.6f4ON\.#)aK4S;_/'FNe(/Um8f`$1D&>[+D&7!+)X`-j&333E(c9hPqV@Q
%6WG&]eYPYB4bF<_'&Vki-3sp?1fEU+:E'>I/]R#.&4<[XGJTY0EsVCtOJM8N60LqO":K.8dRHd/'LS,Ah$:_Dp)$?^22!A-/g,g6
%f+9GX/k61.`uSVm:jE8"!&k7=ouMmp*M'X&D(O2_iT_5G%FNQ/*SH$u'hEAR6AJ3L"niH>mCI"A&gY-a20UR&K]SIe1(dOpB_)Z@
%4dBIg&hn(=CIa3D8-7FChL_-$!9>3ZY(Ro_6:m0-"['TM8Kt`;k8b/u7(e/+Z[Mr+quY.RZ!S87]WIWHhBn*I(iiYPDc]>_)fZLI
%6`L.B*;XL,:':`r5Wl`O8/Ea$T7RV?<aL"Ycr4qtRU(1H!hHBPfu;OX5SoS<;C@8):m&m%:ag</h)((\?OO[;WXXb@TlV'K2?4kf
%<X_g0,S?]'$CPVMf91T[p.Tg0K)fIAAA0A).):G3KXsWn!9eF%6jhV'(\(71M7NcDSY8&Af<Gm8]NKs_d%Jts5.$!b(eZ!)lX/l3
%BEo#u>)0B/*2!Dsan>k#*TOq=Fou0(_q`Lg!YCd2Cb-f%-lu3\1PKD,I##CD5B+T[;!KJ``MZ,t#2h-G;HX,QI(I6<@.r(0qugki
%-,`_V(\\)B=:k\0n-a+-(;h2H;O^#r>nFJ3b%L:cK2>Wo4gVg4HqE!IP;gD(\WUUbJM>n&p"0+^O]8:PDFG>OOIMr-L'$eC82<1d
%jredYEoMi?:k3@*#oV\4d&<OF8)7]9"#P5gEjKlm/I$g"W#lfn6ehk6W'%I4MH%`s;Ca,[X;oMQO`O#N+:'tRBD0$#V/Ts*aF9i'
%Bhr!<07\__!"gP9G0+k?-$V_I$%7gg$%9/s(i>T]=qKr>8X$e)DBKZ$P'd91gigE)fb5!-E^9uP=f;n,C.IiC[';1k\Zits8VmMc
%;"#$>7=P:?cn2d_g+<I>E2:%(M*$YHO^Q7_HVVF3^C`bJ)X]T4feOR+,*4nlN44ll$N:LVcEnNiWdmL99A(GT!_<GV_83`9J1-B3
%'>$N'ctEQY<4t&6'<Pl/cCO,0hb0h.3[u[=/!WL6U<4G>']s7!*fX+b$7fks"-3g4$F`c&@bqea'UJBegqa.*'s^K"(I1s8C;/Wq
%"&Mnc\cAIP<]>:)"<^U_YR2K[GF3-/7Kj@blA`Qi!!3_gK3_TS/$q5M&EQH9DCQOHd@RsMa\\!Mi)n6E*,5cJdC22l$.f@O)G#[.
%<@HNT82ZJ?rO^"K'l"j77Z+A$H`DXMTZ-hZ[n&9*66qu;8#?IlC`9j1'+\Zc6JVUDG6!hn&E40$-2Bc2":;?Q)G@c6P,u3tY)=D_
%`%$Ak5V@ZHpoug.7d?^52PQWa8;OZN:Ngl9]HG?lk=(Ideska&,"RMO[q#RJHO9b8]XTSG-n!UiV?heGO7bCJ1+<4^HC(U_.,6=Q
%g<p'W:.pruM"5(PROM,7KG2IN/H^R/?Y[T#HOfT=C@$tpF[^0`k["5"#\&J0/qSW?OauO^&/B6XPnu`NP&8Kf&O\'rMhtF:;3>[/
%0Vo/2M%sS(J9Ia&lrlm>87'b%Md1[KK7Uh\I&0FU0k2Q2A4JV"\^HTV5pG1;>H!*@0)L[+"9JS[$>N0UOXp0?fJO3?b/R[l",S#f
%RA9ru3BH85Ps?PKk7lZrWX+T9A00E2=6LGkNl[GM$:&G>Gf?N_Je6drCm@7"VFa3;\HJX#&l[CICl$2R+>?J7og)"XKEP3Di$&Fn
%4P*1ul&NEc<>Rr#U/Q6H$=Z@r)$GMQ,d>q#70mhMe7F^C7-hJeONJ\+7$g1H&7:_!kqWN2GZ0/GK@"?Gfsmd"+Nbt7FWD_tZ`\p'
%29[[e>mH3+p+Q!D)FAN`JdW_-iUXHX#XLAr2f46'c&HjO"R@0Y3P)"rl6$\r(mC:P,"INSV@4*rhPj?:g=fInhGl<7Y(H^BBVXl9
%aR=GoV@JcIKs$%r/j%O-*<\gVdG1B>d`@]c]1aLRjd5]YkXl*f^(UE!Q&s(N)t-HH"<`.-a_k00Kg_NhX_!ba!(^h^]G)!(H=Mc6
%Kcie*2B,R&6""NOR#7B$h;"_54=qCN/HgVU5>hkT5UZp[Np@5h8c$aI6OH'c9Fqj&XZb`R73:>,<iC`qd$*;M>R`tiTXXqt2'gUn
%`NFq`J\I8b.YgDUh6psR+`p:)iGgTJm)dth&EE02aZq[D.a`AEXG$Ym,<+*d3E.,*Q0h`\!9;FKMp9=Sb\J@OaD9WZPZE?GVG&R0
%"aOjH@M5O+BXV\"$F>:TCt1l!dRI[H\/#,Whj%`'WJ)2$D/(6X'EiS.6qNnP."s(kbiIG-Kq!+N=[_/ZZ:i$:KIBo?>LF9V\[p.e
%9-MI>i^TUUK"sV[&Ohu-8nrE!"<_;4>jdTHk9N'(Y(\9*FuPdl#XWX(g=/G#a:X31KdaUq/.$>!7M+GjPG=$Zk`$mo6'I3M#go)l
%,Ar/;Z:Qm^'<]&p?&Bfh`LAHK<")'Kg]j*ls,N+G[*g9l_"s1/'fO"[6>Rdr6Ll#XHm#T=i>RKn^FRDFjJ<DU1:)e>E?LgC\/ZAp
%Sg$bmAfbT&9dq=uN3#p5nn$"+.>90Wn*&,p&/F[ThF/dm<i^F1E%(q/M6!\g'VYZ"UWc@S7Q*si7%&BSF=@?(>Y0Y&UpMgDN2?Bk
%[1Lh)*+J/AL^J3K1>-%Ml<S\H(ns@-IGPZ*Ce.;0$cp9uK]l*[_q-E=[]3e-9_TY`?HAq6$db+&3s?Q+E?_GuNt@/)'IETq:5GZA
%[\IfDJ@nBBQh>;P-u.O,e2)580Ai,n15N$Qe%@ooP?lAMM%VJ1)h[X_%37iWq$!O:M4?""(XR#>50'q5coH8krnE_:n$/XGB<Fok
%_K&$'k7Fpa$1DO[1^j5s/OE-cg?pAc=f[r,\>>noDMUX"(^/6opEi?H-HgkaR%B]X.1PgkrLm*08e,9'_^NkJ_u^Eh#aeB?`,=DP
%)W?]C(-/hJ^(b)Z:.CA2f=RB*"gn$?G;+QcBqI\:ZLrigh6eCq^ZWC'HWWgY-1s%+0`\,e%sT4,-!DkjFm+tOM$<P<%h>&TSWC#G
%QLLIMm9B`EiG>:7Ach[NV_Q/(%V&W/_O'"+Kb,6[A&(^G^B2*YL5/&H<MlKY-Ut5j2bM$!_7ZK2RbWQ?=\scjY/8JB,"qcMZ'Fb]
%;%XGN8Pn^89&VdKL,#Ue2p#>j.1'MiU.J:X/?o_[e!.+"SUiKTTK8$+VUPs\dC-Qjhh0)UZo;>k&`5-pL5Rs.UG>I69EVt2%Drkg
%1<DanYCt+$=[\=-XDbg)!*Q5P!/d``&=jC_!*MHf&<6f!&09ln^f\IW=D**-*Jq-=_mNt,0a?$PAbk13MSo(WeYKWNcobTAeTj'c
%WKh[ABGVOT<89$:>9lrf*gPEfO8@=b_V@*o`7=A\)]7)'HC"n'W$@$2JQHY'nJ!O1ilYr>UXJo:QtBbPQ@[Na#k;FNm4G$'Q5G-j
%5,4?_+uoouWSEh0/(CCajCM-(*)8dunl&dk.Y]+"*dpBsW:nJGHrQ;GYG+]aN%%c;T7Cg\7]YJ3gY"a#UGKmq;smY08cQfm5,).P
%KqnC'bC3LVQijV%=+G80ZN*:%QTK3j=FdW+=V,WV>\n:WMT,6YL`9HWPUJjbNDgceQ/r(#!bNB<=j^^!7,f4T<u=J/MJbUH2#B<?
%lAN1QTMZTn:1tj:`$eJI&rg=I?F9"oc9*mF=>';fkfO0n_O&/C'BppF9X8KQ,`Z\Q@g>AV&_Kn:"D(An/!InAJQIH5''%Xch8g%_
%c(nb/BJ&67h*9K>6O;hm^9('LGut?S0P2LUXrrYF"%!CKTPdTdOMaEcHD$HF:'%1$.ml(]jCG%Kj3,nC3&QV[Nh)#[CMdMlkr(SD
%O!:"5:^Y(`DG_tYU6)?>ALP-E$RH)KZkpkVQ!!L9Z0m7%,(75>^0QU=lsemi>img\H*J+jinZ;5qlo(\nc!m+>G@tX)iDo-SH+mk
%+22PR6,[_R5RJ49!ObW:aHE6&`urjrM5/$9BiO8eAA!LB2f,`LoCnXGTtYM<aYoU?PVoOhX7:Td0sO</OQhRsW6Y;VkrWaH3,)=Z
%J#N^@KK>u1lj]Qp0So@=6o<X(1&%qM]b-mbULSS%Qm?'X424Du+/9N@+AKQ^5(-"@$oIcHHmY)<(AZW5M9fD*-t"1$&R69OK2Z9i
%'>5P`P%k$/2Jg6P)%'$;qN`B?Oje`nE_@#][4q5.[g:C28b6\Xh?[&]c)B/dG4!on/e\s]b/CAnZDlB/n1AY!Nas+#3[\do&r94F
%P,^@=:ZJi3FuT1.,o@+7WDq(bK:'_V;pieW@RLa!G?W)j;%USFJM1/5A6ZUTcKpdj%'%6oPe3c=-fkib=@,@a+;:r*$&kLeTl7fE
%$jo/N#9eC0Pc<[A5O?'fb:VCf-2)6?s0,i=&m4FE^Xu=fgQ)LBRm-U0)>R2U"D=c$W!i=6GE,>?bk8)DVhM/+l39,QcMjOnF(NWi
%7*LH!,:GCTMqnO6IP]?A)/r%R*<(fa.u@YmBN<_>X+dl1OC]ElF00Ro:ic6#OAg+QaTMK$qAT+f)a2-g0d9"6VR)8RL2jgp[t2B8
%.Pf'P0\hHNj-Yf#k,3\`$pL>BbDXC(k.6X=4_/kF!Y/2\5(k@:$?pC11bt>OFiF`\&^TKrN%#;ir)jOdYhKDET;Ab%.cMna@o-,j
%h]d&/Q92e$%%K^G["N5OeQHE,Be5,(Z)`TeD3p:<FP1)>7QUnlWlcnY+sjX$Gc"*1OTj&*6O%\#`^Ag]kos]m5l&L,Hd"f7,o^WW
%H/fA]aW@XnbrE)BZbI><ND.)!Lh)3Qif)6pFe<`HBjr!9B^4Q39SZ#L6^Nq"''b^?+-b-+#0WXQq*?b@4l$!FMs_Y92-96)bm?5<
%PR,ADD7IESa0Ne(Qae&^4FE!5']ZbY*T:C8%[`?qW9T;@d09:g'SJ`gSC%^chl]gK;!h'H)O][/F#@f*2NE]n:Z%K?>:%-SXIlJ7
%V#?.n#sWhZT!8nrX8#f/TG@r^\?kgY3nj;:SjIL"7!b1B,D-;5X#Cp?^:^\bi7D-iPm$'Oq_4WG`0%\T!UoWZ"pb!GkTkHhi=Os-
%&D6<SQ.d6(Cl.\5\SUDJ+BAO21\Wj#()aI:Dq=VQOkHPa5'J%7+W-6G1G]J+FU]7;m^Ok9#bb>g"eD;2q0G[T1e^]=dL1H:3FYB]
%6c[h1EP[T(iGo&pUnIGu7_TM1OG!8bGU\CSj)J5drK1l4_:nI3<5A];QYtJ.aoS1B=or.WbY,1Oh*.or<,<SC)*D[;mMA$m7rgAM
%f`$oNRpG#sPIaaFO`BDY+6`Tl_?mM)ClPkFq%KiS=%b[34tq=84.3IpfYfCknf(P0mlo3K:^sFuHdqaVFfsXFj=t<A@!3Ijke2>F
%Y?pU=Sd60PP8=M=CQe%DH@%B.jA?!F$sNf(9%EOg1$G3:4R=sT'p4Ba;W2O/3:!Q":)-Nm\P@H3$0U6/!Sa;e[giC*Oq,,W6GhYU
%P`HfHA+3Pp=8O)]brG4&EAW#skH__F*W$6X=(gU7$Jd>F>,7h%Y$-sZ2[LKM*Z>%KX(QlNWEOtT6"_0V0cn^\fQ_$FDno4G0KMc\
%3/pb<cFR)TDdZJ[hd8lX<5Yc(5"IFF;$em'o*?BtpP2F4FU3`TE9LdQ>J\O,3QA%W;i>(Z)2/WB(%FU_Ffu`\6E44E4dB?.FmCh]
%2;Ac!lLGh2^ee%k]uWd%;-2I&Lla;j_F"Q2;G=`.OT;Cj`GC6kKl+J'=rtl[o*1(p&ZU:?3&([qTb64;6s7T$a;[dap>CnXAPl>>
%XA7O`H-A>ubo6bW:/i&IS?\DK8"8U9@)"G;qZL)FP/mhoMZK:]ZZEdR92^u4[)"@a@;oci@KUZ;AFhE,(_UiSB#4Ll+3JIp`9"\d
%9[L*JR0=p5d823iit(AlnKQCJ@2Y.nfU7/K<Y#RaVsGjSVGO89KO]oh/I-305tj<saJ#2YI5.iHL=F9.@'G85=t]Q-E$Bra!&6M`
%@Q?7a$>#`!j'#\&(thtA_&h-@33-JUY&0PnWd:=';Z9(aZlM[ufH&i$?2CF%#dEX+,is2A[epQ5DS@JO55Afnde_0QHa1*kiEUP*
%Gnich4eh>6BK1X?,ClP`Q%]<DdHQ\r"VT)E_k?\0U<qm0dr[:(2NJW53$`+8le76b#4(<(Yi%=735-E`q^/#-@RW6OZ,P[$JTS[8
%+*FsL2fn.OIRh"%h2>4BE=s`_Z?]Q<@;h<=L=X"\;t'Q!=:o1:QsTKNDm=sJ#Ct)t3BD6cmD1#5![cp*o+i*mgr)KZ-ANK#3l-7Z
%_+4E2a]@e&a_W>aDFu1eqHfdBO_?kjgD%GR%M_^r1mSkK[#?CE%h4`jpK+L^)>2>I49<;J'J*"O3Aa/21r</++dI"D[LbH`XPfp2
%(u[o^4FRW2'QagN%r[BgiuK,d_-p>lIL0uCMbp;286dV>,)H$?Mi\I%AE\iE8kB:\d,7?hA1sjbc]sZT(sq?,`""]1h"NDZN<m2;
%\r"VUUMboBqk%a7cC=^:riF&6,WN1RpXL[TeQ$lfmmj?&"?t,dV37DIL*l9:5Oo:HVSQB$<g)5;XS@Co?g(rj8r>&a)7,(9J]kZ-
%'#G\iX29:;N*%^CM^9OG/Zt3X!SO:Pa,tM+4SE<!$M,bjLCA@T#ZX.2_r<,2KVU:n'+(NG>0PZj;DgQ@_B)iA'n0d#h%&_SK420@
%9BTbU#^\<Z;#Lm>S>l?`@s`P\PPhah'#GqKR>WA<D@m=63!tf\2;s[fJC&:&(J@*SdREEng]A=5QV(/SK:RXtON</EW?`eG*6\FX
%V(eBGq0W\T\L3V98TV"m!>$qOB')7qP*Zi%H0(opO((ZdX!mfa8YAHUe('((OslZE("+^!-)*PLOj'3[LJTdZ(E4gmlkm@)!tTI>
%9_SC_d$<_=agGb6R=q5'<T(QA;H00rA?rNBaHD\>EWN?/8$#AHL+nE2s%f_+3m"TD?K6p(\P"7moK_/%;,WA7V6-GX0["76rN#8"
%rK:3o]2(#C<!+,8AeM8aU$I]48U;6G]q]6R&g:>NBG++1doI`O-8??t@(L"a6`@l\.%9M\ioRas<&$_<b#$\N66Le[PX@b]h=[_8
%K[@QDF'05Cn:"9C;L8/PH?4=69sdI[WbR^OT8Vi/2+bJI,c%If+cm%lW_$kHH$taR8I/=n'P3KTE7nc'%-p5FMTA<8,SY"aiC<a^
%d*1%L$(qZ1:`_<`YSbX?\m0]N5dZPK1J(6G>ZDY!P7Xl;V5.3K-2k5H:!n(i2CuJ90e+Lne4JbIfpNUn0/.>d"B2B;d`a<GQ?`BS
%ASr$E[No@c7M(Vo.NAJCVuhhZaZ7qpG:LQij\[aX]+e*s$&N%@;)(Yao[3NFk+q;OT8DN_Vk9`;s-l+B.BE[#RGkjk"Kp-XK"&&p
%>NG[EMPN;nW%f,]ZQ.PE^<m5EZNg[I7V4*CBeCVi7e5edF4niXWO)>@ENb[\SH2Gn<;T+aXdB#0LlBN9R!q0^PTemJf[N^]nQmeF
%9%he&[)g:!=[V%JK;BuCPC_=beJlIN4:HOhLUc_6>Db'6=[\VWQB>#&`C:b>aN^+#kDJmJ<SK>ab\eL(j^E^oFu]8#N;hjh(Z16V
%3Q[V0W(A_X>LFU3q@KZN%%_RFaZN(U$[:j(-m53;P(g1LO@0pcDEZj`#@,ru/:LD\Od!f$IbaRp"s.mr.Zg(PflGV6%3:^l.gM1q
%j&$HUO@keqjO+_pK8tTl!;g;d)imBAgXdCh%!+$.QBWVU.f+7R)cf'S>:Us=.)=<&(p3H^[30$XV@/WmeL*!<_Fq1N.?ABWK$*2d
%93*"II"IY6armZ@/9LKWCta&om3L:0C4bcF;*],U9aCH;WmeE>ZC-lg"Mrn;R81Aa',=&`Ju26`,PeX88][\GHIGI3a?aOfKZEVW
%Dc-\Z*6$W/&1@`GS9QXAjA9``B'k_)n`nUZlObon4rup7-ffIZUTh(H(QjE;K&AH)s.P<rCkids!kVs1cqI;&W9aahdrp"uG!TgQ
%%_ffp[GcXO4Vk"d<I6Om"=qVP)RaK?ndt3,749^,S;>?djCiGQbj4Xc'59T_/"cg$U:pH4Eh@&n=]+Jm8[aZ4]=QiE+SZWt,;&,g
%;"6T;FjB;.6m7Ea[ZNO>LV#sQ3q/"Y3o!%N:e'5XqJ$3$^amT7Ee*f/n<M',LEqh<-K89R/W/Jt;k+Ko:2GXONe<XkaLr-dS&Vd!
%o8$1.<!,uU%A-X?&gX.tXD]/CW)\3NQdbS&M*6tGfah`]o;;H]GT$NYh*06^o@]]+"DlT]of"_lXJcE?q0X;iLuR]<&/NO.8;9f=
%e:Jn3!!tr[Q/iC@Ji](\;_EQ*6%R'f<@S+a2(M%2:g&n0_f]>&4cjoVWt6a1i^$m+fLYJ:RLdM$*=Eq*/L-9G&PY'+\3sE+TcO:\
%QW$I_;7;.k1!gX=p''nR0^W75!"I=PHNY.,T]66:8A)2V00=,&^u<"j<$F7n(`UNJ'L9G<Jf[,Af!.&t&2O5h;6()<#71Ke'h.75
%#WWOQ3:0\[>W+Qpg#`@!"mQFeN"t8-,3VDQoc4UJk%/'nefZt+7=q3DXU0Yg.)V1T:)"`>Ddk`r2qt?!&k/C7\fDoHFF`Zs!eF`e
%f[UTI/K1u\EJqkpneP?p_-T/3c_!8JA)Pm*F\\V^7^UG1NBFd<aN,t[=AkMR^\U;qUX@sNXQjlLk@<-ei?#q<&t4YW';mbp#un^o
%@^I+^9a(b.UMUhfqJha%3C(YmLJ[C4VVqEc$DAd67%@d1@1)(,.\&93KX!95&roh#rG^;FG"3'&YM`ra:u>2n@"a2I?:auhje+L[
%e/,\&%i5Zta,nZ%JL&.dLP-&l2\o@V:^AVc<a4+L(s:mV&La;_k&PojGVWshpo9b2Dj1k\J@/5e*HPB']Hm,G\<d7B9Y!GUl4?L\
%nSMh<ES"`>P]Cb!E;7I'iJ,=)0sH..P%W/ahI?L-!k5!^#$3die4]*ZRMSaA/%A@IKhXUf&qH6R,e<Sh?c\Uqj@2PY;&]US'k`M;
%g824TJR'3:[?"H8j%8kDP,"p`+/`M$C.)k3>aFGEn/$YMK#E;s:=02DRFb>8fFI1a,5TI8_0lDt;(IfsES`T@Flq&f1K7"JR2mR)
%jdd$e#2e&GV_DiX;s,?6%nVnWR=a>F1rM-i6Y6Bd(A:&2UFmfqD.BNk#)4HcN^-.RpcrIu2?t7?C]atU'U0`7%@aaG?[`UX@/DE&
%1`-bF49jgpXSMN=g7q`+o2ZB1f3@`s5ii=Z$i'ME5`W_<)F2F7lEFH.qOB$*O>U8ffo<lp<o%DEO"D;tW_eMH3$^WX6c)qB('kMS
%OH</aX/7&.5Tr7(8/Mu8,]c=!Z!ACWf;Y5p]j+#;ogQ`:q<&]RTmaJQ!`2BY/GY/'Vqu1.`mBa_#9gZH[6+9neu)N,?5UH+j-?LI
%2@_l3aNcCn%F._HD&]p5cW((@*%imH9&Mmoj8pf'0Mdpt0]#/jYnY>/H7r46H%cBm%eIuNonV8&;V5g!(MD9@=-2ns"A*T#8I@0p
%'M8`DD*U]oQe=$?l:#KF+UsVSTDc*L7,Dq.6YHBi5=$\(([L]9Opq.@*M<;_f2*LaZF@s-1oJMU$#AL]]'Q"Oh6l7uC^>IHH-1[`
%qSkeAHk(U4jqRnmC.3BT\hU85e0)]KHOMW?S42?G1YY`gTERlS%PlUN7B#,n^jX;l+^P"d'aqAt6/htZ:,jM@#'o5A,m\u3;(G0S
%P/)FL:9,up/g);L-#]==@_ji#5EX=nIUZ=Y;.["\a.o.ijc+-i%Umg><k3^AckN_XO=t0L_YXZHi/`hK2#"&H6UQ@;YLQEM&LI#m
%nbRUhQaJjrQ_jRKqC*/ehK0i;3XNHVg*)H^j)\>1F)$Z7h!q?Uii)$`SB$ZM-C:\!4+"+Y%Z#g5<::q4.GWH+E$uHBOUBJD(pNju
%oQ.ft#`$!U5XH*2)BNfj*g*Z]j.&ljG;P^PE`(4kesgUDL*`'E"Aph3_.$1C=CC9=0q\Z>5b]'#K]Q$<#-5n&Z0aWPKeQe#]g3i\
%%"X,l1Yk&fYs9)^G@0JDLa7ZU#/_i+jXa6:/>`u8_7Ii'9*o_XJ@Rq.*!pQM$LdLZW=bI!o^klAfb%c31LhU/^fuZnPE7LGNZCUi
%5:!n3Rs341m+[H5GPrj<&H_M\dkfs2/B-7>^JS`MRHK[oemTJRX.5M>%]o#p,`ifQ@HZU&apFs\#^D<+"Be_qHC6;O,Dlgp3<7g`
%aH4bHf58M^l<6tHI]k>K*"1eY\ER7=9;m!,0U%6aT?%Lq73_:2</,/dCYF:aO5lG;$%*[L-%mL\>a%4[LB5JJdVoI3'8CO?":p.(
%3$T[ip7W`V,SamiOIR^$J=iT_5d@Nm,U'E=Hk#-c+;s`LJW.VbIkt/e-na*pf,/qg5mi\<Os]Tf/`Ejg0I63N=g?7RgaE-DQ!WhV
%T$(5I6ODRIm&LDt6rai.+)mkao'NF>>LT>aTW(Vrke;*2]+M=_19a,&*ZYsHmR'n52/V"phoNXSib--&P/)T+A,5m"kQUb\+:5>8
%RLQ7"(#-?V24Jnf48G?>[cXVD`NhQcAdg`MjT%O>"8l+hFRVm#1o$sfE_Mr(r0/>U6l-'664&r-]uAgRIC\%]^bUE_Fnn&g!hYY1
%j?A5J+d?N\?_og2Z^6(8g)`1NYGN3rn@WF7[GBjNbK0`Na<hZ6G.e[%Sa^hhZVHKc[0\\?#^(R#;_dYG,i+eYj[%qOR%"8N5GI6-
%Md2#che.5./Llc)ma#"/aNW*8.ou;=9h>Trk$lq3X,!=4p&M[`_ED`Z(1$&PL^s/R9DR+9+1$N,a(h8+e9p0sRZN\tF:J,9L.tiS
%%OEh:I+;Q9(oS`O`DN[ae*pfX_WY0*dU5aa8sdn*5Q9g!oj('g]lfBDI_+hJZ(<_QZA1^2oc\8YQ>`.i@ttQn\!_u7:HsN)5N9al
%CW+)V,W!I<I8ugLp[N5g)>??WgLaXgo8:fUY34:o:f-U!o]$r#=n`E.kHG\^%*Lr=jSa00hd::C:/[J1/ope5Td>40>jZf>;h#!C
%0]o<Z=Mm'u#D%%sFTmKO[udi=JL"@rgK]e0iYr1RL/;;mQl.@"9ST1^,)7bjQ$j$Vm%t72%.3%mKj'WW)gKqBC^cdbF<1j'SA2?<
%2a_*ekUr2Pe(H=5Wk_ABD[$EE+S#!?/NdAca)!nm/4l"8l0(SMR[(tQheSb>,7'.<MJJUO]&$FB7k^%1NpiWg!B)%Jd$3b4f4%4U
%poKP*'2HSOg(RKXQc$T+NWiqZqNP,C.Mh]5ZY3,_`.c+.-@W"oN3:)/h`3G+)ua\pgm.k#X7`O1RuG*L_N);8o[+?6NC*]P,D:`h
%d4Z+f1;)HL'$'fgg#\3jk@N:*AA`f.EG=Z%0&)M_GY"b[T/X4>,K:<^_Hc"dP.^l[h+1WdL;NNf[b%@KoLKVUUgqX4lb"X@On:.Z
%*E0lT'XB5'YQs>GqApOFZIA5W)[uDY5$FJ>2RIF!g^$4V+;Q+`%FbIH/58p\mR<:DX7-\Of_2#3CA>;;YX)HcDNfV&0=Gi<LI5NN
%(X^"B%N`2*Q+5*9_Epfg1OON?e9_bl6$uOlNb6mTn[4['rS!`.2t@7p)5MaGUmCE?22=M#INl7-_/pC%8JRoL`7A^n;HLU3dUi.F
%SRUZcRLF,knPlS7Da\epplj8@ci0G(12PoU`rg*>rmcJ1)O\Ta>UqK$V6R78Q.s#0/>j9+*LAXnB!QBbJSEK2MFO5]$F,*$^,.l6
%V8(Y!#fkZ.H%DV=Wb>lDM)'Dgo)`>u*7O'30hsJWpBH#4([fc*lYU#PWB&l0"TgpbBj\:UT5Oh<DgS5/\\j^q%EoUSlX=20\kbEs
%bX6CiR"s#mAig;6#3PbdbNESIi)&M11bef5ei#3XaY>JRn>(hjfg6N?%#hI6Y6JT/jRX4U*NJ?@(j%A%&e5"2<B0_i?SGjJmQ'tE
%&nOBNp'!7u>2`su\Fu)L?F2@fU/Z$6]%?nY*\+`5\Fh%Jqm4H55*F]&q6^-_\GH!n7cd>c=&"Bf?R59d?gh495<UW'UnW8C[ZGL$
%n#OU&Gma@l*eJ34\EB-_^5WNWP;)-/>Zrn.6PpUF;L'uK(oh((]Pl"kG>&AjNa89c1cd&?L'7XE-m-@t+pl0X&D#M'7l/i(n=Aih
%0e@YD*G,DmmYoo%EZ5chZ!R&\/WGOL2K*$aWS;bt>r#<=6+BXIFJtC&@Ll)hBW:;U/WbqbC0;Zh#jk_09G`a@a0\+KqS9"Cd58&]
%Z9YX[_aCj`bG^XAbHcsQHSm?IE2SJ"=^Emm=l(aN-d+ipC!dq0_1.[<;MnWRP+rKqH/:_AZb@M-5eBQ'7id"&1rMp,cu7t_q'<55
%2=,lpD$klg$MiZnV]]Lm+A$V,P<?D\9EmFL89eVX8+Xo8\Yf'M8I@F@D_rESj0BS5R1u'@KFlpO`WF!iYKF1P,LiEggJU@)Q,mkP
%cM).r5"C3pLAAbRZ<3Q!2KL]F0<!V:p2(j;leZK[%#G(r931*pMH5L6g?d)qS0`KI[^t)HP((cl01*qr-"TWfM!*i*gZ*rD+RB_t
%RP<!*&#OHdXlQ]jJuf69<XI5dc5nNQq1T(YJt!-nq<iLd+b7[HmUsgqU`.oD#`pb.LC*9Ecrh:1Za^,M@ZF1+VUosGlQK-h&X)'$
%aj3dJpF:\&S5r7jQ>R;%_%NqjK(pFS%:oPg+TWZM@OJ\u7$3!e2.n_TPH^n]dBTMZ\^*<im$J+c)0'6\e(.Rd`<.pg-[/Zf2\f,K
%6lq#O#tUGObi-.<L<iY%L0$YYBNo#r]0N*D92^/HYq0HIjV+F')+!8ZA#b?$:_fs`[:?#@5bq(afQVq%P#4rnB=5As"ZYSUo+d-g
%p1UQ7Gah%gL*'lXf<V14M<MtMd6sB,'@Wt75Z9WR;bnNZi$,OaHk&6?-NP10_nMRG[&SS/&lQte[uNN$nA_2G!OiNWNKHe5gD):-
%#X5,\TH'ISAep#S+hV=tfE:#o'm_Di^EBO*Q+/f?*G&PNcuDP)Z"$QQ),(@WA@LD@@V(uk=;4;L.#VT^:o;(jmK=.2)XDg_1lo_b
%:nY%M;sL1RGr&Q`F9b!]U^G=9_#AbGE0VoHpVIJM'Q\$1&iYCNM\^9)`\:/YM)LY$B'o:oS8-7T2)1sa'S\)W%]&F.8]*qF^pMnQ
%0uH92V/E/[TQSY*QneZ&`=aX7YVmBkEJQ(m,_cgI-#sa<iRUO.!S&VrLjM\5q8TL`o^MWfo4`:#O@'7G\2WUN*oG&k%V4YZAiXR'
%OFo_V9m-Ln@]!hlj7R!/@/X;;>0-^D9j"`"/iEE_0XW25Rc=9/A$hOA1J1j%9H0#`,#c*!Jkid#@r9Kila$=PN;$Kii]1R:#I`rf
%K`TSpR]Gl4HRrp4-[:!Ya!'eq=<)rC:523"%l\O3%j4_+SZ*sD+*%!dA*)f?KpDuo4d\Wd\n3f;aU%']N1];f]n_0m,j.LHF+Z,h
%Rs1@mh<j*u(&%RkrH+t\-p@<+(TW(lYcZO#Z@X_?8K)BXh5CV?IG%FUc54S/J)<3Ycj\#G]!QE-_s'K25tK9U#=X-[LilH:oT4Mu
%!<fEroYd3O#$DlJ#:p4nZm+Ne;;A1-g<kHUC.P>7ki%3;8gW)Z'n;@9<a<*f2@lC_>esB#(pBBnQsZaX%Dng4&&&LO?[^>QEKcYj
%8H=^eUL-9b=!V>.)[n1kCNq>*6\5B0@fPI"HD8\]TZ_-uNA?15VC/_*MnR_)?Tk5@%1n2S?=Z?/]eODP"XInVoL)r'<S"ZWQ^Ki.
%7?U:^T5Fdc8FFgIp15uGeBnrI<Zrh8h4SFr>0RSo%gUgV)c&3RjMk<#bu3%Sh-BR8NLi<,1@<WQ(7Yj-,slhJY,q?U6U?e)'WGtU
%e$kOk,20%c/?i*1EQ3D=QLa8q1#9Q7iir"uP`g>bkU\kC!=4#X9pVq`bsi5+jHq$!TO4b_"'_afdHTf/.$>]:;$^D>nh>PNMk$@#
%O#mqrF"9C=([Q@<U.?Q2=NuEo*BFJUUaB1H6BR54VAODJ4S<Rd5]eV'n'?of:8Ya3DmX5*>ZR4j^akLj%?aTu+Z]MgPBa>]j9d>J
%Ql-J@L4g#Gq2*L`$&c?9I5bW5<:[q78nRB4+\%ZM3]QoX;D/ID)C`K;rh-O;ZjhoHcF\X<=b/"[cOD.Cihj0g,g@"9>RpW\AFSSI
%_VRO2&i6o.a;?7Q9!lE@,iR3>L^r/RP2.)j=\^3N?R>SM)&=iog_U8.]!%:\!r<Ug+VUX$]5]9*6Sn$B]'Hk?f*i[Z5p5u5((I>)
%lmi<^4#%9b=h=QVGHRV^B#"/MF0`g72)<pW]Wajl6ck2)43_`F,F%eI;8j$LNeT8N[tHUX0/p%a=$82-<np_"(n*0#HIFgqXrM#1
%<S=:`3Q@p>aaVb(JR&P!I>lBJ@gEG,B[=57Np$n9lo)15gn-B4jHtV&PF&Ol*d1TJ2m"u`)-u&6O)?K(`o?6V6eFcVnA#Q+"R+Mh
%Yk/caIT)N+N*e$1m^>]KkbJtg/t\<U7"\9^B%#mFm74+@T42a&0S"bQ^o'k[DWqlsX3V]Tg\cdOoTMDr\?%$L10m.>AZeqIHD%[Q
%+*$Y3%BXgS[N_g[M>W#d'n+/5cWV@`\J)9]/E7<FDS2/4h(IENqu8+,g5>ZkKQ%OP)MNb"j6<"qjSV0g<fd`DT_gl%XZU$#LaKU*
%K.2HC4<(`q;">hBhQg61O/(E4;XH(aL-B*/7183cZFB+Jkl\8[^a68ab!*ktV'JXT#MorY#Kekbf24/"D.FIKE96"6$!H(+i8q7F
%*B1YX.F&uq)uX*(b7$dc9'YTHB19m)+>ZZS>`I_9X#G`Oq1Ze]reeeg$lBN,@h$nS9e'B+-YJ4TQRP18NMN34$m7:o1ZI\%[%g:"
%k;hN>'P'`P,lo,eeESKVl&$FLP<(N\P#MMafE@s5WYUuNM&V4O>P6:`!Ec<tp(2$^=^'0#j5k&%6*t6=eBIPEMk3_QdYX+.m/\\`
%N)fW*m6:K/KBmoDo+3W;,W"4'\LH2(.r3`Yo7AD)P[]O.q`\nQ:NB&)c*qIcRqaG3gp2,<('@4gP&1:H7KqX&;BG;)%1Y\YO:4kK
%G'Kgkd.[?sVW"SBXV-=PlY/tQqXF$](3;3*r$gYe4",;Df_^</Ufn@\Zh`r%e\;[lct-f(8:9VN558R\E#ToaH!]+U.->_0(\A9$
%ra98n>/O'+=D8X)7dJthYh"t'-L=hTSZ;S0@.Q29'SVjcDe_#27T]$nKkEFB5h>%jH15`Z1,=GJW+0U+LV2alh5(p1(s))^[b[+i
%(Eb!*I7mG>fM$)<d($FH;:.uGMKgD[Q5%*G$*oST0uoT^7[WScESHA`YQEen0o>k-9'2>s4h8(MUJ%V&Hqnk`*C>amj"1X+n19QQ
%0FJ;#bG<HUh/dLm+chVj`A&u#G>XS5M2kioE+MSO5[odQ1[LLo;BIEuR>1]Pfsc'5%.:g5?%*^n=%F=f?"'aWTH9GcKFM2L,c,1`
%<_Yp%1F`2g<ZoQOm%4Dch3#Spp:'=ELu'gq/XBIF3Z<9oC)"(QBGOKIm-X5^C0c>FS<#bBqRTYr_^pBLodb,Z0Z?CWNA/#Se?UrI
%DBW:eS=SF5HUi*H,EC-J7#s:@9<FZPU/@^HNu#bR`h5!Xf=o!RddYdm/RFq]N)kpaaLKI5.b0IH)KkaWG_4O-5Din#0_?b?cGgUG
%f>fuY@Vl?S4B@-/Fil5i9;KP+gPs`ZhV\(0n1p9u]D\O;-b>kKdrn6^iF?m)7i`e_8%77@rL\0KH$0%*P_4,Q,/ZSkL?8I=\CV`U
%5P^OE`*N7l&83A),eFOH&BHltAl4$K><hqk4UH?bTQXC/V*"%D`Jm%4P=tI-g\LC.Re9#qptsP+aIoZbU[3nF/_#5*&,j=pnDhl!
%XD)+B"\)^IN.kJohVN++pZof#D,\X;G&*T%rm@i:^8d/XMW@^9$DGo_8ZSetINoYB#VTb`'^*rcKWMc'd!e'bEVV/*U#>OVTkT!]
%FdERZ8U7qMcoBes"[0]lEgtg@;%eZAL72op9G2@VM:J-M8TUj>f9$8Q$\ZM@KJO$PUh]1rot^gdFme:9os1Gbb%_::2(+XMjjsD\
%g!Rb4(7Hg?`b>""U4YiK-4c"FiO%pO2ApaplohO*bY]_CeHYqf^b&?HYo66':W\8U:bm4knuQZ&E#YMr:DENR>:g>$A[qC'o]^%l
%R:SVsbE"i;FN8KM)NK,efVgb`d)q4"aP"I+Y"n43%af%<V*#3+<TrZQ\RpY"^*V#8QBrQH_#A=VB6rW-+Q2V0I3U.Dc=QcMk8Gn>
%*mp;nVo+GeA]oV\VaN!'QQ$AZ3RBcWaRmSBL1YQsk&]Fa#s:GP=*;l);cTbaU*/A'NDa"P[KG(1B%6`02s7g'N1"Y[M)gIG;d1t7
%6D@;ee%6R(T=WGqOLPY#*Msnal2PdLbAA25C+hMsb@[]FL/RX%\A`8Lj"_,NM)4Ln]_m2(hM%m84G#e';D0.HI_.[.'[8,tg,0R)
%;p0%5Pu/fFj$JRKd]MkkLHIhPm@_P#:*gn9!(RTh&<edW!i1=c\Ot/QqV.<ODP92D4L=I][3jlG8-\CD"$K;(1VMmqn?Z7i;=dD@
%k$b3CM<<QQEij=`O<J_6iGc+<R([5@>9L<oAne3,h=ir)3)g&Ma`?[!Xro!m&/iXOg[aK;/]7K,,R1WcZQCHp(t!d41Hbn^@46Iq
%gE67fK_f"G2A&JrP@G!Se"^68-T+GZqrf5cHM9#PHXO&]@_l1\A+iV`3<iko@`/fK7X$&W[5g23mQ.bIbR&rEN$-VPj+-UI$p"9U
%3NacumG+W.bjJ(iIH9Z(*U4f0!\B+$&jf;PKUKG^3c,69i$WZ6Q"TTG,b(TkN]=C5fBHQqGO1[W,4Zb75B\:'gjN?"U;/:``AYAq
%knAM@@=!%`jRB!0m&Ng.ToY.g!O&/Jb/Y'T`03#RCa'/n646I*VC=_tGY2@IbSEZLA=-i*1J?/rX2_K&+!-U.l1Q92GlSq_X>@NW
%PTP>a!DhtT3V(40mcPGu0*^Q8T!75k[u1*%Q6LdQ?FB[#fim=`:ZN;CpK,d%g-dFi*.@<oUY#aN#^)$>?1*%)l4?jk.b"B]d$t&W
%UYo2!bIdfs')&C'I%s<<T9jiXF`D;=SVi`8^DK$mg(4lC#gLObs'V.=Cn?*R:@;u]^4H#R%#oe^Wf!f/9LeC,iK7c,/Ceu_qSAr3
%9r;=0X7-5TZX_/1Yce5N$-;'22/ZXrTjletr!l?20=,lE]'dUbj-f\.4PePC:^=.?r*OWV6:qM_bVa\oclVPQD.(PsD(DrZ4s`O3
%Oq[H"B%=*H\BQGF@]fO)90]!95ju(.i!d%5#Z!=CE\QFYReadC"%cdjfPVfg0%4VqD=dfWR-b(j7=ZFq2f1ClMLt5m%@gs\%[-VK
%;=B+jTY%aXfVMO$G[=F&(s4*6OLQ:nVRqE+Bm.t][#lS(*$FuqBHS@/b(6GO=U-1$A+5ulh+d54JUWLG7:20i2r.3oo?t9E\I:+N
%544$\TV%o34kOBi8A]crM>-3!I6F<&O3?[5rHlTlIbrWW7W9u\E>qOV=tf#HH#VTHDGt_gDBNq!>=8VQ9k7&*\SgW7bb5^V,@C3!
%&$?jB>j?f?d*);iVoX`GI6P2Z*g3#YjrlS5%6'7Z\DqC/"2\rY)`g[Ya`TtcB0%,/oLR;j5J"CC0N]ZuF!3#f;_XQr]"sIYa)mO$
%?u?<En:L!2e'=8AGC1Luk?t&/7c(%>I*\j>$`s0RZ;]WS_0#jRo'O89",TqM#8u'Y$Wir#WfDIUT]m=$mTWtu&(_86LpA9bf+%FN
%;719uQcB;hH<PSr_^aZfFn=8Vijs\MW/@C=lNRug^YN-R&?[%@>6[5[Mt0o4h7Q:='7:1Q1Su;H#MBQo<A<[.O8sr6feB,r`lUro
%\RN'eb_,59:R<\5M&QRFDQD?ZUBR@Lc#j+3nZ7N5#*SS)g4<)7HM5U,"/-V,!jk#4)Lg=V+DIg#$mGcZjdr)\2ir:B"*c^"?2YaZ
%2[pI[OXLXH)[LLq_A2ng1Y@E+G4TUS4s'4^IP=DRgC8gj/Xc#2&jrB%#GG`^TC=$&PTla#VTG]em=lQOFegtN%JSb#A3ldJqpb0-
%Yh`\;Wt=l7]7K=sH;XNh5]6me>(<d45U&JUKC&l[^8=dIWd<nSb!sX!6V7-mG!i;bSLF"4mnois[Mqd&pr%=XiI.678HTl)8g*>8
%+>FVS9m8tZZM&q=L(`*3Yb2PW$VYrhDCDP<KNC83mZ[KU]6TOo(AAu:qbN%t,O!);g%1KqL;NX0]/d'/Wgh&\h,H<INd@XA3%2\K
%!3/'h>^<0WTr&XrMt+j$#>(1_ChU9[[X@Gh:]g[2-kJ@M]"t[.(B%jViTcrL2-?sBa-\Wkb.V;YD_q7ndg`EFe5$F;J/seX@A\Vj
%8G[dH]"*ei0\oP\ZGSkB.L_/Y<,\WQraJJ1VAm87%,)q@#hV&/[Vhr]IUdSjJ]\@DEZ/7,9DoEl_r?TYHK3kFq>&$_k'mtXR6;j"
%Ytp2_Dtp%-#Lt9pf]jTld4"Wg_AasU6ck^KJs$c]A)/3)gkQ-l%>FAG=)>W'a7^)$]IVBj*u%)dX[pG>+i2qtPoW2C3ITgMq$F8@
%[a1$VO:BcK)i2[L3Q*loGVC)6?loYDJjUf4-jf#b%h;3`$/eB#@"OOAbhL7m'VP`o"6Li;&5:Cr]_XVGJ0fM;*B/Z3!0_NrQ<)4S
%\ebE,H!j*-!inA!P8^nt]FA_oBF),K]@h5!oaZX3Uk3^)Ij?uHP([Q&(WgYZT0f]V=e^/R=c:N;<OIm`-\'LtLG]-tS9/i()`/-a
%4Y##R)t#D[$mr\b@+0#>&>Pm35X33b&0Bh8QEXj!]-357(ph/\)0buP=ea+i>`B'Wm-Q&7*KpDYC6(/?)Kb=##&,4e\@>nZWi[>e
%?K@@53IjkWYT_\*Q`3B%ed01>e$jlpjcLpM)?ot*G<b0*$LIXQUfF!@2gW-98L(+D-UFIs0D.O#I;I^ki)8"`Kd'et><`6VG5mdU
%>f(,,Gn#X(i:i"8'IVBpCL@pDUCJ91C]Ze(R<tF)6b1#^<*A\#X@2,X8LJI[BofI0`@D5S]3g2MWNO^()'dcXO)$>:jp-MTE;5hq
%Y`:0.__G*J7fppi;j8Wa.<,X"@2V1A2md*$$3d!d`kJF$:X0ote_@50e#86/kY@3hGVtLb/n.$8N<\L44p@+Fm?Cnd#4h+ADe6la
%<ocaq76=N]ct*(b--Oe`#6d*<Xg[;%5pE[dnW9!"qC*kP_j7rC$\-`9,R5UCEL@S#MRE@GA/(A\5)p?#)iDa%Gl4\rj]/$aR+5AO
%b)X,C7?GDKKKi,.S?1&e'MK>6-j2Qd+d8'icLTCm707I#iT9&[BI.jG0o,[*"7e-8@IeHi!=!2lWY\3Tn0+!G//](s!Z`iSaO.<h
%"XPWT:Noi&oJ-s(IeoLqpgh5Lq__)ZA5@=`/6bcIN5@\QE9b^@#W9hDeq%K0qs6$e;>q'[>2A7+l-&=G9.r_>e"+0Z0'ga#5:*W(
%0/jA>[GR;['@ZJOEUj*\Z6Ju0Y/hO_l.YuMnkQ[)$n/u#8`MGXX(TE+>Y\#RN(<fj>X?`Al.!VoOce=@KE-\F9("=.?76CT@(FMY
%.4K7=Hj],+*bo6ZnFV@ErP+PpL=!<o[T='\L9dQfJ%sFEUS[Qm/8$pm>HN#NK]O78jPX]PE.=N2N2I"1jmAJl_'W^sjC4_SWt]04
%5q2Ue=-,9L=-R1@ViR#d8/`UE-A,:)B!+3clLj>KX/@qo2g/VeJn"s?>tpG3o]HY^SHpeA`Y,XcWcs(@2a'bFiOSA#s+B!WYShfN
%_-b#_fh<bKe\aN%!dn3MS?moI_48,B<2&EaK)Xd2]S96_a"94KMTKNd=>OV(*eZ]g"t2s7>Y'U].7q.c8<0R8iIJ>?XoLqYBLoB7
%8;_+Pn,7om:,TGRh!0/DI*g:>71tFDVbfW*raM+cXSVi_,7J$tR_]&<Y!"k/9#7m+.)>?[=-TaM/o0YGo"8%c>X'&:k.6scAX;L&
%k4*0ZYm]i&[`D/_'G!=`c@)HKXPHjIq`9Wf:f>XCLV8u@<MI<5817FhnDO=uYV)^NA6)a:*^3RjbB:KO`C)4FO<eS$<XRQMmVND)
%5ZsiVIN@^c@B(6M]'&Jp00uQfH!2;4R4I)u"c>1="6VEM4XHPf_&A$;04ZoKb5l8`(gC/=Y6.c:nRRFcHNMA\<t5s)KP72MC@Zqd
%6pH7KUeK\uIO/RbX#n*BFnGM!r:/,!iq=<1\95Gr2QDHJ[r2nj_1EU@Fk/$&,cu7$=<,EgA;5@oFJITN33:T6**#^;"Ie[Ff/h@s
%IH%fNP+5-%+6;N^rZc^b+Ru]d5Isjahr&M-ooHQCl;GelikT1jlFA9$!ERpRkVAS7q:=0T!2:1$8Pf)tF@pGGG[g,lp]Y./W%#(-
%73!4%Y[IkZS#hSCE0n&p:,CL+?d;"afnOoWciFq=rsGq43``fh8(+-'np+`'>2[G4VmXO,\5grJ`p-aEF&e'sPiS><3+u"nEHEKF
%=`<IT=]a#'>ep8<>34s=TL`+L'&\dQEMNE_6S]?JG)%bB<5sN"<&f!ce.+t7Jt6"f\#mkM_4;Kh#Yhg^-^hheW&tV(o-T*;_"[5(
%7:.7?Kk,+#6dsT&2`ndc:KOpChVc]QZ2Op&aN\?/^*d++/Aifq9>48Ke`H$&iOjNagH%pH<A\'HG5Duq4>%9H+L65/V`gQqIHKm>
%j;JNQ!m,&@Ih'LU/7TLa=Q6_?C(.a&Tp9"l/Z*h,<19VJL7PUc`Oe]d1\fjH-$iD'dJl\G!Sd10i3qH*Du8q)^.]5ZKc@U@4<9`*
%+1VWcVh-Pm$T*o1aEB[Q,Y"aqA4En&;U*)&huk,R%?>L']77#2rMemr/Er@plO<-JOnSG4`UgQ)M/'(`;dfolO=k:m4<g8Xc])`l
%cP;N;ZlWaT68(!k?pD:GE&<4o)4WX-@rjFjefCD<.iD!Wa2&TM#^["?@,*_r);=$mp[E`F45J6us"V&##i3'V8XO^Y+?A/K@Zq9<
%%C!V:S&ouRqlgjF/'nm\r?dr3-b#fZOJq/uL#-#Hom[@+(Ueeh>W(s*XcqZa.ecnghoRhD^_CTO8=f1Bk&kntB!li4PUm]*Ye+kT
%<$k:LCdXjDTsG'bD.,uD-k(O!@n]PCBh5hX%i$bP4m$U<LX56s7m^$B)jl7!SDh[65m<)THJVVmUkUhcL'm?l%<<H_.#6j`41UJj
%=dJAa(6rG?7c@tR)Nnf4g_1'(`tK8B#griIjPoA;^.@D6BFgdb<;<CCT:6E\8d+=V2ld:>3X]JX_g,2P,X4JsgdRD<0)'#lL$Gg,
%&makYhSf9d5.g8!28=]E!Y,#^D'ms3Btfp4Js:NJ9=R'tXPYl5_BJ:9+@H^SIh2-3(&;iSaih(I$BIINX!G0/-D]ub]HHtiS"t;5
%]Gfp,>BPntYoM+o$m\37HE6>8*]E!!f1%S"^KB9"c`;BqAT9MCcuqYNQP8mQ7H*rLBe6a>0fIVo8W1`qViWUu=38OU"?Z>96g3Y*
%P\B/B,nWYeRs'FcS$*0JL[!t5NlJS$7+a4tgZ?RVG(.G#E>/G.=>!#.EScMgLS;nu&!r_7;B&b'^1bn9V#,JFo4<8G)!5`LR[^TU
%LNTmQ%RG&:)G>o0X"I$>d#GLG8@fTD3Kd_q7\7="C!g8jf3l5uZFbJ@_CCp:?X9no.]`h"NQk=@3G!gSMQmSlES1OYNroEdTR;>6
%OZFL*lL8p=m)Fa[]0.D@XLas!-cU=4THG1beIZpo>q)I1LBQ`ZGZn-Z=lA&io'F(].#Y!R>d1DUd5cP[A,u9i5X'b^>tr4X?dqc4
%6<HET_.OQe&qa@VL<os;-+>HDF:1RNRT,S4=?c"@g@9,hKfktk,urFiPh;YD$8oj7#qI$&-%2@dFo13B^DIcj0Z$KOTT^b]iA5@M
%\iBFde]n(fFu=\\8bt2ogAjbO71a>[-#/2/O>QL,^>?qoO4VQSq"0Z<DV4]Co`en&Z5UZl:hOHQc\B\3%hJLd#lS5WSi;tOo\S:M
%:$^JfCsI,U^+flFg_R9[BUs1IS#iEfas>Do)dVKd`RtPhnH"<(mlZF0f:6>3r5AFGr[a`lBt!g+-qobdIL'@+?s>\I,cLI0FbCos
%pf5sP>5Z#PSr3=hDrK@tO#J9IfA>u5iOTQ*DY+4#Z*msdK],gO1-:/550X"hh-PgK-7L[HR*Nu<+`H;;Fm2SQ]+efG\1rWaTW3UH
%lO^I2pD>ofX%<a)*;EHq@p8`Sdk[Wa6Qa5C:ulD`I\*/m'4"%nd3InoNb/n$gZiMkYo2PsPMOo34\J%EHd=Dbc6!E*C&/B]_<XO^
%'&kH+h<=Laj"e"uH]]^ZpUp%GaILFWcim/b\Y3@n3E'LK@6:2(_Np?';;sQ_=MoXRmX5Y.TM@PtU_.-CQ>E"ZhD;,%DTDd)jRJE#
%7hkMQ7j.C]I6[fd5asmA'jBDYi_fb6]Y:md1H6+se$u"IbB4]X+WS'#_C#.XEeR9PAQ&rpG1TXf"[?F-R"BS5(]<983h+_cOPIB)
%R'0rf2krD%F\KM%7b$^,+HTi@Y+f8k2rnb'n;th'^OA4/?[0G!iGmnB+lMf!jnoLseU"'2XGV3k1TA(_W4FEdFCAMhQqK`SY<@p,
%GGjrYVAbY?D<:)=&5'X5Y(.Rtjhe2R909n=o`/N=q:_2>PtKEg7AN9KbP1=[Aj]BcdG:;Si#:S+;$JHUTSJ5s1Y4h%T*@'@H7<**
%"r<]1bBdG4UXuLDcDAJslK,m1@=^eZ:-85@#FHWBj]qi,plBK)l/3Z89"MABQ4#&7E[.bH"KTbC4LAA)nFQnFUhM["5DjRjajQNQ
%%QPWD*u*.7TK%D4c-!"<Qb08OE4NUj.h8gjI0QaH1=o1eZfn\Na`($/0<t#Z<>m1TZ3C)%K#'1<A-K,@0>/,p$Xc0rFf9rJ.CiF@
%NqL7+%=U->;uWVl1m(SfQ_V[aJcIjgY7701YHJL@"OB]ln9MF+`?2gQj!?D&%@9jj'+p18_)l.T[!$l:4mOe"6gFnYMqPX_Y;NZ$
%gp]Gd)>#nTH[bq6l?*FLS]NmEMG>'-Y\!mfNuoiek:c:&)p@>(0/r)//q]+4=P\@5ZuoZXHi8TsT.8qq`d`Slq>P.[L+K6)1#Q\]
%(`moRaPrN&p?'jE(s\,P3F"JFK0TC@)b(?;ZId2ihh"BX#-D:7TXQEJ&7Dgk/HB*Xe30mpmq5X<("U<36taLM'i5Z@8M7KVIJF3j
%i)]6!B+mJ;W@3R0<tk3M$3MnbKa$7q<tRWrbq<!t\Gr8<9'5]YNd.,\K&iFT2ngm+J(k/,g:Q9MDI_/]L:C8:Z`6IW9U8Rd$.BtE
%,cIWh-=jO43g@oY%=`h$hUnk9%e#ZXkA7=Tn'D"9^S%6TF6B,^S>5:lG8T\hY,p5G@#\Dd,H'b2<8'D"08F+C&9,I87H1Fg!GqBe
%^YT<##C)gdP8'7Q%"o)3AQXV6H!T$5@,bFD46G73ji\`c)+n8I[[g+H7M6%<#G];j')2P]"29P>##WUrJ&V79piX#)_9tdm\*_!X
%;mY*hM?80XqdXJFU$[>;NE3+kp^c(;g`g`>Vi(NjBjLr?/b[FU-ooBu_.EFG&Xfau)om]XPpr)k/$_VJ&;6lbc_r*5\s-Af-4N=5
%#nU0`Thik>$GYT?Wq^jGLgkL4L#Wc:`'&ROW_*h+_c=de?F*tcfS>=fm;F^lGRG(`,KtaH(`Nnt9,#-2Al]=GMG$g58@goTe^kN=
%m&8V#G]e+E.nqCjbUD*),!j'Y9A8gr2U#P`03m2'B0t3VXH-t)fPtN%77E%)&Vfk>\.90LqNfABOd6mNH<.C/c^][1V0))iF]:`g
%'?%\Z%5&0'lGh$'LOd)T5-Q2:%d396Z"i6PcTt\f[!eti5A4^:2J64F:AFg`?1]N4Y5e=tq=jpJ+91STs8.k,qYU<j%tF23hnT)m
%OT!.*n]mHC?[hhFs49L6j59mShgP<YT76VI+!:OEg].)As64H@nR$b@?Z>90LB$iaS[3+rf=CUQ*KGO.e43>4Cnccj_#`$N>+A#=
%B\:Q=S$E*&g);mq:32[cdOO?7LRWT;F)r/;^b59dM1&RWWNSVpGqQ(epU)E`C*SqES*"5?GIEuBEA%-"@f@d`6WY$fasEo(RsjGL
%9;mPAPD%P-XR`Z^3Tg\r[E@)lQ]Fg39=8MM,mAe&n?.DPDIc<tcSk<&`"El(?sBYU"t$YUBgFHR3AhR2_s6`/WE4,;WOr^crpGVP
%!:Hq(=]T:.COZi]^7M0Vb+L!\m:/#2TOY+Z[M`GnmqLSG*`c$G;bS9"RQjEkm2$+F_?6dUOH%EGcfJ3eN.``&cE:HGq.I8@YM-0u
%s&,8kZ*SG`Z9"NhUf7T6ZES<qld'2%ATUnc>DFBW#$'80RPcL]n3mde/X4np-Jb"KW9d4-q">XTrEjXY(DQ;="7I.V]-'\O'jXj.
%HAf&$SZ1:Jk'5Q]:`rK&E7D?<$Cl2M%`>>*+LlD+6d6H&0#pSYMXEL)@Pt+n1;[$qXM3N?^dW`[VJPIuV@\.)q&?GL1U)uu(0_Ok
%'%33,l.6nJ*TesQ'`MW5,>.ZN_I2?D>isTC0!SDs4n0P_q9O^`PYMMk&KocW%5UWmK+%*?$_>R_n3s;_S]4=M;o1R&pj1U>_bdKe
%1rr:)ChhR!3*\GcTnDk]@5T'rhWA_A,qCoPB_:eAp3aufjf:%_,3,mg0:_pd;M9B;>F+;'P5Lm:32lph\@[h-6@_'ZIHsSLp>ahF
%8I0S=`5nU^+q>(6@Q=P.g+]*M'$XofmM??G>j(Q?d_*?(<VUEDY^a2l+>fnX"NFC;=e.YW_1VN8Q8PplYTFNZ$bLriEu9M:3@gHq
%*-BuX[b%L0R9a:?KBt=\]9JG+qRtM4EjlYJTQjBqdn*pO2)#pi1J51l#a,9(//UDUD>bTa\C<$\J$]Vih4^P>G,:'9.at:@0>2%"
%\=X_9UZ";#:$R&QLB#RG#%A*6ki.$@ck+[u\C'2d*M4!M.5nBHiG4"nl5EpAktj\SQR2EF27^I>,\pMq'8$W&'r,/dOgW6m@C/)'
%8O@(i^D@i!llt<pIU=Bm[CjroUt&kRK)`Fr<T\eU9RLO8<j2r$F#)ScLO:BDnE-d9)J3I*j$s%i=p__69A_\Od)'?U5JG[l4nKe2
%*r2:M#:d81o>j2X^Zipk7=FuYS^sKpL35gXL!cseG."`X`/Z0f/?")'!l2bW1sTtMie5m.,UA,>;i!1<!(%%XA?]sT/M%g?CV-?T
%QEc9-ZIXF)q#k0k[5Us$'[T/U"\^FkjLPF/HX*&<Ous8;K/fr^p[1E:U/]13b?1LF_pNrV15iL*ACBdi)L<M_I*O!!f<l)R@<RLl
%EDN*'E/8GfeCVTq#b`@Xn<+.dcUZQ7f4L5,)2(n"#%9QQ<+W:9$Z?&B8ApBk!ERioWQ=aIN<-U:e]%%0M#\822X#i=NN-+VCq;/X
%P&f6[25q4=%Nh*'3gPAWR0[jN*qGD"=+L`tEh5hAcL=d#4T8kd*m^\7N+VREiBfO($nBc#9Kn`HhrAQ&C!G,FY5?@[=uPaAM?g$E
%7&./S`GL78<4(ebS$!p'EP;43&Df)FI_lY*RJ&3ZG:p)1[apH(3t!PLY8OCsr@K[(j4ZEC#iN"#0JFl_iKOk5[H=ugcI3o9c!5kA
%b#n[%]Hu-'S=]7gJ;43SK7Rs+ELmHo<&0tLs'QEn?4:[$Q>e2&;+u_EJ3^O#>W.A'"uaA19sRNG!'!<KFEGSPYUI[^M<[U05IP5p
%#SPoD31nQ0$BN?3#*6C3k/%R>>%POV!>EaH#cY-tAW)B+!YIDF3^=n\JT+6G2CM1F_!gObBQHQ_3l=]<>aujWTT-0_0(3KDHU'ZD
%9K]bYNh]^+PM6Fn'#(+Y5(jbbYFA8eSlQX/Y4mo(g>oVX#I-QrJ`niZ6[\\?A_?3D?p<_L+M"CRE=i+1Z/j!XdFDY4$?>;s>-0Ln
%35'cJQa*LcE>b=1e.dXCBkS_I,ZYY7Xk]TmpL#N]li`-^A+'j@lsIB)XK"S0U["*]cF_Xf"qAG'7SF5.?3UZ/Z*9UIL(b[T=?@Ih
%GFdtA6ToWr89H,r%>kZIKqtB+G<ZUn"U--<UtjVhLb9DE-^iJ_MAn72qshD>YFY13rsL4Q0E0urr57E>qbM_=jmW3=DuTJ!s3j41
%e$YPAdafdNGl?NlrXPuGMRX7M^R?FUD!)$R_/\)Us6iU5>XOIS>O/KErmg+h)4u.+rs@SC1NJtWT8^Gi20iR+l]44jlfGs=S:CA!
%Vr)*KCGeTmVJ@FA$6;\JI[EWk$f_B:X3g'a>R5ZurIlXG<]`*3csJ=J.HF+P6EQm\U_O&u*7)CU-.au1j'"!`d*lN/-],hqAR7gm
%Fh^@6MLS5kMc0?KrVuM:ACc3;38PG.c]Z\ZB/C'K#4O-<$E@RkY]S`(C_"5o%jT"lC%)*VXD%I`Z.2_I%-7gp%IY4T$ta#pB;8!d
%Oa@2NnW2,%NApu9:DN(5<qJcZ9r3PndJ@2=,7B>CPOJ^c_%FJ;bm:\=WuieQJH[<@+1/$,IUKK\2?Y1GHk@nl]Oca0U!a,[hF,1I
%rIG<oAO"P+Dqaj(9(u%=s$2'`<qB[JBFWgW#%$ZP[_1@e+.B/fC\DB0I`3je17mt.p"^%+rNWd0Ct.u</*fI`cR:Q\IERF'`)Cq\
%X[<c4&Sh:0X:hkHFZBqiF:iUml/_#(/;uc)UYE+&1+m-kkM:Efs8LfDPC9=3Ttm(L:-0B\Cn/i9->'*H$]l96V1@4l*=`S*fbFrB
%E`5L4l&U$1kc5\u=)[>9#iD2Q2ok7/5Pt5\)u&%?qr83X_DgBBO7,9pcTgthIstH^5QB"h;DS+n57KFeYsWEb7Zn&`(C<=YUh0rb
%8_+MZ6QA9u]"p.X*&&-p8!K4fJ(5;3SR"f%==0q11k*Jc9Zo8WBFd@"<JZq,R)jr'1djpNCVqY&C91nG+JA=aLnr,fgKRYXN-lHr
%hmi41CQfGFeAQTke6H\qMB8GWH6k;[Lg#VTmf5L%^$L^S-$0PHh<Zl3YS@oTLnGrC.(ge^254nLMeoJi=7R^.NC/(VZ`c4'+s8cu
%$?3LthqOA81sn1=%=+t,)9'g#Rkr8;Zkq1o",tNXP>1a\TWs?h.pK@7a:LgC15S`P4pAo=\7j-(U1j>!SV_f^_pkE;`cm@5V((EO
%ERLE2Espn[kE.JIn:IrD"qmd>8GEKXduI]UCf]2/kdnkTO`t7N'hoPYcF%Ah1L$r"7A+fCI%m'3[%`,.onn84l"K*#L5;X$m5<Uo
%6O0l,$gTR[@"5]=#TlGX)-MbUNTL$B?,e'_>a?%KLeM"(fae`HF_nm%Yp<@k2r^7DjMC6"WgrZ/,!!$%#P&Q3HV\XQ^<PYU7nVjR
%<1VJM>R%h@:(9Z23'f+Bb8Ii1;pp72b)3b;\>i(q,"Vf'n>5ojmh_a-WWFBT*Q+c8,"2U+91<_79U"Ab[1K;5b%)<t^-bMSV*/A9
%^*YN9opM-1\TL0^[;$X=PO`@LH)"=F&IsD+cklc9;DN8fAW:Z'=F5tuLa7fp*G"(Dp>clbmSuh!'hN'`j-7HXN6*BFdehtYGWu0q
%i+@_Yl0L.%VW.Wl`Or9qa+g/=]poTi7)BA!9%T33d?HN*-:F7jAh=8=H?,`3P:+fO0?)/$82_bp(N0=9E+4Ia(,>/eL]@kJ;d@>F
%H9i$`P=RF/kW5Ua$"?gWA-&+K+-1j^SrIO8e;tdtespaJJV/K`?bf7mjOQDj@n?'.3Y:G/Jq1Z?_(9%W"G%,HboC?YTi&BU86)hc
%KkesXIEY+8Vm6,)cu`Aid`Y(]7_`Z#3.S(5\X!k7R@>.;*!F:C6N3%g`Q/->?5`\GB9nr1V!@O[I/b::#!NLImg\Ani&6Btb_/j0
%OJUEP1FnR6fRsfJ!>6*NU,B,Hk0[J_L#ZjB#\U#':f=F*f\M>hI.;R3#a=q^-<&I(W1&M'g=FJ(3'i:l5GY/hdq00&je4kdVOW53
%b[-E''sh:J).o1',+)(>+Ts!lZ1WVrm#_1c:]Q]62U`-7@_p!H9VSMDQ)QR0Z[no=)l"HZ*#2/2n3](F&-0"5<,!)S;i$Mk,)k>'
%g_)$f!W%?G,L#tqK&Q&*8Lb.-!06SYJ0FX6Vu?&4#[UOZ"1B2el]321QAX$%83Y]NX_UqS5GfgM*i$N6^+Y&p%^Kt_iFhmhm-H&K
%:R4&IDeTesV6Ns3;,:=L2\]oafO`R`]t0L9l\c#^Ch7Wj_Fkca1s/3.ap<-RcXkK4@ut<2k;,R%26Sg+(0)/R(25&Elue.W%aKj@
%W[=&A:\.S5;3;fZlt!>;fHcf)>iha=%)NI^24n`B'r13\[LSdeC)0JjGV+GP,3])ka<3Q<U_W,<XM)>9F;eF5OK)=B8/;mB9f%f.
%Eppk2qQA`fD0.0$DGbA/oY%.^g8g)GTboJLDXfKfTd.tglifqge'Q[[f!O$%WpZ55=aQe@hncX&<>8eZl)mmWc[FUUGI-KeJ:q@N
%M'P$NT,]?JhUk(N2TJG;d"E<FUI+<n6b!:t+\8)GH+Y$ZRtNGhAjSs-/`Zqe!ojcJ4)e(%%%;qrmIcDt1D9In7VD]<fcp3_U8+ns
%)cK2:Q`^A,F8[lIEiskjWsG&2]tg^=1r/@s=YSIN`)T9LgMdQ/]On*N@SR0d?RD"WP"17fOeqN]P*KGp-UbS.h;S?GDf)</^g<;m
%4;YKBCtV)IMC`c4l9`Uf.+\Yr\j<OP<=-TTgW55>78KR]+do=tD+J4AfIXOmLdeF*Ie';@.\2/qkA;!9.3$P!$YPJF@Ui9;;S/V"
%Ma/l"(6?HM_(W2W-6FU?9bQu(j,h7mB2hd7,9!<I5TF!SXb!c'1'#?BDPd)]WQ!.&>o>,o6;7d<lSYIikmTn\S#;J5/3AK6R6auj
%aal-G]ZBaQC_]El&2'V1i_Y3&air`tnnn7@Z4#8j]AAS$d^4T2$khVBQ77',:;i-,]/6B%2W0N1eF0XG!%\rA[#.#^VC=mj#.XBY
%*g$7pn4B412:gMU,Gft:Jdie*$;uiEb3#EN<PO/G*9LZE\I-s+6"VHO%g[,Z)FX%t/@J?QMVu'+'>e`WCgsYmi`Q9P#=&9;%'_W$
%5T=rR`kTa_!2KV&'WrfJIh`?sTRYlUgOt;nKlI(Q_`jT#rkr1`n'(>g-HDgg\8.PfM?/),W`Q\@1G*aH*#n)^[U%O#F0NjT/R/h:
%W-1YiL5Sj4CD`2pXskP`+QqHJ=L:R#&pZ5)Fk[aZFNs?oRSX;EOoQ`PUH"otaiO:)OuCe!1`@/hbetP?X!"X&!e29OREI;PR<=$#
%PD)BhgJ7PCB@9<Af@*7b39%rG[m:FJ!i+h1_a"KV%dBb!\[Y<4FR<G/L0^TLkPCej?lm\EJ,[h[rL$/SYJKS?4SY%'qG$.M2p^^B
%O$+_ZLU.IUj=hoN4LZ=[A\\4+1:EtB.6\W'KT,T^5YGkA>,',I.CXBiU$/4sn/s]np@c7fVtA%0#+e^/h&o`XM7"hn%j2!AOVV7=
%$_H0LZ/Abn""h?,!'GlkO]^3(,<J#"J6fAefLPFB+2FRXBe<?S:]UP`4#l/thB8eM"qLmY2gc?XM=`0d81Rr2>W;`8U]BgifV/tZ
%/+<VuV104,krSB+)dJuhTLgN!%7uYCjM<K]1frhl>TTO>qI/Rp$EJ_4kZ_G9?3]GEdH[HqRN`X>TTTA4XAJumU$VtrON??K#P,4K
%k)`WOqLIg>gFJkL0NNGkS<tfl&OR/>k<eJ!X0S)G"Ru/JH)TDe/D5*(fnP3g]7rCND;jO`-B[]<PG!h1AKi]m#Tg+cl>X(.2Kjf1
%_MreD_-0?_#9_a):Ln:A5S,(<F]&lq)B-Du7MZY7Q)E<&R_5`(J9HSn,!AH7*>1M8Cq9m-P`2Leo#.[aY_NK*0JA>@./_*W0U11)
%JtNehllnd,X;]e^S3\sj!D[+'oGk3qet8-KJ!@2?"i.Bc5<G4Z5MJ58r)[+cF@"_]'i6l$CJm`DE=G+_ERF/)Sc>\q"Bh!E1MR?u
%G'NfB^\mTr]1,G61P9G_p-<*HRnaUJQmeGE3PAX:,#goQs$98/?SnqpX"q0eRgjS!8t5Y^^`f3\(nqY\`pK1V,Q[lqanU.oR&$*;
%#8-fa=c#!j8'!QB:q7lO:St5g.]JLti!+uci[k!rG1our3J(0\-,b@+-)&E$OTK\:_-mU]8\tOj$^8Bf;:GT.<"I'%rXrTSCE056
%.D\KK?ZBACfdhqp&2gE0iSgcFjsX]LAtF7Edn^5_IFmMYM`]"1*.<:,UgG=;JLh<F3r%UPgs/Li*!;^@C%rd-,%'UA%H0Bp/E'E7
%W'Y>p=1E/;*%LL$%6t"k4FL%"r'W.pUD\8e1n;56R1hBr;!s,KEB]UE@"CaZks*P2XS,AG1bE+gF_G(?mTBEo0N0/Ns'VOo&rQ"*
%'m=F,-j6[.VAO&%l-0'f!#<211[pGL<Ej2o8c6qY#)dUk=RALE:1c76cbOU.d,A&oY5q!_]Fp6;S_aA3D.%h'#T=K[VnCJl@/-l,
%qt4b\O?3ih10;bGP:ta=d6[_ZH@G\Wi<I5:5sF#M#d4%!#$;#J+2:1E,'QLBC9%H?fj^6;JESoN^Z[59.X]-!V>eS0(EB+hSTZb)
%d,uKnguRE,7pa)tXW;@&bgNtuOF?kLM)W@Nll@KdS-Z;aSH,3i:rruSm-(jR(14;6GF/DF"?'\*=Y9:>WtEr4OZ>#FM5=^T$cZ>p
%m2[CX#H[t(6#toN/UV0ee<>mbRZh)4$J_cG/m!i2?*<0EPQVa\RMHl2)\>\8@'b2IT!8cf:BbY5B.[39Yea7J1_kY_:e#\E(aA$B
%7i!$Ui=^t=O$ZI\/;c1MO<L6^g6;2"D]@r%rs^m7:a4.1d+=scFhc:oKU-U[EEc)11usI0WuQA;TWNp$'rm@WkPK]'I/VI2rSE&3
%N]tS$MYioRBqVjRR=n2":e7Mli+!lMR+_89au:]tnj>@AcE:6;O3W[m@@BSV+HhW8AW(DAjJ+&a1IAE1IXMB:$`lKH3*9`CK>T$*
%rU.)ZY-3"d#J%2F/(fBXLX(YXSg=J1X>RhX&5g;;[:WoB()B:tX')eH9?^_EQe*i?")uY*d[aPi'g[hQZ[0m)47'Z1M1ZI2N]7ZC
%k^E7O$/=Ro]Vf=*?4u(%[n4/)%Sg(().+eJ!fp8H<q-F&IS&V4Gb:qD;2kSX@@BQ]bC]ea:L@<D1H*+dkEr?O#BFsc*i,j$lD3I-
%R`!SkM,ZCE.UGW1h9B6F..U9IQU2ZHpcV.t6BV?6,9-m-*\84]kTD$ar`@oXFCRa0cUfZAMLlrn4:hS.$:^7,lpE:.P_XsWh-9Uc
%'*-VbXIaYpHNZT#*mLn"&Kr>l+ka*(\dL/8Mg^*AJMP3Klod&ud>RDnroV`B>T6PTs17C-MMM<#kRl,Y5_T6coM$l$%AAQ.fFZ^7
%&ZV]C\i,,-NNc-&@i"9md)Q46;r*j@R"2,7_R`#j6CHis@#V1>`Z[sA1GEplTC&Aa%Qpa"-n?"9'",de`M:6%h/pRZ$5$RS4+Pa1
%KkHT'%/k"B*as%/846kNdh3W&+QEUM&+"*:(1;>gb0+T'.[XW.Sa4NE42QuUQ=e3L\0(m3(i>u":^ZaY_N)+]h%O%E!!Xlg#Vq02
%<_O6J(DF'j1.?Ycd6f:7^he;JhG7gir=[:K82>ZrnD"T_jLl/NCXjDhXZ6$)'J"I2@JdZD%"'pgflk.oEQA=3$SP&K],IZiX:&=%
%Z:n+lFP+3cRtuC^.*S65^QCn!>Eu%.%NSi^OLJa_(TGtL_1!jh*;h(q=p1!=@^_s+iirR7(3h=>+qVubW'`2:#JG_ZoW?nL,s<FD
%!T5ji9rPD1[eJb_Tdhi$IPmL%`2>k;KbM$q_)U+XeBF'Vn!T(H>)'GCKu@`WF#]u)"ieRAIO$"eP(G_)gb'J39_S0IM]eGn4:$pj
%5o[k>]a6m6lbs+M<eU+I-4e'M!0J5YBK95*VRe\WI1-)AXURc8&&`-*;o,SAbbBn0*oqM/il;n;TJI+AaTK/\7bl`-/U><h^,u'I
%ZO0'HHV>10(3jKEgSV9r7SX5%G6#9;1]UK&=:$\4_X1ea!KW#<:$(jfigqS.!8]Z`+>H]r[A2_E9I0^_BGi\-kZCBqd,?@;,!$mU
%-c:@LME)<W,pXGHN<>t@XA_ML^U#L/#bK[s&,uSc%K;,5\8Z?R#ZE=@@OAu7M+6OAJPDhmNb-1b5cgR$7/p:'Jikl*Wk2eo/c`aL
%222?o[,$M)+ij_A^md(bi)&6$`3JGZfdn/?_3n/;M)6R-B*`BUf$P!/@A*9cYdK^qH4+C'=:pj_@^tbYHQtK&4mZNde7e-@a5OT<
%SKFMG'[F5>4r4OpbNofGQ`@3#ig259fE'DtoQ5pPWj<Wq$W_\qkpV6'LP@*PgCL*:0G&J/SGN+"l;YY^:c]Bpgb>j#*0qHY#\f?n
%.E^eJVFlR;Ps\80qcHJT+kS1b&KkqG!Q`5H#k,1K=YgI4/KcRR)c6Hi6<>oD,NreH+LMm/)!E]:aKCV('ojYaik63IJi>dIReai9
%@>$o*1=j7.Af#fHV]><*&<R86a]:jGX#&?sek@oG5i@ggY!H<UbH)Jk_.BU@6@HiFii%#tW37t4+^oDkW$n@Da9r9e_aTTS"!69;
%flaZ".0+WP#/NE%qWbCnqYA`a8?Mf9%LG<.F'22n+I8+OOb27e2^0N^MbB/)=hqrTHL5(aNG'12'YaFAO+6kUJ,1r3QB;Blo)74u
%.t<6;#0)qeT(S46PM+<t!<fLVWb=ePHA;hObj2bC.jspSRK9A`.$B=o_Ko4fEg*kMYeB"WZ\S)e@Y<(o!:(VDIS:uTqm!C2.XTQ/
%!UE;*?eh=rj_H;^dJo@N"ZNS-dO+Wlfns8%?.=k2U#;Rtc%lf:BYl;IX8t<a*1u^$&FS,c$OW6.-Q>5Zp((KLd0#\JOLKDEcU<b1
%S'^h$M4(>"=(bmtIY\aBqaP9,Zk67?$^F.mcALg(SPBSXU"/bNOe%1"r/jSGrbj.Bhb:o%R08q2cPfM1m!nh:\IK4K_hemO2e66g
%2+LQBgC?a`M^aEC+EOoDSm]f+frC0YCFJ_ipgaka;d]_m^`',E;_/MBDa4'@YJbrol%rYWVfH$'L6!mcbg%K<hG%bm/cJrFb;D$8
%nIsg\cXf.MJ8&%Kmfk)!Kg6"?pL!jcJTfVQ0j9.Y]G/JBIUn6Ll[AnRpp5[q/hQcskgZ=p1-rd9s$Hj2*G(BT6Glm-!skR,Ri>du
%`WKHY]#KmDECnM>hNspt$*!k";7GWVMmr2gf]TI9,=h/8)`CC*S=]YC#%8Q8qqt/"aWdkoeTa1dUUmLn#]p@[eCcRaLbG"IJo?D;
%9B6cjA<8HQ)LWU\1=&gn!^h\,gIqJ0$=q3qQ!VYrr0r?J(3R'6'Y?3fOglZl13+WpL#RV:X6+@/b(-*1mis-8-Zca#q%2R8H0Zn)
%&e^<,PRH:OrU%:IHRbED0+F==&>/(DDoM6*><ap."GMXQ8D:degD1oU%F#qgI1O:)N]C'o1/^I]`3aIX//j9fp&]\)l@:3m4Z0K@
%&8;W6K$Z5D8=BuWKO)Mi_Y^2n#+XT&Cjtgr6*2rWc;hQM5PaJ,7rj7)YKMm$IkJddF7%k_Gt.nLBon_.LPM5E;Z)V&n7hs;<j3cL
%Pdm^SXdN9^S>iBt8bLLp(U`:54naZ>9WN%N=CB^"=]3<#U5",GISnk;+oo[<b:3lhDO@]Z!JVlg2AW*D@8hl>''tbK`c<=OK^VUC
%@"q7#nqX=mj78!9%'ZX?mo/u?7A[[4!T!#N8)5t(5HK$#/:HBT4(a#neX+X>/[JX_\o`JqipH.3<S2sL\mBpdM['KO.P>koj1;i+
%j46f2YU\X)]&MjiQgC%2?/[+,p2HD2=>XVH0Y3mB<M.MOI3]/KHaS+[U8D)_[b,b]N8<;IB^Fc]G&a>1726.3O=duu=@50=9##i&
%8n?Ut+2PktU_FG;!)?QLlTfB/U?H@S-#ui5qfO1Fi/U:U!H<bb_62[Q+i0;WlRp*fq(RE"'l$@:`-V;1WFZ]d.g>;oU`&PkfdK@8
%M=c\4`@"50L/TWF,g@)La,i0srcsd]Z_gqk+K8%Q#B3g\[#QAo)$%a7$akqg#FUj7j.o3]f>VDc$=/$5.VhI,?A$h<N^R:J)PGc9
%AB=V'6Phq#T>Jp<4<)rT]]a#Y=b`$9(Siej58kNkE4M&C)(&f=8@qB4KeH<AO9%ngiU14@T`_@H9]O>a+0IV/1J@)k*F'PZHXQ)a
%iJBr:'q(jKrQ\)dG]mcu5kb7`)Z(gg[mRHII*S-_PJHKQOb.?#qBF9174_CHJrAuF6Z1T*F<_1RI+_77MkYMjNWn.E5XNg\psTjs
%M]E7ORhIB9F@$n&,jh#_LT]tLR(Z&0QBP?@YIVZWDZ8Ql#SeG7'b:=4f^ETWL)L0q"Et<nWU%n@`iK5Z3Ed55.4J-Hdh8QF!0eN`
%Au1#A6u.o4:CjCu!#DaUUk,:u:<\4tFi<$s**)kL"Na5u5EMpNUphbp59ZD$#73JB/RZJ]V&gHq;YoG]+(T7AU,#P(*#qujaJ+`O
%k$ZsY^(76C0HNUX^d4E\L:f-FM\Op%Hd(km;HAuC;Z&*F@(.5pf%H%&*.i<_;3%?V'g1cW&Zu+9P1>\>HWgtOaJY`?4Yi7p(.;u.
%(5nj&^9MK4g%G"Tf%tRnS<VJgIWD6(8.5pB@e+P)/rgdmjOR+G?g885%mm@i:3be7M50XS#arS!,39U=]ctU*rYu+ZOam(0n'r]G
%%+_as8S@J0j=GF%q^tms,Z!Nf`+;FgA\KPM/AiHfgWF^T@IARjq_OaF5R;+)7>TI%.4aGDVRf("CM>5Xbdbr^4cbIm%HsE-;+`p0
%E0QjQDRK!3&18Ob_D04C[0&P=ZeHW11qSWhn?e2q%too'h+pCM\XJ<b"3hTfa9XT5_/cf`UNo13aY+![dA#Q@0'9)^+<4Em(Yk.Z
%ceL16nBf*U6YS#'`E]/]W<o[%UG?J0R!M6h:5^;;_li5PGA1Ae5fMYlK5=ZoWs,quZ;9-*$^r@C3MSUS_]."d"_fl\P%$?^^P2BP
%-rj9G@BuO@K#kgu.U\?.>69/5eV7r6)N`KY!Q2?a-np97)L;/K'0Zf>+ioRj=7B1;!Lkk6n(Q%r%tK5&Pf'i03Xtf8TZs$PW!/<'
%K?hY>m,1r2OU[$i9fH6@<!@1K'^0-rM'i,GjC'8NU+'(rPM(1I@*K!fJ_"47.s)g='HggK/c6`r:=LgP\.XuJ2-?EN&Ap?dab@g_
%V-'YJ"g=;<nA@M&+I]eM2g&G(R#u\,kS\E2jf'U^d,uB`"f@j5P)sH9>@E?/_.@@IX[iYr!BqkbS)]:n/.+J3ch?(-,e$6V6,`9&
%F/Sl+@83X^e]42>;3BR$+/,j7VYV::`HE)FOR^Vj5dHK^87hq$Ig`i$G!;_%/;,t;2`2a?^+p6bT+IgiBUm(u?LeC&)jI2=J82JI
%9js*E1b56JM=W;U3J$<;5pfPLnS-L?qSf9cJqd%0.NF..8qY(]V!N?kN!t8tQC.BI@RJtOH6oLj\ou;kGH5(='RLB=3JXc/fNTpe
%ae4Ot!fpaM!,"shVXk!pANtPaRkR@pJ8G+]N>ns7>,H'TCiBX[hO7ko=:^ELZ,O:F1e#.M9idA2!"d9\j\R0WMW,0l:X>h5*s,P?
%FcP9BG_"U1>*=t5PVGmU%RQl4L0"F,Na2T;8mp"rO.[+3Gp)_`;uFU16Rj$d@8rIB"\l:8K?T$Bb[kT^:L_93<)?1MV+Je7M`QoZ
%2WSkf&p4u(&Oge%[5a]iSIHUJd=RIm>m]=H_(rkgK9>rHK*2NCa6um1;f=;9I5*;U%>dW/odEFI#6Aolle3O>UK>Kr><(1j7ZnXa
%R$!ZFc;0/?,4b>2KDsi]dt[bG0GgIF(\)5p"p3akFibQc_&D%n$^imU8sUcf0,LDS/2.l[3>-^%Au>.pa\rM3qpJi$o%@_1c[@&K
%n,!"(&f+!PJAo3F`O.H%`abD2r8U9uljfW&XbGUU$%%/P]I#^,1]^dRp).slLPn$RF=`J"EcJZoR&c+%*A4AHAp9$C(h20U!V59D
%1<=S,aQRp,GOi#Lh[;OiJ6&?7e90o[')__nSe@jZ:F0-CN"SNt;r(C*9C-k(JqTd+7_uBDpKs6*++@khD^CZ7=)@O*&5`jG]s19!
%E2YE1rg1Hd^F3*jCD1B>#]6m=,6Z0I3N?,A"=:VD8b@H[e#/eCJ4-<34qu4/SBH?nQqWHSHlA:]>9Ik'iOaa*GZki*N*e>YN_-l#
%4#8T7Lc!#rb#euCFDkOS#T%hloGaFjOO&[Y9th[30d;c9LN'A79A%L,X)ONpBG%m.]H!t1OeVEB'?DI*bk_AK]dUK)lUV5:(D9,u
%]T-*s&jVEcA0]:dg%59,rlKK[D.Z9Ab#jB4D-tg[P3lhIMAOr9LM;gJKDb`>O[VD:hM1##^B[IFr*@`P<N"B/Y_:'95.pHX];[11
%1jK%9NCQhc&l/bOs3$=mb,5FOn:bS>CC^0$NJaJ&glq7*BBSJ4&+ef_3//Eo'8ZQ>X%orLf`2a5GrRblCD5qPnhD[O.mi!skacsd
%A3)VjN[o]_1Utc*"XJ@"Ci1LY9^89cfQ%5(JLkdHpTnsu#PO&Te5VgO![>8WOV*?9'8T4B5PbAaD@#@,S\_%sij%)GPU.V"I?JHN
%kdWo&0b?3!I6kaLb,"#Bcf#QE%l!sqPJRmif2;[5cM0)H7C?/n>6<-6n(+&R+?LJOcGg^gJ56_H6V=d$oa\$Z^:D/ZZJM:BUoec:
%iSa\3/->"8*IM]bAA*J&HomN"`2[<&^1fP4E^_9)aAuEk`fA!V>f1L0<W6mEX2]S3UgVK;Lb1n;AM!iB[06oOp;#[o\-`>X&jUgj
%1&Mm>orA1SF*Jl3"^@0:OBX)B8B;hFq=?fLI#=sKIIYX$j1sphUhn+>Lj3?e*g;'Zm[uW`7Ls'kWbpD;Q%Zk^PSP3M,Pk%*P$Q/e
%6?bE*,t\lWMAG40cdJ+KU8akp$@'bX?r;iV/f[)(U/4fN\CF(ra[K3$#ME"bC6BWF=:t9#J\UOGrMBocKWl?;/lT]Uhd1tdrcXPi
%1`)qLKdJLpnW]`4984Ao"^&0/ND3?/#_*%>S]O`ZG.<p[-MJ@,cXl#P\,o^hoAg.Q2S(.3W67I95KiCSQ_5X*F0#\\0=tS>MdYuO
%$U9*H_M="W)b--NJ19U7Mm+_!L+5,ZeR?"uHB"$pmWWFWN#MNL8Bcq`N%sU-Mg's4W%gWIha9P[4D^u3eY3I1`^$8XT(M\^$R%A:
%gDIE\6e-Bsm;cQW^\a>7q#6*l2fL12&9-rccb,d5+QloYpHPB9R".49\0c]a#*+.42*!ZKge=0Ql\quJ;8j/%'&*T&#R;!#6F(3m
%#GokK6U?h+?DZ#*2>aBmKib8!W(PJh5m!%/l9^S9:T5!.20_77'<MW+$!B$FV-]QbJW8cDXBpa/UR=PPprrRHQLHN#1G]?EQ\r4C
%7I\iD5^gch-QG!G=\G,gN@%D=@qp)7ZRdBQ$g@l1=iI52,"OW?`99!69Zt9sGnfQ(%*#k0FFsG;Rug*m]!9qC';=#L9N7kKfN4:P
%Q8fe4Q"F[kKI'l"]p6W??):/885qe'KOah^nfP5W7B2g1+6R"q)qoq\Aq&N-ot`+L=;]GQeXIY".)c*bZs)Dia:h<)f9fd:lY')Q
%X\b0_kN)_l+4@>2C:jd<:JgI.$f6LJgRL>^>oHp:JK:F,@9[)d3IBG&_F`((ENQJ1Nb*o@Q_Ii$X_@p+St[gYec]M/L5sHS]ViMI
%L-Vfi/=A&V`?kJ1GLjoG&`I+@BGIWf*cLA4KMV9;iG$L[NE+VO%$FmqE3&+_9E=rZ9"o$DC:BCm)VV_>G<tQ-71\lKS6jU=_Q92f
%=j;d1@0s?_Xp9S%<s`!7qPH9fL?@hP/_o]a41ZjeZ0o0@UTPPUq69N4dHt]BD3-^gcjhJ69I8<qSr/a.`Cd'#U>!Ib>tm=qi*9W7
%mP>R*>)p=W35Lr"b[^Uu^hp=j`^ljt#)V%@h_^,73#%<\TT"5BZ=`Ah'tEV'bh"%7#I\)G@[N5mW_j]>mYi.o='/_?K6SdM@Mppi
%H+J$_*U>ZuC%q,KR'^6=B!HP,mPsPhQ5O`4VV`B3WZG$72gM&:['`"tWNqig@"?q2>*F%K_Uqni%Bs?hf'[hU<rV[(dQR_dpj2l"
%s8ME#qk$@9ZdP3?j7f\<p'Rlj$[f:8"+f6YG[glE*pi(j1=V&I_jYsUJc\'iGVh-TD,];?iD6m'dtR'u.1lGP49o"'/iISi+(<,<
%l6+3Hk$i`6dHpQ,)`<fL=m'M6r9,O+e"hH:j3pfAgeF?s-;#6Ie"gD_(&52Op!ZW(kuar+kse_PVc)u]IK.\j`)glnVlA3eYu?E3
%-scQr4,&A8`d^7hQ5_-$5D%B"l9<IR/pjd+e,Aj4?\i&1mSgo7@J*<Xh,f@@JtI=e-\MZdSLR09AnRBnrQHqi];lr;<r_PooW0dc
%#;=Aa[pT&cNL<cJX9RJP-_Enj@:]MdE#qF[#HD&Q@G(C/H0dCFWV34S8bs%#Lks+Onq3QnKn.Z85qc5H=M+uFTeE+Vf_q".IX/:=
%>;Yj;(e:K[B+=UN]tUie@`FESR?=LAZk!,Z=$_(%4AF>SG4.h2PJj34:=`S'5m0Is[.[Lbb7bd5!$)^Fisf\B7o;_Zms1J"a%]`h
%&ONOB\3@]7K<b^%,nUj\JD[/o#gNQt.PgYbA+O@1.O)KQq%E"cI@bg6;Al`DHPNmB2t:9(pbG*CLpJ,c'N*\hb)[<4^Y%HI103&i
%'gW,pjn>[nUBQFSc4#jnojXi7b5.3!MAgf(=TK.=.6]ucH,I;FC`!UL$QdVM+TT2$1Sht]ZYQh2C*+cX]uu4.O+Qu]+&nEG%[NXh
%!pXUHP<YWBmfY0fCTBO?-ZT:6cVC>i5]He4/kT=cQGgiIb6'i%B"dFIChsA"#BVs6'NbHE6pcSb$#nErKepgRNnN'XVe1GmF_+eh
%c0Ma!B+ZY.qrkrcA]-@Hj2<]!+q!Y#aEr'tL*MJ<>L#=MMPW6CP4]b,*?<'144EpG?T)127Z#b(\RjN/+^F<^g8cR!W0b!A&&ZX?
%5K#';+E6LhH0R<aG[,dkEGu@+C[g^36cJ=7(X$K4>HtQ"0GmflIkp7sS$q<jg9>86L!=-GEb7B`6MfWSQ204-L.m'oBY42Vq\)4s
%9HQ@I.5)Q%+'sbV55jLH<'l3;ahkOEkR$fS)iqK8<bq*h24lbX#kq69_W2NZ/.=5KNMOl#fM<(2,,._$7X"MWdK\Wc7bn7G#o`MX
%pZ(=1=Pj)XMtaup:-X2ESc3iEi',KIn%@S-[n8BR9$i`p%hE0phc/B!(8Ah<'s_[1^l'J\9p,5>6K=9S"jGZ$b6$s]$`:at=8*b$
%Q"D>qAJ6XU8?3O>^[0ZPaO:I(B(4Kgcj:6%j;M%1r'CaS\D<!%KLVsa5\GQp0QlD`5M_>C)u2c(AR(:_i,OoSepod!ARsSD+,^Cu
%,3S)P8dP\j]D.JBF[mm3m6WU[o+1NFR6'&Rb'LS`'"b[sQNs*YEghXUM!R7b<_;E3_gu`lf(_VKNRk][-FD=Qc%A;Sp73\^`,_DJ
%f(J[W6-8F>`AT3(BDM,t?:rXt3ecO<9Jt5;m.r\9A;MWWV5VEQ1$U>]eLJ[$n4c9TSe#i4X475o*]t]%R!)@jU]4>/U3^^'IA2ce
%geWNm`hpB8?rG*hdtZ8pn*g)BRhPRpr@(:G=YotMLBO&H<:^`.I]4(PbZ8>?E$CkR$_c8m-fWZW=<3RoTT>X',i>1H0-@jI9F>g[
%Q=;<0(Vp8Ik2ss#WTG"9[R!YaE]e6T/a2MUg0G:0MihKI,6hh4>7j6:3/LRj'`;4c(%It77^]E$=6XgY&04:KHl^ECl!^i/fMEJF
%@ZGOT@ZXeeXFXk'7:Cm\moaX^"uP=;Xr.2(*]V7"a3oC$NLG#+&Wg4hY\'CbFT*9%@mE\o'ObSO3;^A(C1K1Z+L*I#lkeXL,9;j/
%N7a.X'Ws^$ll9m*n<r2SO.QM]jr!qT0t3`g+?+^Ghk&HaMkuf9b>X+MJ>HA;RR00dq+%h$nI`&E8N.#-^5i,(?4mG*R`6(5%d`:`
%EoQt-G\Up[\q>--&IIss`a5?D)GMSjN`:0$'t3hPc]KI2_nF)K=5XX[M&jb8e,j"Y$jlQWmQ?Bg_nG].H(ijr7r,sUs%G[d9dC)(
%Od@+^K#nKRM#tc-m_daA&elj3/a[Vd`M-`U(pd1<d%b$eFQ&;_YR;0r[gi6aQQYdMa:SeB%K_!:m6jJL>ueG3IR*\mGR(AZ<3]p_
%J@aQBD4&Bk`Q`sSMt]5ZUhp%ln2<HPFn6H$L7cK6^d*I[PPbc<G&]T@6SFX3iC5/5nBS?UG:)*36Xuc%$.<H""Xp8NYrV6!:dKWn
%4=?u7\a;YNaJ!B+Ak`uMggWuHi(tfss(h%=>3ne?.(ULfs.G@;JuYopqH2I40c1&e_?dM(U><lp8Rkr$c2;q_3B-62e0Q%C&pSRt
%orG9taNTGZ&bd?=`mPn$#>k^`1=uYia-q3*<Hlr/\$YPG(+rGe7qBAHYL)K$@((kRg@'1C7$rU^kWGkHaq7:('\Z]f/=gD@3FZND
%aW2Zqa"#4PR3U.Y:<N8LRODjWbZR#MBDgI_@;2NcW\sW/1V*F5@+,C;/tjEDkL*?3Z^O;Ll6+=6U!fgCPbdPDb7j;ns5@&r_t(IL
%o_2Ume"d;\YPSTCL'ul/JK`UNcupUanJVU7SA0h^+$)kUh!&5XZIk!MA=h'mfXDhm;ra!F?&Cc\.]qd1VbH0MDq_V04P!Jsr+7qW
%Ne7go"pVpF#k9k_oOIToe1%G+P$p&?NQK;e<AL->&Xc>W%8J?]7u*<HR,pkK^jS+$GANC-MFPo&qgCJGcVg5#^SnYf''=S4GC$"@
%H'7qb$%ZE':E-2.>`&iof\bI+TAju?Zi'O>,)ipJ3k_Y:K)1K292ZZa\+G2V@[U84RQ2ZuqC(2,(+bmOZK+SS1mjJ[_h/^f`dWp"
%Ts+J'1O/S8Al'\J4_D."-;DILk_b\9c`:6i9N##Y\lIr+6.5<;Sk,+&r&5eJch1%?B-TCZU-=]74dj:NHYWlGPTNdCHQhYYQu\0^
%a7;Bid@4Kc'uuP!jNBjE2"o@sV5oT@$H:7]V8+,R7(c."AiO7JWaD]h_=?"@VJ!:pmHBB@ZsA+93A"N4]\cI1l&skK;m3-d%c=1A
%8oq2eH?KmAQ\K5-ju]u;h.:bG\j#6Fhj!u-M_OhFb&T%*W:00!Al_p.SW^<Wpo7e_IE2UFpUT7RRYG$\A6#STi1/C&"41\um&fFs
%XkM?5BPXt6'N1kCc(<7)mB,o/UW0PtV,PpH]1)iI!,,eBSp?R>H;/1^)nrm<I'Z.qY+'LAO)obn2O"#VGNldf8T&)If'+m%-@S+b
%&i$8MAWn,Ve.'`eTR1T#kB>MV;V4#,k.Vnkj\eEiqjaks8#V0@%jfA84*$68)iqmb=2*6;A<>)';Bj_$]ZDPi3[T$i[VR7*^?2">
%KMl%B^"?]:"/t<;,s&@KR.E.6Kje.Fip[3CY*c+PNEcuFmPpES:=g@`r.km\[N+^c<P+!<JJs>7>>?FFcsBp.PM#_8efPX$9kZ;d
%7=6RGKrYPXgg\kCCI%s2@FR@LOtrY&"uI=YW@`m<=4;2HC-77,1;@D_dXbZGA(qC,0X0$OgYpctEqarL=4u4$<@E$Y%Vs:9Uf\"7
%LuKG%WI4,lK]s6;KL-15Md^sU2TTea7[j5I,EWXTCV6/pgN[0WL7^*Dd?ScL!^`%>D+L$jP0b2l-cH3:CI.^CCsOtn4);!"cn:lK
%U/.=uK]XjY;N0*0(8JmZ\k[ng<EOt4YRZ(1/Ad43akR67-lZePcusRJLC,E;;>t*@nB1L2,!tt74cOIE_)V^i!M'a$O5h<^]6Eot
%4$'8!FdTM7oJ#ab.(aZi&q)j;HaF&1E=W,?n:q!_n"l,r"*-IDpUPB^QT:flcOZANA:X?e=$f`[mc]f\GWRG3Oq4%@`ePhhD@5_C
%GbL1Ed3fqZL,Em`2o!ZHg7N7&Ua&8DZgYP,GId!1cCk"l[4L%VbU?$[aL>lO6!L-llJ"]3Eehq8d.bY<IYYI!.UgL-]1f&M`k(20
%k`Lu^/9)]&f0[Y_fdWTC$(pDRfU-6`+E33%/BLh<'TVD;3hK]PB<1q+&Xt7S`:`:JG\Il?HV<PUkrB9Pl`)`s*)?N5D(3WSlkTQM
%Ap8Z79Sc*kE,9M,:I]_3Q\A1+8-jU=GqN\'T_L\K7lNG(p(Ikfnlm2A&kRstkl&e-Kj2I;d#Sh`=6X&JMfIV7YAE)uj5>@ZS<njZ
%N#YS]F7l""G;?2A7$LbgOI!Z%4_JYb'^pBC([@p_<E3m,e=)(8U9<<PV:78OM+&OZlW]P9UgMfrWD>7Tej9q)Z!<2%0N:1XfO^/j
%)O6O$.-[Q?Idg+YOqUkLb$N.N2sccF67AWF!C)bOXWbKk[II+Tm"UjE;)74*=+_5YWE>2Q0q5<@6]-IX(W6B,lbW2o%PnkI;p@'E
%I:0bA9ur>]om%Y[p4CPfr@QRU!KBm@d"`hQ'60`LgAA/LmqE;rP:CN;.'Gl8?oQW"2F[Q<G`MO_;mTdJ6Oa30.gDJ'4@,_FBm-ZK
%8QlkT6&/J_!7[B"01[D$PAQ;h$-[NZf->KGeVVESq@quNo?U<-E'UjhViUZ@aU\)#V5)`,&.+H]M&mB:>Lpr@+l\STPtl6Q7fJP*
%e+Hf:?as>rSk=2;P'>Dohabh1)MT52Ar\^>=enhHM0e&Yj=tB9V!ERG'9!m=(\t*ee[AN8M]?/a"a"R;&5K4=:!0aKOM1P>e(%C_
%NKEqjVZcEM[BRJF$t_J]-rfY[=#'o>;,%B>Ef[<,2tBB4lF:$&^n0u`G\?!uAp[P]UHOF\_\$NqWU7V\JB/=XJ^H-OQj6?I#Iu:o
%<s_+dRHeZpC'MOOkCST)='WL$ZtL9rBuW5!7[P88GY:_7oTR0?W,C`WbCCA>T,!6>3Bo<+U]!DV4i`C<`AkE0ThYt+4bNelH:%3H
%V=UbcbkRpS:pPh1LiAiAKmW4Z>aZ^V4K%`]gJ*"kP@H0ID"?X0g<%dAm)jbQU5`kWr@+[q`Zb+2(OHGfWjDKB*WB]Ks+R4.&&4j*
%kaOV";:q"!7qGuk<8"/tj>B5YE!SHYgW=+n@snsFW6.sV)3'Z#-d8?7ZXkIoRnn7<ruOalVl7k3[X7!QU\B?JMiN)mZ^-+SjlZij
%8<gF6Qe9h"V790',&?sfh%.`;V-qO=6t,VSW;!nbN<f*WRP@[*c5=ap^<W@dDocN&:!=MWH-/*Ibu?&chb`(-dJf.-6`Ud8MufD2
%e^]r-f^_?\h!N,R8Pc`*EI<2!DpV88@hi1W@2%[ZrY0sp-&L!t[<E\eb#k:Qde=KhmM2%J8PGEU/ceaP[_OP3r\)WBagE0Vf#4Sj
%Rs?&J+aWUVA/%e5ZB`JL8reFF"[Cog[RHEu3okNgJ3\C_0F<$9ThS$l8Q&IhLNs6Z[[We]$k_pX@*6X*DUG2n'Y7^&<JAsT-O0(X
%BnJ,=qnX5<09,SH)ZQ_n6&iVdfi"YB6Rk?cjOE[ZMMg@X(ku(3VPN^:4iHb(D#(DS9A\4aI=o*p-CV;WWDJT[5HqHRMZ$F7[.Hn7
%9/imBD4h?d18NsTf5G/"N?PfSX&r4a-N9PpAmHRo]HebaLI6<,NYcA1.A4pDp>6.7o4ucjhiJ+-Z5g`V<%]1n9<'Y>\4bTs3Hp)S
%2;FjXc??8[*_EU1+sUUgg=\@<hG"99W5+QKj2](e_+n]2R[TlaMcCr(%"O5<41Kq8FkgUI/:^W32\ATbJ1Gq9^[Q35YEe_FjbJa;
%\hF+%^fAYB1WTL<QcA(AM6?^:miV8Rhu0h[oqr=MHhlfjgUe7T*Y(=4o:*4uJ%9ptO*A'W5Q:0Gj.#r#B5]t]?q7s0kJNp`]tM&V
%pog=YDP)@Tqp5<)#U`nRGlIW=5Q0Q]+8uAT%m5p~>
%AI9_PrivateDataEnd
