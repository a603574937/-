%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Blondie.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Diana
%%CreationDate: 8/13/2010
%%BoundingBox: 0 0 596 842
%%HiResBoundingBox: 0 0 595.0547 841.8902
%%CropBox: 0 0 595.0547 841.8902
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 92 128 8%%BeginData: 24209 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08A8CAA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8
%FFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCF
%FFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFD08A8A1FFFF7DA8A1A8A1
%A8A8A8A7FD04A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FF
%A8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7A8A7A87DA8A8FFA8A1FD08A8CFA8
%CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8
%CFA8FFA8CFA8CFA8CAA8CAFD06A87DFFFF7DA87DA8A7A8A1FD08A8CAA8A8
%A8CFA8CFA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CFA8CFA8CAA8CAFD06
%A8A7A8A8A8A1A8A1A8A8FFFD06A8CAA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8
%FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8
%CFA8A8A8CAA8A8A7FFFFA1A8A1FD08A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCFFFA8FFCAFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD06A8A7FD
%04A8FFFD08A8CFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCA
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCF
%FFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CAFD05A8FFFF7DA8
%A7A8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%CFA8FFA8CFA8CFA8CAA8CFFD0AA8A1A8A8FFFD04A8CFA8CAA8FFA8CFA8FF
%A8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FF
%CAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CAA8FFFFA1FD08A8CAA8CAA8CFA8CF
%A8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CF
%A8CFA8CAA8CFFD06A8A7A8A8FFFD06A8CFA8CFA8FFA8FFA8FFA8FFA8FFCF
%FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8
%CFA8FFA8CAA8CFA8A8A8FFFFA7A8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFCF
%FFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8CFA8CFA8A8A8
%CAFD07A8FFA8A8CFA8CAA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFF
%CFFFFFFFCFFFFFFFCFFFCFFFFFA87C7D7DFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CF
%A8FFA8CAA8FFFFFD07A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8
%FFCFFFA8FFCFFFA17D7CA17CCAA77C52A8FFFFCFFFCFFFCFFFCFFFCAFFCF
%FFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFA8CFA8FFA8CAA8CFFD07A8
%FFCAA8A8A8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFF
%FFFFCFFFA7A1A8CFA7CFA8CFCAA752CFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CAA8CF
%A8FFFFA7FD04A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFF
%A8FFCFFFA8A1CACFA7CFA7CAA7CFA7A752FFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD05
%A8FFCFA8CAA8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCF
%FD04FFA8A8CFCACFCFCFA8CFA8CFA7A77DFD0DFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFA8FFFFFD05A8CFA8CAA8
%FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFFFA87DCFCACFA8CAA7
%CFA7CFA7CAA77CA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFD05A8FFA8A8CFA8CFA8FFA8FF
%A8FFCAFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFA1CACACFCFCF7CCA
%CACFA7CFA7CAA1A1CFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CAA8FFFFA8A8A8CAA8A8A8
%CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8A7CACFA7CFA7
%767CCFA7CAA7CAA7A77CA7FFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8A8A8FFCAA8FFA8FF
%A8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFD04FFA8A7CFCACFCF
%A776A1A7CFA8CFA7CFA7A77CCFFD10FFCFFFFFFFCFFFFFFFCFFFCFFFCAFF
%CFFFA8FFCAFFA8FFA8CFA8FFFFA8A8A8CFA8CAA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFCAFFCFFFCFFFCFFF7CCACACFA8CF76A77C7C7CA7A7CFA7A7A1
%A17CFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8
%FFA8FFA8CFA8FFA8CAA8CFA8A8A8FFCFA8CFA8FFA8FFA8FFCAFFA8FFCFFF
%CAFFCFFFCFFFFFFFCFFFFFFFCFFFCAA1FD04CF7CA1A17D7CCAA1A7A1A77C
%A7A17CA8FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCF
%FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFFD05A8CFA8CFA8FFA8CFA8FFA8FF
%A8FFA8FFA8FFCFFFA8FFCFFFCFA87CCFA7CFA8A176A1A7CAA7CAA1A1767C
%7CA176A7FFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FF
%A8FFA8CFA8FFA8CFA8CFFD05A8FFFFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCF
%FFFFFFCFFFFFFFCFFD05FF7DA8CACFCFCFA17D537D7CCAC9CAA17D537D7C
%A17DFD11FFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFFF
%A8CFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCF7D
%A7CFA7CFA7A7FD047D7CCAA7A153847C51757DFFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CAA8CAA8
%FFCFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFF
%7CFFA8CFCACF7DCAA1A8A7CAA7CAA7A7A1A04B517DFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8CF
%A8FFFFA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCA
%FFA77DCACAA7CFA8A1A1CAA7CAA7C9A1A1A1C9765126CFCFFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8
%CFA8A8A8FFCFA8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFD0AFFA8A1FFA7
%CFCFFFA7A1CACFC9CAA7C97CC9A77C277CFD18FFCFFFFFFFCFFFCFFFCFFF
%CFFFA8FFA8FFA8FFFFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCF
%FFCFFFCFFFCFFF7CA7CACAA7CFA8CF76A7A7A8A8CAA7CAA17C2751A8FFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8
%FFA8FFA8CFA8FFA8A8A8FFFFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFF
%CFFFFFFFCFFD04FF7DA7CFA7A7CACFCAA77CCAA1CBFFFFA1A151517CFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCF
%FFCFFFA8FFCAFFA8FFA8FFFFA8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FF
%CFFFA8FFCFFFCAFFCFFF76CACACA7CA7CACFA77C7CCAA17D7CA04B524BCF
%CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FF
%A8FFA8FFA8CFA8FFA8CFA8CFA8FFFFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCF
%FD0CFF7DA7CFCAA77CCFCFCFA77C76CAC9A7517C517DFD1CFFCFFFFFFFCF
%FFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFF
%CFFFCFFFCFFFCFFFCFFF52A8CACFA77CA1CFA8CFA77D76A1FD0451A1FFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCF
%FFA8FFA8FFA8FFA8CFA8CFA8FFCFA8FFCAFFA8FFCFFFCAFFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFF7D7CFFCFCF7D7CA8CFCACFCACA7CA17C7C27A8
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFCFFFCFFFCFFFA8FFCAFFA8FFFFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8
%FFCFFFA8FFCFFFCAFFCFFFCAFF7D7CCFCFA8CA5151A7CFA7A77CA0767C7C
%7C52FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8
%FFCFFFA8FFA8FFA8FFA8CFA8FFA8CAA8FFFFA8FFCFFFCAFFCFFFCFFFFFFF
%CFFD0FFF51CFCFCFCACF51767CA17CC9A1CAA17CA7A1A8FD1DFFCFFFFFFF
%CFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8CFA8FFCAFFA8FFCFFFCAFFCFFFCF
%FFCFFFCFFFCFFFCFFFFF7D51FFCACFA7A74B7651A1A1A7A1C9767CA7A1FF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8
%FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFF517CFFCFCFA77C51A1A1C9A1C9A1A776A7
%7CFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8FFA8FFA8FFA8FFCF
%FFA8FFCFFFCAFFCFFFCAFFCFFFCAFFA84BA7CFA8CFA15176A1A1A7A1A7A1
%767D76A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFA8FFCFFFA8FFA8FFA8FFA8CFA8CFA8FFFFCAFFA8FFCFFFCFFFFFFFCFFD
%13FF7C7CCFCFCACF7676A1C9A1C9A1CA76A752FD1FFFCFFFFFFFCFFFCFFF
%CAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFFFFF51CFCACFA77D4BA1A0C9A1A7A1A0517DFFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8
%FFA8CFA8FFCAFFFFA8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFF7CA1CFCFCF7D51A1A7A1C9A1C97652FFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%CFFFCAFFCFFFA8FFFFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFF7CA7A8CFA7A74BA17CA1A1A7A17C51FFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD12FFA7A7
%CFCFCF7D51A1A77CCAA1CAA0527DFD1DFFCFFFFFFFCFFFFFFFCFFFCFFFA8
%FFFFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFA8A87CCFA8CFA77C4BC9A17CA1C9A1A0525352CFFFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FF
%A8CFA8FFFFCAFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFF7C7CCFCFCFA7A7277CA1CA7CA1A1CAA05253534CCFFD04FFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFF
%A8FFCAFFFFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFF7C7CA7CAA77C2675A1A7A1A776A7A1A15253532852FFCFFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8
%FFA8CFA8CFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFD13FF52514B4B2651A1CA
%A7CAC97CA0CAA176537E2852FD1CFFCFFFFFFFCFFFCFFFCFFFCFFFFFA8FF
%A8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFFFA7
%7C7C51C976A7A1A1767D287CA1C95153532876FFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFCFFF
%FFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD05FFA0
%C9A1A07676527C767D525276CAA1A0282827CFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFFF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%FD04A1757C76A1A1C9A1A7757CA1A77C4B26A8FFFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8
%FFFFA8FFCFFFCFFFFFFFCFFD14FFA7A1C9A07CA1A7A1CAA7CAA7A176CAA1
%C951A7FD20FFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCFFFCAFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCF7CC9A1A1767CA0A1A1C9A1C976
%7CA1A7A1A051FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8CFA8FFFFCFFFCAFFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFA7A0CAA1C976A1A1CAA1CA
%A77C76CAA1C9A176A8FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCAFFFFA8FFA8FFA8FFA8FFA8
%FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF7DA0C9A0767CA7A1
%A7A1A77676A1C9A1A151A7FFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFF
%CFFFFFFFCFFD13FFCF7DA0A176A7A7CAA7CAA1A1757CC9C9A17C7DFD21FF
%CFFFFFFFCFFFCFFFFFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFA87D4B76A1C9A1A7A1A1765151A1A1C9767DFF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCA
%FFCFFFA8FFCAFFA8FFCFFFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFD04FFA77CCAA1CAA7C97C767DFF7CA7A7A17C
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFFFA876C9A1A7A1C9A07676FFFFCF76C9
%A07CA8FFCFFFCAFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%A8FFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFD16FFA876C9
%C9CAA7CAA7A176FD04FFCA7CC976FD07FFCFFD17FFCFFFFFFFCFFFCFFFCA
%FFFFA8CFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCF7D76A7A1CAA1C9A1A7767CCFFFCFFFFFA7A0A0A8FFFFFFA8A77C76
%7DFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FF
%A8CFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFA87C7CCAA7CAA7CAA7CAA1A176CAFD04FFA8A1A0A7FFA8A1A77676
%52CFFD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCA
%FFCFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFA151A1CAA1C9A1A7A1C9A1C9A07C76FFCFFFCFFF7DA176767CC9A07C
%51A7CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FF
%A8FFA8FFA8FFFFCFFFCFFFCFFFCFFD13FFA84BA1CFC9CAC9CAC9CAC9CAC9
%CAA1767DFD05FF7CC9A1CA7CA1A7FD1BFFCFFFFFFFCFFFCFFFFFA8FFA8FF
%A8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCA51275276A07CA1
%A0A0767C767C7CA77675A7FFCFFFFFA776A075A7FFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFCFFFFFA8
%FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD04FF7C287F53595353
%52FD045354535328524B51A8FFFFFFCFA77DCAFD04FFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8
%FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFCF267D537E537E53
%5A537E5354285376A1A1A7757CCFFFCFFD05FFCFFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFF
%CFFFCFFFFFFFCFFD0FFFA7527E7E597E5A7E537E5A5352A1A7CAA7CAC9A7
%75A7FD22FFCFFFFFFFCFFFCFFFCAFFFFA8CFA8FFA8FFA8FFCFFFCAFFCFFF
%CFFFCFFFCFFFCFFFCFFFFFA7277E537E537E535A535351A7A7CAA7C9A1CA
%A1A14BA8FFFFCFFFA1527CFFFFA751A7FFFFCFFF7DA7CFFFFFFFCFFFFFFF
%A151A8FFCFFFCFFFCAFFCFFFA8FFA8CFA8FFFFCFFFCAFFCFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFA14B7E7E537E537E5A5351CAC9CAA7CAA7
%CAA7CAA1A051FFFFFFCF277C7D517C2726277C527C4B26277C527C4BA8A8
%76524B52FFFFFFCFFFFFFFCFFFCFFFCAFFCFFFFFA8FFA8FFA8FFA8FFA8FF
%CFFFA8FFCFFFCAFFCFFFCAFFCFFFCFA826525353537E535327A7A7CAA1C9
%A1CAA1C9A1CAA07576FFCFFF767D52272651275127515151275127272751
%7CA7262626FFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFFCF
%FFFFFFCFFD0DFFA85152525352537E27A1CACAA7CAA7CAA7CAA7CAA7CA7C
%76A8FFFFFFCFFFCFFF7D52527DFFFFCFFFFFFFCFFFFFFFA8A87D7DFD08FF
%CFFFFFFFCFFFCFFFFFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFF51A1765227270076C9CAA1CAA7C9A1CAA7C9A1CAA7A1517CFF
%FFCFFFCFFFCA267D76F852FD045152512752512726515251514B7DFFCFFF
%CFFFA8FFCAFFA8FFCFFFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFD04FF7D76CFA1A0754B4BCFC9CAA7CAA7CAA7CAA7CAA7CAA7A14BA8
%FFFFCFFFFFFF7C7D767C4B52517C7CCA5152517C51524B7D7CA727CAFFFF
%CFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA851A1CAA7C9A04B51CAA7C9A1CAA7C9A1CAA1C9A1CAA0
%7652FFCFFFCAFFCFFFA8FFCFFFCAFFCFFFCFFFCFFFA8FFCFFFCFFFCFFFCF
%FFCFFFA8FFA8FFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFD11FF7CA1C9CA
%C9CAA0517CCFA7CAA7CAA7CAA7CAA7CAC9CA7C76CFFD1DFFCFFFFFFFCFFF
%CFFFA8FFFFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFCF51CAA1CAA7C9764B76CAA7CAA7C9A1CAA7C9A1CAA7A14BA8FFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCF
%FFA8FFA8CFA8FFFFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFD04FF7D7CCAA7CAA7C9765176CAA7CAA7CAA7CAA7CAA7CAA1767CFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFA776A7C9A1C9A1A1765151CAA7CAA7C9A1CAA7C9A1CA7676
%A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FF
%CAFFA8FFA8FFA8CFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFD11FF7CA7A7CAA7
%CAA1A17C764BA7CACAA7CAA7CAA7CAC9A751FD1BFFCFFFFFFFCFFFCFFFCA
%FFCFFFFFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFFFA876CAA1CAA1C97CA07C51267DA7CAA1CAA7C9A1CAA176A1FFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FF
%A8FFA8FFCAFFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFD04FF7DA1CAA7CAA7A776A14B7D7D7CA7CAA7CAA7CAA7CA767DFD04
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCA
%FFCFFFA8FFFFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFF7D7CA7A7A1C9A17C76517DFFA776A1CAA1CAA7C9A7A176FF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FF
%A8FFA8FFA8CFA8FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD11FF7CCAA7CAA7
%CA7CA14BCFFFFFCF7DA1CFA7CAA7CAA77CCFFD17FFCFFFFFFFCFFFFFFFCF
%FFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFFFA77CCAA1C9A1A17552CFFFCFFFCF7C7CCAA7CAA7CA51A8
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FF
%CAFFA8FFA8CFA8FFFFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFA87CC9CAA1CAA07652FFFFFFCFFFFFA7A1CAA7CAA7
%7CA7FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCF
%FFCFFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFF76A1A1A7A1A14BA1FFFFCFFFCAFFCF76A1CA
%A7CA76A1FFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFF
%A8FFA8FFA8FFA8CFA8CFA8FFFFCAFFA8FFCFFFCFFFFFFFCFFFFFFFCFFD10
%FFA87CCAA7CAA076A8FD05FFA8A77CCACACAA77C7DFD19FFCFFFFFFFCFFF
%CFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFA87CA7C9A17C76FFCFFFFFFF7C7CA1CAA7CAA7A74B
%A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCA
%FFA8FFA8CFA8CFA8FFFFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFF51C9A7A775A1FD04FF52A1A7CAA7CAA7CA76
%7CFD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%CFFFA8FFCAFFA8FFFFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCF
%FFCAFFCFFFCAFFCFFFCAFFA851A1C97C767DFFCFFF51A1C9CAA1CAA7CA7C
%52CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8
%FFA8FFA8CFA8FFA8CAA8FFFFA8FFCAFFCAFFCFFFCFFFFFFFCFFD12FFA87C
%CAA7A175A8FFFF767CCACAA7CAC9CAA776A8FD19FFCFFFFFFFCFFFCFFFCA
%FFCFFFA8FFFFA8CFA8FFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFF7DA7A1CAA0767DFFA751A7CAA7CAA7CAA7767CFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FF
%A8CFA8FFA8CAA8FFFFA8FFA8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFA8A1C9CAA7A775A8FF7D76CFA7CAA7CAA7A152FD05
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8
%FFCFFFA8FFA8FFFFA8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FF
%CFFFCAFFCFFFCAFFFFA17CCAA1C9A076A1FF7D7CA7CAA1CAA7A751CFFFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FF
%A8CFA8FFA8CFA8CFA8FFFFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFD0FFF76
%A7A7CAA7CA76A8FFA87CCFA7CACACA76A8FD1AFFCFFFFFFFCFFFCFFFCAFF
%CFFFA8FFA8FFFFA8CFA8CFA8FFA8CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCF
%FFCFFFCFFFCFFFCF7CA1CAA1C9A17C7DFF7DA1A7CAA7CA7C7CCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8
%FFA8FFA8CFA8CFA8FFCFA8FFA8FFA8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFD05FF52CAA7CAA7CA76A7FFA7A1CAA7CAA17CA8FFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFF
%CFFFA8FFA8FFA8FFFFA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCF
%FFA8FFCFFFCAFFCFFFCF7CA0C9A1C9A17C7CFF7CA7A7CAA7767DFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8
%CFA8FFA8CFA8CFA8A8A8FFCFA8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFF
%FFFFCFFD09FFA87CA7CAA7CAA0A1FFA1A7CACAA17CFD1BFFCFFFFFFFCFFF
%CFFFCAFFCFFFA8FFA8FFA8FFFFA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCF
%FFA8FFCFFFCFFFCFFFCFFFCFFFCFFFA77CA1C9A1A176A87CCAA7A776CFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8CFA8A8A8FFCFA8CFA8FFA8FFA8FFCFFFA8FFCFFF
%CFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF7DA1A7CAA17C7CA7CACA76A8
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFFFA8CAA8A8A8CFA8CFA8FFA8CFA8
%FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFF76A7A1C95176A7CA76
%7DCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8
%FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8A8A8FFFFA8FFA8FFA8FFA8FFCFFF
%CAFFCFFFCFFFFFFFCFFFFFFFCFFD0AFFA87CCAC9757CCFA17CCFFD17FFCF
%FFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFFFA8CAA8A8A8CF
%A8CFA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFF7D
%7C7651CAA17CA7FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CAA8FFCAA8FFA8
%CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFD04FFA8
%515151CAA77C7DFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8A8A8
%CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCF
%FF7CA1A1A7A7A07CFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8
%FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAA8A8A8FFCA
%A8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD
%04FFA8A1CAA1C951FD19FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8
%FFA8FFA8CFA8FFFFA8A8A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFF
%A8FFCFFFCAFFCFFFCFFFCFFF7DA1CACA7551A7FFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CF
%A8CFA8CAA8CAA8A8A8FFCAA8CAA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCF
%FFCFFFCFFFFFFFCFFFFFFFCFFFFF7DA7CA7C767C7CFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCFFFA8
%FFA8FFA8FFA8CFA8CFA8FFFFA7FD04A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8
%FFA8FFA8FFA8FFCAFFA8FFCFFFCFA87CCA7C51A0C9767CA7FFCFFFCFFFCA
%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8
%CFA8CFA8CAA8CAFD05A8FFCFA8CAA8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFF
%CFFFCFFFCFFFFFFFCFFD05FF7DCA7C7C76C9A7CAA1A07CCFFD0AFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8
%FFA8FFFFFD05A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFF
%A8FFCFFFA87D7C76A77DC9A7A0A7A1A17CA7A7CFCFFFCFFFCFFFCFFFCAFF
%CFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAFD05
%A8FFA8A8CAA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCF
%FFCFFFFFFFA7767DFF51A17CA77DA1A1A17576A7FFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8
%A8A8FFFFA7A8A7FD04A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFCAFFA7A8CFA8A7FFCFFFA8A87DA8A8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD07A8
%FFA8A8CAA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFF
%CFFFFFFFCFFD07FFCFFD07FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%CFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8FFFFA8A8A7FD04
%A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCAFF
%A8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD07A8FFFD04A8CAA8CAA8CF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8A8A8CAA8FFFF7DA8A7A8A7FD08
%A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CF
%A8CFA8CAA8CFA8A8A8CAFD06A8A1A8A8FFFD04A8CAA8CAA8FFA8CFA8FFA8
%FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCA
%FFA8FFA8FFA8FFA8CFA8CFA8A8A8CAA8FFFFA1A8A8A8A7FD04A8CAA8A8A8
%CFA8CAA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8
%FFA8CAA8CFA8A8A8CAFD06A8A7A8A8FFA8A7FD04A8CAA8A8A8CFA8CFA8FF
%A8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FF
%A8CFA8FFA8CAA8CFFD06A8A1FFFF7DA87DA8A7A8A7FD08A8CAA8CAA8CFA8
%CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFFD0AA8A1A8
%A1A8A8FFFD06A8CAA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFF
%CAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8A8
%A1FFFFA1A87DA8A7A8A7FD08A8CFA8A8A8CFA8CFA8FFA8CFA8FFA8CFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CF
%A8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A1A8A7A8A8FFA8A8A8
%A7FD04A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCF
%FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8
%FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CAFD06A8A7A8A1FFFF7DA87DA87D
%A8A7A8A1FD08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CF
%A8A8A8CAFD06A8A7A8A8A8A1A8A1A87DA8A8FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:ModifyDate>2010-08-13T15:02:28+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-08-13T15:02:28+04:00</xmp:CreateDate>
         <xmp:MetadataDate>2010-08-13T15:02:28+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>184</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6rFHkGxGRR4FRcaYoRMa&#xA;YFRCJiqsiYFVlTFVRUxVeEwKuCYqu4Yq7hiruGKrSmKrSmKrGTCqkyYqpOmKqDphVDyJiqGkTCqE&#xA;ljxSmvkxaatL/wAYG/4mmSDGSTxJgZIyJMCoqNMCETGmKohEwKrKmKqqpgVUCYqvC4quC4qu44q7&#xA;jiruOKrSuKrSmKrGTFVNkxVSdMKqDpiqHkTCqGkTFULKmFKZeUVpqkv/ABgb/ia5IMZJTEmRZIyJ&#xA;MCEVGmKolEwKromKqypgVVVcVVAuKrwuKthcVb44ob44q1xxVorilaVxVaVxVTZcVUmXFVF0wqh5&#xA;ExVDSJhVCyphVMPKy01OT/jC3/ElyUUSSuJMilGRJgVExpgVEouKq6LgVWVcVVFXFV4XFUh1XUdW&#xA;ur2TTdHlS1FvT69qMierwdgGWGGMlVL8SGZm2UECjEnjVPJWwZRilt7ouoaiqw63qMl3awghIbfn&#xA;ZiUnq1x6T/vCBsFFF78a0pTLISyEQlzxav5bYXWjXM1xZqaz6XdSvNEy9/TeQu8J8Cp41+0pwRyk&#xA;JMQWdaRqlnq2nw39oSYZQfhYUdGU8XRxvRlYEH3zKBtqIRlMKGiMVWkYqtK4UrGXFVJlxVRdcVUH&#xA;XCqHkXFUJKmFUd5aWmoyf8Yj/wASXJRQUtiXIpRca4qio1wKiEXFVdFwKqquKFQDFUHrmonTdJuL&#xA;xEEsyAJbQk0Ek8rCOGMntzkdVr75EmhaQEDptkLKyjt+XqOtWmmIoZJXJeSRqd3dix+eYZNtqVx6&#xA;9BP5ivtHFA9rDFKrV+0zFvUWn/FYMZP+sMCaV5wCCCKg7EHAqVaFfjy/rxgkNNM1R1UntHcGiI/+&#xA;y2jbr+ydgDl2GdGmMg9CoMyWt1MVWkYoaIxVYVwpU2XFVF1xVQdcKoeRcVQsq4VRnl5aX8n/ABiP&#xA;/ElyUUFL4lyKUXGuBUTGuKohFwKrKuKqqjFC8DArG/Mcv1nzDo2lg/BF62p3A6giBRBEjD/Kkuea&#xA;+8eVZjtTOAX61qQ03SLvUOBl+rxNIka9XYD4VHux2GY7Y8zhtNSmlklsooZ9WguG+u30V8EuFuDQ&#xA;SH0/Rmj4IG48S9ePwt3GSpuA2plf6T1O3Wl3ALtR0mtqK5/1onNNvFXNf5ciQg4j0SK81y01eO6t&#xA;WSIJG3FEMv75lNQfUgZUkjBX+bIlrqnoPkPWptV8vRm5Yve2TvZ3Tk1Zmipwkb/KkiZJD7tmZCVi&#xA;2mQosiyaGsVaIxVaRihTYYVU2XFKg64qh5FwqhpFxVE6CKXz/wDGM/8AElycUFAxLkUoqNcComNc&#xA;CohFxVWUYqqAYELgMUsOtpTcea/MmoHdbMW2mReFIIfrbkfN70qf9X2zGyndsjydr8rR+V3ulHI2&#xA;0cVzw3+L0SslNvHjlYZDmwxvIMKTyGL0vqvOSS24Vikj9Wp5RPGPgZAfhb4vi+I1+zmbHOBDhIU4&#xA;TxWCnsyyR2RWWb40jo9wSqnYbtUqVB9+NPbtmI5YunmnnfSrrSNFS5tlg+ui4ikS7K8pDJ6iUDl6&#xA;s9WAJaoJ+IGvIUyMucSiIgU43gEXIl6j+SNwb7yveayq8bXV743NrtQlEtoLdq+NJYHGRxCg0z5v&#xA;Q8tYuxV2KrSMVWEYoU2GFKi64qoSLiqFkXCqI0QUvX/4xn/iQycUFBRLkEoqNcVRKLgVXQYqqqMC&#xA;FQDFK7FWB+VibjQtSuSKSXmoarIfHiL2aKKvv6SIDmJPmW0Jlpc0V/pRiYU48reRT247D71ocili&#xA;ekXdxaiXy9LRb7TgPqnPYTWSsFUqx/bRf3bHejUYijAGcT3t0DYRGt3XlGexkgkkvJpwpNxp91Ao&#xA;j4039aUxegE8TyYeAY7ZcY46u1BndEB5drN1qXnbX7HRtMcoksnoWkhFAXIPq3TJ/LHGGdVr2+WU&#xA;xixy5b2HJ9I6Ho2n6Jo9lpGnx+nZWEKQW6dTxQUBY92PUnucyQHFR2FXYq7FWsVaIxQpsMKqTjFK&#xA;HdcVQ0i4VV9HFLx/+MZ/WMnFBQcS5BKKjGKohBgVXUYqqqMCFwxS3irz/wDL+Zl0/VdNmNbnS9X1&#xA;G3mrttJdPcxGng0NwhGYkxu2hLb7WU8oeZVe+JTQ9VZIXn/ZhuRtE77fZkT4CegKj+bIpTXzJomk&#xA;apAl5LMIfR/exXiOUKECnNJFKlTTbruNjtgUF5x5qivr23FnNq13Jp6Hk88tgBHKRWiyPCyPxrvV&#xA;YKfMZIFuImQmP5M6W9j56lW9VTLJpkkunTxkSQTRGaH1JIpB1pVO1aHeld7sRsuNIPc8uYOxV2Ku&#xA;xV2KtHFVjDFCkwwpUXGKoaQYVVdJFLtv9Q/rGSggoSIZFKKjGBUQgxVWUYoVAMCV2KuxV5x50Enl&#xA;HzVH5xQE6DqohsfMwHSB0PC1vj/kry9KT/J4ntlOWPVnEpz5l0Ky1zSJ7O5jE0UqEFfFT4EdD3Uj&#xA;od8oZvGPLttfQa0fL97eTsumzAmDkOE0dDJBL05cWA+JA3EFWFKYlysUYnfq9AZQwKsKg7EHocDe&#xA;xqDUU0OHVZh/e+XJl1ayIFSkLg+rEO9JUEit7N44Ymjbh547veszXEdirsVdirsVdiq0jFVNhhQo&#xA;OMUoeQYqq6WP9Kb/AFD+sZOCChIhkUomMYFRCDFVZRgQvGKW8VdiqHv7C01CxuLC8iWa0uo3huIW&#xA;3V45AVZT8wcVYV+XYuovK0NhdO0s2lXF3pnrP1kSwupLaN6nrWOJd/HMOQotrBPN0CWn5k6PcIP9&#xA;647qzlXxVGV46/6vNx9OAcnIwHdP7WT1IQaklGaMsepMbFCfpK4HKCQPpR1b8wLPQ2lSCz1WJZr9&#xA;2bi0kNi4cwRj9ppuXE/5HM9ssxxsuLqdqe8ZlOE7FXYq7FXYq7FWjiqmwxQouMKVCQYqv00f6S3+&#xA;of1jJw5oKFjGRSiYxgVEIMVVVwIX4pdirsVY153803nl+DT2t4Ld/wBIXQszc3crwwQM8bOjOY45&#xA;S3Jk4qvwgsQOQqMjOVBIFoC2utL0HReMt2kpj9Se5uCVRXmmdpp5W34pzkdmO+1cxCbbKeVWWqjz&#xA;h56TVrOsmi6THLHb3VCFnuJmVpXStPgX01VT3+KmHkHJwx6smRzbazJbt/dXy+vC3YSxgJKntVeD&#xA;Ad/iwOQObE/Pwkj1vTbmN3imWNxDMjcWSRXEishG/IFKjNj2ZESyGJ5GLh67aIPm9B/K381bjXr0&#xA;+XdbRRrUUTSw3kYCx3McdAxKD7EgDAkL8J3I49Mt1OnOI+ThQlb07MZm7FXYq7FXYq1iq1sUKLjC&#xA;lQkGKr9OH+kt/qH9YycOaChYxkUomMYFV0xQqrgSuxV2KuxVjf5g/U5fK91p91Ek66pSyWGQBgfU&#xA;3dgGBHKONWkX3XIZDQZ443IB4VrvkDylbXtg0llc31vJN6S6Z9adlLFTwKJcSqmzKBQtShzFBLnH&#xA;HEb0nPlqTXLHSFsNP0QRw2808Mckk8VUSOZ1jDojGpVAF+3+GWAR6n7P7FBl0CB1W584Jq+kzalG&#xA;YrZL6BUEIgWKsregS1Xlm+xKw2NN+mWy8HhNcXF8KYDxOIXVL/zRjeDT7bVVXkli7PMB/IVKsdq9&#xA;FYt9GOjzDHkEjyTqsfFApj+QHljVb7WpfOl3bvbaYLdoNL9VSjTtMVLTIrfF6aotAx+1y26Zn6vU&#xA;jIRXIOthDhe9ZiM3Yq7FXYq7FXYqtbFCk+FUPIMUr9P/AN6G/wBU/rGThzQULHkEolMVV1wIVBil&#xA;dirsVdirEvP9vdBLLUR8VhZer9cUf7r9QKFuDX9mMKysewavQHKsoJDdgkBLd5x5qiaGAapDO0E1&#xA;kOakAMrLUEqVII3p16+FDQ5jAudIAhPNMQgXRIoGuZCPcVAr9+FQkfnmeOFNOZzxjiu4J5WPRY4r&#xA;iJnY+wWpOKlNNXsUvtOntnUNzU0BFQSO309MDNl35S6tPqHkq1iuH9S50x5NPketSVgNIS3+UYCh&#xA;b3zLgbDq8kakQzLJsHYq7FXYq7FXYqtbFVJ8KFCTFK6w/wB6G/1T+sZOHNBQ0eQSiUxVXXAhUGKW&#xA;8VdirsVaIBBBFQdiDiryHz55IsrXUtMstK1F4YLmcSy6GyCWNLWM1leJ+SvDH0RQeagsFUKOlGSA&#xA;G7lYckjt0TVY1QUUUBJP0san8TlLlMR1iy1DzFrw0bTFRriRTEHkBaKNF/vZZAOqpypT9o0Xvkox&#xA;ssck+EJ/+grzyzLBol1cSXkCxD9HajKBzmSNQHSTjQeoh/4JaHchqGcKY4MvEKPNOfylUWw8wWPd&#xA;b8XIBrsksCRr/wAmMtw8nH1I9T0DLXHdirsVdirsVdirRxVSbFCg+FK6x/3ob/VP6xk4c0FCx5BK&#xA;JTFVdcUKgwJbxV2KuxVhWvefpHv7jRvLKR3d/bnhfajLVrO0f+Q8SDNMP99qRT9pl6GuWSm3HiMk&#xA;ls9P9CSa5nmkvNQuiDd305BkkK14j4Qqoi1PFEAUdhucoJtzIxERsryh/Tb06CSh4E9K02rgZJf+&#xA;VV3DZeZtSsL1eF7fRR/VnatSbcyNLHvtUiQOKfaAP8uW4i42pB2L0XzDokOs6XJaORHMD6lpcUqY&#xA;p1B4SDp40YV+JSV6HLpCxTjxkQbDz/yz5hstA1q5uNUDW0WoQiG4ZUkm4XVk7KY6Rqx/bcVpvx98&#xA;oxnhJBcrNEzAITbW/wAxNQjspJ9Ns0h47xteElmG4p6aEBK9QS59xhObuYx0x6qP5Z6/5v169u73&#xA;VLgtpkcYWCIQRpGzu3VZVJPJAhBUMwoRWhpk4Enm1ZIgbB6HljU7FXYq7FWjiqk2KFF8KW7H/ehv&#xA;9U/rGTggoWPIJRKYqrrihUGBLeKuxV55+cvnS+0LSrDR9IkMOt+YZXt7a4FawW8Shrm4U9OaKwC+&#xA;7V7ZKEDOQiOq3Qt5boN7r3lqxXTdMmguNOiLNDDdxH1VLsXP76Jk5fExPxIT75mT7KB+kphqyBuE&#xA;zl8/eYQKLY2in+YyysB9HBf15WOyZfzgz/O+SCf8wvMsIVpjYAEgU9GUVJ/ZUmfqe22Sl2UIizOv&#xA;h+1A1pPIL7q887amIb+DQWgurciWO+SX6s6tH8SsIZ15kj7j0NRmvyY4R+mV/ByRKUhRi9m8hecV&#xA;8zaP6s8QtdWtaR6lZA14Oa8XXxjkAqp+a9VOSjKw4s4GJpLfNfk3XLjVG1DQzaSC5o11a3zyRqsq&#xA;AKJYnjjm3KgBl4jpWtSchPHZtuxZ+EUjNB8g2VsRd60Y9V1I7qZEH1eH/JhibkKj+dviPsDTJRxg&#xA;MMmYyZWAAKDpk2pvFXYq7FXYq0cVUmxQovhS3Y/70N/qn9YycEFCx5BKJTFVdcCFQYpbxV2KvC/z&#xA;wvIbf8xvLhuiVg/R10sLkfAsrzRqST2qKL8yMyNJIDKL7kTBMWNG5ie4khBBdFV9jWqsSAfvU5ux&#xA;LenGpBzPcT31vpenoJ9UvCRBETRUVftyykbrGnfx6Dc5RqtUMUb69GeLEZmno3lzydpuiosx/wBL&#xA;1RlpNqEoHM16rGNxEn+Sv01O+c5lzSyG5F2uPGIjZPCMqbGK6pLfeV9cg8x6XGZAtVurRdhPE28s&#xA;PhyNOcZ7OP5agyjKiwyw4g9j0zUbLU9OttRsZRNZ3cSTW8o6Mjjkp+45lOA8Xj/OnzPp0s2reYEj&#xA;htxqc2nf4bjgZZoI6qtvPPduwRFLH4nPwt+yN/hr4yy4Uq1T/nI/zFca5bNo2lSwaMVtvrMFxaSS&#xA;3ZqHmuTFwZUJCKqIDsSa9OgORPCnsv8AzkrZmwee38uXhlFs06c5IgrGh9MRgHnL8VBJwWqV36HD&#xA;4iOFLtH/AOcmbmNJX1/RXZmlVLaKxjdDxURLLQzOfWdpZf3aoAeIq1NjgGRPCzHyp+d2m+YLy8hG&#xA;i6hawW9pLqFvcNHz9eCFnFQooUZ/TPEN16dxkhO2JixqD8+NZ84alp/l3yVpv1HWL6QvJfagBNbx&#xA;WqQiZn/dGhccgrLX4TtuTsOO+SeGntcQlEKCZleYKBI6gqpam5CktQV7VyxitbFCg+FK6x/3ob/V&#xA;P6xk4c0FCR5BKJTFVdcCFQYpXYq7FXmP52aJayLoPmC6iWaw065ey1eN/s/UdTUQO7U3pHN6Te3X&#xA;K8g2tsxHd5f5j/J/XY5hPoOpo8cVTElyjGdFNKx+op4yqf8AKWvuTvlkdbMV5Nh0oPJFflBBDYa3&#xA;rFnrARPM8oRoitfTeyQDaAt8Xwy8vUB9spzZjklZZ4sfBs9VIypuaIwJQuoWSXlpJbv+2PhPgw6H&#xA;FUD+T2tS6fq2oeULtiI29TUNJDH7ILgXkA/1ZXEgH+W3hl+KXRxM8KNvWMtaHkHn78vPOmreata1&#xA;aBP0nDNZQxeWYzePapp91GVMkjIPtEuvIEdQeJpkJRNsgUp0/Rf+cl9H0ZdHs7mzuUtHmW0v5ZIp&#xA;J5Eqnp+qZg3w7uw6tXY0FMFSXZkEth/zkB9Tv7kanZfWVnjSysI4YGBgYL60glcJ8Sb8AwFep7Lh&#xA;9S7JPcWv/OTs2mSQyT2aXL28yo1ubYEyMXUc5CIzGwUq0ZjDCo+KlfhHqXZB6d5R/P8AgvZNQMll&#xA;+mLe0i06y1O5eO5k+q+qjsCzblz8TSsy7kALt0FSWw9A8nWv5pw+ZNSHmm+trrQIIzFpjxRxxzTu&#xA;ZeQnkVB8FI/h41p7d8mL6oNMyfJsVCTFK6w/3ob/AFT+sZOHNBQkeRSiYzgVXTFCquBK7FXYqhNV&#xA;0uy1XTLvTL6MTWd7E8FxGf2kkUqw+44lXmPlyS8itp9I1GQyapokzWN3I32pQgDQzn/jNCySfMkd&#xA;sxJCi5+OVhKfO3lcahFHqVlI1nq1g3rWt5F9tGAoWp0YU2ZTsy7YGZFq3lDzwmqSLpOrotl5gjWp&#xA;iH9zcqvWW2Y/aHcofiX5b4WPkWVkYpaIxVh/mInRPNOieYo/gjt7yI3LDYejMfq1xX2EU3P5rhga&#xA;LDKLi9vzKcF2KuxV2KuxV2KrWxQpPhVDyHFK/T/96G/1T+sZOHNBQUZyKUVGcCq6HFVVcCF+KXYq&#xA;7FWA+ebD9HeYLDX4wFt78Lpmp06ByS1nKe322aHxJdfDKsserfglRpDOAdj0yhzA8r862dtbW+o+&#xA;qu1kslxBIpKvGyKXR0dfiVh2IwJlyZ1pD+a9C8u6VeeZyL/T7m0glm1iFCr20kkSsyXkY/YViQJ1&#xA;2/nC9TaYEOLDL0LI1KuoZCGVgCrA1BB7g5BvSXzjpKap5dvbRurRPQ+FVIPT/JJxXm9C8qaq+r+W&#xA;NJ1SQUlvbSCeVe6yPGC6n3VqjMoHZ1xTbCrsVdirsVaxVa2KFFzhSoSHFV+nH/SW/wBQ/rGThzQU&#xA;DEcilExnAqIQ4qrKcCF4xS3irsVS7zDo0OtaJe6XK3AXURRJR9qOQfFHKv8AlRuAw9xgItINPPdI&#xA;vpL7TYbiZBHc0aK7iFaR3ELGKePf+SVGX6MxC7GJsWwvzzpzanqcWkICW1ae1siASDwnlVJG2/lj&#xA;5N9GGIsoymol9C+mnD0+I9OnHhTanSlPDMt1zAtb0GPyv6mo2biPy3sbmzOws2ZqerCSdoN/jTon&#xA;VaLUCmcOob8WXoVzorKVYVVhQj2OVOUifylnY+VJLJm5tp19d29TSvFpjOi7fypMoHtmRjOzhZRU&#xA;izTJtbsVdirsVaOKqbHFCk5wpQ8hxVfpp/0lv9Q/rGThzQUBEcilFRnAqIQ4qrKcUKgOBK7FXYq7&#xA;FXk6yLF5182abGD6MF3Bcpt8Ia7tY5JFB8fUDOf9bMbJzc3Tn0oTyhbx6r+aMMzisOmwXN3Ge3qq&#xA;EtU+9J5DhxDdGpOwD0XzZ5ttPL1vAvpNe6pfOYtN02IgSTSAciSTskaDd5Dso9yAbpSpxIxJLFJL&#xA;TUtVb1/Mdwt41QyabGCtjCRuKRtUzMD/ALslr4qE6ZRKRLlwxgKXmHWLbRNKa4K/EKRW0KLyZnb4&#xA;UREG7EkgKo6mgyLZdMm/Lny7e6H5aSHUAq6leSyXl6ikMEkmPwx8h9oxxqqE9yNtsyYCg4M5WbZR&#xA;kmLsVdirsVWk4qpscKFBzilDyHFVXSz/AKU3+of1jJw5oKXRNkUoqM4qiEOBVdTiqqpwIXDFLeKo&#xA;fUL620+wub+6f07W0ieeeQ/sxxqXY/QBirzTTEkNsbudAl5fu15eDwln+IrXuIxRF/yVGYhNl2MI&#xA;0KUPyxheLz7qqt0FmwH0XA3+4jLMLRqei7Sxcal5w8y63fnlcwXj6RYR9oLO14kKvgZpGMjeO3YD&#xA;BM7rhGyfMyqpZiAqipJ6ADINyA8maS3mPXv8TXiV0nTXeLQ4mG0k61SW5I8E3RK/tcj2U5bjj1cb&#xA;NPo9Jy5odirsVdirRxVYxxQpMcKVFziqGkOFVXSTW7b/AFD+sZKCClsTZFKLjbFUQjYFV0OKqqnA&#xA;hUBxSuxViX5sNIv5d64EVmV4Ak/HqIXkVZmOx2WIsT7ZGfJlHmkzZiuxCF8mj0fzMmQbLcaZNIR2&#xA;JSa3A+ndstxc3H1I2CpoiKZ9auVAAutWvn+fpTG3r9Po5GXNOIelR1CK613VIfLVi7RrKPV1S7Tr&#xA;DbKRyAPZ3+ynua0IVsYxsrknwh6ZZ2lrZWkNnaxLDa26LFBCgoqIg4qoHgAMyXDVsVdirsVaxVon&#xA;FCmxwqpOcUodziqHkbCqto5reP8A8Yz+sZKKClcTYEoqNsComNsCohGxVWU4qqA4ELgcUudEdGR1&#xA;DIwKsrCoIOxBBxV5xfaUfL+pLpi1/RlwrPpLk14BN3tSf+KwQY/FNv2CTjZI05mDJexSO/1tdA81&#xA;abqnD1XeG5tooq09SRoXeGKtD/eTKiD3ODGaLLPG4pjNcfoLQ7a1BNzfcEhiVRV5p2oC3Huzua+5&#xA;OKRsGZ+TPLX6E01muSJNVvSJtRmry+Om0at/JHWg8TVurHMiMaDhzlxG2Q5Jg7FXYq7FVpOKrCcU&#xA;KbHClRdsVUJGxVCyNhVEaIa3r/8AGM/8SGTigpTE2RSi42wKiY2xVEI2BVZWxVVU4oXg4FXA4pYf&#xA;+al41t5aiFvZS32pz3cUelJEUThdBXkR5HkZQsfFGV6blWK98hk5M8d8Wzzu0t9b1HVoNc8xQWtn&#xA;pmj+qbOztpzcu95yMRMrlIl/d8WCqB9o17ZjuZZLOPIuizaldjzRqKUQgjSYD0CEEGf6QaJ7Vbeq&#xA;0uxx6uPmyXsGfZa0OxV2KtYq0Tiq0nFCxjhVSZsUqDtiqHkbCqGkbFUToJrfP/xjP/ElycUFJomy&#xA;KUXG2KoqNsCohGxVXRsCqqtiqoDiheDgViHnuVLu90jSo/ikiuBqN0f99wwq6x/S8zKFB6gP4ZXl&#xA;OzdhjZec+Y5hr2o3Wh6MESKEetqtxFRCzOCEXkP23CkV8K+IOUFzALeq+SvNdnrWmQQyypHrVvEq&#xA;ajYkhZFkT4WdU6+mxFVb6OoIGTGVhwZwMTRZHkmDqjFXVxVaTihonFVhOFKmzYqou2KqLthVDSNi&#xA;qFlbCqM8vNW/k/4xH/iS5KKCkcT4EoyJ8ComN8ColGxVXRsCqytiqorYqvDYq89866F5mfWXOnc3&#xA;sNZmtYri5iQNNbDkkEvc/u1jrKtVoG5V2NMpnCy3Y8lAoJPK2q6Xr+qW+l6HNLZM1vHYXKSQCM26&#xA;W6MfUeWRZC31mSdm2Ykty3rkZYyTszxZhEb81+o+U9bcJNfaOsxSjpPZTh5omA+0CRBKCv8AxXU+&#xA;GR8OQbPzEDsUy8t63+YD3dpbfoq4n0gy+nNqGorHbzJEvViDKkz0/ZrBU9275bAy6uPkEOhZ/XLG&#xA;lonFWi2KrC2FKxmxVSZsVUXbFVB2wqh5HxVCSvhVHeWmrqMn/GI/8SXJRQUhifAyRcT4EIqN8VRK&#xA;PgVXR8VVlbAqqrYqqBsVXhsVbDYq3yxQ3yxS1yxQ0WxStLYqtLYqps2KqTNiqi74VQ8j4qhpHwqh&#xA;ZXwqmHlZq6nJ/wAYW/4kuSigsdifAyRkT4FRUb4EImN8VRCPgVWV8VVlfAqoHxVeGxVcGxVvliru&#xA;WKu5YqtLYqtLYqsZ8VU2fFVJnwqoO+KoeR8KoaR8VQsr4Upl5RauqS/8YG/4muSDGTGopMDJGRSY&#xA;FRcb4oRMb4FRCPiqsj4FVlfFVRXxVeHwKvD4q3zxV3PFXc8VWl8VWl8VWM+FVJnxVSd8VUHfCqHk&#xA;fFUNI+FUJK+KU28mNXVpf+MDf8TTJBjJ/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:InstanceID>xmp.iid:5DFE6032C9A6DF118A26F933FBE5E206</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:5DFE6032C9A6DF118A26F933FBE5E206</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:faf5bdd5-ba3d-11da-ad31-d33d75182f1b</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CB278F61909FDF118B5AA70B713A5B82</stEvt:instanceID>
                  <stEvt:when>2010-08-04T10:20:30+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Windows</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CC278F61909FDF118B5AA70B713A5B82</stEvt:instanceID>
                  <stEvt:when>2010-08-04T10:20:30+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Photoshop CS4 Windows</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4E83E5F9969FDF118C93BCE98B09ABA9</stEvt:instanceID>
                  <stEvt:when>2010-08-04T11:07:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5283E5F9969FDF118C93BCE98B09ABA9</stEvt:instanceID>
                  <stEvt:when>2010-08-04T13:02:34+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:47EAFDDA5CA0DF11B8C9ABC764E6BCA9</stEvt:instanceID>
                  <stEvt:when>2010-08-05T10:44:11+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:48EAFDDA5CA0DF11B8C9ABC764E6BCA9</stEvt:instanceID>
                  <stEvt:when>2010-08-05T11:06:12+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D758FBE466A0DF11BFFC91BF6CB47475</stEvt:instanceID>
                  <stEvt:when>2010-08-05T11:56:03+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D858FBE466A0DF11BFFC91BF6CB47475</stEvt:instanceID>
                  <stEvt:when>2010-08-05T12:24:49+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:12C1576B6DA0DF11B5009591DC6FB12A</stEvt:instanceID>
                  <stEvt:when>2010-08-05T12:42:45+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:42C231C97DA3DF11BED1ACFA292018C6</stEvt:instanceID>
                  <stEvt:when>2010-08-09T10:17:28+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5DFE6032C9A6DF118A26F933FBE5E206</stEvt:instanceID>
                  <stEvt:when>2010-08-13T15:02:28+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:da60ca90-cedd-4b51-b81a-537a120884e9</stRef:instanceID>
            <stRef:documentID>xmp.did:42C231C97DA3DF11BED1ACFA292018C6</stRef:documentID>
            <stRef:originalDocumentID>uuid:faf5bdd5-ba3d-11da-ad31-d33d75182f1b</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/">
         <tiff:YCbCrPositioning>2</tiff:YCbCrPositioning>
         <tiff:XResolution>720000/10000</tiff:XResolution>
         <tiff:YResolution>720000/10000</tiff:YResolution>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <tiff:Make>OLYMPUS IMAGING CORP.  </tiff:Make>
         <tiff:Model>SP550UZ                </tiff:Model>
         <tiff:NativeDigest>256,257,258,259,262,274,277,284,530,531,282,283,296,301,318,319,529,532,306,270,271,272,305,315,33432;294F8C067B437695E3D92982BA61D58F</tiff:NativeDigest>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:exif="http://ns.adobe.com/exif/1.0/">
         <exif:ExifVersion>0221</exif:ExifVersion>
         <exif:FlashpixVersion>0100</exif:FlashpixVersion>
         <exif:ColorSpace>1</exif:ColorSpace>
         <exif:CompressedBitsPerPixel>2/1</exif:CompressedBitsPerPixel>
         <exif:PixelXDimension>770</exif:PixelXDimension>
         <exif:PixelYDimension>1000</exif:PixelYDimension>
         <exif:DateTimeOriginal>2010-08-04T11:07:01+04:00</exif:DateTimeOriginal>
         <exif:DateTimeDigitized>2010-08-04T11:07:01+04:00</exif:DateTimeDigitized>
         <exif:ExposureTime>10/300</exif:ExposureTime>
         <exif:FNumber>28/10</exif:FNumber>
         <exif:ExposureProgram>5</exif:ExposureProgram>
         <exif:ExposureBiasValue>0/10</exif:ExposureBiasValue>
         <exif:MaxApertureValue>297/100</exif:MaxApertureValue>
         <exif:MeteringMode>5</exif:MeteringMode>
         <exif:LightSource>0</exif:LightSource>
         <exif:FocalLength>468/100</exif:FocalLength>
         <exif:FileSource>3</exif:FileSource>
         <exif:SceneType>1</exif:SceneType>
         <exif:CustomRendered>0</exif:CustomRendered>
         <exif:ExposureMode>0</exif:ExposureMode>
         <exif:WhiteBalance>0</exif:WhiteBalance>
         <exif:DigitalZoomRatio>0/100</exif:DigitalZoomRatio>
         <exif:SceneCaptureType>0</exif:SceneCaptureType>
         <exif:GainControl>1</exif:GainControl>
         <exif:Contrast>0</exif:Contrast>
         <exif:Saturation>0</exif:Saturation>
         <exif:Sharpness>0</exif:Sharpness>
         <exif:NativeDigest>36864,40960,40961,37121,37122,40962,40963,37510,40964,36867,36868,33434,33437,34850,34852,34855,34856,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37396,41483,41484,41486,41487,41488,41492,41493,41495,41728,41729,41730,41985,41986,41987,41988,41989,41990,41991,41992,41993,41994,41995,41996,42016,0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,30;C4430C113A4D0081D9CC83D128284FF6</exif:NativeDigest>
         <exif:ComponentsConfiguration>
            <rdf:Seq>
               <rdf:li>1</rdf:li>
               <rdf:li>2</rdf:li>
               <rdf:li>3</rdf:li>
               <rdf:li>0</rdf:li>
            </rdf:Seq>
         </exif:ComponentsConfiguration>
         <exif:ISOSpeedRatings>
            <rdf:Seq>
               <rdf:li>100</rdf:li>
            </rdf:Seq>
         </exif:ISOSpeedRatings>
         <exif:Flash rdf:parseType="Resource">
            <exif:Fired>True</exif:Fired>
            <exif:Return>0</exif:Return>
            <exif:Mode>3</exif:Mode>
            <exif:Function>False</exif:Function>
            <exif:RedEyeMode>False</exif:RedEyeMode>
         </exif:Flash>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">OLYMPUS DIGITAL CAMERA         </rdf:li>
            </rdf:Alt>
         </dc:description>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:ColorMode>3</photoshop:ColorMode>
         <photoshop:ICCProfile>sRGB IEC61966-2.1</photoshop:ICCProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>209.922070</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -841.89 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.89 li
595.055 841.89 li
595.055 0 li
cp
clp
[1 0 0 1 0 0 ]ct
595.055 841.89 mo
0 841.89 li
0 0 li
595.055 0 li
595.055 841.89 li
234.961 698.691 mo
231.896 699.463 229.096 700.615 227.362 702.739 cv
235.311 728.008 215.69 735.929 218.853 746.203 cv
219.734 749.063 222.271 748.875 223.591 754.818 cv
224.121 757.207 227.403 760.097 229.688 760.097 cv
230.394 760.097 231.005 759.821 231.41 759.169 cv
234.21 754.666 231.043 750.131 236.325 744.849 cv
240.354 740.82 243.764 737.061 246.68 733.602 cv
246.895 734.447 247.108 735.296 247.319 736.16 cv
247.319 736.16 241.891 748.816 245.005 756.838 cv
245.674 756.893 246.325 756.919 246.959 756.919 cv
250.888 756.919 254.193 755.94 257.653 754.962 cv
261.113 753.983 264.728 753.005 269.275 753.005 cv
273.608 753.005 278.788 753.893 285.488 756.517 cv
288.611 757.74 290.94 758.177 292.743 758.177 cv
294.987 758.177 296.417 757.502 297.554 756.827 cv
298.69 756.152 299.533 755.477 300.601 755.477 cv
300.951 755.477 301.325 755.549 301.741 755.718 cv
302.598 756.066 303.461 756.216 304.303 756.216 cv
306.736 756.216 308.988 754.964 310.378 753.624 cv
312.221 751.847 312.026 749.083 311.278 749.083 cv
294.657 749.083 297.884 743.824 279.201 736.303 cv
269.458 732.38 265.793 728.173 262.037 712.651 cv
262.66 711.788 263.24 711.032 263.797 710.386 cv
285.228 685.53 324.82 621.167 342.878 598.129 cv
351.092 587.651 352.488 581.418 347.426 558.09 cv
342.361 534.751 338.646 510.338 330.038 491.992 cv
319.664 469.882 306.748 452.043 291.441 433.165 cv
285.224 425.497 273.771 410.191 274.102 403.588 cv
274.227 401.116 277.056 392.189 287.018 382.668 cv
289.198 380.585 291.172 378.55 292.962 376.581 cv
301.349 387.915 313.663 402.728 319.082 415.442 cv
325.742 431.062 329.369 436.942 336.945 437.163 cv
337.002 437.164 337.059 437.165 337.116 437.165 cv
344.714 437.166 357.682 422.866 363.461 422.213 cv
369.317 421.553 376.574 418.164 380.457 416.247 cv
383.508 414.741 383.042 412.407 382.439 412.242 cv
382.417 412.235 382.384 412.232 382.343 412.232 cv
381.305 412.232 374.652 414.185 372.747 414.503 cv
370.766 414.833 363.809 415.795 363.809 415.795 cv
366.649 413.154 373.651 411.59 376.234 411.177 cv
378.816 410.764 384.012 407.521 385.132 405.457 cv
386.081 403.707 385.651 402.254 384.345 402.254 cv
384.111 402.254 383.848 402.301 383.56 402.401 cv
383.56 402.401 383.484 402.14 382.662 402.14 cv
382.161 402.14 381.384 402.237 380.178 402.549 cv
376.993 403.375 365.917 404.836 364.455 404.919 cv
362.99 405.001 359.928 406.954 356.055 408.688 cv
352.18 410.421 349.699 410.454 348.408 410.949 cv
347.646 411.241 344.2 413.959 340.678 415.568 cv
339.792 415.898 338.919 416.218 338.102 416.502 cv
337.476 416.659 336.869 416.748 336.297 416.748 cv
335.468 416.748 334.715 416.561 334.085 416.119 cv
325.85 410.34 326.199 369.531 322.238 356.817 cv
320.702 351.887 318.384 347.414 316.02 342.956 cv
316.359 342.412 316.685 341.885 316.998 341.375 cv
327.077 335.521 334.244 328.618 332.93 312.485 cv
332.421 306.245 320.771 302.126 310.931 291.302 cv
307.83 287.892 305.773 285.096 304.408 282.879 cv
308.019 278.963 315.152 269.886 315.031 259.382 cv
314.946 251.931 312.035 243.543 305.561 236.407 cv
304.689 233.721 303.891 230.734 303.339 227.602 cv
301.4 216.618 308.185 203.694 310.822 200.192 cv
310.822 200.192 li
310.822 200.192 li
310.822 200.192 323.738 184.73 325.072 168.397 cv
326.749 147.862 312.939 131.648 299.212 109.194 cv
285.482 86.7397 271.973 81.463 262.012 81.3013 cv
261.919 81.2998 261.824 81.299 261.732 81.299 cv
251.974 81.299 248.024 89.6721 246.529 92.2325 cv
246.529 92.2325 242.513 87.1551 236.837 87.1551 cv
236.244 87.1551 235.634 87.2104 235.008 87.3326 cv
228.385 88.625 221.73 94.245 211.23 114.599 cv
200.731 134.953 184.931 191.579 186.869 218.717 cv
188.808 245.856 208.191 261.041 212.554 274.449 cv
216.527 286.665 215.487 303.028 203.663 303.029 cv
202.51 303.03 201.255 302.874 199.891 302.544 cv
199.891 302.544 198.228 314.042 209.488 319.8 cv
205.583 330.052 198.163 349.519 197.89 354.303 cv
197.89 354.303 203.243 360.865 206.523 364.492 cv
209.328 367.592 216.046 378.262 230.664 381.619 cv
225.586 393.269 216.538 399.478 210.119 403.716 cv
197.069 412.333 184.354 420.396 175.798 436.391 cv
174.592 438.414 173.239 441.127 172.096 444.53 cv
172.066 444.611 172.038 444.694 172.014 444.778 cv
168.411 455.706 167.011 473.629 179.252 498.649 cv
201.112 543.323 223.563 588.651 217.574 604.524 cv
208.635 628.209 206.138 631.322 205.141 650.479 cv
204.796 657.112 220.397 665.288 234.961 698.691 cv
256.654 683.698 mo
252.19 653.978 247.478 607.222 254.46 587.375 cv
259.202 573.896 263.624 554.02 266.576 536.557 cv
280 546.025 293.858 555.705 308.936 571.202 cv
317.423 579.924 308.508 579.749 290.198 591.75 cv
278.814 599.21 266.506 615.801 267.553 622.915 cv
271.227 647.9 263.779 670.422 256.654 683.698 cv
233.697 350.847 mo
232.561 350.151 231.598 349.585 230.941 349.241 cv
227.417 347.396 224.93 345.662 231.129 338.594 cv
232.305 342.965 233.148 347.044 233.697 350.847 cv
225.732 226.013 mo
222.526 220.459 219.683 214.087 217.399 205.794 cv
217.399 205.794 220.669 215.882 226.834 225.813 cv
225.732 226.013 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[482.615 0 0 708.983 299.537 419.504 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [1 .992157 .941176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [.6 .560784 .580392 ]
/N 1.66691 
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[482.615 0 0 708.983 299.537 419.504 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr2orrr2orrr)forVcZlr;?Hh
qtg0cq>'j]q"OOWp@e1Pp%7nJoCDJBnaQ&:n*]T1m-O'(lKRQski_*jjlGL_io8qThr!;Hh;$c=g=b-1
f%/C$e'c[ld*L"^c-4ARaiMNB`l5m6_SO%&^:h1k]",>[[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1<
~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nr;?Kjr;?Kjqtp9fqtg0cqYBs_
q"XXYp\4CTp%@tLo^h\Fo'u8>nF,i6md9B-lg*j#l0.?ok2tddjQ#7ZiS`VNhVI#CgY1?6f[n^*e^W'r
dF$=ecHXSVb/qcHa2Z*:_ns7*^V7Co]=PP_\$i]OZa-j?YHG"/Wi;qpVPU)`TqJ$LSXc1;R$X,(PEM&i
~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:n*f`6n*f`6n*]W3mdBN1mHs<-
m-O'(lg*j$lKRQskih3mk2tgfjlGL_j5].YiSi_Qhr!;Ih;$f?gY1B7f\"g-f%&=#eC2jodEp7dcHa\Y
bKJ&MaiMNB`l5m6_ns7*^V@Lr]Xtee\[],W[C*BJZE^X;Y-+n.X/`.tVl$;dUS=HTTV%gHS=>t8R$X,(
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
211.647 314.054 mo
209.984 318.784 198.235 348.259 197.89 354.303 cv
197.89 354.303 203.243 360.865 206.523 364.492 cv
209.805 368.118 218.439 382.105 238.816 382.623 cv
259.193 383.141 249.523 378.997 249.523 378.997 cv
247.499 359.795 li
247.499 359.795 234.567 351.141 230.941 349.241 cv
227.315 347.342 224.786 345.56 231.693 337.962 cv
238.601 330.364 239.563 310.614 226.93 309.405 cv
214.295 308.196 211.647 314.054 211.647 314.054 cv
.168627 .121569 0 rgb
f
223.618 375.893 mo
214.475 372.101 209.86 365.675 207.707 363.295 cv
204.638 359.903 199.63 353.764 199.63 353.764 cv
199.895 349.121 207.354 329.698 210.875 320.45 cv
212.232 321.033 213.755 321.538 215.461 321.941 cv
217.569 322.439 219.653 322.672 221.689 322.672 cv
222.124 322.672 222.556 322.661 222.987 322.64 cv
226.674 328.841 228.189 335.971 228.189 335.971 cv
222.15 344.854 221.105 347.015 222.715 349.143 cv
225.027 352.196 232.423 356.78 232.423 356.78 cv
233.443 367.119 223.586 375.874 223.586 375.874 cv
223.586 375.874 223.597 375.88 223.618 375.893 cv
level3{
gsave
clp
[29.2994 -5.30454 5.30454 29.2994 207.423 350.099 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.870588 .72549 .619608 ]
/C1 [.8 .631373 .517647 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.2994 -5.30454 5.30454 29.2994 207.423 350.099 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hVI#Dh;-oCh;-oCh;-oBgt^]?gt^]?gt^]?gtUT<gY:K;gY:K;gY:K:g=k97g=k97g=k97g=b04g"G'3
g"G'3g"G'3f\"j/f\"j/f\"j/f\"g-f@SX+f@SX+f@SX+f%/F'f%/F'f%/F'f%/C%e^`4#e^`4#e^`4#
e^W*ueC<!teC<!teC<!se'ldpe'ldpe'ldpe'c[mdaHRldaHRldaHRkdF$@hdF$@hdF$@hdEp7ed*U.d
d*U.dd*U.dcd0q`cd0q`cd0q`cd0n^cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXc-=JVbfn;Tbfn;Tbfn;T
~>
<~\[]/Z\@B&Y\@B&X\$riU\$riU\$rfS[^NWQ[^NWQ[^ENN[C*EM[C*EL['[3I['[3I['[0GZa7!EZa7!E
Za-mBZEgdAZEgd@Z*CR=Z*CR=Z*CO;Yct@9Yct@9Yck76YHP.5YHP.4Y-+q1Y-+q1Y-+n/Xf\_-Xf\_-
XfSV*XK8M)XK8M(X/i;%X/i;%X/i8#WiE)!WiE)!Wi;tsWMukrWMukqW2QYnW2QYnW2QVlVl-GjVl-Gj
Vl$>gVP^5fVP^5eV5:#bV5:#bV59u`Unjf^Unjf^Una][USFTZUSFTYU8"BVU8"BVU8"?TTqS0RTqS0R
~>
<~St2FCSXl=BSXl:@S=H+>S=H+>S"#n:S"#n:S"#k8R[T\6R[T\6R@0J2R@0J2R@0G0R$a8.R$a8.Q^=&*
Q^=&*Q^3r'QBmi&QBmi%Q'IW"Q'IW"Q'@MtPa%DsPa%DrPEV2oPEV2oPEM)lP*1ukP*1ujOcbcgOcbcg
OcYZdOH>QcOH>NaO,o?_O,o?_NfK-[NfK-[NfK*YNK&pWNK&pWN/W^SN/W^SN/W[QMi3LOMi3LOMMd:K
MMd:KMM[1HM2@(GM2@(FLkpkCLkpkCLkgb@LPLY?LPLY>L5(G;L5(G;L4t>8KnY57KnY56KS5#3KS5#3
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
231.795 378.74 mo
226.803 377.768 223.949 376.094 223.618 375.893 cv
226.064 376.908 228.833 377.734 231.966 378.244 cv
231.91 378.41 231.853 378.577 231.795 378.74 cv
.129412 .0862745 0 rgb
f
231.966 378.244 mo
228.833 377.734 226.064 376.908 223.618 375.893 cv
223.597 375.88 223.586 375.874 223.586 375.874 cv
223.586 375.874 233.443 367.119 232.423 356.78 cv
232.423 356.78 225.027 352.196 222.715 349.143 cv
221.105 347.015 222.15 344.854 228.189 335.971 cv
228.189 335.971 226.674 328.841 222.987 322.64 cv
223.9 322.596 224.802 322.506 225.694 322.373 cv
227.682 327.411 229.291 332.133 230.563 336.561 cv
226.634 342.337 225.056 344.688 225.053 346.313 cv
225.052 346.951 225.294 347.477 225.732 348.054 cv
226.672 349.297 230.258 352.049 234.18 354.875 cv
235.08 364.342 234.079 371.992 231.966 378.244 cv
level3{
gsave
clp
[29.2994 -5.30454 5.30454 29.2994 207.423 350.099 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X+P/fK5.E=BrZf"We+rbJn_39BrQYsWI\`]JS1p3B;g>nW.8NZJ7kg2AuL2kVgi9UIq>O,AZ'ugVLE*R
IUo=)A>O]bV0ujMHt0"#A#+K^UjQXIHt&n!@\e?ZUjHOGH=<Rp@AA-WUNp7AH!m@l?_VgQU3U+>G[I.h
?_M^NTm'h:G?pnd?(lIJTQa\7G$Uba>b?1ET64D2F^(J[>Foq@Soe2.FBY8X>+Th>So\&+F'5&S=e0S9
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.2994 -5.30454 5.30454 29.2994 207.423 350.099 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~WiE)!WiE)!Wi;tsWMukrWMukrWMukrWMlboW2QYnW2QYnW2HPkVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-DhVP^5fVP^5fVP^5fVP^2dV5:#bV5:#bV59u`Unjf^Unjf^Unjf^Unjc\USFTZUSFTZUSFTZUSFTZ
USFTZUSFTZUSFTYU8"BVU8"BVU8"BUTqS0RTqS0RTqS0RTqS0QTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNT:_aJT:_aJT:_aJSt;OFSt;OFSt;OFSt;OFSXl=BSXl=BSXl=BSXl=BSXl=BSXl=BSXl=BS=H+>
~>
<~JqAT+JqAT+JqAT+JqAT+Jq8K(JUrB'JUrB'JUi9$J:N0#J:N0#J:E&uIt)rtIt)rtIt)rtIt)rtIsuiq
IXZ`pIXZ`pIXZ]nI=6NlI=6NlI=6NlI=6NlI=6KjI!g<hI!g9fH[C*dH[C*dH[C*dH[C*dH[C*dH[C'b
H?sm`H?sm_H$O[\H$O[\H$O[[G^+IXG^+IXG^+IXG^+IXG^+IWGB\7TGB\7TGB\7SG'8%PG'8%PG'8%P
G'8%PG'8%PF`hhLF`hhLF`hhLFEDVHFEDVHF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDEcQ2@EcQ2@EH,u<
~>
<~Bk_9qBk_9qBkV0nBP;'mBP;'mBP;'mBP;'mBP1sjB4kjiB4bafAnGXeAnGXeAnGXeAnGXeAn>ObAS#Fa
AS#C_A7T4]A7T4]A7T4]A7T4]A7T1[@q0"Y@q0"Y@q/tW@U`eU@U`eU@U`eU@U`bS@:<SQ@:<SQ@:<PO
?smAM?smAM?smAM?smAM?smAL?XI/I?XI/H?=$rE?=$rE?=$rE?=$rE?=$rD?!U`A?!U`@>[1N=>[1N=
>[1N=>[1N=>[1N=>?b<9>?b<9>?b<9>$>*5>$>*5>$>*5>$>*5=]nm1=]nm1=]nm1=BJ[-=BJ[-=BJ[-
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
179.034 431.922 mo
179.034 431.922 157.392 453.97 179.252 498.649 cv
201.112 543.323 223.563 588.651 217.574 604.524 cv
208.635 628.209 206.138 631.322 205.141 650.479 cv
204.692 659.1 231.183 670.334 247.319 736.16 cv
247.319 736.16 241.891 748.816 245.005 756.838 cv
249.825 757.235 253.634 756.098 257.653 754.962 cv
264.41 753.051 271.758 751.14 285.488 756.517 cv
292.496 759.262 295.503 758.044 297.554 756.827 cv
299.063 755.931 300.054 755.034 301.741 755.718 cv
305.074 757.071 308.507 755.428 310.378 753.624 cv
312.221 751.847 312.026 749.083 311.278 749.083 cv
294.657 749.083 297.884 743.824 279.201 736.303 cv
267.744 731.69 264.691 726.685 260.014 703.348 cv
255.639 681.539 245.57 612.645 254.46 587.375 cv
263.35 562.107 271.115 514.356 270.18 502.171 cv
269.244 489.986 211.92 407.337 179.034 431.922 cv
.168627 .121569 0 rgb
f
290.61 755.856 mo
288.812 755.741 286.685 755.259 284.115 754.172 cv
277.941 751.56 272.988 750.697 268.819 750.697 cv
264.755 750.697 261.436 751.518 258.463 752.34 cv
255.49 753.161 252.862 753.982 250.175 753.982 cv
249.309 753.982 248.436 753.897 247.544 753.699 cv
246.006 744.328 250.285 738.593 250.285 738.593 cv
249.982 737.258 249.675 735.949 249.363 734.658 cv
253.422 729.011 258.701 724.879 258.701 724.879 cv
261.299 728.919 266.897 735.884 271.248 737.343 cv
279.906 740.246 285.975 742.338 290.359 743.935 cv
296.448 747.117 299.876 749.085 304.841 749.808 cv
306.296 750.511 306.84 751.242 305.277 752.448 cv
304.762 752.844 302.707 753.596 302.157 753.883 cv
302.241 753.916 302.324 753.948 302.407 753.979 cv
302.192 753.91 301.981 753.831 301.777 753.742 cv
301.62 753.673 301.465 753.619 301.31 753.58 cv
300.713 753.322 299.985 752.968 299.633 752.814 cv
299.36 752.694 299.064 752.641 298.748 752.641 cv
296.625 752.641 293.601 755.047 290.61 755.856 cv
237.359 698.161 mo
223.786 667.128 209.22 658.429 209.279 650.236 cv
209.529 615.814 223.745 602.082 223.745 602.082 cv
222.147 581.815 201.067 536.21 184.284 499.155 cv
179.066 487.633 176.541 477.624 175.662 469.119 cv
179.541 475.287 186.402 483.71 196.329 486.937 cv
256.374 518.57 247.26 583.209 240.972 596.724 cv
236.265 606.842 238.94 615.404 242.662 632.586 cv
246.944 652.362 249.05 677.559 250.996 692.528 cv
249.435 694.481 248.108 695.692 247.214 696.044 cv
244.667 697.047 240.975 697.454 237.359 698.161 cv
254.918 686.767 mo
251.639 665.77 247.681 634.297 248.187 610.608 cv
248.386 601.302 249.273 593.197 251.161 587.401 cv
249.553 592.342 248.67 598.962 248.322 606.573 cv
247.221 630.615 251.449 664.553 254.919 686.767 cv
254.918 686.767 li
level3{
gsave
clp
[196.577 0 0 196.577 152.543 592.024 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.913725 .8 .705882 ]
/C1 [.870588 .705882 .607843 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.870588 .705882 .607843 ]
/C1 [.898039 .764706 .666667 ]
/N 1 
>>
]
/Bounds [.715152 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[196.577 0 0 196.577 152.543 592.024 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~l0.?pkih6okih6okih6oki_-lkND$kkND$kkND$kkND!ik2tggk2tggk2tggk2tdejlPUcjlPUcjlPUc
jlPUbjQ,C_jQ,C_jQ,C_jQ,C_j5]1[j5]1[j5]1[j5]1[io8tWio8tWio8tWio8tWio/kTiSibSiSibS
iSibSiSi_Qi8EPOi8EPOi8EPOi8EMMhr!>Khr!>Khr!>Khr!>JhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
hVR/Ihr!>Khr!>Ki8EPOi8EPOi8EPPiSibSiSibSiSrkVio8tWio8tWj5]1[j5]1[j5]4]jQ,C_jQ,C_
~>
<~bfe2QbKJ)Pb0%lLb0%lLaiVZHaiVZGaN2HDaN2HCa2c6@a2c6?`l?$<`l?!:`Pog8`Pod6`5KU4`5KR2
_o'C0_ns:-_SX1,_SO()_83t(^qdb$^qdb$^V@Ou^V@Ou^:q=q^:q=p]tM+m]tM+l]Y(ni]Y(nh]=Y\e
]=YYc]"5Ja]"5G_\[f8]\[]/Z\@B&Y\@8rV\$riU\$i`R[^NWQ[C*EM[C*EM['[3I['[3I['[3I[C*EM
[C3NP[^NZS\$riV\@B&Y\[f8]\[oA`]"5Mc]=Y_g]Y(nj]tM+m^:q=q^;%Ft^V@S"^qdb%_83t(_SX1,
~>
<~['R*FZa7!EZEgdAZEgd@Z*CR=Z*CO;Yct@9Yct=7YHP.5YHG%2Y-+q1Xf\_-Xf\_-XK8M)XK8M(X/i;%
X/i8#WiE)!WiE%tWMukrWMlboW2QYnVl-GjVl-GjVP^5fVP^5eV5:#bV59u`Unjf^Unjc\USFTZUS=KW
U8"BVTqS0RTqS0RTV.sNTV.sMT:_aJT:_^HSt;OFSt;LDSXl=BSXc4?S=H+>S"#n:S"#n:S"#n:S=H+>
S=Q4ASXl@DSt;OGT:_aJTV.sNTV8'QTqS3TU8"EXUSFT[Unjf^V5:#bV5C,eVP^8hVl-GkW2QYnWMukr
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
292.421 756.155 mo
291.663 756.155 290.912 756.096 290.185 755.959 cv
290.327 755.929 290.468 755.894 290.61 755.856 cv
290.909 755.875 291.2 755.884 291.482 755.884 cv
293.773 755.884 295.492 755.286 296.916 754.687 cv
298.341 754.088 299.471 753.49 300.586 753.49 cv
300.827 753.49 301.067 753.518 301.31 753.58 cv
301.616 753.712 301.888 753.819 302.057 753.861 cv
300.311 754.618 296.281 756.155 292.421 756.155 cv
.129412 .0862745 0 rgb
f
291.482 755.884 mo
291.2 755.884 290.909 755.875 290.61 755.856 cv
293.601 755.047 296.625 752.641 298.748 752.641 cv
299.064 752.641 299.36 752.694 299.633 752.814 cv
299.985 752.968 300.713 753.322 301.31 753.58 cv
301.067 753.518 300.827 753.49 300.586 753.49 cv
299.471 753.49 298.341 754.088 296.916 754.687 cv
295.492 755.286 293.773 755.884 291.482 755.884 cv
level3{
gsave
clp
[196.577 0 0 196.577 152.543 592.024 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Z]TO>Oa49pGd<EUZB'48O*@mjGI!9RZB'48O*7ghG-[-OZAj"4NHMOdFg6pKZ&Nn2NHDFaFKpdGZ&<\-
MfZ+\F0LOCY_mJ*MK5nXEj(@?YDI8&M/f_UENb1<Y)%&"LiBMQE3>"8Y(pquLMs>NDm"h5Y(ghsKl4&I
D68M/XbCVoKl*rFD68J-Xb:MlK5@WACTN/(XFk;iK57Q?CTE&%X+G)eJSD09Brcf!X+4obJ8)'7BWHYs
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X+4laJ7u!6BWHYtX+4obJ8)'7Brcf!X+=ucJSD09Brci#X+G)eJnhB=C93&'XFk;iK57Q@CTN/(XFk;i
K57Q@CTW5)Xb:MmKP[cDCorA,XbCVoKl*rGD68M/Y(^_qKl*uHD6AS0Y(ghsL2O/KDQ\_3Y(pquLMs>N
Dm"k6Y(pquLi9GPDm"n7Y)%#!LiBPRE3G(:YD@/$M/f_UENb4=YDI8&MK,hWENk=?Y_mG)MK5qYEj1FA
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.715152 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[196.577 0 0 196.577 152.543 592.024 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEgdAZEgdAZE^[>Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Yct@9Yct@9Yct@9Yct@9Yct=7
YHP.5YHP.5YHP.5Y-+q1Y-+q1Y-+q1Y-+q1Y-"h.Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-XfSV*
XK8M)XK8M)XK8M)XK8M(X/i;%X/i;%X/i;%X/i;%WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)"X/i;%X/i;%X/rD(XK8M)XK8M*Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Y-+q1Y-+q1Y-+q2YHP.5
~>
<~OH>QcOH>NaO,o?_NfK-[NfK-[NfK-[NfK-[NfK*YNK&pVN/W^SN/W^SN/W^SN/W^SN/NUPMi3LNMMd:K
MMd:JM2@(GM2@(GM2@(GM2@%ELkpkCLkpkBLPLY?LPLY?LPLY?LPCP<L5(G;L5(D9KnY57KS5#3KS5#3
KS5#3KS4u1K7ef/K7ef.JqAT+JqAT+JqAT+Jq8K(JUrB'JUr?%J:N0#J:N0"It)rtIt)rtIt)rtIt)ru
J:N0$JUrB'JqAT+JqAT+JqAW-K7ef0KS5#3KS5#3KnY57Knb>:L5(G<LPLY?LPLY?LkpkCM2@(GM2@(G
~>
<~G^+IXG^+FVGB\7TG'8%PG'8%PG'8%PG'8%OF`hhLF`hhKFEDVHFEDVHFEDVHFEDSFF)uDDEcQ2@EcQ2@
EcQ2@EcQ/>EH,u<EH,u;E,]c8E,]c8E,]c8E,TZ5Df9Q4Df9N2DJj?0DJj?0DJj?0DJa6-D/F-+Ci!p(
Ci!p(Ci!p(Chmg%CMR^$CMR["C2.KuC2.KuC2.KuBk_9qBk_6oBP;'mBP;'mBP;'mBP1sjB4kmkBP;'m
BP;'nBk_9qC2.KuC2.KuC2.O"CMR^%Ci!p(Ci!p(D/F-,D/O6/DJj?0DJj?1Df9Q4E,]c8E,]c8E,fl;
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
305.781 754.667 mo
304.744 754.667 303.604 754.424 302.407 753.979 cv
303.164 754.221 303.988 754.34 304.806 754.34 cv
307.272 754.34 309.68 753.258 310.026 751.208 cv
310.29 749.649 310.035 750.364 305.998 749.951 cv
305.602 749.91 305.217 749.863 304.841 749.808 cv
304.296 749.544 303.623 749.285 302.884 749.006 cv
304.31 749.33 305.763 749.519 307.342 749.568 cv
311.852 749.707 311.003 751.489 309.28 753.284 cv
308.365 754.237 307.164 754.667 305.781 754.667 cv
.129412 .0862745 0 rgb
f
304.806 754.34 mo
303.988 754.34 303.164 754.221 302.407 753.979 cv
302.324 753.948 302.241 753.916 302.157 753.883 cv
302.707 753.596 304.762 752.844 305.277 752.448 cv
306.84 751.242 306.296 750.511 304.841 749.808 cv
305.217 749.863 305.602 749.91 305.998 749.951 cv
310.035 750.364 310.29 749.649 310.026 751.208 cv
309.68 753.258 307.272 754.34 304.806 754.34 cv
level3{
gsave
clp
[196.577 0 0 196.577 152.543 592.024 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[196.577 0 0 196.577 152.543 592.024 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
302.884 749.006 mo
299.394 748.214 296.064 746.621 291.451 744.335 cv
295.276 745.747 297.702 746.751 299.462 747.602 cv
300.611 748.158 301.816 748.603 302.884 749.006 cv
291.451 744.335 mo
291.099 744.205 290.735 744.072 290.359 743.935 cv
286.901 742.127 282.583 739.928 276.639 737.343 cv
282.985 740.102 287.653 742.453 291.451 744.335 cv
247.908 736.794 mo
247.693 736.794 247.775 734.661 247.894 732.144 cv
248.113 731.879 248.33 731.614 248.542 731.352 cv
248.819 732.436 249.093 733.542 249.363 734.658 cv
248.882 735.328 248.418 736.018 247.982 736.726 cv
247.954 736.772 247.929 736.794 247.908 736.794 cv
.129412 .0862745 0 rgb
f
290.359 743.935 mo
285.975 742.338 279.906 740.246 271.248 737.343 cv
266.897 735.884 261.299 728.919 258.701 724.879 cv
258.701 724.879 253.422 729.011 249.363 734.658 cv
249.093 733.542 248.819 732.436 248.542 731.352 cv
254.035 724.598 257.607 719.106 260.321 715.116 cv
263.914 728.662 268.262 733.7 276.639 737.343 cv
276.639 737.343 li
282.583 739.928 286.901 742.127 290.359 743.935 cv
250.996 692.528 mo
249.05 677.559 246.944 652.362 242.662 632.586 cv
238.94 615.404 236.265 606.842 240.972 596.724 cv
247.26 583.209 256.374 518.57 196.329 486.937 cv
197.17 487.211 198.035 487.448 198.921 487.642 cv
204.992 488.974 208.7 487.528 214.638 489.163 cv
215.554 489.862 216.299 490.529 216.803 491.185 cv
231.911 510.875 246.348 522.144 261.196 532.745 cv
259.208 551.381 255.759 573.286 251.161 587.401 cv
251.161 587.401 li
249.273 593.197 248.386 601.302 248.187 610.608 cv
247.681 634.297 251.639 665.77 254.918 686.767 cv
253.531 689.091 252.195 691.027 250.996 692.528 cv
level3{
gsave
clp
[196.577 0 0 196.577 152.543 592.024 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[196.577 0 0 196.577 152.543 592.024 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
227.362 702.739 mo
235.311 728.008 215.69 735.929 218.853 746.203 cv
219.734 749.063 222.271 748.875 223.591 754.818 cv
224.285 757.946 229.693 761.931 231.41 759.169 cv
234.21 754.666 231.043 750.131 236.325 744.849 cv
253.41 727.764 259.347 715.546 263.797 710.386 cv
285.228 685.53 324.82 621.167 342.878 598.129 cv
351.092 587.651 352.488 581.418 347.426 558.09 cv
342.361 534.751 338.646 510.338 330.038 491.992 cv
319.664 469.882 306.748 452.043 291.441 433.165 cv
285.224 425.497 273.771 410.191 274.102 403.588 cv
274.227 401.116 277.056 392.189 287.018 382.668 cv
302.415 367.956 307.525 355.655 310.035 352.042 cv
319.434 338.511 320.981 333.282 326.784 327.192 cv
323.134 316.859 320.057 307.615 319.72 306.774 cv
316.322 298.135 295.471 298.802 302.637 262.296 cv
307.883 235.571 292.261 221.912 266.611 218.595 cv
218.802 227.27 li
218.802 227.27 228.005 287.893 226.416 295.898 cv
224.444 305.817 227.086 303.42 221.173 311.815 cv
250.628 375.858 224.12 394.472 210.119 403.716 cv
195.029 413.68 180.387 422.903 172.106 444.505 cv
169.302 451.821 190.794 469.796 203.023 480.739 cv
208.372 485.526 214.699 488.443 216.803 491.185 cv
247.284 530.91 275.03 536.355 308.936 571.202 cv
317.423 579.924 308.508 579.749 290.198 591.75 cv
278.814 599.21 266.506 615.801 267.553 622.915 cv
273.204 661.345 252.545 693.945 247.214 696.044 cv
241.883 698.144 231.532 697.628 227.362 702.739 cv
.168627 .121569 0 rgb
f
228.708 757.749 mo
228.122 757.506 227.484 757.016 226.887 756.333 cv
227.494 756.971 228.128 757.481 228.708 757.749 cv
224.937 752.665 mo
224.57 751.369 224.44 749.91 224.704 748.383 cv
224.704 748.383 224.662 748.386 224.587 748.386 cv
224.04 748.386 221.742 748.237 220.986 745.777 cv
217.894 735.729 236.917 730.363 231.027 705.131 cv
236.361 702.086 246.757 701.608 249.58 701.608 cv
249.993 701.608 250.244 701.618 250.293 701.632 cv
263.833 680.739 273.852 647.945 272.004 627.001 cv
271.036 616.022 283.756 599.698 294.891 592.4 cv
302.796 587.219 309.768 583.236 312.968 580.636 cv
312.968 580.636 312.97 580.636 312.973 580.636 cv
313.151 580.636 317.575 580.685 317.547 585.553 cv
320.131 580.814 312.633 572.222 309.877 569.164 cv
278.035 533.84 252.201 529.104 222.386 490.245 cv
221.802 489.485 220.695 488.095 219.288 486.385 cv
222.905 478.104 233.274 458.541 253.961 448.319 cv
267.47 441.643 277.827 439.427 284.761 438.867 cv
293.705 450.717 304.083 466.157 313.839 485.886 cv
325.502 509.47 337.446 538.141 342.4 560.968 cv
347.352 583.789 340.966 587.026 334.154 598.126 cv
310.035 637.432 279.233 680.966 258.269 705.279 cv
253.918 710.327 250.949 724.942 227.6 744.701 cv
224.161 747.611 224.582 750.26 224.937 752.665 cv
265.549 705.736 mo
265.57 705.712 265.59 705.688 265.611 705.664 cv
265.59 705.688 265.569 705.712 265.549 705.736 cv
340.215 596.16 mo
340.218 596.155 340.221 596.152 340.224 596.148 cv
340.221 596.152 340.218 596.155 340.215 596.16 cv
340.24 596.128 mo
340.291 596.062 340.343 595.995 340.394 595.93 cv
340.343 595.996 340.292 596.061 340.24 596.128 cv
281.866 435.089 mo
272.397 433.626 259.188 431.993 247.385 431.993 cv
243.172 431.993 239.139 432.201 235.519 432.699 cv
230.417 433.4 225.093 433.736 219.937 433.736 cv
204.902 433.736 191.286 430.882 188.692 425.91 cv
194.837 418.312 203.548 411.765 211.968 406.122 cv
225.849 396.816 248.263 379.264 227.88 324.627 cv
228.009 324.61 233.083 323.94 238.888 321.434 cv
241.127 329.472 244.68 347.101 242.662 373.364 cv
242.662 373.364 246.062 344.974 240.812 320.545 cv
245.52 318.22 250.395 314.651 253.315 309.241 cv
263.694 290.01 255.576 270.984 255.576 257.056 cv
255.576 250.578 257.179 245.404 258.723 241.924 cv
252.814 256.933 263.355 264.042 265.998 272.601 cv
266.058 272.897 266.109 273.194 266.15 273.493 cv
270.115 302.933 280.1 311.093 282.624 324.302 cv
282.996 326.251 283.207 328.327 283.317 330.485 cv
281.778 330.438 280.199 330.412 278.578 330.412 cv
270.345 330.412 261.074 331.08 250.91 333.136 cv
251.533 333.129 252.144 333.126 252.744 333.126 cv
271.859 333.126 278.946 336.318 278.946 336.318 cv
278.451 343.387 278.545 359.238 273.131 376.38 cv
269.072 389.233 261.24 404.87 261.119 407.288 cv
260.938 410.898 269.761 419.518 281.866 435.089 cv
234.776 239.355 mo
233.102 237.1 231.469 234.876 229.893 232.578 cv
231.142 234.169 232.869 236.515 234.776 239.355 cv
level3{
gsave
clp
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.913725 .8 .705882 ]
/C1 [.870588 .705882 .607843 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~l0.?pkih6okih6okih6okih6okih6okND$kkND$kkND$kkND$kkND$kkND$jk2tggk2tggk2tggk2tgg
k2tggk2tdejlPUcjlPUcjlPUcjlPUcjlPUcjlPRajQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ#:\j5]1[j5]1[
j5]1[j5]1[j5]1[io8tWio8tWio8tWio8tWio8tWio8tViSibSiSibSiSibSiSibSiSibSiSibRi8EPO
i8EPOi8EPOi8EPOi8EPOi8EMMhr!>Khr!>Khr!>Khr!>Khr!>Khqm5HhVR,GhVR,GhVR,GhVR,GhVR,G
~>
<~bfe2QbKJ)PbKJ)Ob0%lLb0%lLb0%iJaiVZHaiVZHaiMQEaN2HDaN2HCa2c6@a2c6@a2c3>`l?$<`l?$<
`l5p9`Pog8`Pog7`5KU4`5KU4`5KR2_o'C0_o'C0_ns:-_SX1,_SX1+_83t(_83t(_83q&^qdb$^qdb$
^q[Y!^V@Ou^V@Ot^:q=q^:q=q^:q:o]tM+m]tM+m]tD"j]Y(ni]Y(nh]=Y\e]=Y\e]=YYc]"5Ja]"5Ja
]",A^\[f8]\[f8\\@B&Y\@B&Y\@B#W\$riU\$riU\$i`R[^NWQ[^NWP[C*EM[C*EM[C*BK['[3I['[3I
~>
<~['R*FZa7!EZa7!DZEgdAZEgdAZE^[>Z*CR=Z*CR<Yct@9Yct@9Yck76YHP.5YHP.5Y-+q1Y-+q1Y-+n/
Xf\_-Xf\_-XK8M)XK8M)XK8J'X/i;%X/i;%X/`2"WiE)!WiE(uWMukrWMukrWMlboW2QYnW2QYmVl-Gj
Vl-GjVl-DhVP^5fVP^5fV5:#bV5:#bV59u`Unjf^Unjf^USFTZUSFTZUSFTYU8"BVU8"BVU7n9STqS0R
TqS0QTV.sNTV.sNTV%jKT:_aJT:_aJSt;OFSt;OFSt;LDSXl=BSXl=BS=H+>S=H+>S=H(<S"#n:S"#n:
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
229.517 757.953 mo
229.267 757.953 228.994 757.881 228.708 757.749 cv
228.979 757.861 229.239 757.92 229.478 757.92 cv
229.986 757.92 230.4 757.654 230.628 757.067 cv
230.923 756.311 231.019 755.58 231.02 754.857 cv
231.019 755.58 230.923 756.311 230.628 757.067 cv
230.386 757.69 229.993 757.953 229.517 757.953 cv
226.887 756.333 mo
226.221 755.63 225.587 754.773 225.097 753.914 cv
225.06 753.505 224.999 753.089 224.937 752.665 cv
225.356 754.144 226.084 755.413 226.887 756.333 cv
265.611 705.664 mo
286.514 681.381 322.504 618.866 340.215 596.16 cv
322.774 618.521 286.799 681.049 265.611 705.664 cv
340.224 596.148 mo
340.229 596.142 340.235 596.134 340.24 596.128 cv
340.234 596.135 340.23 596.141 340.224 596.148 cv
.129412 .0862745 0 rgb
f
229.478 757.92 mo
229.239 757.92 228.979 757.861 228.708 757.749 cv
228.128 757.481 227.494 756.971 226.887 756.333 cv
226.084 755.413 225.356 754.144 224.937 752.665 cv
224.582 750.26 224.161 747.611 227.6 744.701 cv
250.949 724.942 253.918 710.327 258.269 705.279 cv
279.233 680.966 310.035 637.432 334.154 598.126 cv
340.966 587.026 347.352 583.789 342.4 560.968 cv
337.446 538.141 325.502 509.47 313.839 485.886 cv
304.083 466.157 293.705 450.717 284.761 438.867 cv
286.181 438.752 287.458 438.706 288.589 438.706 cv
290.48 438.706 291.963 438.833 293.026 438.974 cv
306.497 456.1 316.572 472.646 326.041 492.829 cv
334.461 510.773 339.17 533.937 344.125 556.765 cv
346.18 566.236 347.27 572.826 347.268 578.028 cv
347.265 585.36 345.094 589.934 340.394 595.93 cv
340.394 595.93 li
340.343 595.995 340.291 596.062 340.24 596.128 cv
340.235 596.134 340.229 596.142 340.224 596.148 cv
340.221 596.152 340.218 596.155 340.215 596.16 cv
322.504 618.866 286.514 681.381 265.611 705.664 cv
265.59 705.688 265.57 705.712 265.549 705.736 cv
265.549 705.736 li
261.197 710.784 250.185 727.989 233.473 744.701 cv
231.182 746.992 230.666 748.905 230.667 750.67 cv
230.668 752.124 231.02 753.478 231.02 754.857 cv
231.019 755.58 230.923 756.311 230.628 757.067 cv
230.4 757.654 229.986 757.92 229.478 757.92 cv
291.191 436.664 mo
288.926 436.246 285.703 435.681 281.866 435.089 cv
269.761 419.518 260.938 410.898 261.119 407.288 cv
261.24 404.87 269.072 389.233 273.131 376.38 cv
278.545 359.238 278.451 343.387 278.946 336.318 cv
278.946 336.318 271.859 333.126 252.744 333.126 cv
252.144 333.126 251.533 333.129 250.91 333.136 cv
261.074 331.08 270.345 330.412 278.578 330.412 cv
280.199 330.412 281.778 330.438 283.317 330.485 cv
283.954 342.955 281.24 358.205 287.054 367.963 cv
287.921 369.419 288.973 371.008 290.163 372.708 cv
288.493 375.187 286.691 377.739 284.762 380.298 cv
276.648 391.063 271.637 401.131 271.516 403.549 cv
271.512 403.631 271.51 403.715 271.51 403.801 cv
271.516 410.457 284.074 427.879 290.08 435.286 cv
290.453 435.745 290.824 436.205 291.191 436.664 cv
level3{
gsave
clp
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Z]TO>Oa49pGd<EUZB'48O*@mjGI!9RZB'48O*7ghG-[-OZAj"4NHMOdFg6pKZ&Nn2NHDFaFKpdGZ&<\-
MfZ+\F0LOCY_mJ*MK5nXEj(@?YDI8&M/f_UENb1<Y)%&"LiBMQE3>"8Y(pquLMs>NDm"h5Y(ghsKl4&I
D68M/XbCVoKl*rFD68J-Xb:MlK5@WACTN/(XFk;iK57Q?CTE&%X+G)eJSD09Brcf!X+4obJ8)'7BWHYs
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~ZEgdAZEgdAZEgdAZE^[>Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*:I:
Yct@9Yct@9Yct@9Yct@9Yct@9Yct=7YHP.5YHP.5YHP.5YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q0Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_,XK8M)XK8M)XK8M)XK8M)
XK8M)XK8M)X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
~>
<~OH>QcOH>QcOH5H`O,o?_O,f6\NfK-[NfK-[NfK-[NfK-[NfK-[NfB$XNK&pWNJrgTN/W^SN/W^SN/W^S
N/W^SN/W^SN/W[QMi3LOMi3IMMMd:KMMd:KMMd7IM2@(GM2@(GM2@(GM2@(GM2@%ELkpkCLkpkCLkphA
LPLY?LPLY?LPLY?LPLY?LPLY>L5(G;L5(G;L5(G:KnY57KnY56KS5#3KS5#3KS5#3KS5#3KS5#2K7ef/
K7ef/K7ef/JqAT+JqAT+JqAT+JqAT+JqAT+JUrB'JUrB'JUrB'J:N0#J:N0#J:N0#It)rtIt)rtIt)rt
~>
<~G^+IXG^+IXG^"@UGB\7TGBS.QG'8%PG'8%PG'8%PG'8%PG'.qMF`hhLF`hhLF`__IFEDVHFEDVHFEDVH
FEDVHFEDSFF)uDDF)uABEcQ2@EcQ2@EcQ2@EcQ2@EcQ/>EH,u<EH,u<EH,r:E,]c8E,]c8E,]c8E,]c8
E,]c7Df9Q4Df9Q4Df9Q3DJj?0DJj?0DJj?0DJj?0DJj?/D/F-,D/F-+Ci!p(Ci!p(Ci!p(Ci!p(Ci!p'
CMR^$CMR^$CMR^$C2.KuC2.KuC2.KuC2.KuC2.KuBk_9qBk_9qBP;'mBP;'mBP;'mBP;'mBP;'mB4kji
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
243.026 700.11 mo
243.029 700.107 243.032 700.103 243.035 700.1 cv
243.041 700.104 243.038 700.107 243.026 700.11 cv
243.035 700.1 mo
242.975 700.06 241.985 699.958 240.505 699.887 cv
241.452 699.838 242.388 699.819 243.276 699.818 cv
243.196 699.909 243.117 700.008 243.035 700.1 cv
.129412 .0862745 0 rgb
f
314.97 193.151 mo
314.97 193.151 313.461 196.689 310.822 200.192 cv
308.185 203.694 301.4 216.618 303.339 227.602 cv
305.277 238.587 310.23 247.794 310.822 248.441 cv
310.822 248.441 289.446 224.856 278.946 225.017 cv
268.446 225.179 259.157 221.464 259.157 221.464 cv
259.157 221.464 291.708 206.279 296.23 194.809 cv
300.754 183.34 295.827 151.356 287.063 145.217 cv
278.3 139.079 313.353 148.06 313.353 148.06 cv
313.353 148.06 325.146 176.307 314.97 193.151 cv
.458824 .435294 .32549 rgb
f
279.209 220.629 mo
281.644 219.067 284.781 212.807 291.771 206.557 cv
298.763 200.307 309.368 189.317 311.375 180.99 cv
312.71 175.455 309.498 169.035 308.84 167.34 cv
308.182 165.645 307.633 154.014 307.633 154.014 cv
307.633 154.014 276.905 105.054 243.844 115.142 cv
210.784 125.23 214.621 163.939 219.776 177.645 cv
224.93 191.352 264.515 230.06 279.209 220.629 cv
.168627 .121569 0 rgb
f
272.708 220.154 mo
272.705 220.154 272.7 220.154 272.696 220.154 cv
272.7 220.154 272.704 220.154 272.708 220.154 cv
274.731 220.155 276.547 219.704 278.085 218.717 cv
276.546 219.705 274.732 220.155 272.708 220.154 cv
272.667 220.154 mo
272.661 220.154 272.655 220.154 272.65 220.154 cv
272.655 220.154 272.661 220.154 272.667 220.154 cv
272.618 220.154 mo
272.612 220.154 272.607 220.154 272.601 220.154 cv
272.607 220.154 272.612 220.154 272.618 220.154 cv
272.566 220.154 mo
272.561 220.154 272.556 220.154 272.551 220.154 cv
272.556 220.154 272.561 220.154 272.566 220.154 cv
272.515 220.153 mo
272.512 220.153 272.508 220.153 272.505 220.153 cv
272.508 220.153 272.512 220.153 272.515 220.153 cv
272.465 220.152 mo
272.461 220.152 272.456 220.152 272.452 220.152 cv
272.456 220.152 272.461 220.152 272.465 220.152 cv
272.413 220.151 mo
272.412 220.151 272.409 220.151 272.407 220.151 cv
272.409 220.151 272.411 220.151 272.413 220.151 cv
272.363 220.15 mo
272.36 220.15 272.356 220.15 272.353 220.15 cv
272.356 220.15 272.36 220.15 272.363 220.15 cv
272.308 220.149 mo
272.308 220.149 li
272.308 220.149 272.308 220.149 272.308 220.149 cv
272.262 220.147 mo
272.258 220.147 272.257 220.147 272.253 220.147 cv
272.256 220.147 272.259 220.147 272.262 220.147 cv
272.159 220.144 mo
272.157 220.144 272.156 220.144 272.153 220.143 cv
272.155 220.144 272.157 220.144 272.159 220.144 cv
272.057 220.139 mo
272.056 220.139 272.054 220.139 272.053 220.139 cv
272.054 220.139 272.056 220.139 272.057 220.139 cv
271.954 220.134 mo
271.953 220.134 271.954 220.134 271.953 220.134 cv
271.953 220.134 271.954 220.134 271.954 220.134 cv
270.513 218.828 mo
268.646 218.828 266.886 218.579 265.559 218.32 cv
243.157 208.416 230.789 175.628 233.618 157.176 cv
235.52 151.374 239.352 144.365 246.529 136.332 cv
254.423 141.017 262.113 142.118 277.545 148.06 cv
291.142 153.294 294.615 156.525 294.615 156.525 cv
295.445 161.589 300.188 170.007 304.492 176.071 cv
311.501 185.95 285.824 207.893 279.315 215.547 cv
277.129 218.117 273.669 218.828 270.513 218.828 cv
level3{
gsave
clp
[93.3623 0 0 93.3623 216.372 166.963 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .862745 .772549 ]
/C1 [.941176 .862745 .772549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .862745 .772549 ]
/C1 [.870588 .705882 .607843 ]
/N 1 
>>
]
/Bounds [.0666667 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[93.3623 0 0 93.3623 216.372 166.963 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~nF5r:nF5r:nF5r:nF5r:nF5o8n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mHs<.mHs<.mHs<.mHj3+m-O**
m-O**m-O*)lg*m&lg*m&lg*m&lK[["lK[["lK[["lKRQtl07Hsl07Hsl07Eqkih6okih6okih6okND$k
kND$kkND$kkN:phk2tggk2tggk2tdejlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_jQ#:\j5]1[j5]1[j5].Y
io8tWio8tWio8tViSibSiSibSiSibSiS`YPi8EPOi8EPOi8EMMhr!>Khr!>Khr!>JhVR,GhVR,GhVR,G
~>
<~gt^]?gt^]?gt^]?gt^]?gt^Z=gY:K;g=k97g=k65g"G'2f\"j/f[na,f@SX*f%/F'f%&=$e^`4"eC<!t
eC2mqe'ldodaHRlda?IidF$@gd*U.dd*L%acd0q_cHa_\cHXVYc-=MWbfn;Tbfe2QbKJ)Ob0%lLb/qcI
aiVZGaN2HDaN)?Aa2c6?`l?$<`l5p9`Pog7`5KU4`5BL1_o'C/_SX1,_SO()_83t'^qdb$^q[Y!^V@Ot
^:q=q^:h4n]tM+l]Y(ni]Xtef]=Y\d]"5Ja]",A^\[f8\\@B&Y\@8rV\$riT[^NWQ[^ENN[C*EL['[3I
~>
<~`Pog8`Pog8`Pog8`Pog8`Pod6`5KU3_o'C0_ns:-_SX1+_83t(^qdb$^qd_"^V@Ou^:q=q^:h4n]tM+l
]Y(ni]Xtef]=YYc]"5Ja\[f8]\[f5[\@B&Y\$riU\$i`R[^NWP[C*EM[C!<J['[0GZa7!EZEgdAZEga?
Z*CR<Yct@9Yck76YHP.4Y-+q1Xf\_-Xf\\+XK8M)X/i;%X/`2"WiE(uWMukrWMlboW2QYmVl-GjVP^5f
VP^2dV5:#bUnjf^Una][USFTYU8"BVU7n9STqS-PTV.sNT:_aJT:_^HSt;OESXl=BSXc4?S=H+=S"#n:
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
272.696 220.154 mo
272.687 220.154 272.677 220.154 272.667 220.154 cv
272.678 220.154 272.686 220.154 272.696 220.154 cv
272.65 220.154 mo
272.639 220.154 272.629 220.154 272.618 220.154 cv
272.628 220.154 272.639 220.154 272.65 220.154 cv
272.601 220.154 mo
272.59 220.154 272.577 220.154 272.566 220.154 cv
272.577 220.154 272.59 220.154 272.601 220.154 cv
272.551 220.154 mo
272.539 220.153 272.527 220.153 272.515 220.153 cv
272.527 220.153 272.539 220.153 272.551 220.154 cv
272.505 220.153 mo
272.491 220.153 272.478 220.153 272.465 220.152 cv
272.479 220.153 272.491 220.153 272.505 220.153 cv
272.452 220.152 mo
272.439 220.152 272.426 220.152 272.413 220.151 cv
272.427 220.152 272.438 220.152 272.452 220.152 cv
272.407 220.151 mo
272.393 220.151 272.378 220.151 272.363 220.15 cv
272.379 220.151 272.392 220.151 272.407 220.151 cv
272.353 220.15 mo
272.338 220.15 272.323 220.149 272.308 220.149 cv
272.322 220.149 272.338 220.15 272.353 220.15 cv
272.308 220.149 mo
272.293 220.148 272.277 220.148 272.262 220.147 cv
272.277 220.148 272.293 220.148 272.308 220.149 cv
272.253 220.147 mo
272.222 220.146 272.191 220.145 272.159 220.144 cv
272.19 220.145 272.223 220.146 272.253 220.147 cv
272.153 220.143 mo
272.121 220.142 272.089 220.141 272.057 220.139 cv
272.089 220.141 272.121 220.142 272.153 220.143 cv
272.053 220.139 mo
272.02 220.138 271.987 220.136 271.954 220.134 cv
271.987 220.136 272.02 220.138 272.053 220.139 cv
271.953 220.134 mo
271.258 220.098 270.541 220.012 269.804 219.88 cv
269.804 219.879 li
270.54 220.012 271.258 220.097 271.953 220.134 cv
.129412 .0862745 0 rgb
f
272.708 220.154 mo
272.704 220.154 272.7 220.154 272.696 220.154 cv
272.686 220.154 272.678 220.154 272.667 220.154 cv
272.661 220.154 272.655 220.154 272.65 220.154 cv
272.639 220.154 272.628 220.154 272.618 220.154 cv
272.612 220.154 272.607 220.154 272.601 220.154 cv
272.59 220.154 272.577 220.154 272.566 220.154 cv
272.561 220.154 272.556 220.154 272.551 220.154 cv
272.539 220.153 272.527 220.153 272.515 220.153 cv
272.512 220.153 272.508 220.153 272.505 220.153 cv
272.491 220.153 272.479 220.153 272.465 220.152 cv
272.461 220.152 272.456 220.152 272.452 220.152 cv
272.438 220.152 272.427 220.152 272.413 220.151 cv
272.411 220.151 272.409 220.151 272.407 220.151 cv
272.392 220.151 272.379 220.151 272.363 220.15 cv
272.36 220.15 272.356 220.15 272.353 220.15 cv
272.338 220.15 272.322 220.149 272.308 220.149 cv
272.308 220.149 272.308 220.149 272.308 220.149 cv
272.293 220.148 272.277 220.148 272.262 220.147 cv
272.259 220.147 272.256 220.147 272.253 220.147 cv
272.223 220.146 272.19 220.145 272.159 220.144 cv
272.157 220.144 272.155 220.144 272.153 220.143 cv
272.121 220.142 272.089 220.141 272.057 220.139 cv
272.056 220.139 272.054 220.139 272.053 220.139 cv
272.02 220.138 271.987 220.136 271.954 220.134 cv
271.954 220.134 271.953 220.134 271.953 220.134 cv
271.258 220.097 270.54 220.012 269.804 219.879 cv
268.352 219.452 266.935 218.929 265.559 218.32 cv
266.886 218.579 268.646 218.828 270.513 218.828 cv
273.669 218.828 277.129 218.117 279.315 215.547 cv
285.824 207.893 311.501 185.95 304.492 176.071 cv
300.188 170.007 295.445 161.589 294.615 156.525 cv
294.615 156.525 291.142 153.294 277.545 148.06 cv
262.113 142.118 254.423 141.017 246.529 136.332 cv
239.352 144.365 235.52 151.374 233.618 157.176 cv
233.801 155.98 234.048 154.845 234.361 153.779 cv
239.517 136.211 248.334 135.933 247.85 116.786 cv
249.627 129.902 255.576 138.594 274.476 145.75 cv
286.453 150.284 298.544 154.491 306.439 161.065 cv
306.644 163.967 306.904 166.738 307.185 167.461 cv
307.704 168.798 309.733 172.925 309.735 177.287 cv
309.735 178.359 309.613 179.445 309.315 180.507 cv
307.59 186.669 298.008 199.118 291.142 205.256 cv
284.277 211.394 280.476 217.183 278.085 218.717 cv
278.085 218.717 li
276.547 219.704 274.731 220.155 272.708 220.154 cv
level3{
gsave
clp
[93.3623 0 0 93.3623 216.372 166.963 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^
S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDB
KXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\=A5^RtJ5?K=ID'\=/#ZRY&#:J[_%u\!_fUR"2W4J$t\n[[)ENQ@?6-I^PGh[?Z0JP^Ts(I'o2c[$,jD
PC'["HF&c\Z]]U?Oa49pH*WNVZB'48O*@mjGI!6PZAs+6NHMLcFg6pKZ&Ee/N,u4]F0LOCY_mJ)MK5nW
ENb4=Y)%)#LiBMQDm"k6Y(pquL2O/JDQSV0XbCVoKPdiECoi8)XFk;iK57N>C9)r$X+=ucJ8)'7Brcbt
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0666667 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[93.3623 0 0 93.3623 216.372 166.963 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU[^NWQ[^NWQ[^NWQ[C*EM[C*EM[C*EM
[C*EL['[3I['[3I['[3I['[3I['[3I['[3I['R*FZa7!EZa7!EZa-mBZEgdAZEgdAZEgdAZ*CR=Z*CR=
Z*CR=Z*CR=Z*CR=Z*CR=Z*CR<Yct@9Yct@9Yct=7YHP.5YHP.5YHP.5YHG%2Y-+q1Y-+q1Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_,XK8M)XK8M)XK8M)XK8J'X/i;%X/i;%X/i8#WiE)!WiE)!WiE)!WiE)!
~>
<~S"#n:S"#n:S"#n:S"#n:S"#n:S!oe7R[T\6R[T\6R[KS3R@0J2R$a8.R$a8.R$a8.Q^=&*Q^=&)QBmi%
Q'IW"Q'IW"Q'ISuPa%DsPa%AqPEV2oPEV2oPEM)lP*1ukP*(lhOcbcgOcbcgOH>QcO,o?_O,o?_NfK-[
NfK-[NfK-ZNK&pWNK&pVN/W^SN/W^SN/W[QMi3LOMi3IMMM[1HM2@(GM2@(GM26tDLkpkCLPLY?LPLY?
LPLY?L5(G;L5(G:KnY56KS5#3KS5#3KS5#2K7ef/K7ec-JqAT+JqAT+JqAQ)JUrB'JUi9$J:E&uIt)rt
~>
<~K7ef/K7ef/K7ef/K7ef/K7ef/K7\],JqAT+JqAT+Jq8K(JUrB'J:N0#J:N0#J:N0#It)rsIXZ`pIXZ`p
IXZ`oI=6NlI=6KjI!g<hI!g<hI!g9fH[C'bH?sm`H?sm`H?jd]H$O[\H$FRYG^+IXG^+IXGB\7TG'8%P
G'8%PG'8%OF`hhLF`hhKFEDVHFEDVHFEDSFF)uABEcQ2@EcQ2@EcH)=EH,u<EH#l9E,]c8E,]c8Df9Q4
DJj?0DJj?0DJj?/D/F-,D/F-+Ci!p(Ci!p(Ci!m&CMR["C2.KuC2.KuC2.HsBk_9qBkV0nBP;'mBP;'m
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
266.553 169.392 mo
265.346 166.579 258.203 152.938 237.668 158.777 cv
239.304 160.156 li
239.213 163.788 241.01 170.733 246.754 172.93 cv
258.272 177.336 266.553 169.392 266.553 169.392 cv
cp
.168627 .121569 0 rgb
f
265.507 169.102 mo
264.006 166.444 254.493 156.945 241.206 160.081 cv
241.206 160.081 241.315 168.563 246.355 171.354 cv
253.799 175.479 262.52 171.914 265.507 169.102 cv
cp
1 1 1 rgb
f
262.012 165.23 mo
262.012 165.23 259.699 171.42 252.934 171.1 cv
244.788 170.714 242.324 164.115 242.437 159.567 cv
242.437 159.567 254.916 158.147 262.012 165.23 cv
cp
.168627 .121569 0 rgb
f
260.604 164.278 mo
260.604 164.278 259.592 170.019 252.926 170.289 cv
246.299 170.558 244.035 163.728 244.14 159.557 cv
244.14 159.557 253.672 157.81 260.604 164.278 cv
cp
level3{
gsave
clp
[16.4678 0 0 16.4678 244.136 164.82 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.686275 .698039 .8 ]
/C1 [.427451 .447059 .611765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.427451 .447059 .611765 ]
/C1 [.427451 .447059 .611765 ]
/N 1 
>>
]
/Bounds [.769697 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.4678 0 0 16.4678 244.136 164.82 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~YHG%1Xf\\+XK/D&WiE(uWMuhpW2HPkVP^5eV59u`Una][U8"BUTqS-PTV%jKSt;OESXl:@S=?";R[T\5
R@0G0R$X/+QBmi%Q'ISuP`q;pP*1ujOcb`eOH5H`NfK-ZNK&mUN/NUPMMd:JM2@%ELkgb@L5(G:KnY25
KS+o0JqAT*JUr?%J:E&uIXZ`oI=6KjI!^3eH?sm_H$OXZG^"@UG'8%OF`heJFE;MEEcQ2?EH,r:E,TZ5
DJj?/D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,
~>
<~ZE^[>Yct@8YHP+3Y-"h.XK8M(X/i8#Wi;tsW2QYmVl-DhVPU,cV50o_USFTYU8"?TTqJ'OT:_aISt;LD
SXc4?S"#n9R[TY4R@'A/R$X/+QBmi%Q'ISuP`q;pP*1ujOcb`eOH5H`NfK-ZNK&mUN/NUPMi*CLM2@(F
LkphALPCP<KnY56KS4u1K7\],JUrB&J:N-!It)orIXQWmI!g<gH[C'bH?jd]G^+IWGB\4RG'.qMFEDVG
F)uABEcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@
~>
<~bfe2QbK@uMb/qcIaiMQEaN)?Aa2Z-=`l5p9`Pf^5`5BL1_ns:-_SX.*_83q&^qd_"^V@Ls^:q:o]tM(k
]Y(kg]=YYc]"5G_\[f5[\@B&X\$riT[^NWP[C*EL['[3HZa7!DZEgd@Z*CR<Yct@8YHP.5Y-+q1Xf\_-
XK8M)X/i;%WiE)!WMukrW2QYnVl-GjVP^5fV5:#bV50o_Una][US=KWU7n9STqJ'OTV%jKT:VXGSt2FC
SXc4?S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
240.177 158.41 mo
240.177 158.41 242.434 154.802 246.529 153.294 cv
246.529 153.294 244.136 155.448 243.246 158.41 cv
240.177 158.41 li
cp
.168627 .121569 0 rgb
f
239.422 150.333 mo
239.422 150.333 241.631 146.672 248.738 146.241 cv
255.846 145.81 258.807 146.672 261.661 146.241 cv
260.046 149.525 li
260.046 149.525 254.654 147.115 248.193 147.6 cv
242.603 148.019 239.422 150.333 239.422 150.333 cv
cp
f
280.717 187.864 mo
280.717 187.864 287.501 189.237 289.295 186.594 cv
290.307 185.102 288.112 181.241 288.112 181.241 cv
288.112 181.241 288.959 184.11 287.376 186.006 cv
285.985 187.672 280.717 187.864 280.717 187.864 cv
cp
f
256.734 195.94 mo
256.734 195.94 261.345 192.812 268.464 193.181 cv
275.582 193.551 284.52 193.894 291.143 193.894 cv
291.143 193.894 285.805 205.676 277.088 207.099 cv
268.59 208.487 259.971 198.622 256.734 195.94 cv
cp
.458824 .278431 .278431 rgb
f
259.157 196.264 mo
259.157 196.264 263.034 193.598 269.254 193.921 cv
275.473 194.245 279.431 196.021 289.563 194.567 cv
289.563 194.567 285.004 201.998 277.734 203.937 cv
270.465 205.875 261.984 198.606 259.157 196.264 cv
cp
1 1 1 rgb
f
271.406 209.632 mo
271.406 209.632 274.638 207.479 277.545 209.632 cv
277.545 209.632 273.938 209.396 271.406 209.632 cv
cp
.168627 .121569 0 rgb
f
247.85 116.786 mo
249.627 129.902 255.576 138.594 274.476 145.75 cv
292.52 152.581 310.822 158.668 314.646 173.228 cv
318.114 186.437 314.915 192.812 310.822 200.192 cv
310.822 200.192 323.738 184.73 325.072 168.397 cv
326.749 147.862 312.939 131.648 299.212 109.194 cv
285.482 86.7397 271.973 81.463 262.012 81.3013 cv
252.051 81.1397 248.038 89.648 246.529 92.2325 cv
246.529 92.2325 241.631 86.04 235.008 87.3326 cv
228.385 88.625 221.73 94.245 211.23 114.599 cv
200.731 134.953 184.931 191.579 186.869 218.717 cv
188.808 245.856 208.191 261.041 212.554 274.449 cv
216.915 287.856 215.238 306.259 199.891 302.544 cv
199.891 302.544 197.691 317.741 215.461 321.941 cv
233.231 326.141 249.061 311.441 252.615 298.195 cv
256.169 284.949 254.557 268.472 244.136 252.479 cv
233.715 236.487 223.538 228.087 217.399 205.794 cv
217.399 205.794 229.859 244.238 252.002 244.918 cv
257.279 245.08 258.746 241.357 261.37 237.634 cv
263.981 233.928 267.74 230.222 277.545 230.348 cv
290.092 230.51 297.361 240.525 299.462 258.456 cv
301.562 276.387 302.369 284.936 302.369 284.936 cv
302.369 284.936 315.192 273.436 315.031 259.382 cv
314.858 244.349 303.188 225.501 273.939 220.816 cv
244.7 216.133 228.654 173.228 234.361 153.779 cv
239.517 136.211 248.334 135.933 247.85 116.786 cv
f
216.763 312.713 mo
211.707 312.713 206.705 310.862 202.681 306.714 cv
202.681 306.714 li
217.074 305.484 219.502 287.344 217.377 276.146 cv
214.687 261.979 202.827 251.264 196.679 238.542 cv
185.432 215.269 191.962 187.361 197.711 163.431 cv
202.98 141.498 209.961 113.983 225.101 96.4858 cv
227.743 93.4316 232.034 90.2995 237.06 90.2995 cv
240.023 90.2995 243.243 91.3887 246.529 94.2246 cv
247.897 92.7669 250.669 86.5439 258.065 84.7155 cv
254.213 85.6685 251.622 87.8154 249.823 89.8598 cv
249.823 89.8598 253.987 85.3357 260.687 85.3357 cv
265.286 85.3357 271.08 87.4663 277.545 94.6552 cv
286.45 104.555 295.027 116.246 301.81 127.609 cv
316.209 151.732 303.783 156.711 303.783 156.711 cv
312.419 161.616 318.656 168.371 319.103 180.006 cv
318.077 153.29 286.52 152.301 265.507 140.371 cv
255.533 134.708 249.707 128.094 247.499 110.379 cv
247.499 110.379 li
247.499 110.379 247.499 110.379 247.499 110.379 cv
247.458 110.616 247.419 110.859 247.383 111.108 cv
246.898 113.985 244.848 124.805 240.177 133.183 cv
234.924 142.604 222.731 159.342 235.169 193.151 cv
242.535 213.168 250.575 224.41 261.359 224.41 cv
262.386 224.41 263.437 224.309 264.516 224.103 cv
267.594 223.515 270.797 223.351 273.413 223.351 cv
276.717 223.351 279.085 223.612 279.085 223.612 cv
278.634 223.53 278.183 223.451 277.732 223.373 cv
282.366 224.171 287.019 225.143 291.654 227.657 cv
313.146 239.311 317.415 260.417 303.538 277.474 cv
303.538 277.473 li
308.532 271.311 311.314 263.823 311.542 257.273 cv
310.107 263.794 309.027 264.975 308.433 264.975 cv
308.096 264.975 307.916 264.595 307.916 264.595 cv
305.438 260.934 303.92 251.215 299.3 242.84 cv
291.363 228.456 280.584 227.768 275.501 227.548 cv
275.199 227.535 274.902 227.529 274.61 227.529 cv
268.711 227.529 264.798 230.125 261.202 232.721 cv
257.606 235.317 254.326 237.914 249.698 237.914 cv
247.837 237.914 245.759 237.494 243.353 236.487 cv
228.684 230.342 219.459 209.348 216.044 198.718 cv
219.2 210.913 224.4 221.451 230.523 229.148 cv
230.522 229.149 230.521 229.15 230.52 229.151 cv
222.448 219.008 215.978 203.929 213.685 186.626 cv
213.793 215.163 226.814 233.577 232.617 241.376 cv
238.935 249.869 245.572 260.379 248.841 271.334 cv
248.841 271.334 li
245.572 260.379 238.935 249.869 232.617 241.376 cv
226.814 233.577 213.793 215.163 213.685 186.626 cv
213.199 179.463 212.392 173.229 213.199 155.852 cv
207.061 176.717 204.966 201.047 213.523 220.817 cv
225.477 248.441 242.689 253.821 241.146 288.341 cv
240.503 302.736 228.496 312.711 216.763 312.713 cv
247.352 241.86 mo
247.347 241.859 247.344 241.858 247.339 241.856 cv
247.344 241.858 247.347 241.859 247.352 241.86 cv
247.31 241.848 mo
247.306 241.846 247.301 241.845 247.297 241.843 cv
247.301 241.845 247.306 241.846 247.31 241.848 cv
247.269 241.835 mo
247.264 241.834 247.26 241.833 247.255 241.831 cv
247.259 241.832 247.265 241.834 247.269 241.835 cv
247.226 241.822 mo
247.222 241.821 247.218 241.82 247.214 241.818 cv
247.218 241.82 247.222 241.821 247.226 241.822 cv
247.181 241.808 mo
247.178 241.808 247.176 241.807 247.173 241.806 cv
247.175 241.807 247.178 241.808 247.181 241.808 cv
247.089 241.78 mo
247.086 241.779 247.084 241.778 247.081 241.778 cv
247.083 241.778 247.087 241.779 247.089 241.78 cv
247.048 241.767 mo
247.044 241.766 247.041 241.765 247.036 241.764 cv
247.04 241.765 247.045 241.766 247.048 241.767 cv
247.007 241.754 mo
247.003 241.753 246.997 241.751 246.994 241.75 cv
246.998 241.751 247.003 241.753 247.007 241.754 cv
246.964 241.741 mo
246.961 241.74 246.956 241.738 246.953 241.737 cv
246.957 241.738 246.96 241.74 246.964 241.741 cv
246.918 241.726 mo
246.916 241.725 246.913 241.725 246.911 241.724 cv
246.914 241.725 246.915 241.725 246.918 241.726 cv
246.869 241.71 mo
246.868 241.71 246.868 241.71 246.868 241.71 cv
246.868 241.71 246.868 241.71 246.869 241.71 cv
246.828 241.697 mo
246.825 241.696 246.822 241.695 246.818 241.694 cv
246.821 241.695 246.825 241.696 246.828 241.697 cv
246.787 241.684 mo
246.782 241.682 246.779 241.681 246.774 241.679 cv
246.779 241.681 246.782 241.682 246.787 241.684 cv
246.746 241.67 mo
246.741 241.669 246.736 241.667 246.732 241.666 cv
246.737 241.667 246.741 241.669 246.746 241.67 cv
246.704 241.656 mo
246.699 241.655 246.696 241.654 246.69 241.652 cv
246.695 241.653 246.7 241.655 246.704 241.656 cv
246.657 241.641 mo
246.655 241.64 246.652 241.639 246.65 241.638 cv
246.652 241.639 246.655 241.64 246.657 241.641 cv
246.609 241.625 mo
246.605 241.623 246.6 241.622 246.596 241.62 cv
246.6 241.622 246.605 241.623 246.609 241.625 cv
246.569 241.611 mo
246.563 241.609 246.557 241.607 246.552 241.605 cv
246.557 241.607 246.563 241.609 246.569 241.611 cv
246.528 241.597 mo
246.521 241.595 246.516 241.593 246.51 241.591 cv
246.515 241.593 246.522 241.595 246.528 241.597 cv
246.487 241.583 mo
246.481 241.581 246.475 241.579 246.468 241.577 cv
246.474 241.579 246.481 241.581 246.487 241.583 cv
246.447 241.569 mo
246.441 241.567 246.434 241.565 246.427 241.562 cv
246.434 241.565 246.44 241.567 246.447 241.569 cv
246.406 241.555 mo
246.391 241.55 246.374 241.544 246.358 241.538 cv
246.374 241.544 246.391 241.55 246.406 241.555 cv
246.35 241.535 mo
246.341 241.532 246.334 241.53 246.324 241.526 cv
246.333 241.529 246.341 241.532 246.35 241.535 cv
246.31 241.521 mo
246.301 241.518 246.293 241.515 246.285 241.513 cv
246.294 241.516 246.301 241.518 246.31 241.521 cv
246.27 241.507 mo
246.262 241.504 246.253 241.501 246.245 241.498 cv
246.252 241.501 246.262 241.504 246.27 241.507 cv
246.231 241.493 mo
246.222 241.49 246.213 241.487 246.204 241.484 cv
246.213 241.487 246.221 241.49 246.231 241.493 cv
246.194 241.48 mo
244.314 240.805 242.434 239.846 240.582 238.631 cv
240.58 238.629 240.579 238.628 240.577 238.626 cv
242.431 239.845 244.31 240.804 246.194 241.48 cv
266.962 221.182 mo
266.958 221.18 266.953 221.179 266.948 221.177 cv
266.953 221.179 266.958 221.18 266.962 221.182 cv
266.9 221.163 mo
266.892 221.161 266.884 221.159 266.877 221.156 cv
266.884 221.159 266.892 221.161 266.9 221.163 cv
266.85 221.148 mo
266.836 221.144 266.822 221.14 266.807 221.135 cv
266.821 221.14 266.836 221.144 266.85 221.148 cv
266.788 221.13 mo
266.774 221.126 266.76 221.121 266.746 221.117 cv
266.76 221.121 266.774 221.125 266.788 221.13 cv
266.736 221.114 mo
266.718 221.109 266.701 221.103 266.683 221.098 cv
266.7 221.103 266.719 221.109 266.736 221.114 cv
266.672 221.094 mo
266.653 221.089 266.634 221.083 266.616 221.078 cv
266.635 221.083 266.653 221.089 266.672 221.094 cv
266.615 221.077 mo
264.423 220.406 262.243 219.524 260.079 218.279 cv
262.244 219.524 264.423 220.406 266.615 221.077 cv
260.079 218.279 mo
260.06 218.267 260.041 218.256 260.021 218.245 cv
260.041 218.256 260.06 218.267 260.079 218.279 cv
260.015 218.242 mo
259.996 218.231 259.977 218.22 259.958 218.209 cv
247.38 210.892 241.217 200.578 236.3 187.164 cv
236.3 187.164 li
236.3 187.164 li
241.217 200.578 247.38 210.892 259.958 218.209 cv
259.977 218.22 259.996 218.231 260.015 218.242 cv
236.276 187.1 mo
236.27 187.082 236.263 187.064 236.257 187.046 cv
236.264 187.064 236.27 187.081 236.276 187.1 cv
236.255 187.042 mo
236.059 186.504 235.867 185.953 235.68 185.39 cv
235.867 185.953 236.06 186.504 236.255 187.042 cv
235.675 185.376 mo
235.67 185.362 235.666 185.348 235.661 185.334 cv
235.666 185.348 235.67 185.362 235.675 185.376 cv
235.643 185.279 mo
235.641 185.275 235.64 185.271 235.639 185.267 cv
235.64 185.271 235.642 185.276 235.643 185.279 cv
319.108 180.164 mo
319.108 180.138 319.107 180.113 319.106 180.087 cv
319.107 180.112 319.108 180.138 319.108 180.164 cv
319.106 180.082 mo
319.105 180.057 319.104 180.032 319.103 180.007 cv
319.104 180.032 319.105 180.057 319.106 180.082 cv
231.83 162.539 mo
231.692 158.22 232.221 154.62 233.197 151.388 cv
232.241 154.78 231.829 158.592 231.83 162.539 cv
237.938 141.258 mo
239.152 139.23 240.463 137.187 241.791 135.004 cv
241.786 134.994 li
243.061 132.777 244.205 130.462 245.01 127.869 cv
245.514 126.337 245.949 124.124 246.308 121.775 cv
246.083 123.422 245.782 125.095 245.346 126.748 cv
243.862 132.374 240.765 136.661 237.938 141.258 cv
258.075 84.713 mo
258.086 84.7104 258.097 84.7075 258.108 84.7049 cv
258.097 84.7075 258.086 84.7103 258.075 84.713 cv
258.137 84.6979 mo
258.142 84.6966 258.146 84.6955 258.152 84.6942 cv
258.147 84.6955 258.142 84.6966 258.137 84.6979 cv
258.196 84.6837 mo
258.196 84.6835 li
258.196 84.6836 258.196 84.6836 258.196 84.6837 cv
262.1 84.2107 mo
262.1 84.2106 262.1 84.2106 262.101 84.2106 cv
262.101 84.2106 262.1 84.2106 262.1 84.2107 cv
262.284 84.2087 mo
262.286 84.2087 262.288 84.2087 262.29 84.2086 cv
262.288 84.2087 262.286 84.2087 262.284 84.2087 cv
262.347 84.2084 mo
262.349 84.2084 262.352 84.2084 262.354 84.2084 cv
262.352 84.2084 262.349 84.2084 262.347 84.2084 cv
level3{
gsave
clp
[131.855 0 0 131.855 190.527 200.715 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .92549 .788235 ]
/C1 [.960784 .92549 .788235 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .92549 .788235 ]
/C1 [.831373 .792157 .631373 ]
/N 1 
>>
]
/Bounds [.327273 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.855 0 0 131.855 190.527 200.715 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"No^qeJo^qbHoCMSEo()ABnaZ/>naQ&;nF5o8n*f`6mdBN2md9E/mHs9,
m-O*)lg*m&lK[["lK[Wul07Hrkih6okND$kkN:phk2tgfjlPUcjQ,C_jQ#:\j5].Yio8tViSibSiS`YP
i8EMMhr!>JhVR,Gh;-oCh;-lAgt^]>gY:K;g=k97g=b04g"G$1f\"j/f@SX+f@JO(f%/C%e^`4"eC<!t
~>
<~m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
m-O**m-O**m-O**m-O**m-O**lg*m&lg!d#lK[Wul07Hrkih6oki_-lkND!ik2tgfjlPUcjQ,C_jQ#:\
j5].Yio8tViSibSi8EPOi8<GLhr!;IhVR,Fh;-oCgt^]?gtUT<gY:H9g=k96g"G'3g"=s0f\"g-f@SX*
f%/F'e^`4#e^W*ueC;sre'ldodaHRldF$@hdEp7ed*U+bcd0q_cHa_\c-=MXc-4DUbfn8RbKJ)Ob0%lL
~>
<~aiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
aiVZHaiVZHaiVZHaiVZHaiVZHaN2HDaN)?Aa2Z-=`l5p9`Pod6`5KR2_o'@._SX.*_83t'^qdb#^V@Ot
^:q=q]tM+m]Y(ni]=Y\e]=PSb]",A^\[]/Z\@8rV\$rfS[^NTO[C*BK['[3HZa7!DZEgd@Z*CR=Yct@9
YHP.5Y-+q1Y-"h.XfSV*XK/D&X/`2"WiE%tWMuhpW2QVlVl-GiVP^5eV5:#aUnjf^USFTZU8"BVTqS0R
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
219.213 317.221 mo
212.363 317.221 206.065 314.248 202.681 306.714 cv
206.705 310.862 211.707 312.713 216.763 312.713 cv
228.496 312.711 240.503 302.736 241.146 288.341 cv
242.689 253.821 225.477 248.441 213.523 220.817 cv
204.966 201.047 207.061 176.717 213.199 155.852 cv
212.392 173.229 213.199 179.463 213.685 186.626 cv
213.793 215.163 226.814 233.577 232.617 241.376 cv
238.935 249.869 245.572 260.379 248.841 271.334 cv
249.769 277.733 250.559 284.558 250.336 290.955 cv
249.551 295.206 247.926 299.385 245.245 303.398 cv
240.151 311.022 229.105 317.221 219.213 317.221 cv
level3{
gsave
clp
[131.855 0 0 131.855 190.527 200.715 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~d)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*
`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(Yt
U!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcPd)D^*`M(YtU!UcP
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~d)D^*`1YJqT[1NJcbl@"_k,/kT$>-Dc,-$q_48`cSBJ^;bJ9Ri^RE?[R``@4b.a:c^6m$UR)lt-aLmhZ
]U$RLQH$P%`O_>R\s11EPJt(r`4;&L\<=b>P/Fbk_RGZE[ZJ>6O285b^pT3<[#Vo.Nk_r\^U&p7Z])W(
MnQES]s3I-Z&62uMS$*L]<@(&YDBcnLUsXD\upduXbOBgL:F==\?(@mX+[s_K=7e4[]4qeWe.XYK!_M.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.327273 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.855 0 0 131.855 190.527 200.715 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`
cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cHa_\cHa\Zc-=MWbfn;Tbfe2QbKJ&Nb0%lLb0%lLb/qcI
aiVZGaN2HDa2c6@a2c3>`Pog8`Pod6`5KU4`5KU4`5BL1_o'@._SX1,_83t(_8*k%^qdb#^V@Ou^:q=q
^:q=q^:q=p]tM(k]Y(nh]=Y\e]=PSb]"5G_\[f8]\[f8]\[]/Z\@B&X\$riU[^NWQ[^NTO[C*EL['[3I
~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4
`5KU4`5KU4`5KU4`5KU4`5KU4`5KU3_o'C0_SX1,_SX1,_SX1+_83t(_8*k%^qd_"^V@Ou^:q=p]tM+m
]tM+m]tD"j]Y(nh]=Y\e]"5Ja]"5G_\[f8\\@B&Y\@B&Y\$riU\$i`R[^NTO[C*EM['[3I['R*FZa7!E
Za6sCZEgd@Z*CR=Z*:I:Yct=7YHP.4Y-+q1Y-+q1Xf\_-XfSV*XK8M(X/i;%WiE)!WiE%tWMukrWMukr
~>
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sMT:_aJSt;OESXl=BSXl=BSXl:@S=?";S"#k8R[KS3R@0J2R@'A/
R$a8-Q^=&*QBmi%Q'IW"Q'IW!Pa%DsP`q;oP*1ukP*(lhOcbcgOcYZdOH>NaO,f6\NfK-ZNK&pWNK&pV
N/W^SMi3LNMMd:KMM[1HM2@(GM26tDLkphALPCP<L5(D9KnY57KnY56KS+o0K7ef.JqAT+JUrB'JUrB'
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
277.732 223.373 mo
274.124 222.752 270.528 222.237 266.962 221.182 cv
270.528 222.236 274.123 222.752 277.732 223.373 cv
266.948 221.177 mo
266.932 221.173 266.916 221.168 266.9 221.163 cv
266.916 221.168 266.932 221.173 266.948 221.177 cv
266.877 221.156 mo
266.868 221.154 266.859 221.151 266.85 221.148 cv
266.859 221.151 266.868 221.154 266.877 221.156 cv
266.807 221.135 mo
266.801 221.134 266.795 221.132 266.788 221.13 cv
266.795 221.132 266.801 221.134 266.807 221.135 cv
266.746 221.117 mo
266.743 221.116 266.74 221.115 266.736 221.114 cv
266.739 221.115 266.743 221.116 266.746 221.117 cv
266.683 221.098 mo
266.679 221.097 266.675 221.096 266.672 221.094 cv
266.676 221.096 266.679 221.097 266.683 221.098 cv
266.616 221.078 mo
266.615 221.077 li
266.615 221.077 266.616 221.077 266.616 221.078 cv
260.079 218.279 mo
260.079 218.279 li
260.079 218.279 li
260.021 218.245 mo
260.019 218.244 260.017 218.243 260.015 218.242 cv
260.017 218.243 260.019 218.244 260.021 218.245 cv
236.3 187.164 mo
236.292 187.142 236.284 187.121 236.276 187.1 cv
236.284 187.121 236.292 187.142 236.3 187.164 cv
236.257 187.046 mo
236.256 187.045 236.256 187.043 236.255 187.042 cv
236.256 187.043 236.256 187.045 236.257 187.046 cv
235.68 185.39 mo
235.678 185.385 235.676 185.38 235.675 185.376 cv
235.676 185.38 235.678 185.385 235.68 185.39 cv
235.661 185.334 mo
235.655 185.315 235.649 185.298 235.643 185.279 cv
235.649 185.297 235.655 185.316 235.661 185.334 cv
235.639 185.267 mo
233.433 178.614 231.831 170.314 231.83 162.539 cv
231.833 162.65 231.837 162.762 231.842 162.874 cv
231.887 170.553 233.466 178.709 235.639 185.267 cv
233.197 151.388 mo
233.225 151.287 233.254 151.187 233.283 151.086 cv
234.372 147.376 236.098 144.251 237.938 141.258 cv
235.999 144.498 234.308 147.703 233.197 151.388 cv
246.308 121.775 mo
246.842 117.865 246.944 114.103 247.383 111.108 cv
247.461 110.64 247.499 110.383 247.499 110.379 cv
247.499 110.379 247.499 110.379 247.499 110.379 cv
247.499 110.379 li
247.451 111.746 247.034 117.037 246.308 121.775 cv
.145098 .101961 0 rgb
f
261.359 224.41 mo
250.575 224.41 242.535 213.168 235.169 193.151 cv
222.731 159.342 234.924 142.604 240.177 133.183 cv
244.848 124.805 246.898 113.985 247.383 111.108 cv
246.944 114.103 246.842 117.865 246.308 121.775 cv
245.949 124.124 245.514 126.337 245.01 127.869 cv
244.205 130.462 243.061 132.777 241.786 134.994 cv
241.791 135.004 li
240.463 137.187 239.152 139.23 237.938 141.258 cv
236.098 144.251 234.372 147.376 233.283 151.086 cv
233.254 151.187 233.225 151.287 233.197 151.388 cv
232.221 154.62 231.692 158.22 231.83 162.539 cv
231.831 170.314 233.433 178.614 235.639 185.267 cv
235.64 185.271 235.641 185.275 235.643 185.279 cv
235.649 185.298 235.655 185.315 235.661 185.334 cv
235.666 185.348 235.67 185.362 235.675 185.376 cv
235.676 185.38 235.678 185.385 235.68 185.39 cv
235.867 185.953 236.059 186.504 236.255 187.042 cv
236.256 187.043 236.256 187.045 236.257 187.046 cv
236.263 187.064 236.27 187.082 236.276 187.1 cv
236.284 187.121 236.292 187.142 236.3 187.164 cv
236.3 187.164 li
241.217 200.578 247.38 210.892 259.958 218.209 cv
259.977 218.22 259.996 218.231 260.015 218.242 cv
260.017 218.243 260.019 218.244 260.021 218.245 cv
260.041 218.256 260.06 218.267 260.079 218.279 cv
260.079 218.279 li
262.243 219.524 264.423 220.406 266.615 221.077 cv
266.616 221.078 li
266.634 221.083 266.653 221.089 266.672 221.094 cv
266.675 221.096 266.679 221.097 266.683 221.098 cv
266.701 221.103 266.718 221.109 266.736 221.114 cv
266.74 221.115 266.743 221.116 266.746 221.117 cv
266.76 221.121 266.774 221.126 266.788 221.13 cv
266.795 221.132 266.801 221.134 266.807 221.135 cv
266.822 221.14 266.836 221.144 266.85 221.148 cv
266.859 221.151 266.868 221.154 266.877 221.156 cv
266.884 221.159 266.892 221.161 266.9 221.163 cv
266.916 221.168 266.932 221.173 266.948 221.177 cv
266.953 221.179 266.958 221.18 266.962 221.182 cv
270.528 222.237 274.124 222.752 277.732 223.373 cv
278.183 223.451 278.634 223.53 279.085 223.612 cv
279.085 223.612 276.717 223.351 273.413 223.351 cv
270.797 223.351 267.594 223.515 264.516 224.103 cv
263.437 224.309 262.386 224.41 261.359 224.41 cv
247.499 110.379 mo
247.499 110.379 247.499 110.379 247.499 110.379 cv
247.499 110.379 li
level3{
gsave
clp
[131.855 0 0 131.855 190.527 200.715 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.855 0 0 131.855 190.527 200.715 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
307.916 264.595 mo
305.438 260.934 303.92 251.215 299.3 242.84 cv
291.363 228.456 280.584 227.768 275.501 227.548 cv
269.1 227.272 264.976 229.996 261.202 232.721 cv
256.16 236.361 251.742 240.001 243.353 236.487 cv
228.684 230.342 219.459 209.348 216.044 198.718 cv
221.875 221.248 234.685 238.126 247.393 241.872 cv
255.865 244.37 256.429 238.426 260.603 234.764 cv
266.114 229.929 273.231 225.377 286.162 231.102 cv
300.27 237.349 301.404 259.396 303.236 277.841 cv
308.42 271.61 311.31 263.954 311.542 257.273 cv
309.293 267.494 307.916 264.595 307.916 264.595 cv
.74902 .713726 .560784 rgb
f
319.106 180.087 mo
319.106 180.085 319.106 180.083 319.106 180.082 cv
319.106 180.083 319.106 180.085 319.106 180.087 cv
319.103 180.007 mo
319.103 180.007 319.103 180.007 319.103 180.006 cv
319.103 180.007 li
258.065 84.7155 mo
258.068 84.7146 258.072 84.7138 258.075 84.713 cv
258.071 84.7139 258.069 84.7145 258.065 84.7155 cv
258.108 84.7049 mo
258.117 84.7026 258.127 84.7002 258.137 84.6979 cv
258.127 84.7002 258.118 84.7025 258.108 84.7049 cv
258.152 84.6942 mo
258.166 84.6907 258.181 84.6872 258.196 84.6837 cv
258.181 84.6871 258.166 84.6908 258.152 84.6942 cv
258.196 84.6835 mo
259.376 84.4021 260.673 84.2323 262.1 84.2107 cv
260.674 84.2323 259.377 84.4021 258.196 84.6835 cv
262.101 84.2106 mo
262.162 84.2097 262.223 84.2091 262.284 84.2087 cv
262.222 84.2091 262.162 84.2097 262.101 84.2106 cv
262.578 84.2089 mo
262.523 84.2085 262.467 84.2083 262.413 84.2083 cv
262.393 84.2083 262.374 84.2083 262.354 84.2084 cv
262.374 84.2083 262.393 84.2083 262.412 84.2083 cv
262.467 84.2083 262.523 84.2085 262.578 84.2089 cv
262.29 84.2086 mo
262.309 84.2085 262.328 84.2085 262.347 84.2084 cv
262.328 84.2085 262.309 84.2085 262.29 84.2086 cv
.145098 .101961 0 rgb
f
319.108 180.164 mo
319.108 180.164 li
319.108 180.138 319.107 180.112 319.106 180.087 cv
319.106 180.085 319.106 180.083 319.106 180.082 cv
319.105 180.057 319.104 180.032 319.103 180.007 cv
319.103 180.006 li
318.656 168.371 312.419 161.616 303.783 156.711 cv
303.783 156.711 316.209 151.732 301.81 127.609 cv
295.027 116.246 286.45 104.555 277.545 94.6552 cv
271.08 87.4663 265.286 85.3357 260.687 85.3357 cv
253.987 85.3357 249.823 89.8598 249.823 89.8598 cv
251.622 87.8154 254.213 85.6685 258.065 84.7155 cv
258.069 84.7145 258.071 84.7139 258.075 84.713 cv
258.086 84.7103 258.097 84.7075 258.108 84.7049 cv
258.118 84.7025 258.127 84.7002 258.137 84.6979 cv
258.142 84.6966 258.147 84.6955 258.152 84.6942 cv
258.166 84.6908 258.181 84.6871 258.196 84.6837 cv
258.196 84.6836 258.196 84.6836 258.196 84.6835 cv
259.377 84.4021 260.674 84.2323 262.1 84.2107 cv
262.1 84.2106 262.101 84.2106 262.101 84.2106 cv
262.162 84.2097 262.222 84.2091 262.284 84.2087 cv
262.286 84.2087 262.288 84.2087 262.29 84.2086 cv
262.309 84.2085 262.328 84.2085 262.347 84.2084 cv
262.349 84.2084 262.352 84.2084 262.354 84.2084 cv
262.374 84.2083 262.393 84.2083 262.413 84.2083 cv
262.467 84.2083 262.523 84.2085 262.578 84.2089 cv
262.578 84.2089 li
278.762 84.3369 290.914 98.9962 299.408 112.641 cv
308.439 127.146 322.388 144.141 322.383 163.909 cv
322.381 169.132 321.406 174.549 319.108 180.164 cv
level3{
gsave
clp
[131.855 0 0 131.855 190.527 200.715 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.855 0 0 131.855 190.527 200.715 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
285.622 169.639 mo
286.592 166.975 294.373 153.822 310.822 158.668 cv
309.424 160.015 li
309.635 163.39 308.293 169.922 303.285 172.184 cv
293.241 176.72 285.622 169.639 285.622 169.639 cv
cp
.168627 .121569 0 rgb
f
286.538 169.33 mo
287.075 167.78 295.854 157.599 307.735 160.016 cv
307.735 160.016 307.943 167.915 303.581 170.703 cv
297.137 174.822 289.284 171.834 286.538 169.33 cv
cp
1 1 1 rgb
f
288.846 165.594 mo
288.846 165.594 291.116 171.269 297.096 170.714 cv
304.295 170.047 306.241 163.813 305.977 159.584 cv
305.977 159.584 294.874 158.734 288.846 165.594 cv
cp
.168627 .121569 0 rgb
f
290.233 164.948 mo
290.233 164.948 291.223 170.219 297.137 170.219 cv
303.016 170.219 304.712 163.517 304.469 159.64 cv
304.469 159.64 298.654 157.969 290.233 164.948 cv
cp
level3{
gsave
clp
[14.2578 0 0 14.2578 290.233 164.841 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.2578 0 0 14.2578 290.233 164.841 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
293.889 146.833 mo
294.615 149.579 li
294.615 149.579 301.554 147.113 306 148.225 cv
306 148.225 299.785 145.702 293.889 146.833 cv
cp
.168627 .121569 0 rgb
f
304.492 236.648 mo
295.746 219.579 310.822 201.692 315.169 190.528 cv
315.803 193.151 li
315.803 193.151 310.822 201.594 305.547 213.548 cv
301.95 221.696 302.713 232.573 307.369 238.846 cv
312.026 245.118 304.492 236.648 304.492 236.648 cv
cp
f
229.765 333.699 mo
229.765 333.699 253.854 330.459 271.408 325.398 cv
288.962 320.336 294.777 312.937 294.777 312.937 cv
294.777 336.318 li
294.777 336.318 275.393 331.579 254.283 333.087 cv
233.176 334.595 230.321 335.346 230.321 335.346 cv
229.765 333.699 li
cp
f
299.628 276.657 mo
299.628 276.657 305.956 345.884 307.296 349.396 cv
308.635 352.907 308.762 346.001 315.668 342.133 cv
326.438 336.103 334.301 329.318 332.93 312.485 cv
332.421 306.245 320.771 302.126 310.931 291.302 cv
301.426 280.846 301.725 276.179 301.725 276.179 cv
301.725 276.179 299.262 274.397 299.628 276.657 cv
f
310.819 328.672 mo
310.302 328.672 309.807 328.661 309.342 328.645 cv
308.441 325.993 307.751 323.21 307.39 320.229 cv
306.616 313.85 305.777 299.809 304.329 285.018 cv
304.442 285.218 304.579 285.446 304.744 285.706 cv
306.136 288.294 309.265 293.289 315.454 299.81 cv
325.038 309.908 325.448 314.167 323.121 321.618 cv
321.179 327.835 315.228 328.672 310.819 328.672 cv
level3{
gsave
clp
[28.1611 0 0 28.1611 302.373 308.391 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.447059 .47451 .690196 ]
/C1 [.384314 .415686 .65098 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.1611 0 0 28.1611 302.373 308.391 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~EcH)=EH,u<EH,u<EH,u<EH#l9E,]c8E,]c8E,]c8E,TZ5Df9Q4Df9Q4Df9Q4Df0H1DJj?0DJj?0DJj?0
DJa6-D/F-,D/F-,D/F-,D/=$)Ci!p(Ci!p(Ci!p(Chmg%CMR^$CMR^$CMR^$CMIU!C2.KuC2.KuC2.Ku
C2%BrBk_9qBk_9qBk_9qBkV0nBP;'mBP;'mBP;'mBP1sjB4kjiB4kjiB4kjiB4bafAnGXeAnGXeAnGXe
An>ObAS#FaAS#FaAS#FaARo=^A7T4]A7T4]A7T4]A7K+Z@q0"Y@q0"Y@q0"Y@q&nV@U`eU@U`eU@U`eU
~>
<~H$FRYG^+IXG^+IXG^+IXG^+FVGB\7TGB\7TGB\7TGB\7SG'8%PG'8%PG'8%PG'8%PF`hhLF`hhLF`hhL
F`hhLF`__IFEDVHFEDVHFEDVHFEDSFF)uDDF)uDDF)uDDF)uDCEcQ2@EcQ2@EcQ2@EcQ2@EH,u<EH,u<
EH,u<EH,u<EH#l9E,]c8E,]c8E,]c8E,]`6Df9Q4Df9Q4Df9Q4Df9Q3DJj?0DJj?0DJj?0DJj?0D/F-,
D/F-,D/F-,D/F-,D/=$)Ci!p(Ci!p(Ci!p(Ci!m&CMR^$CMR^$CMR^$CMR^#C2.KuC2.KuC2.KuC2.Ku
~>
<~Yck76YHP.5YHP.5YHP.5YHP.5YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-XfSV*XK8M)XK8M)XK8M)XK8M)XK8M)XK8M(X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%
X/`2"WiE)!WiE)!WiE)!WiE)!WiE)!WiE%tWMukrWMukrWMukrWMukrWMukrWMukrW2QYnW2QYnW2QYn
W2QYnW2QYnW2QYnW2HPkVl-GjVl-GjVl-GjVl-GjVl-GjVl-GiVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
315.147 341.312 mo
314.053 339.248 312.97 337.176 311.968 335.052 cv
312.561 335.249 313.222 335.359 313.961 335.359 cv
314.677 335.359 315.466 335.255 316.338 335.026 cv
325.586 332.589 332.029 325.545 330.232 312.157 cv
329.523 306.861 319.751 303.451 311.542 294.21 cv
319.751 303.451 329.74 305.521 331.107 310.687 cv
335.389 326.879 321.961 337.297 316.338 340.841 cv
315.947 341.088 315.548 341.241 315.147 341.312 cv
.129412 .0941176 0 rgb
f
313.961 335.359 mo
313.222 335.359 312.561 335.249 311.968 335.052 cv
310.991 332.98 310.093 330.857 309.342 328.645 cv
309.807 328.661 310.302 328.672 310.819 328.672 cv
315.228 328.672 321.179 327.835 323.121 321.618 cv
325.448 314.167 325.038 309.908 315.454 299.81 cv
309.265 293.289 306.136 288.294 304.744 285.706 cv
305.707 287.22 307.645 289.824 311.542 294.21 cv
311.542 294.21 li
319.751 303.451 329.523 306.861 330.232 312.157 cv
332.029 325.545 325.586 332.589 316.338 335.026 cv
315.466 335.255 314.677 335.359 313.961 335.359 cv
level3{
gsave
clp
[28.1611 0 0 28.1611 302.373 308.391 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~='UJ]>_Z9aL/qN5<a18Y>D6']KiM?2<Ek/W>D6$\KN)-.<*FrS>(fjYKN)*-<*=lR=bK^VKMu!+;cn]O
=G0RSKMkp);HJKK=+a@OK2G^&;-/BI=+X:NJl,U$;-&9G<e=.KJl#L!:fW'C<ImqGJPT9s:K2m@<.ReD
JPK0q:/ld><.ReDJPK0q:/la=;h.S@J5&sm9iHR:;LhG=InWai9N$@6;1D59InNXg92U.2;1;/8IS3Oe
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.1611 0 0 28.1611 302.373 308.391 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~<`W7%<`W7%<`N."<E3%!<E3%!<E3%!<E)ps<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c?Un;c?Un;c?Un
;c?Un;c?Un;c?Rl;GpCj;GpCj;GpCj;Gp@h;,L1f;,L1f;,L1f;,L.d:f'tb:f'tb:f'tb:f'tb:f'tb
:f'tb:f'tb:f'ta:JXb^:JXb^:JXb^:JXb]:/4PZ:/4PZ:/4PZ:/4PY9he>V9he>V9he>V9he>V9he>V
9he>V9he>V9he>V9MA,R9MA,R9MA,R9MA,R91qoN91qoN91qoN91qoN8kM]J8kM]J8kM]J8kM]J8kM]J
~>
<~>?b<9>?b<9>?b<9>?Y36>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$5!2=]nm1=]nm1=]nm1=]ed.
=BJ[-=BJ[-=BJ[-=BJX+='&I)='&I)='&I)='&I)='&F'<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%
<`W7$<E3%!<E3%!<E3%!<E3$u<)cgr<)cgr<)cgr<)cgq;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un
;c?Un;c?Un;GpCj;GpCj;GpCj;GpCj;,L1f;,L1f;,L1f;,L1f:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb
~>
<~KnY57KnY57KnY57KnY57KnP,4KS5#3KS5#3KS5#3KS5#3KS5#3KS+o0K7ef/K7ef/K7ef/K7ef/K7ef/
K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ec-JqAT+JqAT+JqAT+JqAT+JqAT+JqAQ)JUrB'JUrB'
JUrB'JUrB'JUrB'JUrB&J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pI=6NlI=6NlI=6Nl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
304.744 285.706 mo
304.579 285.446 304.442 285.218 304.329 285.018 cv
304.324 284.972 304.32 284.924 304.315 284.878 cv
304.435 285.118 304.577 285.395 304.744 285.706 cv
.129412 .0941176 0 rgb
f
188.269 423.765 mo
188.269 423.765 172.502 438.883 171.856 461.994 cv
171.856 461.994 180.73 483.65 198.921 487.642 cv
205.986 489.192 209.852 486.979 217.757 490.241 cv
217.757 490.241 227.273 461.506 253.961 448.319 cv
280.647 435.131 295.03 439.348 295.03 439.348 cv
294.777 437.353 li
294.777 437.353 257.521 429.674 235.519 432.699 cv
213.517 435.723 187.406 431.95 188.269 423.765 cv
.168627 .121569 0 rgb
f
206.169 475.119 mo
203.397 475.119 200.671 474.695 198.211 473.619 cv
196.234 470.546 194.613 466.638 193.752 461.672 cv
193.752 461.672 193.885 467.002 196.461 472.712 cv
196.46 472.712 196.46 472.712 196.46 472.712 cv
196.46 472.712 194.833 473.204 192.312 473.204 cv
188.492 473.204 182.618 472.073 177.24 466.388 cv
175.613 463.662 174.861 461.736 174.861 461.736 cv
175.5 441.166 185.687 429.325 185.687 429.325 cv
190.851 434.037 203.54 436.512 218.382 436.512 cv
224.101 436.512 230.141 436.145 236.191 435.396 cv
240.824 434.823 245.786 434.597 250.731 434.597 cv
268.177 434.597 285.383 437.407 286.908 437.662 cv
286.662 437.624 285.997 437.543 284.864 437.543 cv
280.93 437.543 271.355 438.524 254.089 445.735 cv
238.989 452.041 228.794 462.808 222.585 471.441 cv
218.431 473.114 212.195 475.119 206.169 475.119 cv
287.018 437.68 mo
287.018 437.68 286.98 437.674 286.908 437.662 cv
286.981 437.673 287.018 437.68 287.018 437.68 cv
level3{
gsave
clp
[112.156 0 0 112.156 174.861 457.055 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.545098 .568627 .74902 ]
/C1 [.384314 .415686 .65098 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[112.156 0 0 112.156 174.861 457.055 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Mi*CLMMd:JM2@(GM26tDLkpkBLPLY?LPCP<L5(G;KnY57KnY25KS5#3K7ef/K7ec-JqAT+Jq8K(JUrB&
J:N0#J:E&uIt)rsIXZ`pIXZ]nI=6NlI!g<hI!g9fH[C*dH?sm`H?sm_H$O[\H$FRYG^+IWGB\7TGBS.Q
G'8%PF`hhLF`heJFEDVHF)uDDF)uABEcQ2@EcH)=EH,u;E,]c8E,TZ5Df9Q3DJj?0DJj<.D/F-,Ci!p(
Ci!m&CMR^$C2.KuC2.KtBk_9qBkV0nBP;'lB4kjiB4bafAnGXeAS#FaAS#C_A7T4]@q0"Y@q/tW@U`eU
~>
<~OcYZdOH>QbO,o?_O,o<]NfK-[NK&pWNK&pVN/W^SN/NUPMi3LOMMd:KMMd7IM2@(GM26tDLkpkCLPLY?
LPLV=L5(G;L4t>8KnY56KS5#3KS4u1K7ef/JqAT+JqAT*JUrB'JUr?%J:N0#It)rtIt)rsIXZ`pIXQWm
I=6NlI!g<hI!g9fH[C*dH[:!aH?sm_H$O[\H$OXZG^+IXG^"@UGB\7SG'8%PG'8"NF`hhLFEDVHFEDVG
F)uDDF)l;AEcQ2@EH,u<EH,u;E,]c8E,TZ5Df9Q4DJj?0DJj<.D/F-,D/=$)Ci!p'CMR^$CMR["C2.Ku
~>
<~^V7Fr^:q=q^:q=p]tM+m]tM+m]tD"j]Y(ni]Y(nh]=Y\e]=Y\e]=PSb]"5Ja]"5Ja\[f8]\[f8]\[f5[
\@B&Y\@B&Y\$riU\$riU\$rfS[^NWQ[^NWQ[^ENN[C*EM[C*EL['[3I['[3I['R*FZa7!EZa7!DZEgdA
ZEgdAZEga?Z*CR=Z*CR=Yct@9Yct@9Yct=7YHP.5YHP.5Y-+q1Y-+q1Y-+q0Xf\_-Xf\_-XfSV*XK8M)
XK8M(X/i;%X/i;%X/`2"WiE)!WiE)!WMukrWMukrWMuhpW2QYnW2QYnVl-GjVl-GjVl-DhVP^5fVP^5f
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
256.01 165.52 mo
254.796 167.193 254.425 168.995 255.18 169.544 cv
255.937 170.092 257.534 169.18 258.75 167.507 cv
259.963 165.834 260.334 164.033 259.576 163.484 cv
258.82 162.936 257.222 163.847 256.01 165.52 cv
cp
1 1 1 rgb
f
300.307 164.507 mo
299.358 166.343 299.265 168.181 300.095 168.609 cv
300.926 169.037 302.367 167.894 303.315 166.057 cv
304.261 164.22 304.355 162.383 303.525 161.955 cv
302.695 161.527 301.251 162.67 300.307 164.507 cv
cp
f
214.822 484.786 mo
214.822 484.786 197.414 482.787 193.752 461.672 cv
193.752 461.672 194.155 477.831 207.154 484.018 cv
214.921 487.713 214.822 484.786 214.822 484.786 cv
.168627 .121569 0 rgb
f
294.239 319.651 mo
294.239 319.651 289.222 323.177 271.408 327.231 cv
258.324 330.208 245.411 332.246 239.503 333.115 cv
239.503 333.136 li
242.106 332.898 246.59 332.537 254.283 331.987 cv
275.393 330.479 294.777 332.654 294.777 332.654 cv
294.239 319.651 li
cp
level3{
gsave
clp
[55.2744 0 0 55.2744 239.503 326.394 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[55.2744 0 0 55.2744 239.503 326.394 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
266.15 273.493 mo
270.115 302.933 280.1 311.093 282.624 324.302 cv
285.148 337.511 280.234 356.516 287.054 367.963 cv
293.873 379.411 312.138 399.15 319.082 415.442 cv
325.742 431.062 329.369 436.942 336.945 437.163 cv
344.519 437.381 357.639 422.871 363.461 422.213 cv
369.317 421.553 376.574 418.164 380.457 416.247 cv
383.508 414.741 383.042 412.407 382.439 412.242 cv
381.836 412.076 374.727 414.173 372.747 414.503 cv
370.766 414.833 363.809 415.795 363.809 415.795 cv
366.649 413.154 373.651 411.59 376.234 411.177 cv
378.816 410.764 384.012 407.521 385.132 405.457 cv
386.251 403.393 385.453 401.742 383.56 402.401 cv
383.56 402.401 383.363 401.724 380.178 402.549 cv
376.993 403.375 365.917 404.836 364.455 404.919 cv
362.99 405.001 359.928 406.954 356.055 408.688 cv
352.18 410.421 349.699 410.454 348.408 410.949 cv
347.115 411.445 338.09 418.928 334.085 416.119 cv
325.85 410.34 326.199 369.531 322.238 356.817 cv
318.278 344.104 309.111 334.429 307.39 320.229 cv
305.667 306.03 303.624 253.864 295.25 239.999 cv
286.877 226.135 268.059 224.479 260.424 240.565 cv
252.896 256.425 264.864 263.958 266.15 273.493 cv
.168627 .121569 0 rgb
f
266.346 273.964 mo
271.354 299.003 282.608 311.549 284.978 324.472 cv
287.346 337.395 282.734 355.272 289.133 366.472 cv
295.531 377.672 313.353 397.703 319.87 413.642 cv
326.118 428.924 330.208 434.319 337.316 434.534 cv
344.424 434.749 357.373 421.443 362.865 420.797 cv
368.358 420.151 372.392 418.67 378.199 416.156 cv
381.15 414.878 381.847 413.615 381.281 413.453 cv
380.716 413.292 372.801 415.392 370.942 415.715 cv
369.085 416.038 358.101 418.622 360.766 416.038 cv
363.432 413.453 370.377 410.949 372.801 410.545 cv
375.224 410.142 383.059 406.992 384.108 404.972 cv
385.158 402.953 383.462 403.276 381.686 403.922 cv
381.686 403.922 381.523 403.034 378.535 403.841 cv
375.547 404.649 367.712 405.619 366.339 405.699 cv
364.966 405.78 361.412 407.153 357.777 408.849 cv
354.143 410.545 351.154 411.191 349.942 411.676 cv
348.731 412.161 337.141 420.16 333.385 417.411 cv
325.658 411.757 323.107 371.234 319.392 358.795 cv
315.676 346.357 306.73 334.379 305.115 320.487 cv
303.5 306.595 301.928 254.496 294.071 240.931 cv
286.215 227.366 265.068 225.959 258.762 241.825 cv
252.454 257.692 264.504 264.749 266.346 273.964 cv
.870588 .705882 .607843 rgb
f
360.643 417.031 mo
360.637 417.03 360.632 417.03 360.627 417.03 cv
360.49 416.971 360.401 416.894 360.367 416.795 cv
360.369 416.625 360.502 416.378 360.702 416.101 cv
360.722 416.08 360.744 416.059 360.766 416.038 cv
363.432 413.453 370.377 410.949 372.801 410.545 cv
375.224 410.142 383.059 406.992 384.108 404.972 cv
384.134 404.923 384.158 404.875 384.181 404.828 cv
384.158 404.875 384.134 404.923 384.108 404.972 cv
383.059 406.992 375.224 410.142 372.801 410.545 cv
370.531 410.923 363.615 414.628 360.643 417.031 cv
384.182 404.824 mo
384.183 404.822 384.184 404.821 384.185 404.819 cv
384.184 404.821 384.183 404.822 384.182 404.824 cv
.129412 .0862745 0 rgb
f
360.627 417.03 mo
360.441 417.013 360.365 416.928 360.367 416.795 cv
360.401 416.894 360.49 416.971 360.627 417.03 cv
360.702 416.101 mo
361.117 415.525 361.82 414.822 362.232 414.422 cv
364.897 411.838 370.377 409.334 372.801 408.93 cv
375.177 408.534 382.744 405.499 384.024 403.477 cv
384.45 403.59 384.59 403.972 384.185 404.819 cv
384.184 404.821 384.183 404.822 384.182 404.824 cv
384.182 404.826 384.181 404.827 384.181 404.828 cv
384.158 404.875 384.134 404.923 384.108 404.972 cv
383.059 406.992 375.224 410.142 372.801 410.545 cv
370.377 410.949 363.432 413.453 360.766 416.038 cv
360.744 416.059 360.722 416.08 360.702 416.101 cv
.670588 .501961 .407843 rgb
f
337.287 434.533 mo
337.286 434.533 337.285 434.533 337.285 434.533 cv
337.285 434.533 337.286 434.533 337.287 434.533 cv
381.281 413.453 mo
381.277 413.452 381.273 413.451 381.268 413.45 cv
381.273 413.451 381.277 413.452 381.281 413.453 cv
.129412 .0862745 0 rgb
f
337.489 434.536 mo
337.431 434.536 337.373 434.535 337.316 434.534 cv
337.316 434.534 li
337.306 434.533 337.297 434.533 337.287 434.533 cv
337.286 434.533 337.285 434.533 337.285 434.533 cv
332.075 434.363 328.485 431.385 324.474 423.771 cv
324.474 423.771 li
328.268 430.621 332.337 432.768 337.316 432.918 cv
337.374 432.92 337.43 432.921 337.488 432.921 cv
344.631 432.92 357.417 419.822 362.865 419.182 cv
368.358 418.535 372.392 417.055 378.199 414.54 cv
378.903 414.235 379.472 413.932 379.932 413.644 cv
380.532 413.521 380.987 413.445 381.192 413.445 cv
381.223 413.445 381.249 413.446 381.268 413.45 cv
381.273 413.451 381.277 413.452 381.281 413.453 cv
381.281 413.453 li
381.398 413.487 381.461 413.567 381.461 413.685 cv
381.462 414.138 380.539 415.142 378.199 416.156 cv
372.392 418.67 368.358 420.151 362.865 420.797 cv
357.417 421.438 344.632 434.538 337.489 434.536 cv
.670588 .501961 .407843 rgb
f
323.122 424.139 mo
323.1 424.139 323.411 424.046 323.74 423.952 cv
324.058 423.862 324.394 423.772 324.463 423.766 cv
324.465 423.768 324.466 423.77 324.467 423.773 cv
323.489 424.047 323.143 424.139 323.122 424.139 cv
.129412 .0862745 0 rgb
f
324.467 423.773 mo
324.466 423.77 324.465 423.768 324.463 423.766 cv
324.465 423.766 324.467 423.766 324.469 423.766 cv
324.476 423.766 324.478 423.767 324.474 423.771 cv
324.474 423.771 li
324.471 423.772 324.469 423.772 324.467 423.773 cv
.670588 .501961 .407843 rgb
f
338.102 416.502 mo
338.919 416.218 339.792 415.898 340.678 415.568 cv
339.811 415.964 338.94 416.293 338.102 416.502 cv
level3{
gsave
clp
[482.615 0 0 708.983 299.537 419.504 ]ct
/15 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V
[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFF
Tu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3`3c5V[%YFFTu==3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`3c5V[%YFFTu440_m?#RZCo(?TYdt,_Qf`LZ(Ab8T"hJ#^TX3CY+35.S@u"o]W@U8X.$W"R^oDc\>Ye)
VjFihQF3QT[A9(oUQi'YPHgdDYb7,]Srg(FO0"h2X.#$IR>e)3Ml2ktV3Qn5P_YurL7s``T9"YsNJ!a[
JXVIHR>HE[LOGJBI?]D3P(J"BJ9[-(GE%#nMgKQ'H#nabEJAUTK62!_Ec$>FCOU,8Hu*JAC1hd)AThZq
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[482.615 0 0 708.983 299.537 419.504 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C/_SX1,_SX.*_83t(
_8*k$^V@Ls^:q=q^:h4m]Xtef]=PP`\@B&X\$rfS[C*BK['R*EZE^[=Yct=6Xf\\+XK/D%WMuhpVl-Dg
V50o^U7n9STV%gISXl:?R[KS3R$X,)Q'@MsP*(lgOH5E]N/NRNMM[+CL5(A6JqAQ(J:E#rI!^0bG^+FU
~>
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!DZEgd@Z*CR=Yct@9
Yct@8YHP+3Y-+n/XfSV)X/i;%WiE%tW2QYmVl$>gV59u`USFTYU7n6PT:_aISXl:@S!oe6R@0G0Q^3o%
Q'@MsP*(lhOH5E]N/W^RMM[1HLkg_=KS5#2Jq8H%IsufoI!^0cH$FOVF`heJF)l8>Df0E.Chmg$BkV-k
~>
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sMT:_aJT:_aJT:_^H
St2FCSXl=BS=H(<S"#n:S!oe7R@0J2R$a8-Q^3r'Q'IW"Pa%DrPEM)kOcb`eO,o<]NfB$WN/W[QMM[.F
Lkph@L4t>8KS4u1JqAQ(J:E&uIXQTkI!^3dH?jaZGB\4QFEDSFF)l8>E,]`5D/F*)CMITuBP1sjAn>L_
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
335.474 417.984 mo
334.648 417.984 333.933 417.812 333.385 417.411 cv
333.516 417.506 333.722 417.55 333.993 417.55 cv
334.851 417.55 336.351 417.11 338.102 416.502 cv
338.94 416.293 339.811 415.964 340.678 415.568 cv
342.94 414.728 345.297 413.828 347.091 413.329 cv
347.091 413.329 li
343.888 415.204 338.791 417.984 335.474 417.984 cv
294.071 240.931 mo
290.395 234.584 283.809 230.899 277.196 230.399 cv
283.809 230.899 290.395 234.584 294.071 240.931 cv
.129412 .0862745 0 rgb
f
336.338 423.768 mo
326.767 423.514 318.361 373.634 314.646 361.195 cv
310.931 348.757 303.426 337.772 301.81 323.879 cv
300.195 309.987 299.201 256.435 291.344 242.87 cv
287.384 236.031 280.049 232.288 272.939 232.288 cv
269.697 232.288 266.501 233.066 263.694 234.684 cv
267.047 231.738 271.306 230.341 275.651 230.341 cv
276.165 230.341 276.681 230.36 277.196 230.399 cv
283.809 230.899 290.395 234.584 294.071 240.931 cv
294.071 240.931 li
301.928 254.496 303.5 306.595 305.115 320.487 cv
306.73 334.379 315.676 346.357 319.392 358.795 cv
323.107 371.234 325.658 411.757 333.385 417.411 cv
333.385 417.411 li
333.933 417.812 334.648 417.984 335.474 417.984 cv
338.791 417.984 343.888 415.204 347.09 413.329 cv
337.908 419.834 336.338 423.768 336.338 423.768 cv
.670588 .501961 .407843 rgb
f
242.662 373.364 mo
242.662 373.364 246.583 340.625 239.503 315.21 cv
237.271 316.451 li
237.271 316.451 245.508 336.318 242.662 373.364 cv
.168627 .121569 0 rgb
f
362.623 410.142 mo
367.739 407.288 li
379.801 404.434 li
379.801 404.434 366.068 408.58 362.623 410.142 cv
cp
f
241.782 705.87 mo
241.782 705.87 241.061 711.31 247.979 712.151 cv
247.979 712.151 241.325 712.925 240.993 709.183 cv
240.811 707.106 241.782 705.87 241.782 705.87 cv
cp
f
227.877 324.627 mo
226.434 322.252 li
226.603 322.222 226.771 322.191 226.939 322.158 cv
227.262 322.99 227.575 323.812 227.88 324.627 cv
227.878 324.627 227.877 324.627 227.877 324.627 cv
.129412 .0862745 0 rgb
f
227.88 324.627 mo
227.575 323.812 227.262 322.99 226.939 322.158 cv
230.824 321.397 234.47 319.828 237.741 317.724 cv
238.03 318.557 238.432 319.797 238.888 321.434 cv
233.083 323.94 228.009 324.61 227.88 324.627 cv
level3{
gsave
clp
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
229.138 231.464 mo
228.935 231.161 228.733 230.855 228.532 230.549 cv
228.847 230.427 229.229 230.177 229.575 229.922 cv
229.887 230.356 230.203 230.785 230.527 231.212 cv
229.138 231.464 li
.129412 .0862745 0 rgb
f
240.812 320.545 mo
240.505 319.112 240.167 317.694 239.797 316.295 cv
246.202 311.502 250.877 304.675 252.615 298.195 cv
256.169 284.949 254.557 268.472 244.136 252.479 cv
240.957 247.602 237.801 243.429 234.776 239.355 cv
232.869 236.515 231.142 234.169 229.893 232.578 cv
229.64 232.209 229.388 231.837 229.138 231.464 cv
230.527 231.212 li
236.072 238.533 243.288 244.65 252.002 244.918 cv
252.113 244.921 252.222 244.923 252.33 244.923 cv
255.762 244.923 257.528 243.214 259.125 240.966 cv
258.999 241.247 258.878 241.533 258.762 241.825 cv
258.749 241.858 258.736 241.891 258.723 241.924 cv
257.179 245.404 255.576 250.578 255.576 257.056 cv
255.576 270.984 263.694 290.01 253.315 309.241 cv
250.395 314.651 245.52 318.22 240.812 320.545 cv
level3{
gsave
clp
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.754 -203.659 203.659 131.754 210.693 522.004 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
226.434 322.252 mo
225.185 320.196 li
226.398 319.949 229.568 318.782 237.271 315.21 cv
246.893 310.747 249.97 301.422 250.336 290.955 cv
250.727 288.838 250.909 286.704 250.91 284.563 cv
250.913 280.148 250.145 275.706 248.841 271.334 cv
248.754 270.735 248.666 270.14 248.577 269.549 cv
247.066 259.478 240.193 247.423 234.776 239.355 cv
237.801 243.429 240.957 247.602 244.136 252.479 cv
254.557 268.472 256.169 284.949 252.615 298.195 cv
250.877 304.675 246.202 311.502 239.797 316.295 cv
239.702 315.932 239.603 315.57 239.503 315.21 cv
237.271 316.451 li
237.271 316.451 237.448 316.878 237.741 317.724 cv
234.47 319.828 230.824 321.397 226.939 322.158 cv
226.771 322.191 226.603 322.222 226.434 322.252 cv
252.33 244.923 mo
252.222 244.923 252.113 244.921 252.002 244.918 cv
243.288 244.65 236.072 238.533 230.527 231.212 cv
230.203 230.785 229.887 230.356 229.575 229.922 cv
230.056 229.567 230.465 229.2 230.52 229.151 cv
233.68 233.121 237.086 236.336 240.582 238.631 cv
241.937 239.703 243.433 240.826 245.073 241.979 cv
246.386 242.902 247.812 243.273 249.257 243.273 cv
255.233 243.273 261.538 236.92 261.538 236.92 cv
261.538 236.92 261.377 237.127 261.107 237.528 cv
260.359 238.558 259.692 239.704 259.125 240.966 cv
257.528 243.214 255.762 244.923 252.33 244.923 cv
229.893 232.578 mo
229.169 231.655 228.605 230.986 228.26 230.622 cv
228.342 230.612 228.433 230.587 228.532 230.549 cv
228.733 230.855 228.935 231.161 229.138 231.464 cv
229.388 231.837 229.64 232.209 229.893 232.578 cv
.129412 .0862745 0 rgb
f
240.582 238.631 mo
237.086 236.336 233.68 233.121 230.52 229.151 cv
230.521 229.15 230.522 229.149 230.523 229.148 cv
233.68 233.117 237.083 236.331 240.577 238.626 cv
240.579 238.628 240.58 238.629 240.582 238.631 cv
level3{
gsave
clp
[131.855 0 0 131.855 190.527 200.715 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUu
W/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$a
LV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@]VpUuW/&$aLV0R@
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]VpUuVhVj^L:a=:];C:nV1lLWKXmq4\YXqgUk?1QK=I\.\>+VaUOfnKJ[V;'[\85ZTmsJCJ$kr![@huU
TRO5>IC#PoZCZKMSp[i8Ha92hZ(66HS9qK1HE`laYFBg@RsD0+GcmK[Y*sR;R<Pd$GHI9VXI+14R!#Hr
FfUjOX-Rk-Q?0'lF/bIHWKhP'Q#`gfEN#+AW0D;"PAmF`E2Je:VNPkoP&I1[DPWD4UlfMiODUeTD53/.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.327273 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.855 0 0 131.855 190.527 200.715 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e
]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]"5Ja]"5G_\[f8\\@B&Y\@8rV\$riU\$riU[^NWQ[^ENN
[C*EL['[3I['[3I['[0GZEgdAZEga?Z*CR=Z*CR=Z*:I:Yct=7YHP.5Y-+q1Y-"h.Xf\_-Xf\_-XK8M)
XK8J'X/i;$WiE)!WiE(uWMukrWMlboW2QVlVl-GjVl-GjVl$>gVP^5eV5:#bUnjf^Unjc\USFTZUSFTZ
~>
<~Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GiVP^5fV5:#bV59u`Unjf^Unjf^Una][USFQXU8"BVU8"BUTqS0R
TV.sNTV%jKT:_aJT:_aJSt;OFSt;LDSXl=BSXl:@S=H+>S"#n:S!oe7R[T\6R[T\6R@0J2R@'A/R$a8.
R$a5,Q^=&)QBmi&QBd`#Q'IW"Q'IW!Pa%DsP`q;pPEV2oPEM)lP*1ujOcbcgOcbcgOcb`eOH>QbO,o?_
~>
<~L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;
L5(G;L5(G;L5(G;L5(G;L5(G;L5(G:KnY57KS5#3KS5#3KS+o0K7ec-JqAT+JqAQ)JUi9$J:N0#J:E&u
It)rsIXZ`pIXZ`oI=6NlI!g<hI!g<hI!^3dH?sm`H?sm`H?sj^H$FRYG^+IXG^"@UGB\7SG'8%PG'8%O
F`hhLFEDVHFEDVHFE;MDEcQ2@EcQ2@EcQ/>EH#l9E,]c8E,TZ5Df9Q3DJj?0DJj?/D/F-,Ci!p(Ci!p(
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
250.336 290.955 mo
250.559 284.558 249.769 277.733 248.841 271.334 cv
250.145 275.706 250.913 280.148 250.91 284.563 cv
250.909 286.704 250.727 288.838 250.336 290.955 cv
level3{
gsave
clp
[131.855 0 0 131.855 190.527 200.715 ]ct
/17 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][
N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/G
CnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'TT!][N,5/GCnQ`'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TT!][MeeuDCS-K"T8IBTMJA`?C7^;tSr.6QM.rN;Bq0umS;:gJLhE65B:FZhRtkXFLM!!0At"HcRY>=@
Kk6X*AXJ0^Q\8n9KO^@$A!_gXQ\/b6K4:.!@[;USQ%EG0JROdo@$H1LP^m,*J7"Lj?^$"IPCHr'IpS:e
?'0SAOa^SuIU/(a?''J>OF1;oHs;YZ>E=/9O*k,kHWlGV>)di2NI"`eH!-,P=H%N-N-SK_GuooL=,M6(
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.327273 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.855 0 0 131.855 190.527 200.715 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~T:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJ
T:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJSt;OFSt;LDSXl=BSXl=BSXc4?S=H(<S"#n:S"#n:S!oe7
R[T\5R@0J2R@0J2R@0G0Q^=&*Q^=#(QBmi&QBmi&QBmi&QBmf$Q'IW"Pa%DsP`q;pPEV2oPEV2oP*1uk
P*1ukP*1ujOcb`eOH>QcOH>QcOH5H`O,o<]NfK-[NfK-[NfB$XNK&pVN/W^SN/W^SN/W[QMi3LNMMd:K
~>
<~Mi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LO
Mi3LOMi3LOMi3LOMi3LOMi3LOMi3LNMMd:KM2@(GM2@(GM2@(GM2@(GM26tDLkphALPLY?LPLY>L5(G;
L5(G;L4t>8KnY56KS5#3KS5#3KS4u1K7ef.JqAT+JqAT+JqAT+Jq8K(JUr?%J:N0#It)rtIt)rtIt)rt
It)orIXZ`oI=6NlI=6NlI=6KjI!g<gH[C*dH[C*dH[C*dH[:!aH?sm_H$O[\G^+IXG^+IXG^+IXG^+IX
~>
<~CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$
CMR^$CMR^$CMR^$CMR^$CMR^$CMR^#C2.KuC2.KtBk_9qBk_9qBk_6oBP;'mBP;$kB4bafAnGXeAnGXe
AnGXdAS#FaA7T4]A7T4]A7T4\@q0"Y@q&nV@U`eU@UW\R@:<SQ@:3JN?smAM?sd8J?XI/H?=$rE?=$rE
?=$rE?!U`@>[1N=>[1N=>[1N=>[(E:>?b97>$>*5>$>'3=]nm1=]nm0=BJ[-=BJ[,='&I)<`W7%<`W7%
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
240.577 238.626 mo
237.083 236.331 233.68 233.117 230.523 229.148 cv
230.525 229.146 230.526 229.145 230.526 229.145 cv
230.526 229.145 233.763 233.234 240.577 238.626 cv
.576471 .505882 .376471 rgb
f
258.723 241.924 mo
258.736 241.891 258.749 241.858 258.762 241.825 cv
258.878 241.533 258.999 241.247 259.125 240.966 cv
259.692 239.704 260.359 238.558 261.107 237.528 cv
260.587 238.302 259.666 239.797 258.723 241.924 cv
.670588 .501961 .407843 rgb
f
224.755 320.25 mo
224.128 320.25 224.854 319.651 224.854 319.651 cv
225.185 320.196 li
224.998 320.234 224.858 320.25 224.755 320.25 cv
228.191 230.626 mo
228.024 230.626 227.909 230.544 227.877 230.341 cv
227.873 230.317 227.879 230.305 227.893 230.305 cv
227.937 230.305 228.063 230.414 228.26 230.622 cv
228.236 230.625 228.213 230.626 228.191 230.626 cv
.129412 .0862745 0 rgb
f
238.888 321.434 mo
238.432 319.797 238.03 318.557 237.741 317.724 cv
237.448 316.878 237.271 316.451 237.271 316.451 cv
239.503 315.21 li
239.603 315.57 239.702 315.932 239.797 316.295 cv
240.167 317.694 240.505 319.112 240.812 320.545 cv
240.167 320.864 239.522 321.16 238.888 321.434 cv
f
211.485 487.236 mo
186.184 487.236 173.622 461.672 173.622 461.672 cv
174.781 463.516 175.997 465.073 177.24 466.388 cv
180.636 472.076 187.848 481.245 200.008 483.648 cv
201.394 483.922 202.506 484.017 203.459 484.017 cv
204.56 484.017 205.449 483.89 206.304 483.762 cv
206.389 483.749 206.474 483.736 206.559 483.724 cv
206.755 483.824 206.953 483.922 207.154 484.018 cv
210.159 485.448 211.987 485.886 213.098 485.886 cv
214.859 485.886 214.822 484.786 214.822 484.786 cv
214.822 484.786 213.047 484.582 210.511 483.617 cv
211.658 483.775 213.036 484.122 214.822 484.786 cv
214.822 484.786 217.211 478.912 222.585 471.441 cv
225.559 470.243 227.468 469.215 227.468 469.215 cv
216.484 486.911 li
214.766 487.132 213.1 487.236 211.485 487.236 cv
.129412 .0941176 0 rgb
f
214.822 484.786 mo
213.036 484.122 211.658 483.775 210.511 483.617 cv
206.973 482.27 201.955 479.442 198.211 473.619 cv
200.671 474.695 203.397 475.119 206.169 475.119 cv
212.195 475.119 218.431 473.114 222.585 471.441 cv
217.211 478.912 214.822 484.786 214.822 484.786 cv
203.459 484.017 mo
202.506 484.017 201.394 483.922 200.008 483.648 cv
187.848 481.245 180.636 472.076 177.24 466.388 cv
182.618 472.073 188.492 473.204 192.312 473.204 cv
194.833 473.204 196.46 472.712 196.46 472.712 cv
196.46 472.712 li
198.3 476.79 201.387 481.062 206.559 483.724 cv
206.474 483.736 206.389 483.749 206.304 483.762 cv
205.449 483.89 204.56 484.017 203.459 484.017 cv
level3{
gsave
clp
[112.156 0 0 112.156 174.861 457.055 ]ct
/18 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~C2T/JDNSXNO_AToB5N`CCli:FOCi9hAo!H=C5uh>NaujaA8.'7BT?S8NFHO[@V:[/ArL/1N+$:U?tG7'
A;af*MI'hN?=Sk!@u=Q$MHjSH>[`In@>J,qLg+8C>$m%g?\_cjLKIl<=C-ba?%uEcL0%W7<a18X>D6']
KN)-.<*FrS=bK^VKMkp);HJKJ=+a@OJl,R#:f`-D<ImqGJPK0q:/ld><.I\AJ5&pl9N$@5;1D59IS3Oe
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[112.156 0 0 112.156 174.861 457.055 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Bk_9qBkV0nBP;'mBP1sjB4bafAnGXeAnGXeAn>ObAS#FaARo=^A7K+Z@q0"Y@q0"Y@q0"Y@q&nV@UW\R
@:<SQ@:<PO?smAM?smAM?sm>K?XI,G?=$rE?=$oC?!U`A?!U`A?!U]?>[1K;>?b<9>?b97>$>*5>$>*5
>$>*4=]nm1=]nm0=BJ[,='&I)='&I(<`W7%<`W7%<`W7$<E3$u<)cgr<)cgq;c?Un;c?Un;c?Um;GpCi
;,L1f;,L1f:f'tb:f'tb:f'tb:JXb^:JXb^:/4PZ9he>V9he>V9he>V9MA,R9MA,R91qoN8kM]J8kM]J
~>
<~D/F-,D/F-,D/F-,D/=$)Ci!p(Chmg%CMIU!C2.KuC2.KuC2%BrBk_9qBkV0nBP;'mBP1sjB4bafAnGXe
AnGXeAnGUcAS#FaAS#C_A7T4]A7T1[@q0"Y@q0"Y@q/tW@U`eU@U`bS@:<PO?smAM?smAM?sm>K?XI/I
?XI/H?=$rE?=$rD?!U`A?!U`A?!U`@>[1N<>?b<9>?b<8>$>*5>$>*5>$>*4=]nm1=]nm0=BJ[-=BJ[,
='&I)<`W7%<`W7%<`W7%<E3%!<E3%!<)cgr<)cgr;c?Un;c?Un;c?Un;GpCj;,L1f;,L1f:f'tb:f'tb
~>
<~OH>QcOH>QcOH>QcOH>QcOH5H`O,o?_O,o?_O,f6\NfK-[NfB$XNK&pWNK&pWNK&pWNK&pWNJrgTN/W^S
N/W^SN/W[QMi3LOMi3IMMMd:KMMd:KMMd7IM2@(GM2@(GM2@(GM2@(GM2@%ELkpkCLkphALPLY?LPLY?
LPLY>L5(G;L5(G;L5(G;L5(G;L5(G:KnY57KnY57KnY56KS5#3KS5#2K7ef/K7ef/K7ef/K7ef/K7ef.
JqAT+JqAT+JqAT+JUrB'JUrB'J:N0#J:N0#J:N0#J:N0#J:N0#It)rtIt)rtIt)rtIXZ`pIXZ`pI=6Nl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
213.098 485.886 mo
211.987 485.886 210.159 485.448 207.154 484.018 cv
206.953 483.922 206.755 483.824 206.559 483.724 cv
201.387 481.062 198.3 476.79 196.461 472.712 cv
197.025 473.055 197.61 473.357 198.211 473.619 cv
201.955 479.442 206.973 482.27 210.511 483.617 cv
213.047 484.582 214.822 484.786 214.822 484.786 cv
214.822 484.786 214.859 485.886 213.098 485.886 cv
.129412 .0941176 0 rgb
f
389.171 490.272 mo
387.515 491.13 385.53 491.562 383.213 491.562 cv
381.102 491.562 379.232 490.892 377.606 489.556 cv
375.98 488.22 375.168 486.421 375.168 484.161 cv
375.168 482.666 375.556 481.292 376.332 480.039 cv
377.105 478.789 378.103 477.759 379.316 476.955 cv
380.306 476.264 381.438 475.731 382.709 475.357 cv
383.979 474.985 385.297 474.796 386.661 474.796 cv
386.886 474.796 387.104 474.802 387.32 474.81 cv
387.534 474.821 387.755 474.835 387.979 474.853 cv
388.746 474.908 389.497 475.044 390.235 475.259 cv
390.973 475.474 391.632 475.843 392.212 476.367 cv
392.511 476.627 392.725 476.921 392.856 477.25 cv
392.987 477.578 393.053 477.91 393.053 478.246 cv
393.053 478.937 392.801 479.566 392.297 480.136 cv
391.79 480.708 391.137 481.001 390.334 481.021 cv
389.867 481.039 389.455 480.959 389.101 480.782 cv
388.746 480.605 388.408 480.385 388.09 480.123 cv
387.867 479.941 li
387.644 479.731 li
387.797 479.66 li
387.951 479.591 li
388.324 479.385 388.651 479.167 388.933 478.932 cv
389.213 478.698 389.436 478.358 389.604 477.91 cv
389.677 477.699 li
389.689 477.488 li
389.689 477.17 389.558 476.927 389.297 476.759 cv
389.035 476.59 388.718 476.507 388.344 476.507 cv
387.334 476.507 386.437 476.908 385.652 477.712 cv
384.867 478.515 384.204 479.404 383.661 480.375 cv
383.438 480.787 383.236 481.199 383.059 481.609 cv
382.881 482.021 382.728 482.394 382.596 482.73 cv
382.447 483.142 382.307 483.609 382.177 484.132 cv
382.045 484.656 381.971 485.179 381.952 485.703 cv
381.952 485.857 li
381.952 486.01 li
381.952 486.702 382.086 487.347 382.356 487.944 cv
382.63 488.542 383.129 488.972 383.856 489.234 cv
384.119 489.328 384.386 489.398 384.657 489.445 cv
384.928 489.492 385.203 489.513 385.482 489.513 cv
385.693 489.513 li
385.876 489.486 li
387.035 489.412 388.137 489.004 389.185 488.267 cv
390.23 487.529 391.006 486.673 391.512 485.703 cv
391.567 485.604 li
391.623 485.505 li
391.679 485.421 li
391.735 485.31 li
392.801 485.703 li
393.362 485.925 li
392.221 487.962 390.823 489.412 389.171 490.272 cv
cp
.168627 .121569 0 rgb
f
405.808 490.314 mo
404.837 491.314 403.473 491.813 401.716 491.813 cv
401.604 491.813 401.485 491.809 401.365 491.799 cv
401.243 491.79 401.127 491.785 401.014 491.785 cv
400.567 491.728 400.135 491.617 399.726 491.449 cv
399.314 491.281 398.969 491.01 398.688 490.636 cv
398.5 490.375 398.37 490.102 398.295 489.823 cv
398.221 489.542 398.184 489.252 398.184 488.955 cv
398.184 488.729 li
398.211 488.504 li
398.249 488.132 398.323 487.758 398.436 487.383 cv
398.548 487.009 398.67 486.665 398.8 486.347 cv
398.819 486.291 398.856 486.198 398.911 486.066 cv
398.969 485.937 399.024 485.787 399.08 485.618 cv
399.118 485.542 399.151 485.46 399.179 485.365 cv
399.206 485.271 399.229 485.179 399.249 485.085 cv
399.285 484.955 399.318 484.82 399.347 484.679 cv
399.374 484.539 399.388 484.414 399.388 484.3 cv
399.388 484.132 399.355 483.997 399.29 483.894 cv
399.225 483.791 399.108 483.741 398.938 483.741 cv
398.604 483.741 398.286 483.884 397.988 484.175 cv
397.688 484.463 397.436 484.777 397.23 485.114 cv
397.118 485.298 397.021 485.474 396.936 485.632 cv
396.851 485.791 396.791 485.937 396.754 486.066 cv
396.548 486.609 396.352 487.155 396.166 487.707 cv
395.978 488.257 395.79 488.805 395.604 489.347 cv
395.474 489.72 395.347 490.088 395.225 490.455 cv
395.104 490.818 394.978 491.187 394.848 491.562 cv
389.492 491.562 li
394.791 476.142 li
400.173 476.142 li
399.446 478.248 li
398.044 482.309 li
398.436 482.105 398.869 481.922 399.347 481.762 cv
399.823 481.605 400.313 481.496 400.818 481.441 cv
400.911 481.441 401.009 481.436 401.113 481.427 cv
401.216 481.417 401.313 481.413 401.406 481.413 cv
401.949 481.431 402.473 481.525 402.977 481.693 cv
403.48 481.861 403.912 482.152 404.267 482.562 cv
404.51 482.824 404.682 483.109 404.786 483.417 cv
404.888 483.726 404.939 484.039 404.939 484.357 cv
404.939 484.543 404.925 484.726 404.897 484.904 cv
404.869 485.082 404.818 485.263 404.743 485.45 cv
404.688 485.637 404.626 485.828 404.561 486.024 cv
404.496 486.22 404.426 486.421 404.351 486.626 cv
404.276 486.814 404.205 487.005 404.14 487.201 cv
404.075 487.398 404.014 487.599 403.958 487.805 cv
403.902 487.916 li
403.846 488.056 li
403.79 488.224 li
403.735 488.421 li
403.721 488.561 li
403.707 488.702 li
403.707 488.794 403.729 488.875 403.775 488.939 cv
403.823 489.004 403.912 489.038 404.042 489.038 cv
404.136 489.038 404.229 489.023 404.323 488.996 cv
404.416 488.968 404.51 488.925 404.603 488.871 cv
404.864 488.739 405.117 488.552 405.36 488.31 cv
405.602 488.066 405.826 487.814 406.033 487.551 cv
406.163 487.365 406.284 487.179 406.397 486.991 cv
406.51 486.805 406.593 486.636 406.648 486.487 cv
406.705 486.375 li
406.762 486.234 li
406.818 486.123 li
406.874 486.01 li
408.274 486.683 li
407.603 488.103 406.778 489.314 405.808 490.314 cv
cp
f
415.634 483.347 mo
415.567 483.217 415.403 483.152 415.144 483.152 cv
415.049 483.152 414.956 483.16 414.861 483.179 cv
414.77 483.199 414.677 483.226 414.582 483.263 cv
414.227 483.413 413.872 483.674 413.517 484.048 cv
413.162 484.421 412.843 484.824 412.563 485.253 cv
412.358 485.552 412.176 485.846 412.017 486.136 cv
411.857 486.427 411.742 486.673 411.666 486.878 cv
411.647 486.935 411.615 487.029 411.568 487.16 cv
411.522 487.292 411.479 487.439 411.442 487.608 cv
411.404 487.74 411.366 487.873 411.332 488.014 cv
411.292 488.155 411.265 488.3 411.247 488.449 cv
411.208 488.561 411.185 488.683 411.176 488.814 cv
411.167 488.945 411.162 489.066 411.162 489.177 cv
411.162 489.458 411.208 489.692 411.302 489.879 cv
411.396 490.066 411.563 490.16 411.807 490.16 cv
412.349 490.16 412.829 489.936 413.25 489.486 cv
413.671 489.038 414.031 488.542 414.33 488 cv
414.499 487.72 414.638 487.449 414.75 487.187 cv
414.861 486.925 414.965 486.693 415.06 486.487 cv
415.283 485.908 415.45 485.404 415.563 484.972 cv
415.677 484.543 415.731 484.179 415.731 483.879 cv
415.731 483.656 415.698 483.478 415.634 483.347 cv
cp
422.137 490.342 mo
421.175 491.323 419.796 491.813 418.003 491.813 cv
417.932 491.813 li
417.861 491.813 li
417.265 491.794 416.698 491.66 416.167 491.407 cv
415.634 491.154 415.236 490.739 414.975 490.16 cv
414.471 490.626 413.895 491.003 413.25 491.294 cv
412.606 491.583 411.948 491.757 411.273 491.813 cv
411.036 491.841 li
410.952 491.841 410.863 491.841 410.77 491.841 cv
410.115 491.824 409.484 491.691 408.877 491.449 cv
408.27 491.206 407.732 490.794 407.267 490.216 cv
406.91 489.786 406.653 489.337 406.494 488.871 cv
406.336 488.402 406.257 487.925 406.257 487.439 cv
406.257 486.581 406.485 485.75 406.943 484.945 cv
407.4 484.142 407.986 483.469 408.694 482.926 cv
409.236 482.515 409.863 482.175 410.573 481.904 cv
411.283 481.632 412.013 481.479 412.76 481.441 cv
412.999 481.413 li
413.237 481.413 li
413.834 481.413 414.415 481.501 414.975 481.677 cv
415.536 481.856 416.04 482.133 416.487 482.505 cv
416.77 481.665 li
417.684 481.665 418.595 481.665 419.502 481.665 cv
420.409 481.665 421.319 481.665 422.234 481.665 cv
422.122 482.001 422.006 482.343 421.886 482.689 cv
421.763 483.035 421.646 483.376 421.534 483.712 cv
421.291 484.384 421.054 485.062 420.819 485.744 cv
420.586 486.427 420.357 487.113 420.133 487.805 cv
420.104 487.873 li
420.076 488 li
420.021 488.155 li
419.993 488.337 li
419.965 488.449 li
419.965 488.561 li
420.006 488.786 li
420.161 488.925 li
420.286 488.968 li
420.441 488.955 li
420.553 488.955 420.661 488.931 420.764 488.884 cv
420.867 488.837 420.973 488.786 421.086 488.729 cv
421.291 488.599 421.496 488.431 421.702 488.224 cv
421.908 488.021 422.096 487.805 422.264 487.58 cv
422.432 487.375 422.576 487.169 422.697 486.962 cv
422.819 486.758 422.907 486.589 422.964 486.458 cv
423.021 486.347 li
423.076 486.234 li
423.104 486.123 li
423.161 486.01 li
424.618 486.656 li
423.927 488.132 423.1 489.361 422.137 490.342 cv
cp
f
439.279 483.347 mo
439.279 483.459 439.279 483.562 439.279 483.656 cv
439.279 484.347 439.069 484.893 438.648 485.296 cv
438.229 485.698 437.766 485.898 437.262 485.898 cv
437.219 485.898 li
437.178 485.898 li
436.784 485.898 436.411 485.768 436.055 485.505 cv
435.7 485.244 435.447 484.824 435.299 484.245 cv
435.243 484.076 435.173 483.951 435.088 483.866 cv
435.004 483.781 434.906 483.75 434.793 483.767 cv
434.607 483.767 434.396 483.875 434.163 484.089 cv
433.929 484.304 433.683 484.599 433.421 484.972 cv
432.973 485.552 432.589 486.198 432.271 486.906 cv
431.953 487.618 431.673 488.337 431.431 489.066 cv
431.317 489.382 431.215 489.692 431.121 489.992 cv
431.028 490.291 430.926 490.589 430.814 490.888 cv
430.774 491 430.738 491.113 430.701 491.224 cv
430.664 491.336 430.626 491.449 430.589 491.562 cv
425.402 491.562 li
427.729 485.057 li
427.785 484.861 li
427.785 484.721 li
427.785 484.515 427.705 484.38 427.547 484.316 cv
427.388 484.25 427.207 484.226 427.001 484.245 cv
426.514 484.3 426.086 484.525 425.711 484.917 cv
425.337 485.31 425.029 485.73 424.786 486.178 cv
424.729 486.273 424.674 486.375 424.618 486.487 cv
424.562 486.599 424.514 486.702 424.478 486.794 cv
423.076 486.234 li
423.563 484.962 424.276 483.82 425.221 482.8 cv
426.164 481.783 427.348 481.236 428.768 481.16 cv
428.897 481.142 429.034 481.132 429.173 481.132 cv
429.314 481.132 429.459 481.142 429.608 481.16 cv
430.225 481.199 430.816 481.352 431.389 481.623 cv
431.957 481.894 432.412 482.3 432.748 482.841 cv
433.159 482.543 433.594 482.263 434.052 482.001 cv
434.51 481.741 434.981 481.535 435.467 481.384 cv
435.691 481.31 435.91 481.258 436.126 481.23 cv
436.341 481.202 436.55 481.188 436.757 481.188 cv
437.038 481.188 437.313 481.226 437.584 481.3 cv
437.854 481.375 438.111 481.488 438.354 481.636 cv
438.596 481.806 438.789 482.011 438.93 482.252 cv
439.069 482.497 439.168 482.75 439.223 483.011 cv
439.262 483.123 439.279 483.234 439.279 483.347 cv
cp
f
448.656 483.347 mo
448.591 483.217 448.428 483.152 448.166 483.152 cv
448.072 483.152 447.979 483.16 447.886 483.179 cv
447.793 483.199 447.698 483.226 447.606 483.263 cv
447.251 483.413 446.895 483.674 446.541 484.048 cv
446.185 484.421 445.867 484.824 445.587 485.253 cv
445.382 485.552 445.2 485.846 445.04 486.136 cv
444.881 486.427 444.764 486.673 444.69 486.878 cv
444.671 486.935 444.638 487.029 444.593 487.16 cv
444.545 487.292 444.502 487.439 444.465 487.608 cv
444.428 487.74 444.391 487.873 444.354 488.014 cv
444.315 488.155 444.287 488.3 444.269 488.449 cv
444.232 488.561 444.209 488.683 444.2 488.814 cv
444.189 488.945 444.186 489.066 444.186 489.177 cv
444.186 489.458 444.232 489.692 444.324 489.879 cv
444.419 490.066 444.587 490.16 444.83 490.16 cv
445.371 490.16 445.853 489.936 446.273 489.486 cv
446.694 489.038 447.054 488.542 447.353 488 cv
447.521 487.72 447.661 487.449 447.774 487.187 cv
447.886 486.925 447.988 486.693 448.082 486.487 cv
448.307 485.908 448.475 485.404 448.587 484.972 cv
448.698 484.543 448.755 484.179 448.755 483.879 cv
448.755 483.656 448.723 483.478 448.656 483.347 cv
cp
455.16 490.342 mo
454.197 491.323 452.82 491.813 451.025 491.813 cv
450.954 491.813 li
450.886 491.813 li
450.287 491.794 449.723 491.66 449.189 491.407 cv
448.656 491.154 448.259 490.739 447.997 490.16 cv
447.494 490.626 446.919 491.003 446.273 491.294 cv
445.629 491.583 444.971 491.757 444.297 491.813 cv
444.06 491.841 li
443.975 491.841 443.886 491.841 443.792 491.841 cv
443.138 491.824 442.508 491.691 441.9 491.449 cv
441.293 491.206 440.756 490.794 440.289 490.216 cv
439.934 489.786 439.676 489.337 439.518 488.871 cv
439.359 488.402 439.279 487.925 439.279 487.439 cv
439.279 486.581 439.509 485.75 439.966 484.945 cv
440.424 484.142 441.007 483.469 441.718 482.926 cv
442.26 482.515 442.886 482.175 443.596 481.904 cv
444.307 481.632 445.036 481.479 445.783 481.441 cv
446.021 481.413 li
446.26 481.413 li
446.857 481.413 447.437 481.501 447.997 481.677 cv
448.56 481.856 449.063 482.133 449.512 482.505 cv
449.792 481.665 li
450.707 481.665 451.617 481.665 452.525 481.665 cv
453.432 481.665 454.344 481.665 455.258 481.665 cv
455.146 482.001 455.03 482.343 454.909 482.689 cv
454.785 483.035 454.67 483.376 454.558 483.712 cv
454.314 484.384 454.076 485.062 453.843 485.744 cv
453.609 486.427 453.381 487.113 453.154 487.805 cv
453.127 487.873 li
453.1 488 li
453.043 488.155 li
453.017 488.337 li
452.988 488.449 li
452.988 488.561 li
453.03 488.786 li
453.184 488.925 li
453.311 488.968 li
453.465 488.955 li
453.577 488.955 453.684 488.931 453.787 488.884 cv
453.891 488.837 453.997 488.786 454.109 488.729 cv
454.314 488.599 454.521 488.431 454.727 488.224 cv
454.933 488.021 455.119 487.805 455.287 487.58 cv
455.455 487.375 455.599 487.169 455.721 486.962 cv
455.841 486.758 455.932 486.589 455.988 486.458 cv
456.043 486.347 li
456.1 486.234 li
456.128 486.123 li
456.185 486.01 li
457.642 486.656 li
456.951 488.132 456.123 489.361 455.16 490.342 cv
cp
f
470.578 486.837 mo
470.509 487.019 li
470.078 487.898 469.602 488.678 469.078 489.361 cv
468.555 490.042 467.808 490.617 466.836 491.085 cv
466.256 491.347 465.616 491.546 464.915 491.687 cv
464.215 491.828 463.499 491.898 462.771 491.898 cv
462.589 491.898 li
462.406 491.898 li
461.322 491.841 460.281 491.63 459.281 491.267 cv
458.28 490.903 457.463 490.318 456.828 489.513 cv
456.491 489.085 456.243 488.65 456.086 488.21 cv
455.925 487.772 455.847 487.328 455.847 486.878 cv
455.847 486.021 456.107 485.201 456.632 484.427 cv
457.154 483.65 457.827 483.03 458.65 482.562 cv
459.191 482.263 459.855 482.006 460.642 481.791 cv
461.424 481.577 462.229 481.451 463.052 481.413 cv
463.165 481.394 463.267 481.384 463.359 481.384 cv
463.452 481.384 463.546 481.384 463.641 481.384 cv
464.349 481.384 465.022 481.468 465.659 481.636 cv
466.293 481.806 466.845 482.095 467.313 482.505 cv
467.536 482.73 467.723 482.997 467.874 483.304 cv
468.021 483.613 468.115 483.937 468.153 484.273 cv
468.153 484.371 li
468.153 484.468 li
468.153 484.71 468.111 484.955 468.027 485.198 cv
467.943 485.44 467.817 485.656 467.647 485.841 cv
467.442 486.085 467.2 486.263 466.921 486.375 cv
466.639 486.487 466.341 486.543 466.022 486.543 cv
465.896 486.543 li
465.743 486.514 li
465.574 486.496 465.4 486.455 465.224 486.388 cv
465.046 486.324 464.882 486.245 464.733 486.151 cv
464.49 486.001 464.294 485.81 464.145 485.577 cv
463.995 485.341 463.902 485.095 463.863 484.833 cv
463.863 484.777 li
463.863 484.693 li
463.836 484.637 li
463.836 484.581 li
463.836 484.152 463.976 483.777 464.257 483.459 cv
464.536 483.142 464.882 482.926 465.294 482.814 cv
465.182 482.777 465.07 482.744 464.957 482.716 cv
464.845 482.689 464.724 482.685 464.593 482.703 cv
464.439 482.703 li
464.284 482.73 li
464.132 482.757 li
463.976 482.814 li
463.321 483.039 462.757 483.501 462.28 484.203 cv
461.804 484.904 461.479 485.656 461.313 486.458 cv
461.275 486.626 461.248 486.805 461.229 486.991 cv
461.211 487.179 461.201 487.355 461.201 487.523 cv
461.219 488.251 461.415 488.884 461.79 489.417 cv
462.163 489.95 462.779 490.216 463.641 490.216 cv
465.079 490.216 466.248 489.819 467.144 489.023 cv
468.041 488.23 468.778 487.244 469.359 486.066 cv
470.678 486.656 li
470.578 486.837 li
cp
f
478.315 486.949 mo
478.269 487.033 478.228 487.123 478.19 487.216 cv
477.892 487.814 477.563 488.394 477.208 488.955 cv
476.853 489.513 476.423 490.021 475.919 490.468 cv
475.45 490.878 474.896 491.206 474.25 491.449 cv
473.606 491.691 472.863 491.813 472.022 491.813 cv
471.924 491.813 li
471.855 491.813 li
471.331 491.794 470.831 491.691 470.354 491.505 cv
469.878 491.318 469.489 491 469.19 490.552 cv
469.004 490.272 468.868 489.972 468.785 489.656 cv
468.7 489.337 468.659 489.009 468.659 488.673 cv
468.659 488.58 468.663 488.492 468.673 488.408 cv
468.681 488.324 468.695 488.234 468.715 488.141 cv
468.752 487.879 468.803 487.618 468.868 487.355 cv
468.935 487.094 469.004 486.841 469.078 486.599 cv
469.19 486.3 469.299 486.001 469.4 485.703 cv
469.504 485.404 469.602 485.095 469.695 484.777 cv
469.789 484.478 469.887 484.179 469.989 483.879 cv
470.092 483.582 470.2 483.283 470.312 482.982 cv
469.105 482.982 li
469.582 481.636 li
470.789 481.636 li
470.882 481.356 470.976 481.082 471.069 480.81 cv
471.162 480.541 471.267 480.263 471.378 479.983 cv
471.471 479.722 471.563 479.455 471.657 479.185 cv
471.75 478.914 471.843 478.638 471.939 478.358 cv
472.556 478.263 473.171 478.175 473.789 478.089 cv
474.405 478.007 475.022 477.918 475.639 477.824 cv
475.938 477.788 476.245 477.746 476.563 477.699 cv
476.881 477.652 477.19 477.611 477.489 477.572 cv
477.377 477.91 477.261 478.246 477.138 478.582 cv
477.017 478.918 476.9 479.254 476.788 479.591 cv
476.677 479.927 476.56 480.267 476.438 480.613 cv
476.316 480.959 476.2 481.3 476.088 481.636 cv
477.601 481.636 li
477.096 482.982 li
475.611 482.982 li
475.48 483.376 475.344 483.773 475.202 484.175 cv
475.064 484.576 474.928 484.982 474.797 485.394 cv
474.647 485.804 474.508 486.212 474.378 486.613 cv
474.246 487.015 474.105 487.412 473.956 487.805 cv
473.919 487.936 473.888 488.062 473.858 488.183 cv
473.831 488.304 473.817 488.413 473.817 488.504 cv
473.817 488.673 473.854 488.791 473.928 488.856 cv
474.004 488.921 474.105 488.955 474.235 488.955 cv
474.351 488.955 474.477 488.925 474.614 488.871 cv
474.756 488.814 474.9 488.739 475.051 488.645 cv
475.287 488.478 li
475.527 488.281 li
475.881 487.962 476.171 487.608 476.396 487.216 cv
476.62 486.824 476.825 486.421 477.013 486.01 cv
478.441 486.683 li
478.404 486.777 478.362 486.865 478.315 486.949 cv
cp
f
485.955 482.814 mo
485.788 482.685 485.544 482.61 485.227 482.59 cv
484.534 482.572 483.937 482.833 483.433 483.376 cv
482.927 483.917 482.544 484.515 482.283 485.169 cv
482.188 485.394 482.114 485.618 482.058 485.841 cv
482.002 486.066 481.956 486.273 481.918 486.458 cv
482.143 486.441 482.376 486.414 482.62 486.375 cv
482.862 486.337 483.104 486.282 483.348 486.207 cv
484.058 486.021 484.708 485.711 485.296 485.283 cv
485.886 484.851 486.188 484.253 486.206 483.488 cv
486.206 483.169 486.123 482.945 485.955 482.814 cv
cp
489.768 489.207 mo
489.188 489.972 488.384 490.597 487.357 491.085 cv
486.739 491.366 486.09 491.57 485.408 491.701 cv
484.727 491.832 484.029 491.898 483.32 491.898 cv
483.208 491.898 483.095 491.898 482.983 491.898 cv
482.871 491.898 482.77 491.888 482.677 491.87 cv
482.227 491.85 481.787 491.799 481.357 491.714 cv
480.927 491.63 480.508 491.523 480.097 491.393 cv
479.012 491.019 478.119 490.449 477.419 489.683 cv
476.718 488.917 476.368 488.009 476.368 486.962 cv
476.368 486.702 476.391 486.435 476.438 486.165 cv
476.483 485.894 476.555 485.618 476.646 485.337 cv
477.021 484.217 477.778 483.341 478.919 482.716 cv
480.057 482.09 481.273 481.693 482.563 481.525 cv
482.843 481.488 483.118 481.459 483.39 481.441 cv
483.66 481.422 483.927 481.413 484.189 481.413 cv
484.581 481.413 484.965 481.431 485.338 481.468 cv
485.711 481.507 486.058 481.572 486.376 481.665 cv
486.529 481.707 li
486.683 481.749 li
487.226 481.898 487.735 482.162 488.212 482.533 cv
488.688 482.908 488.937 483.413 488.956 484.048 cv
488.992 485.057 488.572 485.853 487.693 486.43 cv
486.814 487.009 485.853 487.429 484.806 487.693 cv
484.227 487.841 483.664 487.944 483.124 488 cv
482.58 488.056 482.114 488.076 481.723 488.056 cv
481.815 488.729 482.071 489.249 482.492 489.613 cv
482.913 489.978 483.47 490.16 484.161 490.16 cv
485.562 490.16 486.739 489.767 487.693 488.982 cv
488.646 488.197 489.394 487.207 489.937 486.01 cv
491.337 486.656 li
490.87 487.589 490.347 488.441 489.768 489.207 cv
cp
f
506.056 483.347 mo
506.056 483.459 506.056 483.562 506.056 483.656 cv
506.056 484.347 505.844 484.893 505.425 485.296 cv
505.004 485.698 504.541 485.898 504.037 485.898 cv
503.994 485.898 li
503.952 485.898 li
503.56 485.898 503.187 485.768 502.831 485.505 cv
502.476 485.244 502.222 484.824 502.073 484.245 cv
502.018 484.076 501.948 483.951 501.863 483.866 cv
501.779 483.781 501.682 483.75 501.569 483.767 cv
501.383 483.767 501.172 483.875 500.938 484.089 cv
500.704 484.304 500.457 484.599 500.196 484.972 cv
499.748 485.552 499.364 486.198 499.046 486.906 cv
498.729 487.618 498.447 488.337 498.204 489.066 cv
498.093 489.382 497.989 489.692 497.896 489.992 cv
497.803 490.291 497.701 490.589 497.589 490.888 cv
497.551 491 497.513 491.113 497.476 491.224 cv
497.438 491.336 497.401 491.449 497.364 491.562 cv
492.179 491.562 li
494.505 485.057 li
494.562 484.861 li
494.562 484.721 li
494.562 484.515 494.481 484.38 494.322 484.316 cv
494.163 484.25 493.981 484.226 493.776 484.245 cv
493.289 484.3 492.859 484.525 492.486 484.917 cv
492.111 485.31 491.804 485.73 491.562 486.178 cv
491.505 486.273 491.448 486.375 491.394 486.487 cv
491.337 486.599 491.289 486.702 491.252 486.794 cv
489.851 486.234 li
490.338 484.962 491.052 483.82 491.996 482.8 cv
492.939 481.783 494.121 481.236 495.542 481.16 cv
495.674 481.142 495.808 481.132 495.948 481.132 cv
496.088 481.132 496.233 481.142 496.383 481.16 cv
496.999 481.199 497.593 481.352 498.163 481.623 cv
498.732 481.894 499.187 482.3 499.522 482.841 cv
499.934 482.543 500.368 482.263 500.826 482.001 cv
501.285 481.741 501.756 481.535 502.242 481.384 cv
502.466 481.31 502.686 481.258 502.901 481.23 cv
503.115 481.202 503.325 481.188 503.531 481.188 cv
503.812 481.188 504.088 481.226 504.359 481.3 cv
504.63 481.375 504.887 481.488 505.129 481.636 cv
505.371 481.806 505.563 482.011 505.704 482.252 cv
505.844 482.497 505.942 482.75 505.999 483.011 cv
506.036 483.123 506.056 483.234 506.056 483.347 cv
cp
f
508.129 486.43 mo
508.24 486.581 508.32 486.744 508.366 486.921 cv
508.414 487.099 508.438 487.282 508.438 487.467 cv
508.438 487.655 508.409 487.833 508.353 488 cv
508.297 488.168 508.213 488.329 508.1 488.478 cv
507.913 488.758 507.661 488.978 507.345 489.135 cv
507.025 489.295 506.699 489.375 506.362 489.375 cv
506.293 489.375 li
506.222 489.375 li
506.152 489.361 li
506.083 489.347 li
506.213 489.533 506.382 489.697 506.588 489.837 cv
506.793 489.978 507.016 490.048 507.261 490.048 cv
508.025 490.048 508.637 489.841 509.096 489.431 cv
509.554 489.019 509.783 488.413 509.783 487.608 cv
509.801 487.029 509.811 486.455 509.811 485.884 cv
509.811 485.314 509.811 484.75 509.811 484.189 cv
508.129 486.43 li
cp
513.483 490.201 mo
512.38 491.015 511.165 491.487 509.839 491.617 cv
509.671 491.635 509.507 491.649 509.349 491.66 cv
509.188 491.667 509.035 491.673 508.886 491.673 cv
508.698 491.673 508.502 491.667 508.297 491.66 cv
508.091 491.649 507.887 491.626 507.681 491.589 cv
507.137 491.533 506.609 491.403 506.097 491.197 cv
505.581 490.99 505.138 490.693 504.765 490.3 cv
504.502 489.982 504.312 489.645 504.19 489.291 cv
504.068 488.937 504.008 488.57 504.008 488.197 cv
504.008 487.992 504.021 487.787 504.05 487.58 cv
504.078 487.375 504.12 487.169 504.176 486.962 cv
504.307 486.478 504.569 486.099 504.96 485.828 cv
505.353 485.558 505.783 485.431 506.25 485.45 cv
506.404 485.45 li
506.531 485.45 li
506.658 485.463 li
506.811 485.505 li
509.306 482.029 li
514.604 480.683 li
514.661 481.675 514.722 482.669 514.786 483.67 cv
514.852 484.669 514.922 485.665 514.996 486.656 cv
515.09 488.207 514.586 489.389 513.483 490.201 cv
cp
f
356.915 471.134 mo
355.261 471.996 353.273 472.425 350.956 472.425 cv
348.845 472.425 346.976 471.758 345.35 470.421 cv
343.726 469.085 342.912 467.286 342.912 465.024 cv
342.912 463.529 343.299 462.156 344.075 460.904 cv
344.851 459.652 345.846 458.625 347.063 457.82 cv
348.051 457.129 349.183 456.595 350.453 456.222 cv
351.724 455.848 353.04 455.662 354.406 455.662 cv
354.63 455.662 354.85 455.666 355.065 455.675 cv
355.279 455.685 355.499 455.698 355.724 455.718 cv
356.49 455.773 357.241 455.909 357.98 456.123 cv
358.718 456.339 359.377 456.708 359.956 457.232 cv
360.255 457.494 360.47 457.789 360.601 458.115 cv
360.732 458.441 360.798 458.773 360.798 459.109 cv
360.798 459.802 360.544 460.431 360.041 461.001 cv
359.536 461.572 358.882 461.867 358.078 461.884 cv
357.61 461.904 357.2 461.824 356.844 461.647 cv
356.49 461.468 356.153 461.25 355.835 460.988 cv
355.61 460.806 li
355.387 460.595 li
355.542 460.526 li
355.695 460.455 li
356.069 460.25 356.397 460.031 356.676 459.795 cv
356.957 459.563 357.182 459.221 357.348 458.773 cv
357.42 458.562 li
357.433 458.352 li
357.433 458.036 357.303 457.792 357.041 457.625 cv
356.779 457.456 356.462 457.371 356.088 457.371 cv
355.078 457.371 354.181 457.774 353.397 458.577 cv
352.61 459.38 351.947 460.267 351.407 461.24 cv
351.183 461.651 350.98 462.063 350.805 462.474 cv
350.627 462.884 350.472 463.259 350.341 463.594 cv
350.19 464.005 350.052 464.474 349.921 464.996 cv
349.79 465.521 349.714 466.042 349.696 466.566 cv
349.696 466.721 li
349.696 466.875 li
349.696 467.566 349.832 468.21 350.102 468.809 cv
350.373 469.408 350.874 469.836 351.602 470.099 cv
351.864 470.193 352.13 470.263 352.4 470.308 cv
352.672 470.356 352.948 470.378 353.229 470.378 cv
353.438 470.378 li
353.621 470.351 li
354.779 470.277 355.882 469.871 356.93 469.132 cv
357.975 468.393 358.751 467.539 359.255 466.566 cv
359.312 466.468 li
359.366 466.371 li
359.423 466.285 li
359.479 466.173 li
360.544 466.566 li
361.105 466.791 li
359.965 468.828 358.568 470.277 356.915 471.134 cv
cp
f
368.772 464.001 mo
368.577 463.75 368.329 463.623 368.03 463.623 cv
367.842 463.623 367.638 463.675 367.412 463.777 cv
367.189 463.878 366.966 464.025 366.74 464.211 cv
366.646 464.287 366.559 464.371 366.475 464.462 cv
366.39 464.558 366.3 464.651 366.207 464.744 cv
365.777 465.25 365.431 465.824 365.17 466.468 cv
364.908 467.115 364.722 467.771 364.61 468.445 cv
364.592 468.669 364.573 468.889 364.554 469.103 cv
364.535 469.318 364.526 469.529 364.526 469.734 cv
364.526 469.846 364.53 469.987 364.54 470.154 cv
364.549 470.322 364.573 470.492 364.61 470.66 cv
364.666 470.977 364.764 471.261 364.904 471.513 cv
365.044 471.766 365.264 471.892 365.563 471.892 cv
366.029 471.892 366.446 471.73 366.81 471.402 cv
367.175 471.076 367.469 470.707 367.692 470.294 cv
367.749 470.201 367.806 470.113 367.861 470.029 cv
367.918 469.945 367.964 469.857 368.002 469.761 cv
367.703 469.556 367.474 469.299 367.314 468.992 cv
367.156 468.683 367.077 468.351 367.077 467.997 cv
367.077 467.884 li
367.077 467.8 li
367.134 467.239 367.343 466.711 367.708 466.216 cv
368.071 465.72 368.535 465.398 369.096 465.25 cv
369.075 464.669 368.969 464.253 368.772 464.001 cv
cp
376.692 468.375 mo
376.543 468.683 376.374 468.996 376.187 469.314 cv
375.831 469.93 375.397 470.496 374.884 471.009 cv
374.369 471.524 373.767 471.781 373.075 471.781 cv
372.796 471.781 372.528 471.738 372.278 471.654 cv
372.024 471.57 371.786 471.462 371.562 471.332 cv
370.834 471.93 369.978 472.397 368.997 472.734 cv
368.016 473.07 367.011 473.267 365.984 473.322 cv
365.745 473.322 li
365.66 473.322 365.572 473.322 365.479 473.322 cv
364.507 473.322 363.572 473.177 362.676 472.888 cv
361.778 472.598 360.993 472.165 360.321 471.583 cv
359.777 471.099 359.386 470.58 359.144 470.029 cv
358.9 469.478 358.778 468.921 358.778 468.361 cv
358.778 467.482 359.039 466.642 359.563 465.837 cv
360.086 465.035 360.777 464.351 361.639 463.791 cv
362.385 463.304 363.227 462.921 364.16 462.642 cv
365.095 462.363 366.057 462.221 367.049 462.221 cv
367.198 462.221 367.343 462.226 367.483 462.236 cv
367.623 462.246 367.768 462.25 367.918 462.25 cv
368.722 462.324 369.507 462.497 370.272 462.769 cv
371.038 463.039 371.712 463.447 372.291 463.988 cv
372.796 464.435 373.178 464.946 373.44 465.514 cv
373.702 466.085 373.833 466.677 373.833 467.295 cv
373.833 467.519 373.815 467.744 373.776 467.969 cv
373.739 468.193 373.683 468.417 373.609 468.642 cv
373.87 468.603 374.1 468.533 374.296 468.431 cv
374.491 468.328 374.683 468.166 374.87 467.94 cv
374.981 467.828 375.094 467.683 375.206 467.505 cv
375.319 467.329 375.44 467.126 375.57 466.904 cv
377.085 467.576 li
376.972 467.8 376.841 468.067 376.692 468.375 cv
cp
f
382.412 471.177 mo
381.495 472.179 380.158 472.677 378.402 472.677 cv
378.31 472.677 378.21 472.673 378.107 472.664 cv
378.005 472.654 377.906 472.65 377.813 472.65 cv
377.347 472.594 376.89 472.476 376.44 472.298 cv
375.991 472.123 375.627 471.837 375.348 471.445 cv
375.159 471.184 375.021 470.892 374.925 470.576 cv
374.832 470.257 374.786 469.94 374.786 469.623 cv
374.801 469.412 li
374.814 469.23 li
374.851 468.95 374.897 468.677 374.954 468.417 cv
375.01 468.154 375.086 467.903 375.179 467.66 cv
375.794 465.884 376.406 464.104 377.015 462.32 cv
377.622 460.535 378.225 458.763 378.823 457.007 cv
379.289 457.007 379.752 457.007 380.211 457.007 cv
380.669 457.007 381.131 457.007 381.599 457.007 cv
382.046 457.007 382.499 457.007 382.958 457.007 cv
383.415 457.007 383.878 457.007 384.347 457.007 cv
383.674 458.951 383 460.894 382.327 462.838 cv
381.655 464.782 380.989 466.725 380.336 468.669 cv
380.262 468.837 380.205 468.992 380.168 469.132 cv
380.131 469.271 380.112 469.389 380.112 469.482 cv
380.112 469.594 380.158 469.683 380.252 469.748 cv
380.346 469.814 380.495 469.836 380.701 469.818 cv
380.851 469.818 381.036 469.757 381.262 469.636 cv
381.485 469.513 381.72 469.341 381.962 469.119 cv
382.3 468.781 382.574 468.426 382.79 468.053 cv
383.003 467.678 383.206 467.286 383.392 466.875 cv
384.794 467.546 li
384.12 468.968 383.327 470.179 382.412 471.177 cv
cp
f
390.315 471.177 mo
389.399 472.179 388.063 472.677 386.307 472.677 cv
386.214 472.677 386.115 472.673 386.014 472.664 cv
385.91 472.654 385.812 472.65 385.718 472.65 cv
385.251 472.594 384.794 472.476 384.347 472.298 cv
383.896 472.123 383.532 471.837 383.251 471.445 cv
383.064 471.184 382.925 470.892 382.832 470.576 cv
382.737 470.257 382.691 469.94 382.691 469.623 cv
382.706 469.412 li
382.72 469.23 li
382.756 468.95 382.804 468.677 382.859 468.417 cv
382.915 468.154 382.989 467.903 383.084 467.66 cv
383.7 465.884 384.313 464.104 384.921 462.32 cv
385.527 460.535 386.13 458.763 386.728 457.007 cv
387.195 457.007 387.658 457.007 388.116 457.007 cv
388.573 457.007 389.036 457.007 389.503 457.007 cv
389.952 457.007 390.405 457.007 390.862 457.007 cv
391.32 457.007 391.784 457.007 392.25 457.007 cv
391.578 458.951 390.904 460.894 390.232 462.838 cv
389.56 464.782 388.896 466.725 388.241 468.669 cv
388.168 468.837 388.111 468.992 388.074 469.132 cv
388.035 469.271 388.019 469.389 388.019 469.482 cv
388.019 469.594 388.063 469.683 388.157 469.748 cv
388.251 469.814 388.399 469.836 388.606 469.818 cv
388.756 469.818 388.941 469.757 389.168 469.636 cv
389.392 469.513 389.625 469.341 389.868 469.119 cv
390.204 468.781 390.479 468.426 390.693 468.053 cv
390.909 467.678 391.11 467.286 391.299 466.875 cv
392.699 467.546 li
392.025 468.968 391.232 470.179 390.315 471.177 cv
cp
f
400.212 463.679 mo
400.045 463.548 399.8 463.474 399.483 463.455 cv
398.791 463.437 398.193 463.698 397.688 464.24 cv
397.185 464.782 396.801 465.38 396.539 466.033 cv
396.445 466.257 396.371 466.482 396.315 466.707 cv
396.26 466.931 396.212 467.136 396.175 467.323 cv
396.398 467.304 396.632 467.277 396.876 467.239 cv
397.118 467.201 397.361 467.146 397.605 467.07 cv
398.315 466.884 398.965 466.576 399.553 466.146 cv
400.142 465.716 400.445 465.119 400.463 464.351 cv
400.463 464.035 400.381 463.808 400.212 463.679 cv
cp
404.023 470.07 mo
403.445 470.837 402.641 471.462 401.613 471.949 cv
400.996 472.228 400.349 472.434 399.665 472.566 cv
398.982 472.695 398.286 472.761 397.578 472.761 cv
397.465 472.761 397.352 472.761 397.239 472.761 cv
397.128 472.761 397.025 472.753 396.933 472.734 cv
396.482 472.714 396.044 472.664 395.614 472.58 cv
395.185 472.496 394.764 472.388 394.354 472.256 cv
393.269 471.884 392.377 471.314 391.676 470.546 cv
390.974 469.781 390.625 468.875 390.625 467.828 cv
390.625 467.566 390.647 467.3 390.693 467.029 cv
390.741 466.758 390.812 466.482 390.904 466.202 cv
391.279 465.081 392.036 464.208 393.176 463.581 cv
394.314 462.955 395.53 462.558 396.82 462.39 cv
397.101 462.351 397.375 462.324 397.646 462.306 cv
397.918 462.287 398.185 462.278 398.447 462.278 cv
398.839 462.278 399.222 462.296 399.595 462.333 cv
399.969 462.371 400.314 462.435 400.633 462.529 cv
400.786 462.572 li
400.939 462.614 li
401.482 462.763 401.992 463.024 402.469 463.398 cv
402.945 463.773 403.193 464.278 403.213 464.912 cv
403.25 465.921 402.829 466.716 401.95 467.295 cv
401.07 467.875 400.109 468.295 399.063 468.558 cv
398.481 468.707 397.922 468.809 397.381 468.866 cv
396.838 468.921 396.371 468.939 395.979 468.921 cv
396.072 469.594 396.331 470.113 396.749 470.478 cv
397.17 470.84 397.726 471.023 398.418 471.023 cv
399.819 471.023 400.996 470.63 401.95 469.846 cv
402.903 469.062 403.65 468.07 404.193 466.875 cv
405.595 467.519 li
405.127 468.454 404.604 469.303 404.023 470.07 cv
cp
f
418.28 467.703 mo
418.21 467.884 li
417.78 468.763 417.304 469.542 416.779 470.224 cv
416.256 470.907 415.509 471.482 414.538 471.949 cv
413.957 472.21 413.317 472.412 412.617 472.55 cv
411.917 472.693 411.202 472.761 410.473 472.761 cv
410.29 472.761 li
410.107 472.761 li
409.023 472.707 407.982 472.496 406.982 472.132 cv
405.983 471.766 405.164 471.184 404.528 470.378 cv
404.193 469.95 403.945 469.513 403.787 469.076 cv
403.627 468.636 403.549 468.193 403.549 467.744 cv
403.549 466.884 403.81 466.068 404.333 465.291 cv
404.856 464.515 405.528 463.894 406.352 463.427 cv
406.894 463.128 407.558 462.871 408.343 462.656 cv
409.127 462.441 409.931 462.316 410.753 462.278 cv
410.864 462.259 410.968 462.25 411.062 462.25 cv
411.154 462.25 411.248 462.25 411.342 462.25 cv
412.053 462.25 412.725 462.333 413.36 462.501 cv
413.994 462.67 414.546 462.958 415.015 463.371 cv
415.238 463.594 415.425 463.861 415.575 464.169 cv
415.725 464.478 415.817 464.8 415.855 465.136 cv
415.855 465.234 li
415.855 465.332 li
415.855 465.578 415.813 465.82 415.729 466.062 cv
415.645 466.305 415.519 466.519 415.35 466.707 cv
415.145 466.951 414.901 467.126 414.622 467.239 cv
414.341 467.351 414.043 467.409 413.725 467.409 cv
413.598 467.409 li
413.444 467.38 li
413.275 467.361 413.104 467.319 412.926 467.253 cv
412.747 467.187 412.584 467.108 412.435 467.015 cv
412.191 466.866 411.996 466.675 411.847 466.441 cv
411.696 466.207 411.604 465.958 411.564 465.697 cv
411.564 465.641 li
411.564 465.558 li
411.538 465.5 li
411.538 465.445 li
411.538 465.015 411.677 464.642 411.959 464.324 cv
412.238 464.005 412.584 463.791 412.995 463.679 cv
412.884 463.642 412.771 463.609 412.66 463.581 cv
412.547 463.552 412.425 463.548 412.295 463.566 cv
412.14 463.566 li
411.987 463.594 li
411.833 463.623 li
411.677 463.679 li
411.024 463.904 410.459 464.365 409.982 465.066 cv
409.506 465.767 409.184 466.519 409.015 467.323 cv
408.978 467.492 408.949 467.669 408.931 467.856 cv
408.912 468.042 408.903 468.22 408.903 468.388 cv
408.922 469.119 409.117 469.748 409.492 470.281 cv
409.865 470.813 410.48 471.08 411.342 471.08 cv
412.78 471.08 413.95 470.683 414.845 469.888 cv
415.742 469.095 416.479 468.107 417.062 466.931 cv
418.379 467.519 li
418.28 467.703 li
cp
f
426.018 467.814 mo
425.972 467.899 425.929 467.988 425.892 468.08 cv
425.592 468.677 425.265 469.257 424.909 469.818 cv
424.555 470.378 424.125 470.883 423.621 471.332 cv
423.152 471.744 422.598 472.07 421.952 472.314 cv
421.308 472.556 420.564 472.677 419.724 472.677 cv
419.627 472.677 li
419.557 472.677 li
419.033 472.66 418.532 472.556 418.056 472.369 cv
417.579 472.183 417.191 471.865 416.893 471.416 cv
416.706 471.134 416.57 470.837 416.486 470.519 cv
416.402 470.201 416.361 469.874 416.361 469.539 cv
416.361 469.445 416.364 469.355 416.374 469.271 cv
416.382 469.187 416.397 469.1 416.417 469.005 cv
416.454 468.743 416.504 468.482 416.57 468.22 cv
416.636 467.958 416.706 467.707 416.779 467.462 cv
416.893 467.164 417 466.866 417.103 466.566 cv
417.205 466.267 417.304 465.958 417.397 465.641 cv
417.49 465.342 417.588 465.042 417.692 464.744 cv
417.793 464.447 417.902 464.146 418.015 463.847 cv
416.808 463.847 li
417.284 462.501 li
418.49 462.501 li
418.585 462.221 418.678 461.945 418.771 461.675 cv
418.864 461.403 418.968 461.127 419.079 460.847 cv
419.173 460.586 419.267 460.32 419.359 460.048 cv
419.452 459.777 419.546 459.501 419.641 459.221 cv
420.257 459.128 420.874 459.039 421.49 458.955 cv
422.106 458.871 422.725 458.783 423.341 458.689 cv
423.639 458.652 423.947 458.611 424.266 458.562 cv
424.582 458.516 424.892 458.474 425.191 458.437 cv
425.078 458.773 424.961 459.109 424.841 459.446 cv
424.718 459.782 424.602 460.119 424.489 460.455 cv
424.378 460.791 424.262 461.133 424.14 461.478 cv
424.018 461.824 423.901 462.166 423.789 462.501 cv
425.303 462.501 li
424.797 463.847 li
423.313 463.847 li
423.182 464.24 423.045 464.636 422.906 465.038 cv
422.766 465.441 422.63 465.847 422.498 466.257 cv
422.349 466.669 422.21 467.076 422.08 467.478 cv
421.947 467.879 421.808 468.277 421.659 468.669 cv
421.62 468.799 421.588 468.925 421.561 469.048 cv
421.532 469.169 421.519 469.276 421.519 469.37 cv
421.519 469.539 421.556 469.656 421.63 469.72 cv
421.705 469.787 421.808 469.818 421.939 469.818 cv
422.052 469.818 422.178 469.791 422.316 469.734 cv
422.457 469.677 422.603 469.604 422.752 469.511 cv
422.988 469.341 li
423.229 469.146 li
423.582 468.828 423.874 468.473 424.097 468.08 cv
424.321 467.689 424.527 467.286 424.715 466.875 cv
426.143 467.546 li
426.105 467.642 426.064 467.73 426.018 467.814 cv
cp
f
432.17 460.861 mo
431.871 461.095 431.554 461.267 431.217 461.38 cv
431.021 461.423 li
430.853 461.463 li
430.703 461.483 430.549 461.501 430.391 461.52 cv
430.231 461.539 430.076 461.548 429.927 461.548 cv
429.516 461.548 429.104 461.497 428.694 461.396 cv
428.282 461.292 427.919 461.119 427.6 460.875 cv
427.357 460.69 427.166 460.469 427.025 460.217 cv
426.886 459.964 426.815 459.708 426.815 459.446 cv
426.815 459.298 426.843 459.147 426.899 458.998 cv
426.955 458.847 427.031 458.708 427.123 458.577 cv
427.386 458.24 427.728 457.988 428.146 457.82 cv
428.567 457.652 429.003 457.549 429.451 457.512 cv
429.605 457.512 li
429.759 457.512 li
429.966 457.512 430.17 457.526 430.377 457.554 cv
430.581 457.582 430.776 457.625 430.965 457.679 cv
431.132 457.736 li
431.272 457.792 li
431.665 457.96 432.024 458.195 432.353 458.493 cv
432.68 458.791 432.843 459.156 432.843 459.585 cv
432.829 459.767 li
432.786 459.978 li
432.675 460.333 432.469 460.628 432.17 460.861 cv
cp
434.007 467.802 mo
433.958 467.886 433.907 467.976 433.853 468.07 cv
433.554 468.669 433.227 469.251 432.871 469.814 cv
432.516 470.376 432.086 470.882 431.581 471.332 cv
431.114 471.744 430.567 472.061 429.941 472.285 cv
429.315 472.51 428.665 472.64 427.992 472.677 cv
427.867 472.677 li
427.741 472.677 li
427.461 472.677 427.182 472.66 426.899 472.623 cv
426.619 472.585 426.349 472.519 426.086 472.425 cv
425.377 472.183 424.872 471.802 424.574 471.287 cv
424.274 470.773 424.124 470.205 424.124 469.585 cv
424.124 469.38 424.138 469.169 424.166 468.955 cv
424.194 468.739 424.236 468.518 424.293 468.292 cv
424.331 468.181 424.363 468.072 424.391 467.97 cv
424.419 467.867 424.451 467.757 424.488 467.646 cv
424.788 466.784 425.082 465.927 425.373 465.074 cv
425.66 464.221 425.956 463.365 426.255 462.501 cv
426.704 462.501 427.155 462.501 427.614 462.501 cv
428.072 462.501 428.534 462.501 429.003 462.501 cv
429.47 462.501 429.932 462.501 430.391 462.501 cv
430.847 462.501 431.3 462.501 431.749 462.501 cv
431.638 462.839 431.521 463.181 431.398 463.529 cv
431.277 463.875 431.16 464.216 431.05 464.554 cv
430.806 465.23 430.567 465.909 430.334 466.593 cv
430.101 467.279 429.872 467.966 429.646 468.662 cv
429.591 468.791 429.545 468.927 429.508 469.068 cv
429.47 469.21 429.451 469.335 429.451 469.448 cv
429.451 469.562 429.493 469.654 429.577 469.729 cv
429.661 469.804 429.806 469.833 430.011 469.814 cv
430.16 469.814 430.349 469.751 430.572 469.63 cv
430.796 469.509 431.03 469.335 431.272 469.11 cv
431.61 468.774 431.885 468.417 432.101 468.042 cv
432.315 467.667 432.516 467.273 432.703 466.861 cv
432.941 466.973 li
433.179 467.086 li
433.328 467.162 433.481 467.23 433.642 467.296 cv
433.801 467.363 433.965 467.443 434.133 467.535 cv
434.094 467.628 434.053 467.718 434.007 467.802 cv
cp
f
442.191 464.001 mo
441.996 463.75 441.747 463.623 441.449 463.623 cv
441.262 463.623 441.057 463.675 440.832 463.777 cv
440.608 463.878 440.384 464.025 440.159 464.211 cv
440.066 464.287 439.977 464.371 439.894 464.462 cv
439.809 464.558 439.72 464.651 439.627 464.744 cv
439.196 465.25 438.851 465.824 438.59 466.468 cv
438.328 467.115 438.141 467.771 438.029 468.445 cv
438.011 468.669 437.991 468.889 437.973 469.103 cv
437.955 469.318 437.944 469.529 437.944 469.734 cv
437.944 469.846 437.95 469.987 437.959 470.154 cv
437.969 470.322 437.991 470.492 438.029 470.66 cv
438.085 470.977 438.183 471.261 438.323 471.513 cv
438.464 471.766 438.683 471.892 438.982 471.892 cv
439.448 471.892 439.865 471.73 440.229 471.402 cv
440.594 471.076 440.889 470.707 441.113 470.294 cv
441.168 470.201 441.224 470.113 441.28 470.029 cv
441.336 469.945 441.383 469.857 441.421 469.761 cv
441.122 469.556 440.893 469.299 440.733 468.992 cv
440.576 468.683 440.496 468.351 440.496 467.997 cv
440.496 467.884 li
440.496 467.8 li
440.553 467.239 440.762 466.711 441.127 466.216 cv
441.491 465.72 441.954 465.398 442.514 465.25 cv
442.495 464.669 442.388 464.253 442.191 464.001 cv
cp
450.111 468.375 mo
449.962 468.683 449.793 468.996 449.606 469.314 cv
449.25 469.93 448.817 470.496 448.303 471.009 cv
447.789 471.524 447.186 471.781 446.495 471.781 cv
446.216 471.781 445.948 471.738 445.695 471.654 cv
445.444 471.57 445.205 471.462 444.981 471.332 cv
444.253 471.93 443.397 472.397 442.416 472.734 cv
441.435 473.07 440.43 473.267 439.402 473.322 cv
439.165 473.322 li
439.08 473.322 438.991 473.322 438.898 473.322 cv
437.926 473.322 436.991 473.177 436.095 472.888 cv
435.198 472.598 434.412 472.165 433.74 471.583 cv
433.197 471.099 432.806 470.58 432.563 470.029 cv
432.319 469.478 432.198 468.921 432.198 468.361 cv
432.198 467.482 432.459 466.642 432.983 465.837 cv
433.506 465.035 434.197 464.351 435.056 463.791 cv
435.805 463.304 436.645 462.921 437.579 462.642 cv
438.514 462.363 439.477 462.221 440.468 462.221 cv
440.617 462.221 440.762 462.226 440.903 462.236 cv
441.043 462.246 441.187 462.25 441.336 462.25 cv
442.141 462.324 442.924 462.497 443.692 462.769 cv
444.458 463.039 445.132 463.447 445.71 463.988 cv
446.216 464.435 446.597 464.946 446.859 465.514 cv
447.119 466.085 447.252 466.677 447.252 467.295 cv
447.252 467.519 447.234 467.744 447.196 467.969 cv
447.158 468.193 447.103 468.417 447.026 468.642 cv
447.289 468.603 447.519 468.533 447.714 468.431 cv
447.911 468.328 448.103 468.166 448.289 467.94 cv
448.4 467.828 448.513 467.683 448.626 467.505 cv
448.739 467.329 448.859 467.126 448.989 466.904 cv
450.504 467.576 li
450.392 467.8 450.261 468.067 450.111 468.375 cv
cp
f
463.218 471.177 mo
462.235 472.179 460.886 472.677 459.167 472.677 cv
459.054 472.677 458.942 472.673 458.83 472.664 cv
458.718 472.654 458.606 472.65 458.494 472.65 cv
458.026 472.594 457.579 472.481 457.147 472.314 cv
456.719 472.145 456.363 471.874 456.083 471.5 cv
455.896 471.24 455.76 470.963 455.678 470.673 cv
455.593 470.383 455.55 470.089 455.55 469.791 cv
455.55 469.642 455.56 469.492 455.578 469.341 cv
455.597 469.191 455.615 469.052 455.634 468.921 cv
455.69 468.623 455.771 468.324 455.873 468.025 cv
455.975 467.725 456.074 467.445 456.167 467.183 cv
456.185 467.126 456.223 467.035 456.28 466.904 cv
456.335 466.772 456.401 466.623 456.476 466.455 cv
456.495 466.361 456.517 466.271 456.545 466.188 cv
456.573 466.103 456.606 466.015 456.645 465.921 cv
456.681 465.773 456.713 465.626 456.742 465.486 cv
456.77 465.347 456.784 465.22 456.784 465.108 cv
456.784 464.96 456.75 464.833 456.686 464.73 cv
456.62 464.627 456.513 464.576 456.363 464.576 cv
456.176 464.576 455.962 464.665 455.718 464.841 cv
455.476 465.021 455.195 465.324 454.878 465.753 cv
454.429 466.39 454.045 467.076 453.729 467.814 cv
453.41 468.553 453.111 469.303 452.831 470.07 cv
452.719 470.425 452.606 470.775 452.495 471.121 cv
452.382 471.467 452.271 471.808 452.158 472.145 cv
452.103 472.27 li
452.045 472.425 li
446.832 472.425 li
447.393 470.781 447.954 469.142 448.514 467.505 cv
449.075 465.872 449.644 464.23 450.224 462.585 cv
455.438 462.585 li
455.382 462.754 li
455.326 462.921 li
455.242 463.119 li
455.185 463.287 li
455.615 463.044 456.098 462.834 456.629 462.656 cv
457.162 462.478 457.709 462.363 458.269 462.306 cv
458.363 462.287 458.456 462.278 458.55 462.278 cv
458.644 462.278 458.736 462.278 458.83 462.278 cv
459.372 462.278 459.89 462.365 460.386 462.544 cv
460.881 462.721 461.316 463.015 461.69 463.427 cv
461.932 463.689 462.11 463.978 462.223 464.296 cv
462.334 464.614 462.391 464.939 462.391 465.277 cv
462.391 465.351 462.385 465.435 462.377 465.528 cv
462.366 465.623 462.353 465.707 462.334 465.781 cv
462.315 465.875 462.298 465.962 462.278 466.046 cv
462.26 466.132 462.231 466.22 462.194 466.315 cv
462.138 466.501 462.071 466.692 461.998 466.889 cv
461.924 467.085 461.857 467.286 461.802 467.492 cv
461.727 467.678 461.652 467.871 461.578 468.067 cv
461.503 468.263 461.436 468.462 461.381 468.669 cv
461.325 468.809 li
461.269 469.005 li
461.213 469.132 li
461.186 469.286 li
461.144 469.426 li
461.13 469.566 li
461.13 469.66 461.157 469.74 461.213 469.804 cv
461.269 469.871 461.362 469.903 461.494 469.903 cv
461.605 469.903 461.713 469.884 461.815 469.846 cv
461.918 469.808 462.025 469.761 462.138 469.707 cv
462.362 469.556 462.591 469.365 462.825 469.132 cv
463.058 468.898 463.269 468.66 463.455 468.417 cv
463.604 468.231 463.736 468.042 463.849 467.856 cv
463.959 467.669 464.044 467.501 464.101 467.351 cv
464.157 467.239 li
464.213 467.1 li
464.241 466.988 li
464.298 466.875 li
465.699 467.546 li
465.025 468.968 464.199 470.179 463.218 471.177 cv
cp
f
481.215 464.017 mo
481.019 463.764 480.771 463.638 480.472 463.638 cv
480.284 463.638 480.08 463.689 479.854 463.792 cv
479.631 463.894 479.407 464.039 479.182 464.226 cv
479.089 464.3 479.001 464.384 478.916 464.479 cv
478.831 464.572 478.741 464.665 478.648 464.758 cv
478.22 465.263 477.874 465.837 477.612 466.482 cv
477.35 467.128 477.164 467.787 477.053 468.46 cv
477.033 468.684 477.014 468.904 476.996 469.119 cv
476.977 469.333 476.969 469.543 476.969 469.75 cv
476.969 469.861 476.973 470.001 476.981 470.169 cv
476.99 470.337 477.014 470.505 477.053 470.674 cv
477.107 470.992 477.206 471.277 477.347 471.529 cv
477.486 471.781 477.706 471.906 478.004 471.906 cv
478.471 471.906 478.89 471.744 479.251 471.417 cv
479.617 471.09 479.911 470.721 480.136 470.31 cv
480.192 470.216 480.248 470.127 480.304 470.043 cv
480.359 469.959 480.406 469.872 480.444 469.777 cv
480.145 469.572 479.915 469.316 479.757 469.005 cv
479.598 468.699 479.519 468.366 479.519 468.011 cv
479.519 467.899 li
479.519 467.814 li
479.575 467.253 479.784 466.725 480.149 466.23 cv
480.514 465.736 480.977 465.414 481.537 465.263 cv
481.518 464.685 481.411 464.268 481.215 464.017 cv
cp
489.135 468.388 mo
488.984 468.699 488.816 469.011 488.628 469.33 cv
488.273 469.945 487.841 470.51 487.326 471.024 cv
486.812 471.539 486.209 471.794 485.517 471.794 cv
485.237 471.794 484.971 471.753 484.72 471.669 cv
484.466 471.584 484.228 471.478 484.004 471.347 cv
483.275 471.945 482.419 472.412 481.438 472.748 cv
480.458 473.084 479.453 473.281 478.426 473.335 cv
478.187 473.335 li
478.104 473.335 478.016 473.335 477.921 473.335 cv
476.949 473.335 476.015 473.193 475.117 472.904 cv
474.22 472.613 473.435 472.179 472.762 471.599 cv
472.22 471.113 471.828 470.595 471.585 470.043 cv
471.342 469.492 471.221 468.937 471.221 468.375 cv
471.221 467.497 471.482 466.657 472.005 465.852 cv
472.53 465.049 473.219 464.366 474.08 463.806 cv
474.826 463.32 475.669 462.937 476.603 462.656 cv
477.537 462.376 478.499 462.236 479.491 462.236 cv
479.641 462.236 479.784 462.241 479.926 462.25 cv
480.066 462.259 480.21 462.264 480.359 462.264 cv
481.164 462.339 481.948 462.511 482.715 462.783 cv
483.481 463.052 484.153 463.46 484.733 464.003 cv
485.237 464.451 485.621 464.96 485.882 465.529 cv
486.144 466.101 486.274 466.692 486.274 467.309 cv
486.274 467.535 486.256 467.757 486.218 467.983 cv
486.181 468.207 486.124 468.431 486.05 468.656 cv
486.313 468.619 486.541 468.548 486.737 468.447 cv
486.934 468.343 487.124 468.179 487.313 467.955 cv
487.424 467.842 487.536 467.697 487.648 467.521 cv
487.761 467.343 487.883 467.142 488.013 466.917 cv
489.526 467.589 li
489.414 467.814 489.284 468.082 489.135 468.388 cv
cp
f
500.81 458.003 mo
500.969 458.3 501.067 458.611 501.105 458.927 cv
501.105 459.054 li
501.105 459.181 li
501.105 459.667 500.955 460.11 500.656 460.511 cv
500.356 460.914 499.909 461.17 499.311 461.283 cv
499.199 461.296 li
499.086 461.31 li
498.974 461.31 li
498.861 461.31 li
498.208 461.31 497.677 461.096 497.265 460.666 cv
496.854 460.236 496.647 459.759 496.647 459.236 cv
496.647 459.138 li
496.647 459.04 li
496.686 458.759 496.792 458.49 496.971 458.227 cv
497.147 457.965 497.414 457.751 497.77 457.583 cv
497.698 457.583 li
497.601 457.583 li
497.021 457.583 496.53 457.859 496.128 458.41 cv
495.727 458.96 495.396 459.573 495.134 460.246 cv
494.966 460.675 494.814 461.096 494.685 461.507 cv
494.554 461.919 494.45 462.246 494.377 462.488 cv
496.957 462.488 li
496.48 463.862 li
493.873 463.862 li
488.714 478.86 li
483.695 478.86 li
488.826 463.862 li
487.172 463.862 li
487.677 462.488 li
489.331 462.488 li
489.387 462.302 489.442 462.119 489.498 461.941 cv
489.555 461.764 489.611 461.59 489.668 461.423 cv
489.947 460.601 490.266 459.839 490.619 459.138 cv
490.975 458.437 491.554 457.824 492.358 457.302 cv
492.863 456.984 493.483 456.722 494.223 456.517 cv
494.962 456.312 495.713 456.2 496.48 456.181 cv
496.593 456.181 li
496.704 456.181 li
497.357 456.181 497.994 456.259 498.611 456.418 cv
499.228 456.578 499.749 456.843 500.181 457.216 cv
500.441 457.442 500.652 457.705 500.81 458.003 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Diana) ()
%%Title: (Blondie.eps)
%%CreationDate: 8/13/2010 3:02 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H!:qV[l8X4^9>`K&8+fF4]Z\-.\-lC<"ti-$m@k],a\_,a8O'Slt?:JWh,C!i2ul:pYP@S)j5<CX&c?JX]j8'qf\fceN<3k
%:+Q9mYEtL%-*(Q<at3dgF7$0c[i]g#[>3dZb#[GIda0GtSn1i9],ZKiND"$bf%!4$2qf5C>OCCRg@+_?_t?q#B<tZcei]d9R\fcG
%DR]YL;Pi,aS^TIDNdo^FFPDfSi1`4]WNsJjh*\pOooQ>N%e//Ahs%P[=3'\k]"WU*F$[POq%nJ#?hW6L&]%,81.8=S.p692$$7.[
%+()EO42]I=3U66`T9mq^g/0WhIf$E"5>Z"B%in=8A#\$CBjPpP!_k+\73>%C-$4.Ao\pKrL4#6fT(oP6+lDW/3>!@62ZBW!-9pIq
%;fYO&N3fup_\eCj:fb^0l"A%A?r%2]1J8-%E-TaD\El+DD5M'Hr3?j5HB)!K6VC.FM(^)7)+IHad!&H'eLFe3Vn>83_U2-"$kZ[W
%CG&5)UA^k9rmuJ\EP$MO*Z3<qK@,/2^PKgWka*mYdoh,dK3).1p>C(s1GTZ(G!_nNZi4sV)kZ/N)Vlb(T#D]L2(]<,K@BOMGe2eG
%!g2&,JJJ4Yr9@b#q6N6*%.`D`h)ji8@?=Q-RW.2?@EGrp\*SCS>I)BY1.*hTPR--5WZKmX%(5+=cl[Rla3c$j*c^P)60GW(>E8g8
%LYII,EQZ:i\sGWDR<"C7L%3@%9GeV+g:__D[W>Q!QM+ilj_+I&N.\I;MkaUb6Pp5gCRh%3!1jNh7Bb8^2:kJ2&O.OMrOZ&)3FWl4
%kb%2#Y>Y-7LA4uT`b/Qnn#hRU>o18eY5I!enE"\Y;J8P@;tu8_8thYNNCM];(ns_AU.n2Yq!p+,ZS4d'I)95IX&dWL>/d>g.Xn?t
%dAG=,YDn97I!MK<#*"@B,X;aY!g/Ej^Z*]:G8Hd.2`/Fbn/'>'YB[MH)^^9RBS/n80@)dNLKod`i@hoR;YZ0Q"Bj/1-AB2sGC72?
%bR:0Q:'C\U_pn/lD&NkRMlFY1$`4)oJh$\`94dfP!<HQ#POTOcQrJ&=q1iRL,Q=Df+f*=eIPZYp#;j=<@nI,DjC6=FJ+3s]'L'<>
%"$B?;0:H=0paa8sFqNdB";irW"U70QUmQ6*U>R*;"F2_>AG.bZ#$sQYOeqN6CsjU.LGkN-bbLOJ?S4.$T.rk675NnFbYdjR(ZR1&
%@"NKGbiQ)T$2S0@iUiM.A#>+YNe&"4&Z1A<,c7\O?f2UQbK,8t#!OA-4?iigc/S8iHg*eEQ[]3a&QI_*TtMR>\nLRt@HCJbjVk]m
%QJPTd@Uu<U+IjLr5g"q2H-/jdjJULfELfu00ZE8:b>XYDi5Qn[,>6'tWGPl;&+;tfg?,$faA;'4r:<&HT"`B4]%m&A<;J6I[$L1F
%]DN$<q&T[\k^iOG7IjCR0)mC9q4>=D5J"L.P>g_Xr2\H2HhoApXQ6#$o:R9+$@V#_r(Z$&8&qZVI\UKY;,E7rX!+[d`2afEpBKK.
%5Rf`EHQR`sr@VCFjk3th=$4&Z,LAk;5h7f?_@%\Ii'UEF:E&8l2C>=Vrm#R<Rc3m?^'hY;*[)Sa7umoo"fUM$!:tn$!C=&b%N"4m
%RZ?WP1eu)=PeX"2]bimgRq)j1FBseZc+rWRk`"O!gh1*,kVX%F'6$[]-Zmspp9o7o707k\`7*X8:cEsUKjH4j$hufAp#;qgbXVsl
%M0X)l4c\QEf%Gmj#WIHC`nti"+M^d>[P?S#fsst4<q-TqVZ8]7H&GP/a=GE6MlD)p;]>_lB5!]u_)C!qM`FD(k`q*5K]W$5BbCYM
%7QD7XM@c6hR4N66=LV/scD)3UP^T1Dd]BO-E1I?5i&Sut.<6*[(Y<c^G6@cE-F6f8<E:igA*'5\N9RS.\Sb8lVsf$/U3N9":6o`P
%2MQ4b!&Nf*[ZH&P5r!)HVt9eq\i+/PKhtF+4C?EiBaW>3B/31]>n]S*N.6KU?fCVCFAetn]IaebY;W\T2N(G%^oc&B.UB3"eT[hD
%)7j]DCJ6/DR([X:k;.9l3joDu3eKKQ17KrKdLCa$Sa&nO+!]Q?5+A'7PefK%0(A06ELr_g\QhU\ltU']f)Qi[R)!1bAgY!"\NVa4
%IPUb!:7m,Z_%n_#F,n3C^fMHm\K]sgkA++80$hl'mJ&In[@]4^OnWRi0L#T(_4&0\QYTH!$*NO=\<`Q)&bDNVR(rTi3_<MpR%M7M
%j/?G40^+3aZEhW'Dc;9+4?eJ^(ZTL$?H*5/p&'4*cEO`PiMF`*U05E>*\jEh`OD?T)D$R;*1+\]-tVj%IsqmiA+nJ.Ha@4Z'k(@f
%>])MAOabQ`Agm1_MSN733@ng=EEj1&[-qB2_qtoTO<DC@fE=MI6:n*T$D1sB11Qu8mJLe^D&flrN!_HI^;8c9BNQBhD('OqN4?fL
%.]A8EH9/%<N@RhkNN@Ss@-n$(8JMHrHYdg16K*qQQ:rtoGeV<b'ls,_5^:-p'd1tm@CG/Jo'>L;#rN@'9c3V1_0RsAkj`k*)q*fU
%4U]0HTJuF*D%TjqZ8K55FAM!,/7M_6\A<@kO5(CQqr1mU1@s!T0$i:+N#a4Id8YWPY9NsU\kBfR1RXnlUSj(5U[OLMna.OpE/%RV
%+88q$A<';<,6W`1LL,hJ)lC],+6"5f&%1tF7odUZ8'W]V`Tb?64Hk/[TYMDF,V73h5jHVHG90&.?c>-%5SNI:cmK=:Lo#`5FCl50
%b/oRJn-%?/&Z9:V"YF_"X=+(2DbE%(Sp\U>:BcV:$,dTeik.q.-BJpqOZu;]4%oXc>2`55$[b!W[1P4^Y:/Tsm\_Q"XEC.1K<YD=
%7Z:Aa*$[h+L6tKYEc_?qk]iA-O_ZfB4j1u.1GS<\jR?Nt_W"Eo@sf4XMg>TCQio,s0^XcfY)Zjq^^cR,.q[Q&gbUSdIkf+(B8Y;.
%BN&BEM.u@la0[ip(PMf;aOQ]U@ZkF]n"=TO;94u^!u9bu)dM=>60R39gW\m1Pjpld0g3c#aTP:B'g]u?O#+*">8ZfQNY<4?g[SCC
%;2"l^n9LD)@?njAKirt8T,f$!+bXYgCj&:AiG*P<(j-_)*>bA_e1]lD+O(-i7Y3+n!Y`Q88rLLu=;nrj[.@-Rf3lk3n%Keu/uN*9
%Xd'^C+PM&VJ!Y0<"Q76k,Fq_P0Tp^B!j@c?8MCZ)VLStBL^_WS1V/tQ5*95+;B'+>PKk1TV<u,N)uU-,9EDpG_o*XSP:ne?$uH2k
%$q?IZH+&WoJ*"18BPhc'UfRk:j:VfbnL8VjVd-qqZf[W5.ocbuhdUDc^5H\:/aFd)At249gO@!2rf#6;WJY[B/U#>F3/SG;&??1>
%<b<83]sunRV9G?&68Z[$ALW^BA&>=U_es;We##)_:09nXiikKu-.S<THSMQ:NB[>64=_*5MAoA<Y:10-1!:1T^7.j.Na;Y-/=ZKY
%F/=3&Hc@L/A=df+LfY5r]`jZX!S?@Z%Xd054MTO\\NDN\$O+AgH]ID;W?\R>UU6Y(8//hn!ko<nrkRkcCc91kWJ^oZfaG*ElG?j!
%D6Mr!*4E?c4M0Alr"XAWPjdlu"$#GXNcY5f7m/G9RJ(B_A7H>e$q2EIK%4iB@9E)u(g1%ejS??iK%tLc2DZV*g,gZp,*_2F9YiQJ
%KNA18iR^@<JFcN$LTXD:VJnP6(7Spt/gkXsZ"a3nX:@Y>buD[S)pcK9=_$"@Vuh^BT08R677_N+!L%hhL+uJi5a(7d^`>Zl@ihdr
%UZP[BLaohoj1ruO)G]@KEIKUI;X[@2P:_a<s5G#jQ1k?KVPoq0a9rr#Jr^)(78&kX/FO4Pb)B4/D\6<G1O9+A7[7Rm1F&m@GD`^Y
%joZ8.Qm=JpC$Z6t*-*q!G1DuA*b9sPqo[B$/F`dY.Nh@G31!V<_*2=R@JLqUE%,j_41#jZa<bdt'7:WCb+Yb*s1q#"X[jpo\oBn)
%)c!B*OdC#b=,Bk+!j\nf!/81`.OX+$;I2/D7"G]iY)F(-1Bga:Hc*!YL;J3iXd*&)*"P-n/*\*q6k`1eaO7++.TVg;rFrpA#Rnl5
%[(/R@M=R$4qPuM<1!gn3C86GUKZn4P).c6,+QF[M%k`C0Xo0`MVRXc1V8]B:KPe4aUm`R[1J:6g-s;0J>6$h)T3+<`6U>NGj/($C
%Yu'G;o]V[J-t&T**3aiQMtJ?I[Xd7W4Ao[nFGd2l`=aPtXSE8c2pn(`=3R>?8O1pkqTloYikuQg.q'bt-$GV-Y=tZA*A/Qldt@QL
%Y'o'PE8/=k@"C2W4!jm=L*rT!#^c0/S=.4bo3Xr/F<^N7j'@iJ<H=0?j=#e&QC7%un*BgV*,8j^/!d<;=YhPib?k\X`t`;@JtDFk
%<Z@(YA^%`u!.6%6I?+APj.$h<ds01;UpMf5Pg3@))8[]pASMloe-W"6?BG7G655tC,U;[eA`^6kl4h?]MPMG_F=Q$QHjYJk.?\pl
%(Xe^(oSHpFW$7'jj:/r&6m#Np8=<IY0.,o.WZmhKm<k7B:+QLG(kHQ/H+$kqeoA)nXB!rKQ:hhf,F=!>!(T%SkpBh1qUni\+99;'
%;)+!K!#M]a.;MiG/>I`iAWGLS"^FP:m+Z",'+Kj."Ym(*X:c'GGh+SH_BGOkppNR(Qld?fWaV2Cc!m8[\Y?l0P(D(E*6HA*CYj<(
%Q`No[<&MT&_GP-4f$(jLI]:>53V]pEXY5,Rd%r<%^.[`(k2.DiR$m\_,DYm@NPOaB@"Iu3j''QK,X5b),"q[0*pn&D*04u<?jY`q
%-Neal=-<aSJsT$mQqPXLW!XLR0ZDo\OHCRbF7]5FiC6d<!Tk3mBF@-MYYB^\Y';A1I)=l4iefV[\BUR4kF?[_6BB\U=mSuMlU&l#
%gA+(CoS)0_b&'hL>r-SpXcd<P/XFa=0oJ@(QE@jA1Mj(Xs)oM3ct+bE<[BC3KV`JuZY\pUEfin)!b8qs3&AbL1WPm^T'*\QX#!2u
%G^OL^PH)`nRgFD!Bj_qO7C-JmcGR'[SI9MfX`b]%VDc`^N.BoQ[qM:C@A\s2gSs-sTl_*`&p;#f@2)?j02bkK*lLf>?Jk=2@.*Sm
%HAr/=.DWnF:M64Q9q060Eig^i``emUcWE+4+2#A5Zt#IV<Z&TmZiXn\Lk-@Q!E#_WTn!:3o9'X5Qo2?*1X<3\m$hG;S7;c2$]??+
%)#kJECFX+B&IR]oDI,50N9_BrSk.quQ\?u9j[4."ZG4_m`Grbu\Hf[;G\o),CTMdJ24\'rg;Y`B]8W5c19'_%YKePFT>>Z<1'(K7
%3uLsP[OSV^,l6O;)7NJIWH3WRJbZoj>K0&XlsR)R.uQ<:Y`S'Taj&OJ^8%dF/nUhuY:8^a<_l3Ee+#E0OATXsj]Yn'qKH%"[tHnN
%f<ttNc3XHT7`QG!Qb"rT4L=YUQC7Hu'4,19cN;9'=`@a3eF;Aj[Rjr=g5otm'4FE[AG""$89di\^X$B(cq/204%ongXX4j(/hTc0
%=Z-i-,eFCO;`3rOhJIhDKL6<O.5=Z5S[Yi_'Mc2dhJ9u!'d9\MdO(ApMP`9''p];l&1nQMEM2OqQ?uG)@lCK$B=$umHXJ[jS_,qq
%P\B(683ESo4.6!'A(MpKO"$#*:)YM"`1tn_prc*G8B*NW_QqQ7ij(T0`=OuE\cnPRB[bVCWen?TVE<3PLVFFWc'7s=+m^DS41:L^
%j$_TKUJ#ke+a"(1G1QS#SotV+A*bk[%3_-dSg[i1&gl87B#C6?oDV(E<Y<LjmXP7jD$ZQ;aI3hjVV/Hd]K<qf_3rPP&1S?[O+[38
%.%FUbP&QgaMR@\GhX%)d>#kS4dnY#r`gM&9*jH+o-62U9pI+01\/Isr_=UacL#0/2(LTJn/eh/klInW<Z^B:cONV)Hhki:qro+>K
%LA>fnY""VE5dD*FlM4$DR&r6O2b_dpfRtN$=^cc.EC<QhM((Kg^p@^q*\dtCN?6Q``khll2jkQ0,#V[%fPSj2Mdj(V'rde8>a"eP
%`:.u<2M^nD/FAa,i8hTW$ZB0dN5%1)P?M+KABuOgV_`8:[jf=B&an[R]b>D@CrJMss(f,5$mWXAFO#o#`>;6(F$ZZ[^[HEUV44`G
%/1E",@pbPPAhi]JCIYHR$dH*GY0:WuU\'di.*'hY(6Kor(GB]&rk>U0>g1Is\h9\l!r$,j0N._f<V.8L\Zk),,$>'3R<I<]<+`k1
%DP+,pDZ(6@REa*t-IQ_n'c3*mL!4#(-tt3#MtnPDR[cWp\jj><H6HV@=IBjp#W[.)HAr#Vb>adq/aGhZ'e/E70IN,Tk'e,OLs?P.
%Vh>/hBB!n,#%VmKUbGRZB@V#LEZ2BagRW,##<<ZKb'i>_..9aj`7uI^#$0;\@jeBTcPH[C%I_De7W^E^_K[/4nF9UMkMGAOOYMud
%Dr2K<++e$#Q+qEJQRq\7!q<1H\j2)djsm:f\^<sYU70r3ApuqPfX(F$2reXHb^DChA%k3@aZ]RsAl3gu2&GlE'?h`SVnLDcj,)0)
%\!Y@r"Kd3V-U_PbSr:j,Tgq6RhnKk]-!Y=XKt!n;NDq`pPXRRGkk94[H2'%KU^HX0DMC&B!uAD#Mt27H\gYGc/<rA\CokYNED,^+
%Rcj7C\5":kk&^D.4^X0(EG\e%gt2!5=*YP9TlMo+01,&.'`"f5K`eS(FuI.V>WmYu`]0HH^JB\5(4-eO3A?NS!qh\]Z2oEs]jV_>
%]L%HZeAf_FX&@5uMBsssb&W]3JpX]H<o.>TFrHjqBA[Lpc#rVM,"ca_)Z)DAn92KhN18@eO4F45*]/COe]Ws=pBLS6s4$t8Ic92X
%gS:gmCN=3>5&pA1:D\,!\68g=^RiVe_;S_pMLO>%oWKlkH7/Z,Ik=+0rM+Q#@*i^ebL2<DDsc+h\[5mBUn@@a3hpl/fst@ZdoE0t
%*4/B0.p^G-l2:bRMd0V)TC`@)Ba8[ehYY^gp+J3B-YJm]j3l]Ei,Xt*pU\UUF&:j<P.l-%5NnF\+Y2qC4h"7sc-][ndV\`=LIn]?
%Ff\(n\O`(a5;/&nh9PL6kqIH2q7IhlU\:ATU*j=YY(gScK7:S)oP>G5T2NlD7WQa<Arrg.d/`h!5I^6!ZeOl;%[r_sSQ8Vf"huDe
%9t>Ej/o!,lMakqjPRKHq`BRiP+Sqn_4/PYQ'r@;`?X2Tq5,J4ajs<ctAL#YZmFOQJc'd+@X/jkO$;6Xj<c`-hR`?FH]^)Djf=bM^
%U4$9-25a'Tm86ZukP9rmQ/cY0ID#:*k-_t*nUL7s_at?)NqhG<]\MIEO$4SA%o#R07n<l'+0m@seZ/.:Vk[ZX\9kr$592?s*Z`>a
%.QXr=YPi#;FG+`Y4]&Dak,?[)2aH>2QO]&dT*r%aDs\")LlSK6USI66S-FO\?i,bM\us*(il]en"E*F(kbu'M[n]GG-3HM<cguN[
%d@n7h$b_@VW`SfW?3A[;nmB_@=o4YJ^^pC$?hJ2`SW3oJ^a;l_]%lJHGA%_i:dqCYWn75r3$8/q+neji"8aMV!0Cj_mjIm3L&s\o
%d*Mbl!$/(-K,RTqS.[a-_%Bi^r_mP7r!G3dW.56QC=it_$-1E0B3JuC69nMK(eW;]rKY`]W'O-D$+rNYJ8#TM/a?"=d)$qu3)#<r
%&f!G9/I;Asf)_V":WPH$L_=Hu[.&bZ$3"]R7m2&QdXuNA*'*.)'/&mXE%O6][Tph=n?>^`142cF"3+\=J"mE:=&A(sGcWYIJ]kX_
%',W$3!NUHsL!>[_&DXjMgDIiBCqa:>LWo?5@Co.8RUDZU?"[s]s19f_YmcF&"QlYe/6)5h5VG2d"eVUmP[I["qho,2P#4lJ_`%'/
%]:=O0g<_16b5]6Pn,N/(VsE`?`fBTH)#m[`*OXt,-:c#p&Kd],!^9.Z2`)P4&"a>m&!mc]%kol!'+]VC2*.aZ<9T/%#jDWY^kO+7
%=4dG'19D3gJJF$,+WO<_!3=Dk8?($7WC:o^F9F!LY,N<G4u":e0I_L-Q,V\5Wt]?s"k@@A$Xghd5_lMB.]J<*=*:Ph11X]BSn,N4
%X&Sm,/Q!gq";OXdWq`B9g^8lS$*Qcg+H;,lWOkb:73RF^3`;)9k/**SK4cp%l3(ENXFq0,Q=KDk)`t&'R#Z0Wi]Dtd4bdgZ7+3i-
%8@ef@1\`<962451?;E7]@>ljmDgj`EMJ_>bK5])ogP.FTY[*fTm0(lmY),ZS\7TPiE#f.V%TV_J?KdPuZpQ?W,l"jgO1YJBZi=e&
%W1'JjNlW1s-t,bf.G,>^$:Y2s0c)o#-RZQ32p_E$-MSkq?i,b$*+M"KF,XgcCW:OgZ(8ooA"<([@%?^>4J([*/>)*FT>uD>s-VE+
%!ec&gn9YbfVfXVW@/PAJgP;$p]:r>oFI21Nq0M[!hT<P^>>C:1_NXc;@Hc@X`Wshu[3A[Qq.8j?/)^M`G2T#`4DsWWO*+PB!]i*H
%Q?K3tB9Bl-oYL4-j`#-[SVm^SiiGp^=5`%)?kK_BJ%epg/LpqTDg)A@.^_*4LdQ`I_ZRY53q/J/<\??S/V]6(Fkm$Ea>`Sj($Hc.
%U51e7:B%%`!p("[23BgA;V/cHhhoB!<q&,-'G7*>M.IS?1/eo8(-HWT&ndRWUd;_p6_:fkQ.El"An:U?e$/un]0^#ZK?!]-'Hu!?
%Vh/L&]SpoI5+1km`n9*ipuQ*O3Tb8H!gCFPhLDH@'),+AMeIhGiE4KT4drcGZaWKGf6OL-6?ifZTX!8*,A]C$='DEsl_G>sKZT$(
%)N]<HaNaAl_6">tMqTE"eHgZ2`Yfji'ote37rdFf6Ah!u^e,kP,;-$Z<0:]k8YSmHSP1L='l)KT*0VUa=ca1WOt?rBT^>!1Utia1
%MF"[eT.ki9^(gi@@e`I)1Wi"!ntfK`D9$9T-C<H4W#?:XO0=4=;r>q]g']JWeN*<lqjm\oJl'$\6dU,DhT_u)$;obie2VcRRV50b
%)rdf`6-*;23C4!#?;M>#+HE+^Jg7oR(+/dP:<!a'=G:4nJ0G/(mZ;raMHe%Zi:^\7a_nBfKdDFAKl)O'V2c2NoSEG[0k*C!)%hMP
%LfGDTES+e(h*a@TU:e?47XZ^d?ssc2QuS="]JNEXPF+<Ke&<13M2DrYkBPTQ,-E>SZIgUMP'hm?&M?LO#nE)O5eIi.EGq:s(lNW!
%k+0HC<)51?9(Lh]U/Ht@&LP54ijiX5jOe6XJ^<93/b%R=lJiqknJ2IZK@$q+Ydm-&i3?hH\=#fe-:jh5CcaMJO6'Mb/k*)GBDN;#
%[u$;O2,J,NBj=5oc&6A1aT6t&niMS9e*]h0g+J#8)=[W-QNEjLg_=.6A25_YZ_lTDQgHE48\t;d!QV(\$-i*hrVX*%$Art(0^c?Q
%+@D).(1WX(5uJ5HXC"59YVO1]8Q_UuK\05EH3rpW/FFCom3\oXc=WsiHa`mt=PqU[(ZDB)D<_'O9<)g_AJW1sIb76#aBU\b*qMoB
%I<84fP(c5VQ5utsIf0A>rAN,Z`Cq521Ted>k-O(C]_J;A$$$e/B6-%JR'7R`+N]^l-6jIs$mB9&3A9S7X/(npGW!UWg>d@5paK^@
%bS=Q$c'%C_S4sC4Eb4VRZ@^q$[[-bA[U+YjUO3hed^o7n0fSG<HOu%$RiIUP1R-!m3$s\`:GPDmI*kV,8;rb;Jr<`)Z',i%E\`hH
%G*:B\JYi9]dubI65LQ+-6=)o\%+`>4]m='MluD>70f\ht4R0bABX/sk-s`gXf\_WRqGU]!Y*_:gTpX<n0eq!*OJGNLnM4*UI%^n8
%Ib2h(JFV&XF\I`^ON*j,=GSk(TZ3:mYS`)X4,pqe>kC1-M/)`Kem!u-V<Pk<#Zm*\(.nYO8qa9H9u`_<NPpO@.NXF.5<\s(2%#oh
%-44Y3!XmI=+[1.p7a,8#k+C;o&ZIT+)B6t2OWaUG=,F9JYc.d^M`e#d%?'>1q&F!#<)t\e*e1r.h\DX?<GHGWB`;qWoq.5PrkUMR
%ImkXC'jD&a_HLKm,rfP*3.i8*aJV]$Q+.gN/A\4lnCgt\[Om>*QX9!gISDY/(Ajrc0[i*!UpL#tbPOl"#:gGRqUlbFb))Gs,WE%P
%S1U1cD3S/$TYLa'H"fp;[4HJ)`=]2U!uQrb+"pqd]Z`->2<Wm8(GCM*ks>05ejF#c73$LaNLQ:@ntI<j?#1nU>@(ES?o.!"Ic,27
%Kk1EXjhrZ-.QUo'0P71Q>5q-C7U06[Q>raV^CGkJ+=C^i&k?X%$\dZ%lUsIF;heM>(#(t$hf"GA'XKZ*[rQJKT4.Eh=>`^`$rUS:
%bU+aW'asR?0\?:2J,mQF$X!b7"cZ4@6BS=4/Am,hic_'GIEW%0O:fT\%S@>TI-"&g1hPQ5Emk<N\q([C,@&8s`f^oH/Vuj;MT.Gp
%7=M,B.-(eW[`YX7VL7qA:5KT-f/bV./lm5%g;Bt[<5LJf)TK2SqN"ULbcf)A7h!XO&`Bb@mC[d=Ho#\$W?B<IGSCOaV)^4ifu9jr
%>38H8b'?J:EVQoP%8jCj[00fZ)2bY(03Zbp>gH1-=:;/5.5a'6/hbfPTr$^,OMC8Dh6J&i,4qgD;G9[-8KfuLg.<gC?=>b'rF9,j
%13UbG6OUs/8IJ(P:-1I[T,3]=:4enhG<smNHi5LiHj_k:'Ge[5\L*QuU;:MmoX!;LU">n0qZ#jN\'d<OnW1*O8b8rDqRg':HVXFM
%ZpJX'3u=7>G1+G]]h#hudYn]W]PHMi=1CZqZE16#(t`^TNA<]M-]<s8+7CCY@)q/RinG.CoSq/pX5oP;Ps0Z*9#oQI2sQZ`+;;(.
%3rq7BrDd$r8`0]sR';gCmsN(@27r8'W/X*Fdb`C2?nZqU7Fr&?KBB,]msTr\,KTil8Bq0RmB=2=]dbHfadBh4^Kp+]8$g;d99[-4
%0"*&jb,tnip&DtnWO)-$dmc#VfD;U"ClC)QAId>O'4<8:mBhD8k2<-tna>)uoDW`Vb0M$'V12ioHdlH23>r>f7ouJZE#J"7NMF=_
%q&f"d%ul`df/i5>NsG'DC#tT1FpM*ichK<mM7S!3H0J(BGke$o(iGGjmaDHTdsTmlc0eT[(dAG,1kZNTg)4RYq60hY;:Y",g5B@<
%gM`XlNu(,]giVX"0u9V[n!F*`(RZQ=b^Op2S7f1D7'k/<,ZFV);XE(-=UZ%9k#&V$OCTn/l2TWYiRa@3qN&VG!o!W0(`r9b>n'=&
%Mgp9Rqep&nojJN:(i1VBiSpC(T9'unkar(*s"7.iT)@mr^u,.o2#4B1C&RKtirKLj.F9KF]kTL<1T#TOm[Tk#,_J\;It[gp6bdI5
%St8$[Is$cAB+)u1[/<Ef:FTSX!oKJ/]mh[^Zi?,$=``ctF.rF-r.iLOjK$_tc^N0WImbp/DYmu:@aO)icjNNcntLVm2o06L^OJ+S
%[4BmdrQfF1aNFH+i4*H]R`FK%r;g<ChZi6*Yt:64`,h?tEr!agmGlLB7Hmg!f^E.7oMj79Zt%je,TFY1,f/;%7\b.14Xf\,g;EW_
%P_o4;=AklaY]SR2Udi8I`Dr8R>@[FuPNH7pe8GhW9<EZP5DU7,PTn,,imFgOhN-f<^[kfho(7@^TA!Ag/fgcjb.pFZMK)HRmnn2`
%^D`A4jmF:ug3*`dbu'sVD0$++"7%>g%R<-l&'mkOR_r!Ld.o>dFU#1W;0+iIQk$W))C,WA\P5j)m=^g2.gO4TX3i4fD%86pVYAK2
%fc+6UM*"p+WTVP]&MHHE>Ym3>SkGM'fQ/"0kcf-(@J1Z<BU94_ruRHja.6*!W71-mI\qcTSPCs1DR4P5eN@]8pA1*^jX2U;X($`g
%2NNp>q;\204<FfEGhF0u[qg.KZ2W</\rSL+ATQ-QVeEYo<)B?\;KOe]-fgc$7EDm&:(g\T0(*n/mF#r1kas6r@Tr*@(j5d!mD1*3
%ZGQb30C"$T\;hr#;D$LB^`]i[BX^H!^S>DMfk\h7^X_^V'#>0rrgO1B8lUTi>-biI<OOYdkrd[6>]mY58`-l[6Y]E3:8?j:g"^Li
%+#c]3q/3stlp?+0\O!K_9j6"NgOl&#Y&3n,",)sW3r+c&Vpuk/[uUpT.]kl&O7L%uOL*jBd=-8h*H_W2OV*CXeEt[lK[rO6QL(-I
%0"gHaZ$MB.[7Vef4kd+-li_cs+?8MkSD2nq(O&("hgG=ZmRHg(aqONpMq,u$@/Jr"rNpeI8`TZidbSZ9=WZEtY92BHc1S3jgCKp%
%O4JM>h0l^h\8(7th0Bdk[QX)VAIWG4C8WT5Xf[R9ja14$/!n/UiDXBKL=t;5]fq6V4W.6p+2?Ueg@X+re]rf&X]i8_pN0lGh;e5d
%TWU.iYNl_RUY<3'(%9'*8p&J<*R_;bBD3LJRobT<GO',->PIPi)Q%[e4ZP"Ym?S5XoUD0h5=Gh-nsem=B%sG;hV()1I,8$KQ7q[X
%<c28%QF;iMBGe`jj6PZ^X4k\Y\%:#DlFpIeWLSsJBDR7O_oUFk[?eN'I;AH%h7(fE!BmN53W7C(:NsP)G)gdL=&srl\"`iORlpf3
%?1[iKL'bUHh/ChJrl_/'R<Q0G);TK)goihIq0IOkHM;QWg:k/mnBI/dB,dsRo,OA`pZj3=B/6i2XYodEF6i.<kKB(L9)&%S];pS]
%T<=pErB&mkJ`X"n-YI[1XkJ$kGq80fmU"[un8)T/?[R1Hd<]YSi^SRONd^qTh+kOteXd3,&E`W@[XROGa6T;]>*FbY5C9WA]$da'
%p"kDHiVi33Xm43oc+!A2d)Sa_D<I\*q+t/i?g_jH3W?PV*8UP:rBBT(VC=Z-pMPR6+4XTgZ3O>lXILrE<PtJJNd!)Po?CpU[H?VB
%`qB3N"rKhgLG.Ej2kaZ]UDl99J%>T`Z"ZC=^9'Vbp=5H)=6[tTn*CSj^U*>mHrs`qC6)+3R#^#ef\AIcpA>:s1P(qiHVs=n@Am2f
%8HQcl'EidI_(2m-H[O,R?E"r#\ng]l,>W_ahceDnmG%TnakG54ok*g`Xbo/crGqLLmI4P+E7PprHad2)U'&F>$Ujj_qjV]TnV?tQ
%YE,h!/.(q1\Fn$jg0;oU%j&bZHf)#tm+7:9V:9F)q>S:$)fLF&ka@1)+56JH<4mEN)I%j1fkYO)g"T"jV82O.'N+AVb5Fpsr%a;W
%r7&'OO&74A79;=i`r--D99!-,Y#nKtFo&F]FekdflDVJ*EA4s9*BY3F9k&1&RMjVqe:0EeNcPHPC#@+)BH1#RYJPHml-AC2oh<'q
%:d;6Dn($-E_2?e"Ha&Vt+rEnuZ+D"s5-^O=2HRXO+L4ed[@M6IBs`Ce2;%qXnMGR^V=L]b4a@ZBp=#es7eQQ94_rII3c%m/lG;5^
%F#D["n=fFJi9#YH+D;UDU]$pqI=Ae&A%gZNZ>m"1osalkGfSRHkgR[fqsqa((uF0>Sr_i@@qXFYWHO":`N""Pj.<T)F6@O(YDr8P
%SI:VF=3G!WBD3K1q=#XNp%/p^1m`[)]mF[EFEi0Fm=0O^>O+CRC.JRWG9<mLi*$)%lcm7@ZV_6>^8#*pmp#H\#t?Q5/,eX+j,R;m
%7teVal`KdIGN'3::qB@uds""4h'HA&i,81eH[.:!mUbuEWPZ9=IW]h;*'J_bO5#1r1j[s8E9fdHGu<DrIUM>4aLs[CPN_G$S4RtU
%BH/X35N@T^!q*Hf[/?](?Xjj:KCbVpa]s:Ubj'Ad^2hSH5_sg`Q:1Z,XnrVN.$oFCp/e\KeP>;h0d_)b9b(o6T0?RuCtAPrrfq,;
%HES^`&"[XoY&p:<A^KaQ.]>CQe@FaZ]fB9FH]Of4ZB)`4Nnc_JDq1E?>@4E(G'/!:T,nWCgCLCZdJ>)7AZ>MS3VSVia^6;fq&I+L
%THU@`-%Aql]?X(IqLC4p7]><O7Cn@7<u]k#XhA`b5?udeA.ok"m;]"hN)`0Ek@mFA$jOrMZ'Bk>0Y(YFRfJsAL5CJsCoF+"JAFoj
%c2\4X3l&98mO]H6q\[?dJ1_b*^W&f3Qhu&]njOMmPpc,N`MPHrFFqTjl,LmL$2]\0A=1X.Cf1U(S4VUlM(qI+)J4pFEY7f+G0Ub0
%<95k*JEN2HjfXc?[o4EPi@4A$Jj(_p]U<:BT_VMA0,ZYGC,i>W4Vlrb1u:shQ1E*XkF1't`Rb3[.n`]tOU(-PdJ--B?H5I"L.Tbe
%?u2\H>1W:n4N`:T9s<Yca$u&&P6t]PDfVY%Qng<R"u;nSOkE8jge6.QYc=*cK5o$3/rK'*&2T`/YmqNL/sFR&(26.->U#rX`f*S)
%K=&m6"GZK4$LHjjr(0G@bZ1]&jV(PThcsXs_l+Bb3]VU\%d2<a1&DP']Qr4HCt\MB%C:J0qiK1a0<'oNEqT"sB&diPE,TO0g:MgK
%roW%sfX@p=b4lek:LQAEb-hC>,An'jL90tE9^lYL'[StEW4V+(/q9B0DX!,k]8alp^\*8TK`%)&F8/#<"T9^6Y-5!uGdXH1^3eOA
%.YmET<H%n[Zp39TW8HK<>K[!"D/=p80B8G[eT)S"aTssM&&(OeWg,a@ClHtgOi%W^WUS4(F3SqPHDC00<MViBGu]2H\G*D0K?/Q?
%Gpdq7p*G*""5E.rkM*ljm=Fd6G?'>jq586G>*NZT(:3$.FueR/!ki=HqK)OJmH!AJJ$$'OO^.2JpSp45Y&iX`ltC*JW'nO6USX2P
%0f]QYhaK1:[;TsoX.=0DD<'^:p*mPdpM<1>_lm7Y3pm*]e^SFk*q"LOF4q?Gg@Y*R/+?C0P/P2Sg?Inn,8oI:qsZ*rE%gW[cgJQO
%Y&tdL=?#lpUFI([S.kX`)elYfSX-+ihI@l5NU#@gQ=3j>hsb:`P%cYkSVP)MW>t7fmNV-k_h3>QO9%4$Da1APP`G2k^)fHHCYS=N
%#t=6klg2(SCqSYlf9\^]`A!%qlLDYs?e.tYhqoc_h5E?Wa)qt_%VK2_6;_3!2Xd/3P:tbeo(h.e7_O$=e[Z],">L:#Y2!4X)!KQ=
%PKM(^/Xjr]MruE!E:s3Ro^_hWRmq8j3;t)_q>MC-T3iW+=h@Ij0%3@;4?;AJ3!X<#B:l?1hg`.aGSp&(k;&1)r3UMDlomH/HRGf^
%Xs5IgV/kud\=W\],RgdIj,:&DS+7O)s,cA3&/5n=rhkN0%b1*O&7:`1hLG0pq)oeX5]:L%I=Hl9bd6X2c<j!:gW/3-2@g#;f'DWF
%dt*AF@-PgJKCM_3#O&NbB>Z6sFSM"u/.M3I8UVQel\Ci#dFQ>']B)^ac1/D)2GUFK^-r:1S*t'Eorcj?[,ho[O&m!#4eCq(5-<T'
%T1n8a4)'!PMfH27"i]-=,p?noZK8%K:@6,<n';a/$mZDE;_W<'H*=j-W;.O*q[_S6^,Oa,!ni)t^Uk@<Y3[4$0hOa$L[)u]Xo.I/
%F_gsO\+@OM*N0p:?I`R"M$6s6^\9gt[<EQo0hUoCf?W)W^&k,u"5S.fJPi=`+8E)<:?CKS6[iiPefB&(<F/q@*sg]+L@tH<e4IZ5
%V;)<1;R^Om&%:'HId_*C4?bg^>(>/FFsZuh6N$<YH"^=Mc'A%g0mB4okGG5d7,e'B75XqH;/9OQfOZ-lh;%[@ig`qoHLU8j3kg'l
%h)un(pZPZVd-?%^SK-.@+Khp?T3Xnb<qNZRg?UAPGu5oXH$]@XZtjnR&(dDfM%4^<+HPLH,l!j%>D(Jq.b]6Wp3F@C,rd'J^V'm+
%A@rtg:Cl$4Dg(T3g[aTOj)F$pD1#=GiV*_So]c%NmuLZ>oEWb/.LM1g:WrIl2_4#1OVrW%_6*1,NMV*64SG7m[(G@oI3^-U5X/VX
%F>'^/@[cm!lJ_StpKJT'TfkCrduJ-09m,s2IrB'PDR+_=I.VimabSE8'n3[IW4(6%FAQc,Q#:OsYah!ISZVQ$0=sobXKn8P-!oDP
%d!GGKKW"MpH?HIbI?Hm6%]c-*c\>ZiNS@2#8A3c\5-M\GPdl]&[PrN=e,!2$Bt`6$G]0/#"SKOb]M?JbHJ)DHnn9t0r2DD+%^I6g
%RFpo+g3@oo3iS\,r9W\@bArl<Us?Z\.rbgAgI]!fhYXgnI-^JLR!c5h[.`H6n!4>t_82[Hqi/L_GP5a*pHR3CHlKIQD)mI$m8<h\
%Ec6eh=atVPr>6Opgps"dR7B>1^UkhlAU%]d<-%p0dhFE[I'Z\05*PHF[=dgRUUG4$-YZ&$2a!/d#E]L'SVH"QaotMG@SL\@]?iqs
%[Ck3t3Cqp`MUN'l4?DBRI!CKZU.Vn-h'qQ_>rfY]H;a:ihg#+p_'e^>6?>$`?`o`lng>L@I-3MD-hVph!7b*lp@/G%UblN;]h&gS
%LG8+*h%$SPD_/Z\)b!Q[gW,^Z+$=t#>W]Y*=)of4"PXP<r>4XpWAYNWh#D]_B1+X\q[iFIs*=WKm3I)-XW?6`g^\PC%Q58'[s*IG
%W+/L'(;PO[qXa"+VqTUtRqq$$3A:,.)g2$gWNdMX\e.m6m1L:gK/N=p&O!4ogR!A+VqJaHTo-F.bClG4YFo"@[AQ)FOQ[UHUs51*
%^%[L<CNN+#mi=9ghcm?7c@(\16AHi-rCZYU.*2&HhHO0L!)t'(0CeVbf'T^g4G/EK`mW.$'V9`!I^;o+Ha_hAIHclcH.tO=E[r6E
%<%*`M7%[AlM\cF>]mm@,dHg>Rk%]1PGSmg!Z]-7%-YcY*-\^sMH/pPW?ItNu8"ZJRlu@DU_j(a+"Hq]npX=oNhlSl]-O5?RfQWr-
%,HuV8p!6t"bD''(7$bAJ#mt;P5a&VVa=@OhQW%\fDh$KT^&9r6VE)E61`l$B4qe<?h.$D;QTEfT<a3mbjVMR!)<Q@G<r.f&b:AI_
%,O[NZ)I$KRZeT5LXZ'i4:H`uoSSL,bn]5E\XP?A,r(0Z,Re"Y^PK)&"m4_1IB%`NCDW6Fh["!1C+p"O8DOa`[D?SiP%b0(ibO::4
%VY5b"H0]?+ou>/kHdViCCM2)2pk.;G7;#/7XE$TLG#dSgZeOG\YMdCr-5'V7B?.VCMeO4o)F<"_CXnLBO&tMO41OnUF1qBlk=4Rm
%rgf"m:,jicP<=0jNl^%ue,bO$Q4^oh\\c.P*"jD:htp1:ps/KL8@()M2RrXeETcVm?1G'I'FI]&SdF5`ai..ClEjgb<ka":gT'W\
%^Dtdq/1i``T"6-s:JnTH_&cO'FD'c_4S0:<Y86o@]1(#InSe^lO265pdE?llA2@F+G#gUf\JeU4+1F2L`$1c^\Ljq9p#f\BXr:Z^
%3#CL02d)XMOCb?qm7PA:5iMq\\#o7_A1QLgeP>O;hGg8JUBcdrDL!fu9]sUA.8aW#:To8Y^Q0,+qr>&'Q[:>F$!oFYmb[>dp=lK\
%;6W2'TalVn]q+;tXl8i_)muS>5(BcD2o"-=M'`hN=-(T!aX(Ya:MX_Dkf')]0?:ID7:2)t2\&?M<uY@fgB[Nh4iQu$PYE,Vm#e^4
%>!37,^m4<S&&H)[qU%V$[W^rnl&9>^7#AnZ.l#hRZ4'n$9Fb#d?n&F.p2T\N,MLn`>^nZElK>L18q"1d=1)):H!\,7=_m7r\)+9;
%38(8Y.8=]c:U7amJ?<QU_.rcMZ6n>-_$"J!+8!D$a(p[g<Q*(M0?F[6]39"BU1\"6&!ea/)k3nJD&M[1Pa(#'e\Q6/$mM.fFSbPt
%`F!MUcDH''?9?E1:=J.ZVSTW*hs9K+J+p!ipjMs#)d!3eQ+NNtop*jglZB7MOf!4<?Y#-\Fb$iShsW_-*PH7',-cLiGl.Huj]>KM
%M&8t'IR50@=aWL"I'mrm%:25I6k7Th;V4d[<u@e[V<Y]u)M+qIea'p/2%nTo.ui<W&k1D*?`hhL>X,L!F-+D.[X.QD,[q//\@nrp
%a#[!7K@:`_5+M=]-iMBc3RLfnpbnSU&g46&Y^KNcr";0kYT0GiJ<GMrp"%ZQ0>WRemQp'>4P=BfY.RmZT2!b]6+oKpb4?X%Xe)+A
%mU?Vga8qiRE2g:@rqG@i8k*.:5'Pl@bUn7@WaPcso?FTU"hA%<-2GR,)L&Z/2]c<OE>(c;Df:nV:[[-4ZU8q,\*C)jQ")F>Gj@II
%V_;rC!VHu^aDL'[jIc+r`g>5Vkb+pd.5F&`5^[FV)>0bJ,DAm=EL3DZXc:Z1/%W32@+RT7IWgehf^E^[`P%E!fK1EGltk+?F'`Up
%EG'Xm1+dVu?b[8g;<ga9<#r'Ss5;D1Y?'6"HH497iT](t!W.,@dVW(PC?PH6]9&NZpKHHieudIDRsb6^oq"l$_o3&l#$rBg,Md\#
%G5pHT8YN$KPb.N.8hVeogG^\6\2&H*K"nf^FY,3;?i/D=._#7[e/FA_9TQ[B]$4ir4&ILldBIoM*b;8NVfas]mp$oVS%\FTg#*=n
%5MC`u)\X)?#\.,h4.H[pgbK9,7T/c7q`#.mnH?C#VUX&>et)R3Bj#5Ne)Ra^rihUEF+2BG;i5a1f"#G:=LiDdorD(k^\TE]^R?a<
%jgJ(8]Cn_Z@k7BOfPERY1llSP_,&%7qXX/#mR=/Nl[/LbVj+5'Q]ZJhn;G=4@Uq*sSesIpOc;)-?t-G3$WC'<T;u/@@SGK-N\Y=`
%!7(0,Q-0r1n,bJ['7t2O)jQJr(]ECf%)G9*iRQ=0Ane`Ic/l1b-/%V0&3=QH`&57bL8$T>p1\Ttq(W7"C=VVD7XRj^=cL!N"KXVP
%`9UOCiE;?Y7^b4gYSi>8HgTbp1M!!Rqm&=]='jA^A`Y_@V\]6S<e"G6i@GCVMrUkW,]W1f?>erM7+\4;#p!*\ekDp^XdZq0ZLM<l
%1YE+"")"`oEe[AV?C1E0V75h:&nnR@a/)R)qeoj.I9J9%E2Lj:3k-1%:HI=A&#XXdd`q/SAfFY1k!FdXP!s2ni8qB97+]=R[sT`T
%YlRBH<,oZdDVAZX0r+-t1%<ZZ/Iob]n_@H)/8<::$+_+@3u;GM8I(cE(2Gqqa6\kX[&u3socUU4(L)g83ULA[j"*`)B`,(5aiUbM
%'4Pj'2VtU`UH!-%4/]c(_%rn7hrDdo?_#ds\'-Vpb_FC$;.k!uS>B?7<Z2Fe%7j@f<d+OL92<Y9)i/*WMl)>T6dAkNQF#-\*1-O)
%(rGDt#cQhk.Ef'si4i`]RF7%BWEa?FoYeNJA[cqf5$PDQNu@FmSmIqRgHFo-R4V1h:uj&mcP^SV<27_eV0ptd$b7<q8Yk=JA@IXr
%"VsjWLYUC)m08stJB_lQ45u9hKAfMg7n^]tqj?GY^95Pb:A)R-NO.nZJ`\t0Tr,95BF`=C@ur@j3e_s4``^A!BV'jhd-8\IoP3$]
%oii/YSL)D;'j_AFqRr:0c[OLM'Zk;(Mi`kI*f[^+m#Df@/V=AS`/\q:e'j#8(u-^j@@991e,1trm+C]tk5j\`^<g^2:WZ!`_r6Qj
%fftVDO0+>41R2V,Z9LBCr.m\`PP(C1>+q)K#o9hg=Y2Ga)Wu"kYsb/tl)<XjdEb^-5VE%DMG&XRo+'t@qjgf4e#[aTY7;oLM,q:.
%G]""!NaE26R#e,A(m`#&!nN,F`KnOsNa:"JfP5Ta8T/YhcE_$0lE]1@3K$\D;6)XGM,J(Fl?(M2kYj(R&9iMlf8)<:>T5Lj1i5E.
%'?(EY,\A=":`T"0e!_:NWfj1"XKB\AoKmONVTj?Eo-4+/O#u1c'q=RhT_*HfQ=?BnM"YSC_e8pS^NDHu?]Z#u=&88L23EVAN/E+%
%+*Q&n%KMS0#@P#^DmUms*.Zr4G<6,S(0\t-"u"ViDpT2m_<>8)_>.t`atq_>r2#>-4(/o[<Hq#6[OeYI3I$#s/rsXRP%F9t,g.qG
%oEm0]Q@LFKFq?,l8,XNN:qtq+GVru=K7LmAGhVE,G*__6-e'0CB>8L]Pjb,add6DGq/-_35A.4cYHc6NN"p?&.9rIip=Jh>LoH_B
%c-2.lAriFRmOo"ghm"@L-$n&\m5BI&#ICPk*1;c]E?TI&bSe/bSqBH,c]UZuiD-RFMK2r9(Z>=m2m\lCPc=;Fc+[\81b2EcY-AbS
%`QBaAMj41t-;J,YS3g;'\2"OiB%ZsEAN;dEN+/K5UAGQ<Oh]HgN]N>tR?OaGBcs4HM(D3a6?N0hQ<Rnj,hkDK(k,(p+DuW^kZe*b
%DmQV9>W#J?P?C_qC7et"74c<C=C_W'"W$^LDC<%+3.961psgAA5I%15.<!s2D`[98/YGQgI$E)&oAQ+<V?AtW2U,+ri9]agW7UBX
%P?Z<PS<9Nu2$`L]7=HNr[?X;:E:`X/l!J)j?>8'i!EO"09(3(Pq7>3/K_?oRL\NSbmN8i01gG&OWH.7rO?9>S6b+i$n^%27l&qRE
%&h0#&Ga1`!(t.Y_ZdUFIH?*:?j,1"(B],\=*ata!lD(+T]@>enct993Pj<eXVH;$c91#X,Xl3:G$iobgC7JX*4-PfOG_G]>K"?Gp
%!n8*RY'T8U<'Y`?6PYfk2<\;jQT]4\3+C]bOH"0j;)<4Q(Z@_92$]Ng?7g+2MeaV5^H)9Ufd#G0R9Q!%RP2KtH.ee"!g&bpN))Sm
%T%Le=Jskis7^#)CfW*3D`mhBbAm2P5hAeo-e(c$&HcOCI@N*u`*9$)Pg%g0o\#PmXcCF9l9iu"[1!2-.ojq[A/n/+'?HOkC3f0%f
%0f<5]&P"\b*oj1pLRFX#ji^EiCc:lK;R)N\<KiAs>^0Ve)m>%<Ng./rqdb)EH+M#JK,njid1Ehdg9o/b-.iNiB6DkhaW>WI.I"(t
%pcdOcGoFindC$`T\8fVr0(&?l<2V/[h37U+:5qSaBmiOS,uJ(k;KM\K3JI&9cgp",MS/gfr:H/k+"uV%Veg\qg0\C*-F`*m^%PNJ
%Mq>h0(;=AWTs'_+H,'\M!p0oY.<m8HN@/D)/^&:E0!4]^UU?'km'>DBcS"7'Ne5Q^;Qa))%9-F>/a\d'I5gZ<NpDFrb3?=K]YGsH
%)\:&a@oZ`!)%ZWQPq)CCbWNop]7I.Y'q41i@&m8(,(EpA`$A<U+-[eJ49Lkco2JgoT/DH+s34/FW>b0B,om4<rP=3cQ:XGpP7PKP
%n^C2B;b4pm/J!OQ8$hg]ctjPbHT@(JUIn2&V0?j]rH6**40nc\*n9C'bN=Ssfp5N\9UtfU+:hQ7k5b&4H#4YL%,tp["?Isk)5nk=
%dH/1:6h"6OM0W&;cq1]?*L-\[1pRj\][3K0XH:_Pj\YhtaU<4Da"rNT\B^g\!>./mbEh0c1JR9,n8XN#FMkmErBN.bI-T+_R^aXL
%r3DCGSfa8@i9=-Qq09Q3S8je%d=(4,U16Gb&4&02%rGm(-h\$:f.N1JKsjJOH%$&nB8+i<QVL^LVh59U-)"ZQ_LOls\@muKe"]Y<
%=m-H^+\ko_Ge./lP"]SZVA-&9lU(7-64G>jb:VcMAdfToWrcStD4>-(X;4u3HM(R5J0qq'Dp'Jdq6!Z9,Ms>JKIAd`4??&i$Jh@3
%8W]Pq'7gX-=sVJ/j4!eG&.4U$/.V>?^CX[-*mCOL;P_O96]s3Aq_$hP+PJ=hP[2k#CGVYN+qb@NiVA%X2<rTpep[lH"Ni'mBts!G
%[[9s;.]oUR5r'd)=dIBHX>!U?.%7/VQn6DR*?l3*Z5&?hN+=q(WR,h3Sn3U<UnZ/H+Fm6AC/=%-35cb(T"nr!\Uk?h'-Yos0h[*'
%6B5Z<D\F*6(l\e*3]R<ad0XXLGsWmORE"lU9,nmC#a>]a,+V)).J,o6)G"ON,mXT+d>XH]^&j_Bami:4^.=U]PGcS\R]ePYRA)g_
%dd#kLCD.?K&BfhPF^9/BO+tI+.IeP"<?d3![Up_Im+;`?o#QEr"#D?l0(_93EBZsl'bV<V>Y6)'HP38WRrhEYo.?k>C&P/".uOlU
%OR2I8a[i%h6]qs$0i@T@lq!Tf9'c7UT(D6#^2e6iPLQl:dPQdAab-heS6DjG4(hG=g$PMah0/h?lpfd,"P#\Y:NEAU*]<+:Q@_.@
%9BLPd9-&_2QEO6(Zi$biNG!e$,Un#%l[WdPBa7Zd+k^Hg6TX$(V+I5X^gd7r)+(L"7hgf"$(,_*@sr$"4(/$l=H;\P4DW,?J;\LV
%-4#;CB[T,p,TquL>1K2mDICYrTmc0,d;gDHB*D+(6iich&$f=p>A,f'b(t-T2$9+\U(8\-U8TQT7rMd8(FfYcj&8c-Sp31j6FNWA
%^4?p6,ICmcTW:CGiZqa@(G>UpqjI3?!Y>&R-0SLm#UpduOsY$:4BHRF;MI)KlbSesf=@JGZ9u@p%t5oP@?R'>`(6[O4IJ<*LuVDi
%Q\e;jMbhPanj7Cr69<Q>RZqm8+U0<?C,WX5[(A\oL/\S(V28IuR^l.7p2&JYMu["dP"j(nLVgkWTLSPUiDhU=4cA)RS!ZIQ`8&Sc
%`4.)D-/r-%Hb_i3/<N'1P8))A0_0d0qN7-s"TC_9%G6!<.O<2B+uN3j[B"9^*`e2j8V(QAVAJ_8VoabCM1A86_,&Jc4$lIFa;l[[
%caD"E1o.\85RJY^YR*t`Q4UaO#DC;LC(ugPnlTW]5p[jM6YaCuo))[=-bKR.aM3G>PEp0QS"=!f$"G#26.-$FO:%s'ZGR#]T1DTb
%OCF0fDGfU1A.EU5%F&fo5_:RWK7ju.KoemcBn8imQcSWP;rQXP\PTEHkcShS7Q#IF`$A12*a_FEK"cDUnlT^(i$;i[Gc8*HiD7!$
%0Ykc@jO-$%$`XdH3JuOPO&#ZT8KD//S-_aN@e.8rQgGc\GEP4[KMP491s+dPb6,>/AAm[&2TZj.54#+9RM3n`_ZZX#X"]2sZZCOJ
%@=G_!0%?X#0j3%'HUm%_QG18r&.ls>q4V9)EF]ab$^(cnAos'%d2A:p'=5:@BaVl?F92N]#&>Zt/]<&O-kL.8h,;J_,Z<=tj[a\a
%6TH)\N=GT355&,''U1!24]4ttl`Rb(?qM4d7$G&A[&-]o!_LWEp;+eX?n<S\Ls6M<+#+iUK,*$BQ8L+>@<NJRN("5OYV#K(Babo<
%<&\e@,="oRUr8YRKotod:YRQbk!lU.X;:F;2o>0^_q86@PsO[P'8.Cq@rZ%K,:4#^LdsHU`eFX+'pAP/#.<AAa4sEN=Ap^hI,K=4
%+Q=OW=6=]&R>*#Q85UK52ag<no40smA^^MC8W[[0K`^mFTL_aArAtK4&1ZJA1c->S%9j3<kTnE5A:Rd>"A)6oi8PXE*n_G+.V-D0
%l9o:+#q8k5%OaHk&NM#@@C)DS&gko!?O/oe@#O;r:l=!%\&=e#R<Y&TZdM$.7'M"p=-$rh@@L2a'Sk7]#LQRu)8RD#TH3&&P%t9m
%NB;n@H%[/K6>766cW\i<$j+ML0*&4LW%FBJgE(.DWo;#\:h<4F\7B,<8Saa`Guj*IrHof$8>OG<"d:o"kde.N!!-PfCR'SuE=K,N
%Lj'\V#fP,\.#A>jD@1;L2?5A_(]YV%@Q$af5\`kX'%_0F6bHJ8"/&!-gD?<5#e-J0U#$cF#l*)(@mh@BE>`+OrhcSqN+k\oL4)QQ
%&`AKN'As0$6Lo_a64W)&-$q7@q]tnWT4@K`+-9'*P7qL@[FpX,!Q%,JI7=WU8SeV[*N4:ocpf3NnNm/i:g-2.nf6mT07XGorHX6A
%4gG\7"@K;KpI+_>(u.U9!rOS$+q&$S7QhqY4D#p)R_bFYGAn<,-mf1Wn8<k%>_3tcd=XImSO6#AS-r3qoRT,5QSINH5_Moh%%qIZ
%;mLef0j2;tD-R>SI?Cdb!jbub;7s]T&st@+!%A3g4MdS-bc\VpP`c$WA9i"N4WV><&5"[9m=QZ$O2TNX#j]E[`(5p)W$Qh/_[CIP
%'M.N9#90=_>-ob6&)7ak2H(t[j9XA7EC_Cf=a,rO]E#qu\^82%4\=*J@+^-(O*rL.%'PK`[qKUOp*fu^"1$5e)%_Lqgg-k*#JDQG
%*?i$HY)=Q-QC5RH((^I.K-M'm#n90Ek-dSl.+7r'#%G\>T[N1+L*B@MA9&?O,K]#']d61sAU@(?juJ:3%7!mKV?_oJ^c>0l?SZ`b
%"=mA@]L@.WC0XZg@oYjaO!$kV@k0POBJJ6o@2`2r9:<&`#BK@.OXQUefED`'"!nahPpR2sk_[pOi@hqfB6&[fRG!'@as"-<LhKmh
%OOM=?M**8SI9_H32G>;l"c4o%#-"RU8KNSU/+Y(6<H-[2b@Y<YLitL,U'nK;&cr,W3oOd@X6cl1]'t5_:,%d<-`n!W'$=%PY2EQ!
%p^JfH!Ku8(0SJX\,'H)[>o4]7a$_\BF=210iFS/nm`7kR#o^_hMS>2AJ3'Ke!n^3;r@"Oc%?D,[#Vg:0#h_$=*%Qq1G71B/pmLJ5
%]5UtFALi=pX9q7i=cIY=p!Ka8X<i7&;QFUliU'"K&di^t#'-gLc;ehYaW-GdNBn,d;%Vdi3^dUh#ZF/IjcXNrKZ:3Kd6h*e-.XA<
%2.2J!JEXP"kWOg6O@Jt)@nM',9T2Rj8hMkJ<LRV-45qFDJ7^Em-%[AiW!G(>82JMOYG61.@m+S/OY%_;P1:_YoEZuW5F?+QHHMKe
%Y[\*"6J__,7KSXPL^4/g-rQU,:3`aZlS7IOMC7WB+X_+u#u[gS6T1Hc#_EMILd>R'A;u2:5a4XG1GfF!q8cBo(5/[]3"P.CMBl_F
%gik`k7G:W^%:&F&I8Ca:.F]'0.r[r\*QeL@o8ub#W40_3o98$&0+a!Pd/#G6F<LgoY_>8V8qJlJ.0m\H-`2j@Mj+U<!@;0;iSrdc
%Hn2LX8o_S%%$47m^k$Qs35ai>aS<B'UK@hK#dKMX,$@e`P**oY#r'XjBjWtH)^12V1,LUrd,JT(7tqh;JET9/]OL`l>%SX[5mi/^
%3C%0N95%#/+?g-+7N0DQW?i?02PMF'L&_s0FCDX=_*q[6!.luh8d=)aqaP1#e<A";GWmPsQR*8*K3WS+COd'oYe$>BUIi=ZJ04%1
%Z/([iQ%F4#/ID6E@iQ&upb'u-)C?G!M^9-ql0h2ub98:TD$s$D_SmBD`kd"TLD`@]BgD7&Ki<gZ,aKTD1E6dTg-26-%WVZ=/7Lc!
%Dh'EV7$0mZ#snr=.67dg+],=qA?I7Jl&,jl67<S-63p.<3oDt:XQh6;j5?l!r4oT_.GSp6?^7Q38ee6fRjc0XP\gHs#NX@<#N.[I
%107o"L>>n=j:04aMoiD5dHUbVS\p:1&i?4@8Rk*2Z,H#o`F$fV"/pZU+o3NYm3C3t)NI3L#_p');MMnrJ@+J:XcKh@ng?gc#JM*s
%M$O2S\cWTGgB[f3U4mEE_5[O]OCkh-[0^))0RO]R5*@97QZ)GS8DAA[OG$Fu[LX18=Ns.ST6)VEHgDWmRL,s8?W%LHE@;5(66kb^
%0u":'Z.cZ5\8i.2353f:e/er$>+Z#>V&$@'"<b'83F*+F2_nO1oduspQq'125b\@p7AS7i$R>_g$HtM4e5ecM=KJouW.8>]/&5U+
%XJ-g=9<:0^V9d^(B@tC8X\U92ifHD>*ij]2\d^3GAR^]gJ3<mSc7Tnf,1o)81N/ck6#)e+*Dr*b6d6aU)SgsO/;TQ_V*LI%`pF/,
%$j[96GZ#buB2b^nA@C1]-7)2g\PW28ET(ce#G)3!iZ`KkYM,6]]_Ims[j6:j)90<TWe5[Mq35Cji#r)FLGTH>WK,GpYcU)O3k,Er
%pKcthk^BsUi(4D(L_UU`:cY5s"=,T,X=5kQ]22UO<G[uCVAckgaYKL0:%>/55Opk2O0FIC=k(/10oO@g$Q\c5fXR'XF@&R2L%$Oq
%JA=ep7dGhKM`deOH!q9-N?2k`5>F`]UEQ:#A<64be@oRYnr=e>_ZNcRLrru(Mm4_(:lH.(*Je'UX<VFqQe`7G?#*Z%#M]<9!A&>-
%<rs-R:4b,=LDA5;cA.<_ZJq\pQmG8>3>iA<5GD.g4V]\O*5ukDQb4"80>s66io!nJM!I1K[40IV`)4FuoTRKS8+YdkQ'D^/@;t0&
%_\-p9&)3aRV#XAjfK0e%UQZni2V-eWn'fJtK/hm66p]IY`H0q%-khDe'>^&e_l,DI5IP+dOo=i;=lBZ1?QPZPI"dU%/:%%J+OMB0
%aN5+9;Hu``6*Nq:MTlLPWm-rYW'N,L%1a6Je`HQ\cCMfT+Y=`+#a3Ookp#d&ZTr!&bo'fU1`k333ARb$+I,@+*!JEo/k68)ggJ]Y
%j*<DUfSS3/Lj$%:,5<<6>d_BSU]F(+B&4n/GSX>(8KO!Mo2*@l+c3)R*TYoU20nF9H)^mmD7?lES-*EZQW;;F2/[!QE=l04.>3l"
%WXfEXIm^du+&,KKSW!M`FT,&p3hc_tSQ=gI`'st4)ojfC.[))%V+jJq6H(.h6bZ6M_/iEqPmkWn^l%ai(B2bH+<ROKDf"!j'VAot
%6_P5`!EfPg/-XTaSj>4eaH2$>nG,DhYo`*"N/^2Ta@**:06n^dlot<jg>s&6:*?8]+!0ZBn_o>5-lAVEf`Ddp(?(-l.3,7:TdsOe
%YSumRcnu2M'Nu&0q.PM])eh'jA7B7NGn/gE\=jO2R:8'L<+rN<Lo8=TLCbo5?*)NNkfRI`6Aj[^(s%Rj'q@k8@Pl5j@$+$B8Y9E`
%Y2s\pPp@,AWo@t6ZLH".#`kaI5dK@u%N/&(ep24nTbSOul:RA[,W"Hlh-lKY0G[r]Bq+_IY2g!sA2ddFE7o-!N@).u8[TsQY+br&
%XS*7ZG[229NXG]S,;1S3S4o6f4t1\PaL#rW(J'FC(Rg3TP[oL\[qf=$-9;=s)?gm#>h![pr]_XUi.rIWPN>&_`<c2MBkRS+:IZ7)
%PHZWA?)77\]HTua-#aLM#b4:l%k"k`%k!1aElM+,SOlOCR(u^@2WZ2pNqgY=[?<>9XWltW9Sh"[P0AUi&C:;"T&L?eR(sisQAh2d
%Zl3RM_^$lB\aqg-8kt:V'1k7)+[q!:HJ`9i9)M8<[)>W&=SbIG,Iu>.M,@qpb:!7bi7&rpG9OPPbp%G!=Q#Ipf+=o)i^l]urI@FH
%)5X.eP[T9&9asKc3P<)cZ`3I;^<#c=Bl0'@<_.%0Y4V-+f^r$[8>\3aO0gnB/>;S=PmBCW]#>BbYpP)u-a$>U(7+(APM1bK727-^
%h?pej/3RG(W5qA$%LJtfCPYCmJ>#)),$WJ7li@kV'QT&s6Gjk[)cr_E$58Np6eMk#%J!,]0M[M8E-j%d+SoPa4TIdp$@,6:8jBSp
%NF\r=8k%:P"@7M7G/XuYG_BT;'PScsBj2.:qkmAQBEIlTPQI$+;S-aG;1JZEn;9]Y/EXdkJId-7I4)YI:4_Ei(p"235g6$U@^KUF
%NC=*p-]sD^j[/Bd&;EUsT<h6;)?c6niJ''??nt^1.MP9ir<TT#+PR_UO/BjA\PaoS8_4(tZk$t#U-[cG_G?7/LQY9W=DT?H,T/I4
%!=8IRW)>ls$F*[n_")_%#s,U.<r!ju1a+WnA138UCa%pdP)]H,%&SRc<$m5X)#7F-60Af<C.>qYKPRmf>QN+t:`!O1X=+-[[g%O7
%,%(\LJ22-L*64@V)D9H7Lrh'fNfBB]0@jtHPC-eP/&=F(31Ot*cWIJ-JJ;jm#mlQ<*a,Kq5fWjn\%\r%TnpN_Jpjfb!qsIqN-rk&
%@%S-b_q5KaDm3"i1j+k%j\R]*23NA!#8bQYB'k8B>(mS28'(ge>R9qRiil!*c`17VQ]2?B%)S+J;fOeu<_UR<p,UIA\QB;b*A`p`
%Kn.d`oiUN[U]@Z/OZ'C^@#ptsT'/3LmknrDUMGmdZ20^Nq7j0e("EB,M^i&8G<(ms7>tVM_aY9P34m?K<Z2@?@Gjq%5c]tK#Yuj_
%;];VCeBa6F`Ci@%JABZZ-)l>.R">Po#]gTCL'rnSof(lGEW0.*^OghqQIn2[<TN.Y-(j@W9:Mm<Q5B[h[$[W!Ae)4E$AEp/o=Yi&
%Oj>X6d$:IV6:7A\Nocr0#QVfU=l>t`r;ahO+bPQ(2':fj_K#]\>''ucnLIb:F5up?T9To;_o"_H$a?''X^RDm^,Onm^l<jhW,9lC
%g.bfeY]VN1NW2ES#ZuW5-1Hc^8iAt/o'Mo2>WBn7>0$_P!q6R?(^N[:7]<OhcSclJ:k2LmQ3pGY*cceu@KLGQOFW2q(Wf@i.Zp*u
%.jlA(3eD[b&N+QR7L80BA"<lFNO<PF:K1/N[k]'7d32^Jhrhku0i2G27e(Am,ug472!`A'[n7r][B;,golIUdMt[^XMIl&X3S5,k
%'QL*&diC%aj3<ma7GuGNkR-[X)/l*L#I71?5UZen!mAfQ:("=A:;ps;M!+:GQtfuu362..2q\#3Z&V8QJN/3UKG$IC_H$Q@8GWei
%%1ZNs<DldkU2K`mb)SFfNHt)(-RO]K7l[3qieHqs1qQku'N9#L_Q!h[*Aj(,l&>(]nP#&OEtABh7^X1:&!)A4j%j+hW;m,%R@mH6
%JBS/,r0l0:At!.[[[^bGnf1r7ah^Q8bIq]ue6-OjCBA,sN4!5WDGju_TecD$I!mGVcGB![7Uju=mQfDs<m\d&Msi)+!:iCsB^@nc
%`4\&Y-F7R.H/RtOUbue!Z*[,t5J,gqe:+7V=62N7ZZGY$bN9S_]9sC>a];Y;gl*E_q"dm=&6o-%ru4F'nA'`S*5/t=Kt4N373con
%7>KEt^^MC<kD;r#%LpN4Kmb8[&]XMV.VV)A][.>Bi^e>N@Qt>@TmoY!gR/EiD#R?_^!NRiCfG$qXD#Gnk_]bcq["[J2u-"I<J7E2
%eM%SN$Q`e#:5l8PN5P\EKH==F572+"'MVq*b1$,1aOe8(,4,S!ODT6@A6qHC$"4U`&q,R`,B*<A>fX2G.B]?*+mSU*Cu.PZ>\8fK
%=R#gH[#_'B4o+WNU']J$)?W_5SM6'N8'h=t-nIZ<SAfI7I"HuIj0>:4+%0JIiZf[r&UL^r,YR*"LoXCY)F3=-.udX5Og$.170/$-
%P1W,>+7eSs@"Y.<4[R4I[`0tX:RI:hY,@&]jObjt6Z%p>VrV<RU)bU.`)jf.2@Gnm((/RC-u>s#K&\-C7S80Ta<h3(jD_AoE?PX-
%p<bTR7)ll^Jpdkt"WV)-^puY!jHW.nV`sesTsF`'7R;.Q:5:a1@pD.5!O'FMHQD]BE$04AH,7I1B=,VN5S_>hCg.TLR?.u!V=6J>
%Xl%HUE#K^!+kMjFTF5bEGuH/j,^r#l+iMWS82CVWWAmJ.Y=b"lr@l>_:KA%K2_H<kagjm:TnloE<)G"G<=CLTd55ds5`I+<I@qEs
%@pE$o_aT-n%]*J`FeSuiptG'dEqUoC*dNSCEXEiHUO^Fn-)Y9.'/T+3"o1:+X'8'.nR<7@V3,:XDBJ9]05q"4*':ta8%-_%@M)8!
%,W+[@*J_g@*HL?m*ct6Pji/;"U\%SSPPBreY^-[he#5?j3`4pNi/E`I&@8TXZ[8l`[5h7P9:/6cd>XG\KJZ3\l_I41FZ;i!:rA6\
%:Q?YVe0"h5+&[FCEEnB<CY3'K_B(=Zd38b,a-h"$)Dq\lA;-*`jE%,H6f&XAaDO/:M-SO=Tn:N:I`[=N!FWahD]]b4j[spaGV$7B
%I#A_hX<"jMiPQF3cP2&K<T1>1W(\!0MUSH5p;(Qc=%H]A1)*gJR1]^,b&^7NOr%\liUp'?L\rXV(!EC]Yrfp@<k!?;cB9G(#f2WX
%l2f"o\T(n8D_:L-AX;(JJr_Je51mm;Ck+7e4pi+MDEa$")_\HObkdE&4ZN:.=G,NHF69%VX=cis,_Ri_f"s`fJ(mjZAmn7:3"<8p
%#dTM0EtVW4_8:p-/i,cD:88(LQ$:`+R8%L*J+c!AZdkW@'qq@TP`BS19'Wg4\.Yqn^#a)E1`g\J]S&c%Ka7H1C9YWo;XV1%m.8Z,
%-h9jOLG%YqEhd`\cQ1QIR&&&TZa=9V%Q6h8Wg"t[/2LuB53BkA>L]nKE_ts=Y9I!\8@-BjY^dat<UnKp1/Y?R9f>Ug2B`QC3&NIo
%h]taEH$<*aYAA#Iek.iLBO20I>R8Z&bHO/Aau"qp2UBGjGG)knYs#Fe!bI2?8K;,"'%afpWrQ2KEmi`r9ZZ@#G)/NI"bK1G3T]\6
%k;8Fr!p.==_;9Lr0?6erRUJpP(R21"bIK,2<PS#tUu^.j3bqLQ_ctNKClH0H)4<C<")YJb=C1"k;T3c4TFbX+E=.TP0fn/g@>!g+
%W$82H3=7!_LQ(H4k@HuD9$gCWSlmi1h.=Mc)YEa5)3cjAaEe.=i5s4h1fbS./ldl?_B&\oU\G`C#<'XmklqKu\Q1qTJ2O>NbYD1)
%(1UtrS$N\Z@VLsm/'4)c%j@riORLTLZ&A-sV(gr*Zb\r$3_Vr_Q56/R[&2uFTk7<PLJpX6M3lD)-FgDs<=ZsgZIt,3R^<*f;:r7l
%Lk38erJm(FC"YKUb78UOU-^bJ+>buUqQ_YbOteX%S?RQ^@:hmKMhBFc=_X`&4D60H`oPm65^rk&I/=bFn6-/W&/9os_cdl51]gNj
%`*hD^9c;Yp52qR^YSfWJ2'MY5gP<"W8!Ee6oeA*R[O.5--_FD7P2*U63c*)lZ_g-%(UT7s6mDk?8cUa1H_U#WN;"BgCt_7%5J#E<
%8HGBAXb!>TbsFDjM@277,++ZT>G8.RQV\+L2!Pe-)`$OC%[Uj-s!4A&m^*u`L52cSf1#41H7m$$$&<GGAf2NW.<;)C4t`^d28ic<
%J/T1aSC-?K37sj('r/jNSnQ&[$#e<`eI<4RLI)fCE!.d/&dW(a&oej,E'V*/Ob,+!!:PRj022a<6l`O/feq%iS2g`:.#Mt`qZUYE
%haXn^66"3PMt#L>W<<nA@:bDXGV"V[-T9,f'hZh0DES).QaI)`Pb%EV`iEVV!\pNCF'abiaQ)K3@jik)FkUq`c_qEK:kG8(2mX,_
%IOltniJ1Xih.OP+JsVaZ>f\;QMRXd8V_2/*(oOs@3"RRTU,c?'Q+NN1E.!V(ZV,!OA3=,=ki&BnS39]_g"`\MWW,ed-$pS`^hgUq
%UZr!P$6X8?LtADI`uBuBcatrW02B;$#MU$lfTo[/*C8IGLEajqXXqNp>>C=U<W<;\hh`U6nj`<32iK4JKfgj-g7Y[e5Wi4FkTY!/
%1QIc$,PJUI;UqC(\LT$Rk`6B%(mAal'^gI$[2QhL1?u1^*s?2:#bUbKP>(F1.Lc)Gken:knJNVW"Z78@c@qG:B?qAQ=[D]Ca\HbE
%P5#r>ST.>[@:Geo5^[4Qj0n!PIIt$!\(Iu2^k,3eRmOk8bCuFOO``U^01W%dYS>)G_EhGcY;d<UD4Q\Hnk&(39.%S0)XCHD/c_V#
%e9`V;%XDuJaiD9GMA71!A<-BANnJBhO[tRf.,.]encBRb'F!8!'eR(#iS#i3QJ&uOjL&tg^qich-krJ9=HRjHi4`kA5N&V.a;Tj3
%*Y8i@(Z?>3'WgJ2?]s802ZKFLiBh9ZGUk6f1\*YV?K:(X9<]R/2@#6NZS<p6\]EJU.T1qo3Ki@r+Cqq`q%;JMa8$=fAE%hUY,U?4
%c#J.\R5*@r\Cubq\58(sOf"3cNgj2b_eO&*(u-#5QCeh3E9e'G`gR-H(;:GReSJXP=q/M-ChMGVO(Cr@rX$%)Dab:=+fWepilER5
%g(`<m!]1Bm-7A5_`,Qc?TP9N;e8g.6;"<e)8kN%QbRnJ<s-T(@oS5)K_]M?ADOH^BF[TtM\49);83Rj_LR&WmPFtLX=d#f9W8A(@
%#r/s7NpDC=3g\IL1a4L&lkJNlGQ`a.>Of7KQYUG7qISr\"4u&DORR3u$$>3t,1bIb`150\RQ!q8*(Dq:Y/LTc=UB5Iq!q2b*@JUM
%9>WDX6MP*)MkrhC4'e4=8li:&md5(X!R8PqBR)uAA9tF*XN3iE]]t=mU3,KBh`hF0KeOm\/!e!Gp,4H2f\M)>9tiCd99CMnUuM9=
%6A->O5Q=K]))H>-*>`X01Q)ZHSr)_&c*Fioc@pb!]534"`YCI<:go9a2:Z#\G<c_.^*oS1;Tc(L#*OO*Bbjql^1A_QNjhP'[uE)#
%Dm2)"<qZ3.aJe$YjaAG#gC)F$HkRJ.XW1P_Z,Ci"OC_L#o'4riP'B!Nn"C=H=bDUkMP.CDRC-/?Cs'`B(uf-V(Z:bG#q/L8)(RU'
%ist<.a,?X4/bhD01WAM/'RB3dL<c%`Vp01]/S&f$SZCTHYIh:.\L'hP_tF2VJ#LV."K7I\-C5WQ"q21g0.b"I)1tgS2UF<+N2/2j
%hts"++IVu+Bt)X[L#$F8X%m:k2j6f;K+TJ+B]gV2!0<K$ZO)2?`1X=tj2N/^j1dI6>/=W.M,Z8/j):\F+2=[8.V@FJZa_Yg)YJ1.
%?KYdp;5)63o,n"5J,:nt<>[S#\\8")Fm/WW-<KAo.;ejeLnOte#t[J%-iW$X,D*g*&rrFq"0keC2Z?8eb+oV7;F.;rh`pX,57iba
%LZsBF:/^Wk@\q;GAj=;#5^8M.A6>&PUSpR,MEG"5]Nn-uYNoMk5=S[r=\%^A<Uq0He#+m[M4\bCR'm$oN50A)^'"Q)+2<GR897MI
%UM^]aCd7mn;H>4-'R:=,,?VMTX/H'+<)?%q#k!pR+M$t;F(IOj:3)tt=M-BZ'If9&Gi1gdor6$c`>3r"Opt/$$9UqD,T<G2GRh%=
%*KL0dCnH>!*-qag&RMQs=glArh*:qj4#j36M4UGd&9Z+YcPGbm5oWjN-#dj+KsBu:RG#go"p1mU2Z]Xf,Euo:c46J4TsKX:,QpSd
%;/Sr(nmfcX<`:]Fp@7T8"-?VVr)d#98"6FQetkD^jt`<K"MYc'/3"i0+Z=JMCX!b\%_D6ce533%6)!Im?m$\&.4J+'0:d6\aJc2'
%J,4/8Ce#)EB,+-FEfbY[TZAI<D4ii.3[BBq)]0u**$.)j5P!"7h."3sb&=fUWo0f;O4TDqaGLYFI?r]+'[X[qB._47W4W?q#H/!f
%A;"A1&bTHG'ZR@sl_Lrk.+!n\P]]'u3.k<tP8c#E+HW)V%i<]iRPD_j&gG-kXO0Qe@)VP,N9>udq'-)-c%"E^U[4n6^(r[3TPlPp
%JhT\JqDh]'Ug#0_jgc-RIRju\?VOhY5O%Y9mD&F?1!UK.Gl?//a-O^VqRElQP(.)\k\lJ5c^@#s_f'f!3.Rc[Yb>H8g4M`A3O=Sq
%.5eoH-Y30Pf$(3QPs2uis.$nRBLRh@`.3O6nu@6X"Y0.RUAd,p4Wd/0HoRH%Og1UNg)efJm\u,PAqDOeL+qM(4@=#ZZbWnhnJ_'n
%_(T(n+1/QMj'k!8/ej0d(/=]#(S868'ubXL:tn5u^`S=-c`aMH;As:"!eVnW.o.;r_B=6F-3[D*=W!Yr7Hm_6#[-BVFE2q&$(Wiq
%c3G[.Fl,2o(lDiP+</>E4d7.!@&W`5R/jOg<?*X&&Ttsa*EAJ$/#$/:]+l0"e2!0O0Vmfi3`\f\F_cc*oG?rQ]r>#_h0mL0\P#r[
%U*ATaE(^#_J`$V&"ID5F79=Qi%j5']2iCWBb*aD^q)sDG=KF<:8<,p\>SMpY+V\U<51V,k;c!f.TqXE_2![4!.SP=hF<#@%K5F2J
%;+1p\[GccH6\Ldldh<omaLffE.EE.6ckjMsI4.W+06.fdqP/!AcI^*"d,7q=`+X*]9&>.c:lA:r=J@qsN\nAbUgs_gY1TH<(u/dZ
%Vs#iX[7".\rp`;i_!_m4@l4kcO*KY5lf^VbM/YZpn/c:C2tP?G%oK3gAmZ?]meFMdmeEFLVuQHtrmQ3&n%ZK:Fo(@[r29SXoViH[
%CBT6*OE4=1.ZUlaZ+M3Y$C2E#<#s5XNrTIV"ojsN>BF2^:<:<Sdl<1;L_ra^/!bArn>V@kFOYplGKjAT#cb3s.Lm=`AFl3sHq^h3
%!W]K$JE3<[pWCARqNPsg&$P`N+!^CVCE.+[X6i\poCegeEp"m;JHRbB&K:l7C7"!%FTld9QO!`51GXM%1?pYd^Y,#pDWODrN+,C#
%.*uFS@jkVAQE3>/(jB7J"IL(@,gO;E"@??Y<j@Md%N.&04ZYq)*F(iVEgKDLIsf06]+M->ID3jr9V_9VrA0mQr*ZCN'b?,k\>@"_
%,0,<c>j?V[dKZ7L8fLuW&cs>NWRPVd=V4pf?'T8Yo%BQHoNctE;=dU]$,XQ./<F>[-%p(g/R+\7_lmPc7DhjZBk"0]T4.5]bQu:A
%_,Y*G)5eWg`)u^sWXE]_&/sM7#gRQG,jOL!=\31a@UmX,+OX'C]TrB("qT?:G+\#^-2Gj.cPlHUlYd6Oci7i?\MZtP.l`*+l.8Je
%WkWGC3Kf[a^G!;po"H*@o2#;-J,:o!jm+%:rS>4^Pb]!^Tg>:HbXaNoLW$4O2)=Z*LT7)a>T6MZ?BjY@j?JWFF9Hlnn?c@NYm3TG
%1.d`Lmo>hb@P(RJb<G#3Ne5.O\qO*5@FI!)3sd4MQYA0^&m*.-emMTX1U;N(.Sq]O.9BRN"!.Hm!2sJuT[F7qaMX0DR/Z`S.+3iK
%1eP6=Ei:+qV$4ugikfOtI<96UP3E!c%K-I'h=Fd=7:dGR7JE&"Io$^]OcIQi^-)&[i1peeW.M/^l6%6mTYTe4ij,2'Qb23!).DLm
%%ltFM!t#p(%g"sXo8emL;Lad^$\*:i-;REr/InL',Y0_M!6rYd3LjoJ6_0PF<>>Eb_Fmi9Y!0kTJi^TCk[jEa$VBHGJuI)##D*,I
%qY*S:;lEY0#VUTK\?__3XVes]#Gl*$W3f[E(QsLS`>2(<F.>K9XUkW'F7/R/?BEb^Y0DOtphcE8;?>pPpiuL$nJa"]jP-u;NOg$f
%>1CUr=,9Kbn/dbs3CE0F."aCLaT<@7U3C,0lN7m2TYR"BE[WLjq(NYOMFIWr>*.SU+R4J$o*\3N&`l=@(Q3'J)-6;s>EP4aK'>\<
%XG+q(N!D*7:t^TCLX26.,-BAm6m:bD@W,6@;N3NK-*f&PB(.Pk9/MS'HV!aCF@eP:CrSdE"pkOP9hEir?PLk\U(QB31kIgidmR"=
%].7O1lkX9,F8<gVUnH8;i=6>HL`6VI_Z%sRULO=g2Mcc)J]1#<.=Ro(hSb@<esm.u,pTB5phee1d@EJu0af'1UdJND&X%WhYu;s]
%PR!U3Y)#$$D)N9S7.cD8KO:"<7iE7X@7gAtpH!lYPbLjHg_6f%,cG]hj.?Cd$LM5?gQ^*mZN$Xk#C<5*[dR^=V9a]'!c2s964]ca
%<l0Xl7B%JEM,]C2/nZqZLlj)38="(h!hg'n>A5iCf/!+ZXk.DFq&+^G<DT++0G$o$'f8/%;DPlD4M9au_)[[j>#g\p;alEQCh?EM
%Ws\\?S>;OqV&m7HShjVn),$o3.$Ccg\iW4^iMOc?'X(bB`E3eOYqltD,iY`W8AM%s5Z>UJ5[7W(k4c`]kcFH&[moX,T,:S;Zidb<
%^*jBo8Vlmf[(p2cmM11684a.ZlA7l&(FimZO%3n\p"uEG0.e^'[5:f29HgA31a8+a$uIm.W<;stgnI[*R%o>QSN@+WM-?T@7Fdag
%<7&V:e/:a*Gm2tuQhL"d<I$/Y8r!.=;^nZ0!+H(:@q&ma;5>m1K1Bu9)5C%cH`A;6V1\n+8p+8\Zj2I$a`O11S:/d/6c=X"&QRYd
%KFMd9k(FRik,-F!''KA7WVA:RcrmSLfr/P#)`k!YE^H<Aie(qg!&1"k;sKsl:n:edL5b32+%C(]Z%`l`b,b`]&nChL).L0Z_-:st
%:*%;G'.\Yp)f.;P([H8rT;%u1P+9icSSMG+m`_?6W1cLC'VL7[oWa<,U-lG^]TZZG*JgG6+L/)KXu$T*!Gn\;C4EI0=,-b$(J!CW
%7Pb'_rK%_hZlCV>Ooh"$N;mk^ObJLG;)Ceh!m4a"kc?R5/TX^#c3<+qBf$pq'nF@i/5"aA!&am5JkCWd0'lao.!3P@C;CGWIMLTW
%O#UD59Io,knL=8V1='(lTUYnpYi(^KMd\J<Y+CrDS&]4)A`Q"g9&'AZ/q4='bPhbIWQXofJ=5I2nr-?-$0t(&-&r#Kg=hXL\L;D)
%Nt@<iOP]8M)>MO*Y5>!]SY.HSF70o6,%0$:P/Z5+2qo8_g[hhFmVQ\gO`p2+F1ZQc#h>Fc:*kH"6<skGJn%>o&CMOID2qeUPsV1*
%]qj"U,3pEcL2`8I#(H/%(]ugl@%/`KK.T0+ZjO5@s(CBjPBml>fA2bN047:J<CK)1HK\'%C,LD,%\.E!0nG?TjZG6`#'J5j5ApC)
%fLupNPi7s>EQNHYT2'YRd.KXFb`CF_a9&[r'YJ(sT\u@6?6pgIbr2dY;;+VlAe']U)k>=I-:8Qk/I:l$\+\mna_HW#0jbYKR-a%6
%K\\!Gcfha76&l#j3iU$*cQk'EWaLa(j?]q<91(6aMT%`>1MKI%A318,!q9Ful_*(lLPbRds+VrW?];Q3I9c:*m:o#Ad2*-m58(`7
%BTO/gP-7^8Es;biVXBNZ6KV]2@;,APO2(0[2Xk[1?mbW^_A0mVF?FnNWI=c^[bEmmB0SehfH2(BTGPEr2a'(9mm$(W5BmqaC@N]&
%bb6mJak]_]L+*GF?859?AAVVUCm5pU.5-86dAr*'4K<nn5/hUp2*bSsG`&S:ro"[nW!Ec_mN4Z&4b('6_I$F@#mitjF)gos\B@g%
%9jgdVg<"8'9F5hD-uk'?`-VM@nOeA2.!]]0T>d8O#h#!cU*q]l*?]G55,r:D=;nDiCmI,I7r-:J*/eMV6tDY-U!.f..\oBl&$jm3
%g)cK*X^XE\NiJ`l1OclA?#48(GCUmUV6%Q@>O?uAKVDL&>;0JHWj<TW5VB*rY#2=+ETlJN.AdR-XN\COZ$*8SVfR_%K!Aoii3YUh
%m.`M(diX/]s6$[%-:2F>L[O4'6GCMrkG%$XT'Ur*d("3J!KI'!UIBJaH<bRUO8M9a/_Ik7+K*GB!?.M0$_W]"LO7uT+q"dMC-daP
%LBmX;\+X2)hgb;8-1ZLY8='?i-66:jD%aH^II%'*DDX8.BP\VN#SdJcknK>/Yb?#5&F6j/UQ-mGduBVJ5;Df^Ob#cTh_ZDZ1"f!^
%%K&7UDfN\q"08*A^G@3aTV:CU\ElZsVQN+S:gXupmE]Md$BnKr,U5lE>I(Gji!at$TM_g:F!2rDI<nL&o,[$!!fBAarGLoAi^7lY
%==\3:?>NT,)M<qRb_$N<M#Kma'qc]XE'9.*@P#<(.E^Fed#5F!)iES?U,;jl@24QScrBV?Wp3)?:BYj3RO-[1+9@ninaA@Wk$.Gp
%%40_NCD0."O$%^[JkR3m&HT.XaTiaL8e6^]qmpuD#,+kbMP975!'-.=11ZGa#Q'/$r1'3=/Pqr2=oUn#r!AMb`fHg-!H(0qpZ^7q
%pah7lEE&U4a<Dm<o3Tp-jpcGlft5WO@d;4Y76i0N/BApX*R!Gb8S)PDRi1Zf;DP,E,M(-8DF/cj0R(X;&T,+g.g?K>D%?rpK&AI'
%l%nqb@(BIlQXh'Td)XC8Jp>Aq,PTU[^#V\)D4m#ZAjPkEPYh@?F2\ZVUoFuiC(>\PWebgoW[DS\*Z^r:bct_qf:D4$6[QpDg8_/X
%!E#:eO9QTW_UJ4lXG8#-*jqXi@&A1&_?H04X6+k4mS6$nTJ3>HL`674@b(Wq!mLUcAFj1[em8J>&SZqh12s\/)El.#ecGS2-(UNT
%JncAa2"@?9F53c47JkY"F_eX)f-u>Ng\1Do5)5MGmL=:%Ce8c=''k=trMYgr+`9&\ENcrh@-u'XZdE.-E\*drDG.:/pcP/(kJBP3
%2ZBceLq<f\FiP?R2L:[_0j%B$KPctC/_H,H]8pf=g.dkJ?q%k*$_o\)_nmk(T"\)ci>`u1.).a[of5SYmNGNN0uj0GeCBP_"Gm86
%roAKCK*MI\ePK@Z.5jQeQ0)O]MF;IIC-0kUUm(j9j.&o$7jF,&..8\ma/["!*uWND>(3uC<rWQ]qp.P?'C+\W01[7X)kri!_nG-e
%lSZKGAJa%b^K,'2Z!Gn/#'hI2TB8>(E[1?:TGgGr2#N#ApOEMGQkbk<03$WHSec2VP=8\'`'ZAT)OU]meeDCl*5KbGXX'\IZ$K1g
%EG,$`mAie?GU!bRqnDOZC$55%e.<r^X.?90L8F6u>0C54>'5gXMl%eth#i.ML@*&sPh,S,\&p\Bk]@]X.G[RC.OsQoC.JE@k7Url
%aM7&f'(hL?92TJVYW?H:K+54CjH.[#qY4?]eUhH9>Mn=`lD.%n^#Odo.^gt)-&DNA!Tb'jp8Vc&,Im35=jPkE[C)Ms0+lVB4]R2)
%jS2$GQ,b$FlogsMe[P[lI!Y2M&$IR"8'@#A1&V#=hk%3LDZB"Zb@s`_3HVL:L^C]RnHVdGA&C;RqLRF\!73NhI.-s?%*:rs+Fd\K
%#%.'+c")V>IL*&gmTW?Hlpk=q".4o+,X2TIS=g*mdl+"K7n`uS1)PO2]Eu5*5^AGG!LGM)f$JUbaKm_Mr[_EsDU!]F@QmVPnc2Hn
%gSsK+IEV/EQdHiB!lU6t6EEL(9^IeNn+A'P0cfLRg;]@qjLFt(7.8Us\uaPj\U`c%q[:UTTQf]Ade"u5dk+'\BXVn%Q6&jQg*lTf
%RVu4)lnod<@&g_cEN>EW>c&kQP>-UA6Xn^1Cbc>LXA3\K^Hulk?Y;Iuq6P*b!.gTY%3a?95HDP-$XXe7T>q/O)_iJ"DUE]faNPiQ
%M=gOR.0.a53sG[](k@q,R8-`*"kqGrn!6r)]m0\-G]kNrn#88frN:?+*)=l5#(,kraK4WD/^*NAKjOtiO_0EF!.ArSUZfQ%^"kWs
%B(U_hdJ1:Y]M4P"=7NtX-\uq6)#\K9]SabeaE>@M;V`j\5#=LkC<.Tk$_+`TnB]4*6N;?G&KF"^4eB3AB?cddgdTkq?#N"H#U8,R
%fN5'?>PI;tg>4o<7Hs,QlmNNep)2[gfFEXBMdNk_a5W\%(5MmXN[7^l$g4Q,AjW^SL6lCIa*0-bW.r6m@XR02ctPp[TYA?Nn(D;3
%?`PP)_#uG@GQClG;[7?gaa_Lk0<%H0gmb1B*S[e0d8N/:J:A+5`er")M7$0WIe88-(J>esl6K)V6dc<[d/?FUo$-!(PE#]lg]e]=
%W'32n_`V/?(,S'_9@SZ2\TCa5c>q<M8Ujt=,'&:%7a:Y,:!hnbld,!T,*W9Z;"%"V7qp,h&Y]b!TcO?HmeA!R_=JCe8,h=*L,V,Y
%B5C-5/i>B3O77KKDp*CdhRld.=6V7Joi/a#br?K5&'F\l,eSk$C6V:<I4U/oo6aB!EIt\1oJ:;`(K,X:B+%Grd#/+HpPO<a%*MW-
%GIecYXe]BfS[tL.NOmMh`mTISrT=O^T6&k\-?FoK%TLmWk*:lH5Vf-sr#1%Fm)"riT=SsK?,=\H5nm/$0Br*`.^lCeSDNiTWL79*
%*%`-GNObd;6[V'9JmQ_fZ0r:Oa"E]9Cp\+]hb$U[5^c+p&I%Y%;56aU31uT^-V8I\6D3aCfR3)Akom4hmg'8L3KnKP.<ER%LaKu*
%_,M\[]aBkV3li5eJHJl7Y*oqd)f?'UB0sk@L5;]pEq6DO)qXu_dFj97Z1?F7OQi_E'n8m5Fh&L`(KutDDJEOeX!9%jlB3Ck7</(%
%hlnV&.-pDDmemMcF-#jF;G6W[]8fT_OlOi7N@f/D5_ViqpB,`pk2;`fqr^fe']559TC3/G:Nj&Tc]bqi@+B<K4+Hj1Ef,,n,ER$T
%d1W\L80[\4G]d^-Yl-?o/W$VMd_\!5aD*]MDmmtV86S^5*^qhSQ@]AiUK7Wq2q[FIA_O/YG,7sYDRs;1e;kR'X.1g+R)i<Y1)!Cg
%g;3()RQ"1;^DKlTI=4HK&A`Me"Dn5(c3;_YT,k:t/R0nN>/s?MKXc.g9,G#`H\D.U@=3F6JEkLFS>ZP:?KUVW".FBd9NM=?rp`u9
%VFj>VA+/KXra"&C!ig>L!6LYA@k<^(BhK8:_';aM.*V6=E:*IH]Y';dhri5PKBQPP9X'`o&#/85h]Fj!%0rdA'`EI+!>E[fjMg!]
%;4r6>f7hFq]qI:2pUph:Y49*-7O7C*Z0:`T?5?Z-Cs+\oL(:QRcXhMEW6I.@D!O!<TS93'`q!Ti;f%g?6])&$&tj-'D=#V*C(h>U
%9A3H2d)43d%^E>Z+LRZu\`.E1fjeU-5]tYJ?.(drEEYOR'M7#,ZIccgPTZ\p)srTOfX!LOG7`V-h!:'X\Ie`&SZ+]tj>QM=e[6bm
%m?@05Lr/\U;hik84U-2(pP0)]H/,#cb<Zh4ahY8XF:D:WdO^OB@dRB`nR\\b%>+b"B,uKqW;^WO_*(BD6gBoNKm7*nB-0Tc6_J>a
%I:/h+)2)R?<2BiS$Y?Yi$<fO8#Tit]3^>/)N.eEmR6fVjASe(N!*VO[)lQ`cgfoea;dG.8BB^ha:I1CUHJHOARk!!`H`[r-k1$]?
%8i:?MZaTen?;k+Z3N+DL4rUq;/i')&gR!g\R:Q<2OQ'kjL^NuCgj=M%(LecamhTKUp?Lt0&WW,L)'V,oKprmThjWj0bV2H5T".(_
%ki*jLMe4sJ+G(b$gPh**%S0MeQGO)6BQcc>HUE,TpOuP/+#gQ+TC[3oJn<P$4!b0/J`VhX;c\!8B7#a^I:AL/^:d9%qc$B<'^gHD
%Z:WNe?CV:EG%Hi1V9jghVJ>\'kfQj[$!gUI%`4b)D834u]hRZ@NBm/+D[1?p/,dZkI=X-uJ0'%M:\C:$A()YDB98Zh5X'&)Kfs/+
%1V<.2kRm91RHjq.(l&0WMnI"(4O_[;E#ms@EA'3$01H!c(!plspkEIIp:Ue=P_`?QH=VV:cJR!WRP/anb_CN?HpQM8^/=c+J/i+t
%=PdISe#_mKIuhc_>H3>A)>UAjgA5L,]7kI?^TP$$/:0pD9p-5e9ca<?SFY49GReHO.fkktqoAb#3?b>Mr"u!DHt8C(:dSYV?h=0$
%k5aE*C$/Q_A-ApWA-P[ML.*U;VVVXISg@?`jF\YKNhaSP!\DAP4B(65KuGSlM\8%i\YQ&;Mac3kqEW.fEEJ,Gn#>^][6uA%d`[[\
%Lf5Kt\Vdn@a*&Ie#.3sj2TJ7:5/lH3EH.><`rMBC[nkP)Zn>Na&9)V2*OL#aCpC(bcF@nWJ81At:,,@,HAUDDI\Ceo!JTpGgC7iM
%8Nq#N7:TrAh/5L27g6N\l\Tn7]A3j2jG4Wq*W$):A6WCQH2_na^or$gI/DH7][K[Vh:phW*26eM.oRp/Win#u(/m!FUKA*Iafg?8
%/so6_?e80P9$lTmeUI,>aXm?kq0=bOih6)s3=TtB7XJ`FV]\=\XAR\Rm`aPF=7]u;73U/&#DZrOieZt@+GfCR$ktk%;W?Y=/s.\&
%3W_5mg_=ekR3_:4G"FfTJYH<VV8oq.ODuBVTabc*=m3koS\TDLFJ(J,nK]H-ia.M]E&ff,Vui,DN5@!^j,b!-iWl&B!`2Lp@)9!b
%f3<G-L`WIe4EU%)..Y*]l;1I184F0OKD3qFLjZYNaS>90LGpf?\p9fj]GJg--]I%UalT[0r,6L&Jn2&q@.<X@6)J;eo=R7rD=\::
%7e">>L'p%Rau:6TUAZ'7APd^23FqB,_!Z2_Ljf;XkKg:W_q/5jq[A6/"kho469)k_l,9F6ni=\F)1'AW/(_Dn4m;!i\jjhVX9kF#
%8(B5I,Y@$bT@QbkRl#+ge6%c1^KZs)LjQh(CE-g9:&C(#Adhk/_.NFp:N3aB`2<e7L/Lm2B:j/FhQ(Qr26h\K`"`N4Vo@Y[-@45N
%Rb%eU;:Ab=kN"+#qJ*YBZAn=/`Bs`rcp>%jnM6ajY`]q!K#EUo5rjg:/p&M1#p_Ai^$Ju#JQ`2OOMCAF'^3gtM?`eE(K>V$!G5jZ
%:l1"VZ@9J`Ku.15H=sjOVuF]</4=bja@_LHW0\Uo/SY`D?Wa*[_RDde"sK;V^IT7bUT0&11s.cd&2N>r9K+(PWWY_<_mn=%$h^^g
%H^0LUEYF-@K\0"ZZR>2pjGn"<^sLh2cY!P<>Ji9EcJj@&W)(K>(k@$[df`4;c4gr!q+c]#LJ@njl]\@2H^etm')P-lVh%n^dM0;X
%.g;RdaLt<AKaq\"/k9OP:<Tf_Vj?@o.*r[NjS/tsQ8I^"45@*<3n8)BWdCY$QKX5hE_iP^:bN3fVR5u//6?d[+^::j@U9Ot/di9m
%$J06qG64Nt_0Q499]h^@[gk8t@o,mT6-0ljo!J@'J9<:pe0OYd8;WrdN$*uq1j4)k'/H.OOk`OS<?ofHWK=L'k&9m*&?7!c#q70F
%TV5lA06-;Il'C4_flf$I7tCM,(!9rr`=kaZDSW<QE1>5,?a:_n5Zab<>qr\R[:b6&FL0Tn6@0hqV``Ib?%/&XR7Ebc;+;qUM$IFL
%WE;]>]BWPaS2:^`3mnI\hN>+=a(=tc+.jTbBV-Pt<k07:ZR__IZYEF%]<P8H`24:OlM=`2NhcSmCA?I1gG\Wa`7.sPff+Q4Z#YqW
%cr2N@)3A:bPXI;$@Jh'OK1U8@8!WOH9f!-)qR.oZRe*7=\LU#\:Ghr]*uK;Li1Gr,\UkCc\rb@LYJ3QWMQ^A--5.A*lP`ZK@Eh/J
%*!`nQ6BqsBSKea]/[Ic>9?^ENhaWVeV@TJ<MQY\'?l6G8J_#Nq#6;$")Be0h@7/G(ihmgO$HoIA&&u+3D]5dGGn;HcXehF8hr;;o
%4Xd%HR\G<H,/soX=H!,.du$ueoJq8*7AW+Dc72*G6GYC)@dfM\A3dE_.U$q"#S"_Wr$0`'HXH"$f%g!tBUL8!n)-3&]S1p_7iN,b
%#p"MS@gc*fNB;cr\rJQ:*7HX/*#@fJF5V[tHFYb<+d]>>GC`G(RpEnq$mCYAp:^0&VN0/EmtkiI7pkU5`KX36<DC]l.Ad6u#R)S"
%`K[#5_^^qBl:EPSIP-H&Pr=ct^@6t1`!)FVJ)ak?J'Wi/46o:*J_&GdYi48bOnjlqRh)*CZ;+"H!Ql\@h^PG@/sFDh+]D'bMJ0hg
%@KQ2+Lupmm,Uc/2Yn8E35gNBp:FF8K:otRkU7GhHjQ&kG:e<!!k*/B!.C&VW0&Q,e@TGm[.C$:WP>TO;!RV56aqFetWpF!b>XQ(G
%eV_$.IAAK=E_HdfZ)(eG3MqHZkip3p&$8+?E(X#"VXuS1+>0f])Tqf^Gci;*d)SOq"oL'\7s?Fi:01oV8@`.j`<<ErC5N+'dat4L
%'[m4k.AdK4'GI.Jb\rI53@)rA8hg@Co"\!TiVfC6jZ4p2PTG$:H_m)`U8=;`7)&lGc7LH`KJ0S<*-R3rZXT?SV%aSc9d:%@'GI,W
%M5ZtS!il%=:,-22MP7Pd5CaH!^XGS=kPDnHO"[0m`7BA"q,Ld(Ii$jsnk3W[h>&@ih8q:GQP/&kEg]@B$'8<^=*f_#@GFGKT5?q`
%9A(1+Qm?i']:gOQc<$/WAIB;[(IFl^oem$VXk>2<f=`T!9'^<1KT^$JO^Q%u>Kcp>:+u^V',q6)5\:X!L+0A<DK*lF_Z\I?n&R0`
%ZG..m-G5b!Ioh@2-tNTXZjoq"VFg#K!Q];P-c>Q\AOHg#+C2sW@_#h`VPFD)VHmmnk8iK?%+>U<!?IojaT,n>#h]b;_*fQp.k8#H
%'hLG!9S0R!6OBV+ZkH+u]kp/hM9p3b_/oSZD3Oc^pUG$17til9$)SN="Hsm<hAIY(Zf]r+@FD[\9pB(t7QrS$r'Z\3M$+JWMQ*0Q
%,GAktXV+<\elR<Wo-_\;P[>WA>YE$5'%^:XJU-FF3#d54#:24dl'gLYN^tF4G87H2FMFjL&ZEL`(\;NsAJ+NOVjFRZj7Eu9R58nA
%f$e^T2@e8>gF?=\aX(*jnO&gOU8?5c?HFLdW\E8N,s\*Y<'a)%QN3GXG9rT+;MOH^QP/qWPLD,&$_YGF\WTTRUHD+.!C0s)D&\NK
%Ms"W;#^R$SE<&Ng5?nFj6<^WqEp8Q5H3\*eJP/0I[<PA)gW:b9`AJ6"/eMhFSLM*;8C+_C98RD\*gE4!!icUXSQb$tO7T'iX5r$-
%^/I[kT6WjpZ&=So[m6o=5V:Y@:s''*=n#L1#q2:0]e=bt\qo->U7.(*5s)OYF@YA5/-WC*^-43HXT3='9)tqPHEp3!`cZN-D@+*k
%5rrNm\YX6PG%QS+LU+NR4:,#Gi>BV\/-5]/-1\>UZ3-=9g8W;ZS=QNQ]JE3;?2f/o?4Cn3>]XGA!.E]m1M19cLc00dat+-^1k7>S
%JBX%TpXp[gA)56X!>7J*B9ihFU0X05U7)1H=TVQ6WZnc;W5ns-@Yrb/>T='\Kjjfl1Eb34f7!fUR7aQn&e>_Hk"G$';@NGf=X'l0
%e[G@.Xr-@1)97^uT[HHa@mj-m0==2GfNARlP"o3Fq?bK>[-)p*UUqTXDAe$hm<'R1%u",N<k?Rn='>p/R:24Y_NHT/-dkV;PR>*p
%OQ=t,-`b0cVZ_3SQ+/`AkqtQ'FKOTE.WMkO[8p=b2F6Tc.tG\3luL6KBdHrNmM(9$9!UllH954=X#40tj>[dZ+ffAgPZGAgH%2Ip
%<Eb5UKJSinqS=f`Am,MHJDGcJDUcE*b4#spoR$u1#<L&/i$';9g0jP^q^r-YRr[sk9Bhp`SImh-ieqX6FXrInVOL>/DFtD-c7;)+
%.df^F5X6$j!A2h6&uDq5f&ZTn_42YoEZ\a,HNo]Kfn.75(QsTk.B'Co$&DhrI0QEOD5i67qmo(9r>28#rqF+KOM<EDio:tUIEq^r
%j?1H,?;6NGleU&tWn+!$%hrU'+%%Z;-gK)QSL:FeQCMYYjZ^;\$R\\LGG7QtCUh^Yn,-3`;]@_15oT%XLUXINClbR(-J,4b&Z<YI
%5kf/9UZ'oAWS\Gi:"Ws<V@*(6I/FHrMroIR1t'K0gi[K9PSn:t)+Lb4j-Slp7US1L+L'm"=Zl*f[WkcO(EZ2!$66O=N^_,oe,Dm'
%NRLR@in*-0K!?mUW!lH(&kP'7_LrVTH,YUpEJl9EkJCP1#Bh5i_LLC2bR(d3bgBPU!N4SsW58;bc2a.PrLP%5`A0$+UFU"ra2P.$
%nLJ>SjYp&F/LmGo^Orj"iBl.$FTPKUaflUo0!aRqQ[K7Yp2HQJ+YfmM>iW><U\:BgOQ$?qBZIl*[+`UW;#^anEU6/C=tC7"hmKtI
%P*H78UW:';G$S=2e9XHE5[+9.MnLrBN3Ul?g2,*Ke8RF:Vg#+;P'%M$i(L?f_;>%peN!5HpOYGu#X=('hIef6IkH-.8HR'"JbF5)
%Fq*edh4.4f96?Lsn-M]HCXB(sb99@+<rt-;]rCdk:t^OWOY">-00YRW\^#nGGFc[T\ePIs)$d%PIjJfREf:`Q_VR&6$i3!-5!,/q
%DA\,<oCN!n:0@5&lrpp5f?Y,#GQ^Osi;5hG@i$dh&`=U;amou:.]`H$]Gti<.QrWG%0pclNG$Q$Q?.==/KZck:o\WPTp<>'#)[o?
%eYb3^??[5='dG>@0JOnDfp9WE2:naKW*$B8\Gl4^iWWM<6`HsX%7iL)cUada^qY]D@bP76r('pVBf^85B^,V5SeaNVX<UDZ4gIr2
%Z=eVRWil92=)oAVF^DLl)kRh`CR:h-d1h)WP9>R0c\eJ2+RQ[3BpH20Kb;p5JK?]`GGR(^p!$g<r29Xr_QJc1X_;l:,ArL#<#uHO
%#0,DHG2,+&ij[7&2rS]p8#f&58mQube<&<T3Sag/g#!RMUD[Q^earmMLd`$X&Xkn0[%^sf"dM93(MB0Md]q7cX"obBVs20"SdMlj
%&s'\W]T^iG:ICtsMN^0S7fUX.@-2VgrSk[,YFACp;nP8(*R\Q72U.J5eB0u3pfrJRK-"$9HKYtg^r]se1[B^EJB%!iF)jZn"PY%d
%=[/ET^2pHb`VCL]EiJ=H;qpbm8'%9:6B\,.9(5/_H<<,iN"LC3%27#e&.6MN^_2*!XbWp%ihj-Y`,"lf!:@%DD$Li&O)`6)hEftn
%`+6]L<)`.C42LZBG&c=E1XtS%f/[DEelCe.4E$'WM6FR)=g:]Y(RgN[Js:\1h)ipb`e?3Nd4\%^o@LZ5F^O?llJo;V'X'5b&\q!+
%pl-:@41'WbC+2u4E/gMM=c$u<R^cR\E5fMfelf/3e!Nk#\Y'eZ`5E]tU,os/dXhq<;l"rDj6>!_\Y,ZffY0:@M;SZ.-64abcL!=C
%lF`Y%d2c*qa/#]"*>bKL$$bUQl.T!qcfr=>W3dp/*Ej-8mMZ(pXZ]RB^a\2kL9AMCo:4r3A;V=I"TBA].m5;Da$8kJQM#Ufl>$38
%"]9FOiHR^QhYuWaoUq&"#_]F+;Fo-U7&.ZJ0SAE(<=l_YAq(M03<6@G9Kme<'F.7YlJcG&UDi@B7TDhfB;M7!1O?uX<3?M[98pHU
%f83:;duQ<0D<^<+RK@Wf@8[mD69[*#nEo$YJDuj?[cc,I]T?Q1^pXB"S-gn>G,J@%+:ecs-#OGh)[_]Y5j'?;ee66P(.c"ITar%'
%`p0qM:PW!@$jcS?\bQ$>0U7QfqQYHk4VDUo/16CR&#i"R'F8DOktZtf?%+%p$On.PHLq[te9J&+75X'+\3q`Zdi%Q@m!2ZKr&MXq
%NFbWbLiPbem_+9J5`Y+Z+L\K/WiPu;%"L_>&YD/Q<VhoSS@k>I#QcHHdL=At//oL"T0P!+RB1M0QYW0.`ESPG,j>FPGLiG88TPW.
%<^Lc<#`6"f$3ah,S6(*rkBN!NCrog%:ao_RcZu4IO?&_P1geJ(aP.qikj`a\c.6Xh>c:E3(\+Wn<^.!6/1-K)<FK6$?OH!W3/dT;
%;p]Ip_]@Tp[>nY]c@@2ueQ+6.krN%%C6:VDY#)_#p&H24!ZW;c:MAFGTF1aW\G$8U"YeUI1K>BUiW2+IIR@=Om=dT$"3>0eBhn3O
%1iu/sOT!,'cIi9;f?<SU0h*FDcH(!b6B^KFY4Z#e"%Zd"p,J9]I'`+<c#Ca%0VUl8K\sOH<@-6N<L>;_ng:Drm$U%.7L\1do/YSe
%ia-7S8u1(!QWBn+Um[`8S0T`*]hX]DFs<8MAA4FtdUJ^1g],39G&YGM4KSE.1Q3]\Y&o0T>&0%2dA*:!#C/?WiaWk!&:Al(Ab)T8
%rU"6M_9t^ckgTKmOsKGGjZDuEQSft#)OZ@8Om[niV8-P<AEFJ`1l<']pP8KTlSqg(5%[1j(;T(tJQBk!pkbW\74-"E'gJU@HYHh'
%Z9.Rq;Xrr9?Mk0Y`46FO\Y1#5(i[mLZQ#/@/Xm9,X(H;u/5AcMO4%YT@PZ0+^tc2C[.=]X+A\5T5-CtU-Wdh1[B&Vi'ILq$_hmRH
%q9QT+Cg<$d?LtTY-&?ZrjT:sQc.O,L\d,fl&I/ap4!A0=.9r;/h$7r,c.i@=7CUGFXV.V,*r[WiLq!`h+pN&%FD[<Ws0]iIF[g<Z
%K;-u2"#Uq2)CfZ@q0OMi)'W_kMPAdZ'&&olEd]jP=\0r]"LX)p8$+8u*'k-HX1),N"C'C2*Wf],>js7HJ--3o+4l3D'GobG>X-m\
%of6is.#&ijOKK;K?8^o<rX0mXfmK"L8@o4<SmF!4)Fph&et/re[m^LXG#KcPU(>o+82^LEVuiW0%1dW2e%K_$oRUJ2ee$S&6Tr^N
%SjJ/q/krrqh6O%:EjaQ_o3KX76p(%cY5gVb+['O"8Z3LfNj)"R+2g4]0R_!Q/SCTe>$>ISi=cQ<o20,>G'(,\WH%-uBpNuW1F8)<
%Cjji9Ee="`]]=iu5'?4jY!Rd.H%IX`PjRbU/";Ws>FT\_SV!,WXLjj<%g\dQ!`D((Z+R&M'/1:(P?;PpRl/!r4^Qb-I3H4Qm>Ptt
%c<ZCDRkNts#DH#FF!agUXDH$dHR.jmfl#RT7PSQ:l81R03(Fajp*@KL_]JTr9h0e^+u5Q2S%ne/je/5r0CB=DaZO(*.j9)AU5X[I
%$:ec>9d[X&;BA(jS`Zbu&r+C&`n1KC`NQj8Mn@D$=s)M6ODeLH7D<E^Z,%s_7IFCo'[f>l_#tB92$=<S^a#9^P%HciMr2cc72g#6
%WV94pd5dEH^?lo24;DI9\20/haC!;t.P1r7/1JuT5FrjM>$`(YbXI6Z\m!_Lo1X5R)%;>CCB=h=L$7A+rm2509$f?DCptd:TjuhS
%oA=.VIX[Y^^\ek4"+#)P<8TgJ)tY1n6`q!7TbHZOBN,7),qhcI>nt3uW%"p"<sXjm]"0DF+l\hU^K.e4Ee=*:b142l?1<!m%QRhA
%=MJkAc8JuF[ZS:tXn7,2<BK[H3iI=nTrn1L^>cqNf*=Y][;-42rnUZ&FZ9=1%?R$"BW!s0W#7h.bC/]MmHWUn,DphL#=B1gMND'`
%guf8BFVt?NdT$]u<<kn_[El-E,.W]k))^;c*Tamo\>,X<l.#)FB6Rk]PIP-&]d,tM#uA6)3SgPN;Yf!9&i3B.kT'-g>ooLYg$SJ?
%2E]@H/XC#<>)/XC>aOM<gmWsTE`='LW:CpTMhl?=a^O1+'F+_^N&6EE!P+^ZMLtr?9_T5+'.baqEZhrWXXNYn4FTP$aJL\9pWPe.
%_1:h;=5f45l2n-+=2D>m/LJ5JK+g;!/?dF!%8I6<RZjVA8<7N8W!tr3<>tc:l#'dW;ogm1Fhp#8I0\*KHdkX6g[6M(9ikIOcs<R+
%4fsq6-?iU36BG0CY-/$&7,_(/"Xc3$Wk-P^s5jN(YHhQ/S!RQ88@t%DiMb%-`4N(%'>$rjLj?T7<(nbuaddgXF-2qjpi9&oJ(3qk
%O&CLcGM$1:SB)fJWX>X'P240q0aK?-i]+EIJeO&nPIHob_+>)K+$!:8b`D;h]V2@`KJ6q[g!B3Q&1_X15UkCC6^i'tq^)T/F&;;1
%@%]TaGV1PhV[NO4@O(UGeU"V!beN9AouTm=_))nWg3pRa=B<H6,Tf*ppD+<?_*G);F&rP>W2/0:_0s8t2n3AEnkMsAT;#^aE\kgZ
%MLo9iWsMu_$H@g`Dd(cLGZlf51dO@Qn?L1p_4?j-o;a2THQ-*cV^?XNC4(;lqI36rXNRXkQjV!rF^7$Mbf^TE^RLh'-PZ6U?$GXu
%?j_,@f>/=c^:Qb[N[p.r`,1CbaAMH@97fZorTPp@5(:[-#p,RiZqGuO8Xnip$&08'8L)@phsQ[!DVrakGM$^q&^j50/'9r+C[4f`
%U;iE11.0Ss.k"h<lTgO5X2jMATZ7m(+U26#jc\2"aYOetA:C-!3t/'9HQ;913Ci_Q!i0ch1ej`moqX93]+elOKkB575M&YQmIe(c
%]l*9DXHB!!JpB(c,W[%7Z+@E!]\!nf>)4Q,HjF<(,<eJJ^j$oZc`\/l.'LtWWT0/r'QG.LZo>=P?Sg7dQXZ_C\@"p"$o&E8Xu"7"
%fT'buTsS*QiM3>WM:gr"?&sB,lFAO^3(WK(.7,G-g8CHt.d`A>eP:`%I!i*i3<N(ghYRf;NH?$):7oCCD^KOaAY7lF``B(rlZ7uK
%AR.4S@&Z+"e7FPVgcG3u'`]s\aC3F31k#4Jh:mfUI*RF_b\p$qm/,YqcKVoZ=TYQ<qXTa(<V)0PmN6GPoaT`s,>g_\LVp?+j`e"!
%pLsY+\'$KWf"#adSgg,j--"C8FHa0](j8`qHH\b"qN1=6LVWWJ^\H[I@mjQ,o"/[c>W<*>g'F3i*u)):]9G=/K#\6Fbf5Y)#D;^W
%JrCINbnpldeX.(+GMW",%aMtudEr7s#ed@%e0hhn12!22/L&4mNqPD2F&3<a<5"+[f:jlonIn/PPa*4=(;0eE@OkE7HL_a<]%E3)
%JmhmGFgs&Ce4Z:[CCAZD<r*dfp_oo^"pE.Aoq>Zn+ouuL/<RWfVZe3j*9Wl6iD\nUACZ46H``P,\hNmIhqb]=YC$$.lWfg(&!=ro
%`KX"Xo0-%P:$u38'LAE9pKst0fmAqef'>eRNI5RMY%YujL8N%@&bPEX!>_Sf+C/>A>sMPB'&QB.qLJ9/V@Rc$6it7hl5[%ISiWW2
%?heF>j`enm&sSCo4m_7TfcK@[?5l&][d=\f5RrF6XKdn:e`0u/FRfqt[ek--Ym]O*(@of+Xnh^I4$>h,0E:"7s/KF#RWgmZq<?f8
%H+fZqKAo^J+jnr:2(S@+fUpBEV+)(>k_UPor$dL-61fj#`dmP::MOM$?5HX^CrR.BY_g"/5j<%K!TaebN=i!?&*+r`)2,^,d`XdM
%^RDPMF@KcWoU#qBck;,NJ15fF:eO$;?r:KjXaF`e:*,_M@9,\H^JeDFATIEqB@V8[?<4%E$@Gdd&je0DW_Ad7[XLqaKS,NodI1bE
%QDWog'4K^u+]\p5`9'?s.L7c51+=@&R`!$m?+;keKW'M6+bk_>"/+I`$_N_tBqPlt"&^;nN'QC?3c%%9a#UC7(Mf5'mS2-gb13q9
%U,n>J;7X6\p:M\mF*)Pq#TQe6/U(-:Ar@_MH$Dr0`j7TO+Fk6Yih7=/l:i'Em4iC`eBUFO)"_GX+g@Mmc^Q^G$\[/;"-W)$M[a6?
%5hbr:lB^&s%7^&b]\/7"X?3%qil%mS;Ec>GLB.t\$rZi1(m5P(62Zh(c6ur;L-8T0:!HO(13\?R'T_do7FBlRZ?3fWe.Onq-\i?9
%c!1RhZ(<"`_'D=Cm$T$mId6;Q?,qTc9]Cj>dB`i\J\N1>q+rJ>h`"U5%ujLg9Ag4j22q9'=r20sA%<%[InP^apup%,i\3mp"&Q2a
%J[OY@<DttA0j?,)))Vs\)!B]d%Adq6\)DFS:njKhV2L\\=@t`D!%Ze"_.5;:b@Vg^*J3atTJ4ki&WJ$2*(\;Z\CZ@0`-W.cM)!^&
%2G6B=huadEQ:mJS-q,A30(slE2"`(/*kide@a;YVB9PWbi;.3m4VA:N2<JqEfo*+5&:EK&WlN8S\#Nh/,H?f%:CS+WOCn9u0\KsP
%b"^]HcU2&7^!6_f)U5Z0P(j9oHUO[-WHGG>Pp57Uh(?3eV&;1YJh=]5<XE%]o[OR"-fKq+6kEhg:su%`$Q<8@GoYt9km]'@8sV1@
%(O8hI3*'o85,+dpM0aQGi@s1,Srb$^oj@=p65cE$5-XuF\k'7mFk=<ek"8oG%/SH!%nXe\AYe]$;J2%03_GPg<$Q]4W`"(/]B@R-
%C\4W&a@1W;4'\)O!J$BQ^e^o`A,$r^9q5iB'b"q9efNi//%s4b77Tg4/".!El&J_&0h[K#1FY)'_dOH9&.tKO=NGhM%AmJ4QIp-k
%)-(%Q@5eF(YWt%'+"K^nY,c*j^E@)&^@)f]qK63oIhGS,ls1&iI/.aOZB/JQb/9^J"XZo%G7caZ>@,BKkX/Tmb<Bq_k2\-=.VT9f
%p]]F2a?"M5XKMp6PeJ283E(IlacECo,IB9V2W'483Y`#lg\Yj+`rP@6")=E(Qa,cB[1/?j'LL85d_,*mf6IecS(kJTV3droK8q_%
%VFU&J/edM:7RZ"VSfVB,U!GjG[`"\+\EOO<<jWrBBCubYc-kt18,@D/^ESq=AZ*2_5Ju^4Y=:TBBLYOdPMkOk@6_C?7E\3XXg^K%
%G0UeQ?G(X0[]#-Bl,McoIg@XPd-1d:PcYZ*LfUn&i.R<F4ru(7!Qf6iM"d4sk$@.:ONsh5!3";:'Mok[jUsa994YO:Jq3WHlcp=T
%K&i(q/^F6l?a]82McV<[\b*0U1a$QRAc.@A4fk9s3glf"nUZD<AAkf_2h)Kf*tLE])[\'-.J\chf0*@YPf[s8#uhJ4ggADBdJ`B;
%1XGIs7;[?:S=8nNPG?CSFjIU`8gL%n[d9k6Y8u'5W+b4qGOSkI%]?q[+Fg)f6(dDC>/4Paa&l!,_kOltfZR)A1IYefeEqU7nX(:c
%7q?&\FU>87W*C9-AA4^W!YcGSdDaIu6g[#@F%J\t2_b(71XHA>j:#7m=r"ktf/nq.9;_"i`]PFH(d.JB)6S8J&G,CH[LRUm'OgPG
%%TW`#mj^*Y#Q-]A-]c?.kV45FYZ*R/#Y=\j2m[d8W1XbHW\C3>SFJg/]BKW:cUhGO,7C[A@MNW%1k$i_-h/RW=94:qifReI9-c>`
%Ui!?-$JTTqgI7,c]1f9TNi3m#1e7[9PD!+U!7\I^^#/P2i`M(H<[pe#,imX3N690U)ed^@NA>R*$3H:EC5%oMl"Qh;E1j4E?JN0?
%_Di)MZL8?[@Pj>CN_+(F;dB3+OlI:]*e$<#-*a9V%TNri6+*dV5>-SIj)s.'_;/c%EWd$sOGHZ,m)To,WIJ;iBR`=e7/Z>saW@<A
%IUGTE4`%k'p#mCYHP'hdc*+CIA<W]@,eI\lc&Q+jlA-r5Ige_'MXTp``ZFf1Sq%53*d\X[fDNI`-p`(pBg%)P0:s,p6e^cHp;&i+
%c.T+B3-;P,eYiWB7M'M=<LRC*%N1"s%N&"nSYb06>Z`S7"\>4?<as"1G0q7q/?-Hq\nmVC8+X*Z&jJ$o2u`6,e"M,@7L`>!l3hBj
%A=qr'Q"!`</<\gk#q?Ks1OmbLr"DN"IDk*A'J$\SEOA]^FsJ$Z[opdQpP8^S!C3[g]1L&(6TmSR)u0>`4^LaV72S(`8O_aR65><Z
%7#sZ8flNC9o-/ik*!;eBPqcHSPG8.)9C_7[ACm:`8kBtXS^ACf[eC/P],j:5%eO5-=23,C.ZJK+.k@1a7_9a&\S1V]h/kET5h4IV
%NKF*ZdV)!g5>OM$jIid.mZ3jn#CWh=Q+hte-Te<Ap(]uL(D=&@72Y3ni^W5YkhVbe9@$'*i'!(!26=7*hE=%95eB*,jB<:%R-A?;
%MJ]4iNL^3'#VjfJ7bbgEQ!28A>_B@+V<He=Lu#l9_*#2r=fqJ)q:[F@S=10]gC,-Kl-.UYeaZK2L)sp?RSVja.F>JNC2Cts+!j%%
%)kn$Agq$@,Q[;$`AU0qp`UI34kMcqrC>[BU'7`SJ2VMG"@ZPHSb`h.UO?1S69sca2fcu\#GnII`J\BQrlHrD?7+*=hKC8-cjH$uj
%iFQ"X0>t-od4#%c)a)fOL=AFm88Q[7i(QZ7i.7o+:IVJ%U59k:H#r_>J@*SZgtBEE;l^g'Cp@!0'rq>rn7O7HE/tJ7=abOg4M\Hf
%+=^CmqL!m;T\/)=9W&h(pCR4hl:V[HU8,^@S#1PemV5^(7&M+=Ws)_+UJ"Ci"N90?5TuHX[\;?OX3YA;@J^1ni!RkpB@5fcUW&c_
%>R8AX@+3cp[mp'0CTlu>2jCNEnOAG*fF_j.e]=S"AS7@oB%?"WQcuePjPfZ`Yp>mRGsQk>Z840o,EO096jMAM^N[-WI^ib>lX@[9
%[dM\dc#F^O<aXm+P-kTdBNsn^o\e0._6H1o\2c8JS'!!NN:])'fQQDT_@+C<,P\>r#A#P0LOAc3Rle@1W^:IVg<DJ`P`XAs/neAZ
%jF-J^%f:Yt*1(!G+=ZWjmp5)S?5Kb8rG7:DF/=<@$`5IB)QsOF%<4\UX6'4bYnUh/h3pP`RkkW@%K_h[`Ae!,gKm7r8q6>H83m5$
%C,#gY9gbahbi*NZ:oVdZf^1UXVGG-/o[eiP<kP/>5WP^/VXejZFd_;sOIku/C/iBhd'+?qj@0V<I$e,qIBM_HDll'GAs_BVP0#gp
%d2MD4GZ>`glI\bN]1\,Ah=usBo>3kX&*]-eR>h,R/X;*F9?g<\2=>'rM4]#X9e*$)IF5?17E`8MA-p<eXKWkHKBd5J$Yaos9iA:f
%@EGHD-T2gCjr91!T%GhY!F!$6\s%Ut.L+J.34EeWX@di_q;.UTUN9i7lATt+?BiR1le]:qW/3)n7Z%NtZ!ZkBM^9dPHsLE+kha!P
%':up]YI7Z^m+i&VL@s95-l,tVfB*7V"p;SPo@a:j2Qsf-?^hjs/(;'g0C\q=0Qf9,&-WeH^,N7h=<QO<?EB<qgZdO0SUKeW]o\f,
%o<ios\)k/DY780gY7$?GCH;99m9Z_Q:$m<%!]nM?pKD2A`9qb8BD5SAV-Vj-15Gh^^4I!tg:gat69j3@`HrSMnFhP:m@N`Yqgr*b
%<qpK</QmDcCgZ,C.,T,b?S-$Wch9eiJl]&AMj97_gR:Vo^ru(Ge+YI#jj31<k9F\i^+\i];D4ur0YHipXsgk6*7cQa6)m_-h`K)6
%].TUk<d6pRbfT=#V2BE_?I@Kils>pnE6R\8?E@1BpZ=mVj)jZo+R3N.I*UT&iR=s:pT>8=Q=oXf,ZB'Y>sREYmC`nS;m3=h!m])6
%JRL.I_!R*h%n;tUf>`N2O;Z[i(V!-qQY5>f"]AN2)j_i;bIqu%B%RLE4'1`\Rm&nMlVL*_FtV9GmT7raKpmt_Xmta_i+u/8PMWiH
%^-X9\ZZC\q`Icb:c8FD'jP%/+/okbZG-2_\UY!f!9JV"a>g$ZeCZh-@U\<"+_oD>^F-41!*L0-LK0'mT-fpIbojhM=^m$D5>*&bf
%dijG$Y87pgdi>RJBg>O<+UQnW@KAe<b!3K&U_,[t9TEA*"p\MD2n*E)Uqd7.8%?87d_42ZnuiG]Uj.ualhL!NF]EZlW8RoUF"E2N
%aG>);LnLEJ+*k*@1^[g"G>.GI+"1>U"g>PmVaD6@QniPBU-R@5\SlVKhIA64SCq%riZk/!pbFQ2?d?i/3lcm/ZBf!iSd9t=8aHUW
%>\/.Goh`b;W71K?qojrn\j>4V!;-]]TNk>`CNk+1'\Ql*Dmkp!KOVqjMeT;`*dX>2J(I^\WaKe.fYX(#k?t_L.>H.lSnVaTIL8O=
%QG]KEIsOe\C3rF3kR']iT2&qtV+7$]6.qr@Zof#tc9%#[^b+i?S@B/>@[BXj'R-ROjLVRbe2ru=GR=&66OL5(X>#E8<Wn3TLf[rG
%5s^oPRa0^T:BOR)C6V<;G4tmB/A*Q*#Q8d%[%8>,<M1$n,G_F2$8s,e<rEDOoOB;VEgS\hNKKq;&k5JFZ^@cXZdu&^L4+AYT0def
%@9N)!qTbi@80/]7#@ffSkamc+)C=]qo[mc[X;H73-M0n@okAF!;.HTtiGLX]%[%Qe:F+pI$S1fI\uMeVLRKAb:6f7&^eB*@3TIB&
%ME*t*/9iqEW3^!e'd.X98(Cr?rjb&c1e,^gSin"d7df.GfNq=CG-g:E(DZ.h6l&i_Wc+)E!QpJg`AHPGUI^7s=NV/F$Y*[3/A/+Z
%-p%F4Hbj0]p00BNY^I7a%@i5eFjHRbRjC06/Is5ura8\7[]iQ6JE0Qm>.aceVYH3Vi@D<hlKQApAo+Wb)GTRE!ir'u"=gEo^n'V+
%oc?]XGnCB\f;Q@F6qq+t6fADIX+cOA;&H2'Auee_mWK3l]@Rdi2=leOISPUCcs,IPV3TNhZui1n2T1+e;d$Os$rAgh)teE%-@&Ff
%>0mOQ[\0XmB&$R&M1$T9<FZ%(5@VH:Sl8Q3in4->.G+`%3<U+$GHJb[X&i&':=I57j,!+>nQ#r<UBQ3?kmZ4oia=eH>hHL/('9;N
%gFA.!]e7?%&A'b%D'89&W;-U9K";8=*p)i>op^O&)4_q46piuoYCQm69@duMqtH;uSIt=>AK#Mgd3"<G)bAE+R5HjDH"OUCA?j>%
%kiRF@3AkWERGD]_DP:B09[!.k(4uNi9s?A"Da&%N%_%O'Hk2&-C-d[#3V"+7<bD5Ab,f*oR,gIa)a6Lps(qRU5TdV5k<eiJHU3AU
%VXJlfc1o$"*LUhZV\$"X]<)B9fmCrZE#%d0nQQklk:olRVE%L1"#+-5R5r;X6lpEdD3G3c<=AonLVat5@,6Y,E%nLXOJ3tOA"m/N
%84G)N\L@smW`S3TTR367*nf['B3X^PE^`4cQk(:gR;R-ok:*cO/,*J?G$DNQh*_C=+rBlnLPAa0+#.9d"u/VbP0>PU_q3#Hfer#5
%TNJisd(UEeA_&M!%8S9:kmDGaQ?4Whi[A_?Y/*)RDOkZlo"%R/h_1pcF7?aW#Eei]NJ4s7FF6BVWG5eKm,EU7\h"[$OmB8E);;!$
%b^Bg5L.Y[oMdo?(]#WY;`!gc+]Jjs9+4Af4$J]Yj5lH3Vq[5q%QPaY3(hU2^263Xm$[AB3ZhAuM!r7TEU$RKU`*J0^kng_;Ji?kr
%bUA+AVN@c_4(#(8EX-.sV'&qCD>HGe(g:m8jt:,SpJk6+Bie<A#Z[TT[PopT:isk@d;*Nfd5_3]Wm3&lW5t!]=-_C]-bb0Uh$_%4
%+5P4rPjNc?T7R!$>J4D#(UiS1`]7NoH'olKKIo]>$Ut#FHL=lF$Adp+-sB3a$12Daa6?p9`djVs#k\IE%dJ4$jOVE^(iA0/N^9mE
%PdBG:,%l#Hh74*&=i[3;#]qlU4m,)q2qQ_5#Dg7K?0.&clUDoeGsTqZHUCZkncBP!ImI7n2ma)6/31d4opE'KVK_*".e&&@AY1mG
%h>@H<2SYq+_S=JYr+;,HjJFq#l8:Op+TVK1OBLYj\d7;C=#2Ke-^<4Dh@_L6Blfm':l$&3!bW1:MJD@.#&(]VN0oNXG^-Z&ZStZ9
%)@lb,;k5;-&IID9bMNRUMnX*e_=#%a96Q'3_*EuBO3ud4OLD*59n=Tk(ga]IMj_J-'A7?#*\i$shpj:`87(a<p);s/bj,l&Ab^`O
%6W0\Fqe*C'SEG$'DNe\-:ZYlQFH9FtX(;*LNXY!<ag@I0"f+*hC:X]oNCZ31aOp)ig0(-[#1.Ho<aC\ld&'2d1#cpSHh_jDa5.F2
%fQo%O.al]Z#.iM5T3;+-3)6IsU()"Dh;-GdD0!enL"NbT3)0s[cY-I6j)R7:[N^UUi/&1e5p9<_V8m,*CKA%l3kG:L1ITdK\^/D`
%F7[35I"\96nh+=rn:sraG@5\2BrI#;oG.Irj,#CAN*63jN>`oH1d!;#aTk#e*heiPNh@"q/%[PX*hs4O.iO2X1'T73VtQA)XQ8Yi
%I&r+Ve?qqamc&fj\2YPT\G3g[GumD=Z_A%Q3S/q7eZQ3Fdf[YN%/7kPPC<#5Zb(8OPlRC8@HOcZ7YrDYJPrX8hRXft>c9L5)lc-`
%SQVj0(M\Skbt6^^'$[^CGhF)4&JX0/Igs[YO3a*JG98><@qmV,Af^Q7/"L'joa;p!LN`q(Z^PoB#\Z_<9;(9n*JP^FGFeL)=GQkZ
%EDtZe#$Su"<7.ndAa0mr-q\6A*S^<X=d>P?)>0Y-M1/p*>=[8a(3d2p-%4@?T@bGsAY5^k!8(]HOikeH`ErE_]G_%"F*Ol)06e!j
%praS@C/3%DMdRnP<',FB^8"4Qbr%.%@^(8'e9^EI00]Y0S?+>t`N0uBl5Epo'+Qp:mc[A7T$ap5kOmi4;ti/>1)0K!>`;$C1p,j>
%XE)+KrV+f?.um(`gYDT2^X,.am<>rACX[^O1ECT^ZA/0<T;u9>Fm[_i?3q`_<U"l:&).>PmVYf/N0M$P14.4fa8Qc[Vj8J^.2boP
%,$sk=^At8TP;pQ2Sq\ODqGqd+/m8[\nY5GRpC9,o_\#@.ko&$:fO*]/c5EJ<=76,k^;M#Y/90gDEA!g$!d1`A3iSca3HQfcEEQ[*
%9*cuJ'Eu+fm5k;renk14DMCku(Dib@NT>Lt(.V\4[K5A+/nsc"/hu5Er!W%-;Wh<1YJ6q^L2j/)-a>'cNn>j'A?*N!*lCV<2tEsk
%?dYSL?X,cHhMgeNb_t&cJ]V\tcP;:D<aS#?r9K1qieeq@'s1VFBE+6&[JcQP.sc'f/*-:,8jlWr:mL;XJL9HVpXoJ\1-Lp,<Vaju
%aY1\u!lHR1=c$UlOh$S"S@<WtIW[o"%B,i2\P>-57!)*dMJC&WmEqA"oKAqT''?>K6A]CIS8S5ri_]](>U^ojImCGEd0tYh]o6_1
%c<r_FbBX[T\"KX&hFNP?"?0HV>#R)Gi@\2X16#NS;gU`I&/:s*G.m5(8'GZAo5]aCH=c0@$XI;.pVCXUlccDQ!agrW>if!e\4*8L
%MFiKi+/Hk2[^B8(>TD/7kaF[q_?]CH]C4ZhKZ0$\n"Ei(#7V^uj)HSaZL\gW?]PZ9WPi(<P`WdlfI`=eh:qZt;>"&I/!?s)FJqRa
%TP\qfko6Zo3r?nQJ9N!d$D#1ekU^)9)WTS+rc58.(A@?V*''bIaKL/XNQ[tZRqFpGCJj%JOMXMd>kta6Gj?"X2Go22./9Y(L%q&M
%DR:#"*PEc)h'kJQiX8J\L54%%LG^[Zp\(hh(!M_o]nSu6k[?8VZ%a\k80I7Kma[ldJTEksY$:9i9D"L=e&j=>(MJfOI%C>YJ,KAT
%r5653n(Yn7Kr97j5l&,DmVTA`Y7"oNO41eXj>2#P*9%dgce-2h.W&GPE,0im?IA'8V6]aH#Me_sgiMh$;C$KRXTl,Cq,<Bg&C\BN
%b7DOGRG?hQDKfkL.-ojOhMjQPaXtg3a`\:n1W=Cj46FQecn&0E+[/MAl/h*fA8&IYrq#L>GFdg7R/,QQF[atWZ$!,A#o?'u<,CHQ
%cc+Jk!CT4@XNl7BCr>p`q&#O\NWOhrYj5).2hiIJqr5(uc@jCUENg0hhq2Z)FQ.C9FX)S#Fb3dC";kIWI'LP'TUJk)_V^Gg8FLn0
%:^#'tc.rg]W!E.pF`4ahdWH]G.42/:aQ*30G=97>>W@?VIRBtZ]^D=fKF.A5'?7ul/q<@.8`tBH?18N`Tf$mNer4)*iQeL28]<!>
%V*r74NMp.Km^%3je_"nCGhZbSLqNSp=-Oo)]B*Jp=F]CU9L5NiPtSgVKD#nY&:9FVmHl[IV!@A27,#QhII%K/,OYu<\/_0Lq@1uD
%la\rNdsqE-(Y5!YN^r=G+7!o!a.(SW3Dd_Fob]h'4;lYg>Zq$*?\kEHpXnQR'bitI4C_:^c"q*V?be%X-ARm)o>$X)kC$tWXAeKM
%9T<>JC8%=3ZrHD,/%Djfbm5ri4_t;LJGfOtS[ZOP[;eGa95I,1*N6#VX.()JPH@U*\Gb4S"N@d##/>BKo[mr`f(-^pMBSrA50p3>
%RSPs<emr*@Hh9ErOHaMP&Un[eEt.U&,k4"52lTh5T\n/`Y1+@d(>l3N1B*1PPZ)&:_^;'J-rE+p2k1h459(T(P&QAs)#ier-a*Y#
%.7HPm22h.Q'Xb_XB877uVKPE9X$98E/6pMXM(J0Roemt()8Nfeq:>0g:UbG?8RqOXH!!-*ZuZ0;\Y!$)M*MQh#XcHC3\k5QAeWO9
%d_<197ict\J8L,JG2e*Sf^E#;&Hus8F7QoHHbKKCS-(l%m^jI%]sT$E3u$<)4t@_44!g)I3r=N)dm=*g,((opbX'D=Ol<CunsRFD
%lj&Ah94?TB0GQ*E,Q+YP'HjP:SAM*)GXL)&rBaYd,)CmP*;+*h\$O%IDa)Ju#8)LrI7idc.5hc&>MU+X,t*L>*EIfO1NR\M`!LKP
%h3W\V>9=J>0DCZ5G=X!&?:;$_1N.ULBT.*#os1;1;13C=,2NmW*oH^L@J@@[POsTAXnhkN@9%sG_@`iU8q0XC=lPG6]qt!b!)sA)
%QuL2`KW*\>dd!*bg5E7k1u;BG@7[o@aYO%+,uK1Jq`Upei[nN>0osQ6hBkSZDYkL"'4^,=B-#]7HuK\LYp45DUV866dF\GF;huoH
%no`2ISb-jant[qgB?"Lh.$jrZaXa<k1[iUE"J6lD4=Me%cf&1]Y(7Zs%,Yd`h=JRG6BZ3C.o,M+Tg/=);>rb[6I\`;.$oAt:mVI!
%eils]DE;<'NYJ-l"L:rV5Y^:(J5q2Ym,L.2i]C@t^+KGeP\Pln6GNqip:-3\qD`.c7="-!!A2Vj^C$&;iBk:/V%Aa$orEV3%^?sd
%VAsUKW2Tc-8XA[qr;"\%A`jZ0qH-;ogUDdbkA`,K>D-]Ses(!,X^@>7W/%a%oW(/+.&uG`+Xs-:KA8dkJ-nI0(So%VhtJTMpU\_:
%m0A6\bh@g'^!5&flb[u9Q%2k\MNsDY!NYj'9-f4A'q>OEDJfJ*H7laV$!>SBRTZQlXS)]U!`ggT9YP$ekkWb1_&udrFQgkpm/u/O
%<X7Ff<`iVLXBWMuNh><GQ\#rX[7IBW@7k`ZRMTeVmO((pG:Qbr[>\ZF=CFIMa^FCBqa<@2'!T6nBrj8L!`o*#C_XMq-(JD5%(@/b
%4i>Lhf7gO8cV=@0Se4!Y9>:gtfE@&XY6+?ja:WD`pViT=WlR2&IHpWn:c5Rsr@1'-5[F4d=EUa[oW,K2P6X]?.B[h_V(_eIb>O"B
%'qh_V@d$koEeW](YG*atlE+CsaMm&1?ZeY9J\hdp1l+s`%EiMcpk<F=PHA1\[$Fq2$;d0m!NM6GhXX\E$!Gc>Y6*3Z;e-40<(!2J
%W)j#tbXtO/0I@1&*P\Sd#0hDjq(5nVe<6B=G6XjT?6NVYj>.,aO59.G[8?,qnLErJ[GI-0lnGTB]u6tUAN<b;M,s_#=^d+f!KnZ'
%(9dRS'E$t[cL>Y9g*L&/e3p_#4mn`SK*tC'RX%b?0$Xu(([p5t>&Q%3X17:k<dfg+!UYaULNjOVFcYD=<IcV]Ef!iurG43tGSQmL
%lW2O`_/Mfun]ju6eDONAMLaui6b3VdH-03sQoi];!\,`fZbSjT<rqRPTlDSa!BgZr.TZYVfa-[h5S?o)Q)hE#Xo8fu2fDck>Xa=i
%oPl<]&Zs@68@aV>I"Y>!H9p/kI\BXI+r#,B.9GaMWdLVE>c"@'Ggk?'rQ([;FhR4>>X_V;nPHCJ:e>LVPcHd:'J[._X13@E]?-jl
%+DrNB8Lf#m6&4?g<jBQ,1>\@cBXJcm59m0M0'Oi\iXlNplK!cS5-"=!d3Z:LQ?BgJF;9"eB)*kf9=US7eCfOSKY$in[SLl073Pr*
%W6\\ZMMq25AB6ACi9uQfC[!<3Z=QGRNuU5oM@-?=)%gf1_pA%RYnbH,PjK&fcrR;qU#L.++go'KcrEm47QhQ+aA_tjFrr(oEWgie
%>]k;qTj5P[d>G]'X#PLeV-HH!.;DR*=4&UcbL59cJ_g4ZM!%&98o^G,h-kf;aM7XRLKB:]OqM_lIsh7IVo^OiOn*H6@qU6'1f<!d
%JI?.#jQ^l])P_0>Ns+^sjI2>crfMBUKJ!0(8-c)qrW/t&+Q-<#!34:lX+-pmOh0gFV]+"V`Fk6Q*eWT:RSrX'eUIu'psitA4=ib_
%(B_jb48M4:3\1Q3-#%Q=J=Xf.h&Q?^F>Z7WUAqSTHfDnKXR87%%J2p]EeA:0Xu;C,V'e&)Ug"16B;(1)Q"+*Dp>]#@"\VaQ;un;3
%<Lp!YCm!'ain(&d[r((,FoUf+JuE@`NA7k.GEipHa&DfFC'GV"9e!C/a1g#M#Wjs_ri'0L+!1IdV=XIDpk[U'$tquhmjdTogM]p<
%1Ng&lGTj"SekG`Ae/rbuV)1K:p]jPQ6_MTn2f4t7'F/;hbEkj9>[50Ngo#$X`t:X8#FtPSRl$'$EBWbOXf/Gs7VlUCHQq&1$Q?V^
%d#BM#7&]lci-&.G&2S%KmeI.XEUkQZ-RAsl$Y#KTH`a,aZu>_B<V1`Ik`ErCIUY=5IdeWW*,ZfFpX[XC3\>T+cbj;4/rXBV@K9D8
%$%,i\ANip%F&IHl+EP%#"P(#6L!b>5\uei(3o#e.Fem+i2^'d-(\[mfC1Y#4'PV:XUM6:'c,Xk6IBU2MO'7VWP-aeZ(_a]N'r:ec
%4-ch+UcFRXi_#bK2(]hN!9E=u-ppKLWNa`)_]r9iJiI^nVOj\P3okkkm%[H9cS\$b/U"bmm]1&ocX4_`/^k!6r9QK!W:jjlSd3<$
%a%-"IF6"TDLB=58#H@q&3el+=Z/ne5+UpJ=ZCO5DH&Qghj(VT$"Tt!,-R=GnHs=lOi]O@LhekLZ86s\cG#MH&JO@)(W9i>^24:?=
%dY5Ag&^NL+D=YSUf[0]-H$uR#PKs8h'LT0Qp0k#'6U;7WD9OsDqa-'75234K`K?8_[`?K[..#XH!e``?GP2Y)hRenpDZ70?F]5Au
%)j9sb^9pIpMK<48GU4H!V^%#59ACPF&c:$Dpqa758J.OVK/tp.AC&p,Y"DGK9;W+ko;_jo*bRkc\@gf?N[khN3VMMi,K1r3%GNdt
%,J9\`&%OW6s7iP)pB]R8/Zs]rWI3OVI,KrhclmnIQn*_5lU@C!Eo+pt*dul7DX8?sbtOhh]\=Pon*#('(ZDje_@.j'UaC8a(!IQD
%S+FAG`1,m',DWg`/rR<Dj'r36o*KaJ:dME+6)ctBN`liN5Z;Mq>dU8Q;/#$<0?`95$d&_qNTFC3BK9<1[n>9\0raMHD<C"AA<'4s
%RMhU88[MYL4?gcD;W)"Y+$u,]]pd1G<AVuui=H\Le+S`u=7*uo-Q'-iZc5f9lf;jBE_+6Arn9Vmch%]g'=+)V1OULoFou?dI!KYc
%W&0N_PoX??\N5:F<VtA6Os3>f#mJZ)6&6<kAH=G`Zo(0Sm)uR0os,ipm"+`kSI&,&K9M*3^U;4M%E5GMHFPW`>'qeakNp\:];.kP
%N@bM2`,&N#3=b$B1<HFdQ]&<K(p7q*?9ucVgG6WiZ'*i:Z3@m1s$75ZG\CngHthe.8?:>7gM24'eU\JD5at_u_O*i9)k\L#bZ+k6
%8rE+6eB7luI!?).!6DgKX^;+U\sP?Y;Z^DYc)oS`W;9c(MirpO!f-q+AJ=k^RDb3h[*/u!*r1M82_QToOD;]R!G.I7:V\"7(+1R$
%X!RUp;#a$^R+Y3]:$B(WK>JPR4Yrn<`Wr"DMYU*K_s.2f5HPgdTA,,WZ!X`'8I14RC/DTW7WaP]cjpQ][OFOV)4aCPMhpadP-8$g
%`^)+5U$gKi-G(%T?*i]NdnFT)l[YT_,nr&8(+EJ[Oe<im\4t>Vj(sesc0cTn/prm_HGWKGL%K@Mi#$b3"E2T+ITDRa/4SuG2)HA]
%AH#=Q[4"E2;9b;tCeV$UbE4(6gh+a5D=,1CKjEhp3^muWX0oQH-aKcCc79f573]'l6X?/r!!4HGU=mj^R,%PPP?%1WbBA*("%g)q
%I;<ualuc`Vfb?mQBLJP=rA`hacMqQ=_LY3N823n`?+C&AB\$'ed[IWO=h\l<&M,N49J3J],tSK+$a#RM9\m<rA9T/n+SKQIT\Hms
%kbM-pZpoAFCo&j_DJ6XH:FCj?()>0ebgqLNc\8'fMOA$Aq^,YMX]\VF13ZC76kOP`=]D;Q!L<46:,.'*2!f7/o:-FWT;Q>"7`Cq]
%jI%@.G/YY?O)X9Q)Qcl_ot#*3SQi:dM^.j.mbDL3BpoSg8X-j\=Tk6i+t>K,U-!#/d4Db=`Tf/g@]@k0OR"'Ub.qKJR:A3$:^.Zs
%&cu3nSm]5ZbIPmNJ$9Z\K@7i97CS.tGN>UfNd(HkIVFnLk.p0MP"_*SmG%@u&9Oqh+1tHBh\)(d;@p\OBdWo"CE1Nrk*9GcD5WJ:
%<1VB=@5i4b@\7p3ASCDNA[:V%ok[[@pj4j2)O$n[[-jc#Xeen,%JTj%YM3+(%rBf[ck`e`;hm#*^K/"Lg35p#[oh%9RM'W/XMG;#
%^Unf.oF)KljNJTj>U'L`:qfqA)+:^LRkXJ<=csAJ,XSZo7*(eTN:4ILPuiZm\Y^Mq%)j"dQn7Qb@\0WdF3p<jZC?+$3'ooc]fTo3
%0AG'nB@kH:r4!lPUC5cmQ`:bZ6e2O)HBD)PN;I5S=1MTqpC_-XeLG(O03>@Z]-S<To)^*>LiPR3HdP_6\\XRm$Nm]Kisl]N+Fh]\
%J^1dW7bg<k0NKfo1)i[UCUoYgecnn9K@0=V<Ds7GAtuq<%?R!m78#l5:!j&"58pP:WH6^A'%R=_(QFqU:T_BiIA2j7:.,Ca7Z58&
%P`A&B;!Al)RS*BM3R%C%X,Cnq,GN)4^p_;&O.6oD]3c@GN&K#J;F-81=o(HBFR>^i[Wc3no%([ZeJ_HXS!&Lq'?a(RcX68KQOad,
%I,3B/[/F7nBM[,e@9+Dfp3eX2C_iWJN2`2,-?Gsg!+A+6(85S$JdF];=-2]!\?7*0Q!>J,82]P=CN/tlMIH:s)T@>hDdr,%XSEA#
%i-0U*of<q`V4Ogb`SIlsWcP>H+fTGYC-ZC@KO8\[)9%Up\C,V/AS1t%XH^KfX*Z=&M"1j2Z@hMOLD![J4Qc/>X<Fa/W"Ce2NcEga
%dU[!"H8Th$iITWcO\#h6T\IDb76H[3aae!&g!InRs(4/(3jVK7>429perUAYDIdVU7k*"OY<$Yib@L(L@uE")<AlL$9($UGaN6*b
%:;[I>is4fDNE]Bo_RC)M4K7OtD`cTfC8OoP$WI1]:lEr(6VfQH$O.@$!&=>2nqQO;!>K%sW$(W!!@@b'SRY7QO3f(IQL%GlbI>W,
%+MqeT`,/X^(f9"VU3PX%-t^[BUA4BT]t5]1f<sPs^E?-k]Pg5i<I$f9[=f,"6-)NGkVm'^^fSf68OsC3/ZM@Gis\@S-FUa]Q9Taa
%a6A&HZ3E6Er4-_or.c*P3H.9JnkX2&4m.YhhV^NQ*,G[E_:GWQe_(g6oNl"",%j]o3k$;HW7&!r".hSYYKD?XMB=*!JC3D-W1]Bi
%O>5S;iH=I"mPArjR%k^26TqFXmTY=t+.!_7c+q:OaWi1hFt0[`*2@.2?&f"Q7s7Ln(F<ciA9U_bf<=l&krOP5jL?8eVlo7enrLt9
%E\*d;RrG'-D!80*=rbEs*f$,0&(ScB\\].]-,%]urNWIE"c^J=kS(UZ)aukZc!iq-Ifb$l6[tluS5ZW+J7>$GIRGamG!?jLEqtpV
%kjYuslI<%"CbJip&Xlb4>bSDmf:VV-:]ejakkjpkcgi\,`?Af;FpV2YO,kgoRXM7V+W$;I)@B#Xe+Zan'RmM`M$01H\R_cGAJ!#\
%WoL%(0AVQ,G?^7'cl;A5<M#mTdlho>YC]kW7'A>cR%L;G$tGej4*h@dRJ#4&kj(TYAoB+aShMQ\c[-nt_gL:=jQ(`W3`*O%Aj]oa
%m]rsC=gO8>T!\^^Dq0pb*+pKgHDb5Iem6?Y5tg:l&.6K@*(puZmd73_dLhX/Q032SPJp7"'$JOLE"r:rh"?<%pue:Lp94M]DuS#]
%d/LM(qtL-LkJ-oWhuD`Ormr7MDuRelqiAMlTDnBLrf9;ArZD1:YQ!R3rk![VrD.q;pOE2Rs5i_KbO>J[kPtDC5Q9^3s7:a9LO]7#
%:]L6?s+gUf#]A?Tr6=-sgOJtTs7Kat?P!G?D?~>
%AI9_PrivateDataEnd
