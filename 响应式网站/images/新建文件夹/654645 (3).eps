%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Brunette.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Diana
%%CreationDate: 8/13/2010
%%BoundingBox: 0 0 596 842
%%HiResBoundingBox: 0 0 595.0542 841.8902
%%CropBox: 0 0 595.0542 841.8902
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 92 128 8%%BeginData: 24278 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08A8CAA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8
%FFCFFFCAFFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCF
%FFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFA8A8A8CAFD04A8A1FFFF7D
%A8A1A8A1A8A8A8A7FD04A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FF
%A8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A7A8A7A87DA8A8FFA8A1FD
%08A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FFA8
%FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAFD06A8A1FFFF7DA87DA8A7A8A1FD08
%A8CAA8A8A8CFA8CFA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CFA8CFA8CA
%A8CAFD06A8A7A8A8A8A1A8A1A8A8FFFD06A8CAA8CAA8FFA8CFA8FFA8FFA8
%FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFA8
%FFA8CFA8CFA8CAA8CAA8A8A7FFFFA1A8A1FD08A8CAA8A8A8CFA8CFA8FFA8
%CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCFFFA8
%FFCAFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD
%06A8A7FD04A8FFFD08A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8
%FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CAFD05A8
%FFFF7DA8A7A8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8CFA8FFA8CFA8CFA8CAA8CFFD0AA8A1A8A8FFFD04A8CFA8CAA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CAA8FFFFA1FD08A8CFA8CA
%A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCFFF
%CFFFFFFFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CF
%A8FFA8CFA8CFA8CAA8CFFD06A8A7A8A8FFA8A8CAA8A8A8CFA8CFA8FFA8FF
%A8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCFFD05FF7D7D7CFFFF7D
%7DFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FF
%CAFFA8FFA8CFA8FFA8CAA8CFA8A8A8FFFFA7A8A7FD08A8CFA8CAA8CFA8CF
%A8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFF52FD042752F80552FFCF
%FFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8
%CFA8A8A8CAFD07A8FFA8A8CFA8CAA8FFA8FFA8FFA8FFA8FFCAFFCAFFCFFF
%CFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFF52522E52272E272805277CFD05FF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FF
%A8CFA8FFA8CAA8FFFFFD07A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFA8FFCFFFCFFF522E28522728FD0427F827A7FFCAFFCFFFCAFF
%CFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFD07
%A8FFCAA8A8A8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCF
%FFFFFFCFFFFFFF7D5252522752272EFD0427F852FFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CAA8CF
%A8FFFFA7FD04A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFF
%A8FFCFFFA8FF7D2D2E52282E272E272705270027F87DFFFFA8FFCFFFA8FF
%CFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD05
%A8FFCFA8CFA8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCF
%FFFFFFCFFFA852525952522E52272E27282727000527CFFD08FFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFA8FFFFFD
%05A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCF
%7C2E522E522E2E272E27270527F82751A57BFFCFFFCFFFCFFFCFFFCFFFCF
%FFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFFD05A8FFA8A8CF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFA8
%275952522E522E2E272E27270051A5CCA5A5A7FD05FFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFA8CAA8FFFFA8A8A8
%CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFF51
%2D2E522E2E272E27270527F82726A57A51A4A57CFFCAFFCFFFA8FFCFFFA8
%FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAA8A8A8FFCF
%A8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFD05FFCFA7
%5252517C527C52512751274B052DA5A57AAB7BCFFD0CFFCFFFFFFFCFFFFF
%FFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8CFA8FFFFA8A8A8CFA8CAA8FFA8CF
%A8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFF7D51A7CACAA7CF
%A17676C97627267B517B81274BA8FFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFF
%A8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CAA8CFA8A8A8FFCFA8CFA8FFA8FFA8
%FFCAFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFD05FF27517CA7CACFA1
%7C517CA1A12727267D7C51207652FD05FFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFCFFFCFFFCFFFA8FFCAFFA8FFA8CFA8FFA8FFFFA8CAA8A8A8CFA8CFA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFF7D27275252A7A7A7
%525959A17C27F8527676F8F876A176FFCFFFCFFFCAFFCFFFA8FFCFFFA8FF
%CFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFFD05A8FFFFA8FFA8FFA8FFA8FFCF
%FFCAFFCFFFCFFFFFFFCFFFFFFFCFFD08FF7D277C76A7A7CFA7A87C7DA1C9
%27057CCF5200F876A1A17CFD0BFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFF
%A8FFCAFFA8FFA8FFFFA8CFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCA
%FFCFFFCFFFCFFFCFFFFFCA27287CCF7DA7A7CAA1C9A1CAA027F8527C27F8
%F87CA1A1A151A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8
%FFA8CFA8FFA8CAA8CAA8FFCFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFF7D2827A1CA7CA7CFCACAA7CAC9A127272627
%F827F8A8A7A1C9A14B7DFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFF
%CFFFA8FFCAFFA8FFA8CFA8FFFFA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFA8FFCFFFCAFFCFFFCF52272852CF7DA17CA1A1A8A1CA7627F8
%27F800F8F87DFF76C9A1A74B52CFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8
%FFA8FFA8CFA8FFA8CFA8CFA8A8A8FFFFA8FFA8FFA8FFCFFFCAFFCFFFCFFF
%FFFFCFFD0DFF27522852A7FD05FFA2A7C97C00272727F827F87DFFA7A1CA
%A7CA5176FD0CFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFA8FFA8FFFFA8CAA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFA827272E
%277CA7A8FFFFA8A1A7CA4B27F827F805F8F852FFA87CA1A7A1C94B7CFFFF
%CFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFA8A8A8FFFFA8
%FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFCA27
%522E5227A7A17D76A7C9CAA051052726270027F87DFFFF7DA1C9C9A7A74B
%A8FD04FFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFFFA8
%CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFA7
%272752272E27CA7CA1A7CA76512027F827F827F8F851FFCFFF7CA1A1A7A1
%7651FFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8
%FFFFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFD0EFFCA27522E52275252CFCA
%A776767527272726270027F87CFFFF7DA1A1CAA7C9757DFD0CFFCFFFFFFF
%CFFFCFFFCFFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCA
%FFCFFFCFFFCFFFCFFFCFFFCFFFA85227512727272E51514B7CA076F82726
%27F805F8F851A7517CA1C9A1A17552CFFFCFFFCFFFCFFFCFFFCFFFCFFFCA
%FFCFFFA8FFA8FFA8FFA8CFA8CFA8FFCFA8FFCAFFA8FFCFFFCAFFCFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA8CFA17D525227A1A1CAA151
%F82727272627265176C9A7C9A1A77676A8FFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFFFA8CAA8FFA8CFA8FFA8FFA8FFCA
%FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFFFFFFA8A8A1C9A1
%CA7652A77D7CA87D7CA0C9A1C9A1A17576A8FFCAFFCFFFCAFFCFFFCAFFCF
%FFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CAA8FFFFA8FFCFFFCAFFCFFFCFFF
%FFFFCFFD16FFCFA8FFCAA7A7CAC9A151A87CA176A1A7CAA1CAA1A1757CCF
%FD11FFCFFFFFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FF
%CFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF7D76A1A07CA1CA
%A1CAA176A1CAA7C9A1C9A1A7A07C517DCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8FFA8FFCFFFCAFFCF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF7D76CFCAA1A1
%C9A0C9A7A1A1CAA1CAA1A7A1A17C7651A8FFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8FF
%A8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFCF51CAA7A1
%76CA7C7CA1CA76A1A1C97651767C75517CFFFFFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8CFA8FFFFCAFFA8FFCF
%FFCFFFFFFFCFFD15FF7DA1CACA76CAA7CAC9CAA77CA1CAA17676A17576A8
%FD19FFCFFFFFFFCFFFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FFA8FFCFFFCAFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF7CA1CA76A1C9C9A1CAA7A1
%51CAA77651A1517CA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFA8FFCFFFA8FFA8CFA8FFCAFFFFA8FFCFFFCAFFCFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFCF76CF7C76C9CAA7CAA7
%CA767CC9C976A1517DFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8FFA8FFA8FF
%A8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF7DA1A07C7CCAA1C9
%A1A17CA67BA7A1A07551A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFFFA8FFCFFFCFFFCF
%FFCFFFFFFFCFFD12FF7D7CCE7CCAA7CAC9A7A6CECECD7CCA7C767CFD1FFF
%CFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFA851CEA6A0A7A1A1A1A6CEC8CECD9F7CA051
%A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFFA8FFCFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFF7DA6CDCE7CCAA0A1A0CECDCECDCE81A0
%7676A8FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFCFFFA8FFCAFFFFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF7D7CCDCD7CA17C75CDA6CEC8CEA6
%8051A051FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFA8FFCAFFA8FFA8CFA8CFA8FFFFCFFFCFFFCFFFCFFFFFFFCFFD
%12FFA87CC97BCEA6A7767CFD05CEAB7A75517DFD1EFFCFFFFFFFCFFFCFFF
%CFFFCFFFFFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFF76A7C97C5081505150CDCDCEC8A57A7B50507CFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8
%FFA8FFA8FFCFFFFFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFF52A1CACA7C5227757CA1517B80A57A7B4BA076A8FD04FFCF
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCF
%FFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFF7D7CC9CAA1757CA876CAA1A1515126514BA17676A8FFCAFF
%CFFFA7CFFFFFCAFFCFFFCFFFFFFFA8FFCFFFCFFFCFFFCFFFA8FFCAFFCFFF
%A8FFA8FFA8FFA8CFA8FFFFA8FFCFFFCFFFFFFFCFFD11FFA87CCACFC9A14B
%CFFF7DA0CFC9CAA1A1A1CAA7A17CFD05FF76517CCFFF7D4B7DCAFFA8A852
%7DA8FFCACFFFFFA8FF7C27A8FFFFFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FF
%A8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF7CA1CAA7A1517C
%FFFFCF7CA1CAA7C9A1CAA1C9767DFFFFCFFFCF277C7D2027202726262651
%2620204B2627F87DA7262627A1FFCFFFCFFFA8FFCFFFA8FFA8CFA8FFFFCF
%FFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFA87CCFCAC976
%76CFFFCFFFA87CA1CAA7CAA1CAA77C7DFFFFFFCFFFA8A1FD047C4B7C7C7D
%7D7D7C7D7C7D7D7DA7CF7C514BFD07FFCFFFCFFFCAFFCFFFFFA8FFA8FFA8
%FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCFFF76CAA7A77551A8FFCF
%FFCAFFA776A1C9A1C9A1C97652CFFFCFFFCAFFFFFFCFFF51525151CFCFA8
%FFA7A8A8FFCAA87CA17D7DA7A8A7A8CFFFCAFFA8FFA8FFA8FFA8FFFFCFFF
%CFFFCFFFCFFFFFFFCFFD0DFFA7A7CAC9767CA8FD07FF7DA7C9CAA7CAA7A1
%517CFD09FF277D7CF82726274B4B524B264B27272051514B51267DFFFFFF
%CFFFFFFFCFFFCFFFFFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFA8A1CAA151A8FFFFCFFFCFFFCFFFFFA876CAA1C9A1C9A0A04B51A7
%FFCFFFCFFFCFFFA77D7CA77C7D7CA7A7FF7C7D7D7D7C7D7CA77DCF7CCFCF
%FFCFFFA8FFCAFFA8FFCFFFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFA8A7A77CFD05FFCFFFFFFFCFFFA77CC9CAA7C9A1CAA1A17551
%7DFD05FFCFFD17FFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8
%FFCFFFCAFFCFFFCAFFCFFFCFA8A1A176FFFFFFCAFFCFFFCAFFCFFFA776A1
%C9A1C9A1C9A1C9A1A0754B7CFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA8FFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFF
%CFFD0DFF7DC97CFD0BFFA87CA7CAA7CAA7CAA7CAA7CAA7A1764B7CFD1BFF
%CFFFFFFFCFFFCFFFCAFFFFA8FFA8FFCAFFA8FFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFA7A7A0A1FFFFCFFFCFFFCFFFCFFFA852A0CAA7A7A1C9A1C9A1C9A0
%7C517551267DFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCAFFCFFFA8FFA8CFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFA8A1CA7CFFCFFFFFFFCFFD04FF7CA0CAA7CA7CC9A7CAA7A151
%7C7CC9A0A15151FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFCAFFCFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCA
%FFCFFFCAFFA7A7C9A07DFFCAFFCFFFCAFFFF7C26A7A1CAA1CAA1A17C7C51
%A1A1C9A1A1767C26A8CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFA8FFCFFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFFCFFD0EFFA8A7CA76
%A1FD07FFA851CA7CA7A0A7A0A7A0A67CCAC9CAA7C9A1A1A04B7CFD1BFFCF
%FFFFFFCFFFCFFFFFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFF
%A1CAA17C76CFCFFFCFFFCFFF4BA7C9A1A6CDA6CEA6CD7CCAA7C9A1C9A1A7
%76A14B52FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFA8FFCAFFA8FFCFFFFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD04
%FFA8C9A1A8A7A8FFCFFFFFFF527CCACAA7A0CDCECDCE7CC9C9CAA7C9A1C9
%A1A1767552FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCA
%FFCFFFA7A77CCFCFFFCFFFCAFFA84BA1CAA7CAA17BA6CE7BA1C9C9A1C9A1
%A7A1A776A04B7CFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8
%FFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFD0DFFA1A1A8FD
%06FF7D75CFC9CAA7CF767AA47BCACAA7CAA7CAA1CAA1A17C517CFD19FFCF
%FFFFFFCFFFCFFFCAFFFFA8CFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFF
%CFFFFFCA76A8FFFFCFFFCFFF4BA1A7CAA7C9A7CA4B507CCAA7C9A1CAA1C9
%A1A776A026A8FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFA8FFA8CFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFD04FFA17DFFCFFFFFFFA851C9CAA7CAC9CAA7A127A7C9CAC9CAA7CA
%A7C9A0A07651A8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFCFFFCAFFCFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCA
%FFCFFFCAFFCFFFA8A8CFFFCAFFFF7D51CAA7C9A1CAA7C9767CA7CAA1CAA1
%C9A1C9A1A0767651FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFFFCFFFCFFFCFFFCFFFFFFFCFFD13FF
%7CA0CACAA7CAC9CAA1A07CCFC9CAC9CAA7CAA7C976A14BA8FD1CFFCFFFFF
%FFCFFFCFFFFFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFFF767CCAA7CAA1CAA7A175A1CACAA7CAA7C9A1C9A07C7551
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%A8FFCAFFA8FFCFFFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFD05FF52C9C9CAC9CAA7CAA07CA1CFC9CAA7CAA7C9A1A176517C
%FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFCFFFA8FFFFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFA876A7CAA1CAA7C9A1A051A1A7CAA7C9A1C9A1A17676
%4BFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFF
%A8FFA8FFA8FFA8CFA8FFFFCAFFCFFFCFFFFFFFCFFD15FF76CAC9CAC9CAC9
%A7764BA7CFC9CAA7CAA7CAA0A14BA8FD1CFFCFFFFFFFCFFFCFFFA8FFFFA8
%CFA8FFA8FFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA7
%7CC9CAA7CAA7A7767651C9A7CAA7C9A1CAA1A0517CFFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8CFA8
%FFFFCAFFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFA87CCFC9CAA7CAA1767CA7A7CAA7CAC9CAA7A17651A8FFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFF
%CAFFFFA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFF7DA1A7CAA7CAA1A051FF7CC9A7CAA1CAA7A776757DFFCAFFCFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8
%CFA8CFA8FFFFCFFFCAFFCFFFCFFFFFFFCFFD12FFA7A1CFC9CAC9A775A8FF
%A7C9CAC9CAC9CAA07C76FD1DFFCFFFFFFFCFFFCFFFCFFFCFFFFFA8FFA8FF
%A8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7DA7A7CA
%A7C9757DFFFF76CAC9CAA7CAA17C51FFFFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFCAFFFFA8
%FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFA1C9
%CAA7CAA076A8FFCF7CA7CFC9CAA7A151A8FD04FFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFFFA8
%CFA8FFA8FFA8FFA8FFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFA87C
%CAA7CAA1767DFFCFFF7CCAA7CAA7A7517CFFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8
%FFFFA8FFCFFFCFFFCFFFCFFFFFFFCFFD0FFF7DC9CACAC9A07CFFFFFFCF7D
%CACFCACAA076A8FD1DFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFFFA8CFA8FFA8
%FFA8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA87CC9CAC9A14B
%CFFFFFCFCF76CAA7CAA1767CFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FFFFCAFF
%A8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA77CA1CACACA
%75A7FD04FFA87DCACAA7A151FD05FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFA8FFFFA8CFA8CF
%A8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFA752A1A775A17676
%CFFFCAFFFFA751CFC9C9757CFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8CFA8FFFFCA
%FFA8FFCFFFCFFFFFFFCFFFFFFFCFFD09FFA87CA7CFCAC97C76A7FD05FF76
%A1A1CA7C767DFD21FFCFFFFFFFCFFFCFFFCAFFCAFFFFA8FFA8CFA8FFA8FF
%A8FFCFFFA8FFCFFFCFFFCFFFCFFFCFFFCF7DA1CAA7CAA1A051FFCFFFCFFF
%A851C9A7767C51A7FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8CFA8FFFFA8FFCAFFA8
%FFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFFFA87CCFCACAA7A1757DFD05FF
%7D7CCFCACFA1767DFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFCFFFA8FFFFA8CFA8FFA8CF
%A8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCFFF76CAA7CAC9A17651A8FFCAFF
%CFA84BCAC9CAA1A151A7CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CAA8FFFFA8FFCA
%FFCAFFCFFFCFFFFFFFCFFD09FFA7A1CACFCACAA07C52FD05FF7CA1CFCFCA
%CAA0767DFD1FFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFFFA8CFA8FFA8CFA8FF
%A8FFA8FFCFFFCAFFCFFFCFFFCFFFFF7DA1CAA7CAA1A14BA8FFFFCFFFFF52
%A1CFC9CAA0A151A7FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8CFA8FFA8CAA8FFFFA8FFA8FFCF
%FFA8FFCFFFCFFFFFFFCFFFFFFFCFFFFFFF76CFCACFA1A17552FD06FF51CA
%CACFCAA17C76A8FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFFFFFCFFFCFFFA8FFCFFFA8FFA8FFFFA8CFA8CFA8FFA8
%CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFA17CC9CAA7A17552A8FFCAFFCFFFFF
%7CA1CAA7CA7C7C4BFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8FFFFA8FFA8FF
%CFFFCAFFCFFFCFFFFFFFCFFD06FFA7A1CFCAA77676CFFD07FFA7A7CACFC9
%A1757DFD1EFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFFFA8CFA8CFA8FFA8
%CFA8FFA8FFA8FFCFFFCAFFCFFFCFFF7CA7C9C97651A8FFCFFFCFFFCFFFCF
%CF7CCFC9C97C51A7FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8FFCFA8FFA8FF
%A8FFCFFFA8FFCFFFCFFFFFFFCFFFFFFFA8A1CACAA076A8FFCFFFFFFFCFFF
%FFFFA8A1CACFA1A052FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFFFA8A8A8
%CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFA876CFA1517DFFCFFFCAFFCF
%FFCAFFCFFF7CCAC9A14BA7FFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8A8A8FFCF
%A8FFA8FFA8FFCFFFCAFFCFFFCFFFFFFFCFFFFFFFA8A7CA7C7CFD0CFFA7A7
%CFA07CCFFD1DFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFFFA8A8A8CF
%A8CFA8FFA8CFA8FFA8FFA8FFCFFFA8FFFFA7A1C951FFCFFFCFFFCFFFCFFF
%CFFFCFFF7DCAC9767CFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8CFA8A8A8FFFFA8
%CFA8FFA8FFA8FFCFFFA8FFCFFFCFFFCFFFCFFF7DCA7CA8FFFFCFFFFFFFCF
%FFFFFFCFFFFFA7A7CA75A8FD04FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFFFA8
%CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCAFFA8A1C97CA8FFCFFFCAFFCF
%FFCAFFCFFFCAFF7CA7A17CA8FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8CAA8A8A8
%FFFFA8FFA8FFA8FFA8FFCFFFCAFFCFFFCFFD04FFA8A1A77CFD0EFFA7A7A7
%7DFD19FFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCFFFA8FFA8FFA8FFA8FFFFA8
%CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFCFFF51CA76A8CFFFCFFFCFFFCF
%FFCFFFCFFFCFFF7DC97CA7FFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CAA8
%FFCAA8FFA8CFA8FFA8FFA8FFCFFFA8FFCFFFCFFF52A1CA76A7FFCFFFFFFF
%CFFFFFFFCFFD04FFA7C9A1A7FD07FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFF
%FFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFFFA8A8
%A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA876CACA4BA8CFFFA8FFCFFFCFFF
%CFFFA8FFA8CF7CCA7C7CA8CFA8CFA8FFCFFFCFFFCFFFCAFFCFFFCAFFCFFF
%A8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CAA8CAA8A8A8FF
%CAA8FFA8FFA8FFA8FFA8FFCFFFCAFFCFFFFFA7A1FFA07DFD06FFCFFFA8CF
%A8CFA8CFA8A1CAC952CFA8CAA8CFA8CFA8FD0FFFCFFFFFFFCFFFFFFFCFFF
%CFFFCAFFCFFFA8FFA8FFA8FFA8CFA8FFFFA8A8A8CAA8A8A8CFA8CFA8FFA8
%CFA8FFCFA876CFCA517DFFCFFFA8CFA8A8A7FD06A8CF76C9A7527DCFFD07
%A8CFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCAFFA8FFA8CFA8FF
%A8CFA8CFA8CAA8CFA8A8A8FFCAA8CAA8FFA8CFA8FFA8FFA8FFCFFFA8FF7D
%CACAA751FFA8CFA8A8A8CFA8A8A8CFA8A8A8CFA8A7A1CF767CA8CFA8CAA8
%CFA8A8A8FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCF
%FFA8FFA8FFA8FFA8CFA8CFA8FFFFA7FD04A8CAA8A8A8CFA8CFA8FFA8FFA8
%A7CAC9517CA8A8A7A8A8A8A7A8A8A8A7A8A8A8A7A87DA1C9A127A7FD04A8
%A7A8A8CFCAFFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8FF
%A8CFA8CFA8CAA8CAFD05A8FFCFA8CAA8FFA8FFA8FFA8FFA8FFCFFFCFCFA1
%CAA051A7A8A8CFA8CFA8FFCAFFA8FFCFFFA8FFA8A87CCAA0767CFFA8CFA8
%FFA8FD09FFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFA8FFA8
%FFA8CFA8FFA8FFFFFD05A8CAA8A8A8CFA8CFA8FFA8FFA876767652FFA8CF
%A8FFCFFFCFFFCFFFCFFFCFFFCFFFA87CA1A0517DCFFFCFFFCFFFCFFFCFFF
%CFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8CA
%A8CFFD05A8FFA8A8CAA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8A77DFFCFFFCF
%FFCFFFCFFFCFFFFFFFCFFFFFFFCFFF7D764B7DFFFFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFFFA8FFCFFFA8FFA8FFA8FFA8
%CFA8CFA8A8A8FFFFA8A8A7FD04A8CAA8A8A8CFA8CFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFCAFF7D7DCFFFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8
%CAFD07A8FFA8A8CFA8CAA8FFA8CFA8FFA8FFA8FFCAFFA8FFCFFFCFFFCFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFD07FFCFFFFFFFCFFFFFFFCFFFFFFFCFFF
%FFFFCFFFFFFFCFFFCFFFCFFFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CA
%A8FFFFFD07A8CAA8A8A8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8
%FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCF
%FFA8FFCAFFA8FFA8FFA8FFA8CFA8FFA8CFA8CFA8A8A8CAFD07A8FFFD04A8
%CAA8CAA8CFA8CFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCF
%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCF
%FFCFFFA8FFCFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8A8A8CAA8FFFF7DA8
%A7A8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8
%CFA8FFA8CFA8CFA8CFA8CFA8A8A8CAFD06A8A1A8A8FFFD04A8CAA8CAA8FF
%A8CFA8FFA8FFA8FFCAFFA8FFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCAFF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8A8A8CAA8FFFFA1A8A8A8A7FD04
%A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8FF
%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8CF
%A8FFA8CFA8FFA8CAA8CFA8A8A8CAFD06A8A7A8A8FFFD06A8CAA8CAA8CFA8
%CFA8FFA8FFA8FFA8FFA8FFCAFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFA8
%FFA8FFA8CFA8FFA8CAA8CFFD06A8A1FFFFA1A87DA8A7A8A7FD08A8CAA8CA
%A8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFFD0A
%A8A1A8A7A8A8FFFD06A8CAA8CAA8CFA8CFA8FFA8FFA8FFA8FFA8FFCAFFA8
%FFCFFFCAFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCAFFCFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8CFA8CFA8A8A8
%CAA8A8A1FFFFA1A87DA8A8A8A7FD08A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8
%CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8CFA8FFA8CFA8FFA8CFA8CFA8CAA8CFA8A8A8CAFD06A8A1A8A7A8A8FF
%A8A8A8A7FD04A8CAA8A8A8CFA8CAA8FFA8CFA8FFA8FFA8FFA8FFA8FFCAFF
%A8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8FF
%CFFFA8FFCAFFA8FFA8FFA8FFA8CFA8CFA8CAA8CFFD06A8A7A8A1FFFF7DA8
%7DA87DA8A7A8A1FD08A8CAA8A8A8CFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CFA8
%CAA8CFA8A8A8CAFD06A8A7A8A8A8A1A8A1A87DA8A8FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">OLYMPUS DIGITAL CAMERA         </rdf:li>
            </rdf:Alt>
         </dc:description>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-08-13T15:01:25+04:00</xap:CreateDate>
         <xap:ModifyDate>2010-08-13T15:01:25+04:00</xap:ModifyDate>
         <xap:MetadataDate>2010-08-13T15:01:25+04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>184</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6tFHkGxGRJgVFRpihExp&#xA;gVEImKq6JgVVVMVVFTFV4TAq8JirfDFXcMVdwxVaUxVaUxVYyYVUmTFVJ0xVQdMKoeRMVQ0iYUoS&#xA;VMVTbyYtNWl/4wN/xNMkGMkniTAyRcSYFRcaYEIhExVEImBVdExVVVMCqgXFV4XFVwXFW+OKu44q&#xA;7jiq0riq0riqwpiqmyYqpOmFVB0xVQkTCqGkTFUJKmFKZ+UVpqkv/GFv+JrkosZJTEmRZIuJMCEV&#xA;GmKolEwKiETFVZVwKqKuKqgXFV4XFUi83edfL/lOxW61aYhpKi3tYgHmlK7ngtRsO7MQo8dxiBbE&#xA;kBiWif8AOQPkHUJZ47xp9JaGN5g92qlHWMFiqGJpCXoNlpv0WpyUoEIjMFNfI/5w+SPOd7Jp+lzy&#xA;QaigLJZ3aCKSRF6tHRnVqeFa96UwGJHNkDbN+OBWiuKrSuKVpXFVNlxVSZcVUXTCqHdMVQ8iYVQk&#xA;qYqmHlZaanJ/xhb/AIkuTiiSWRJkWSLiTAhFRpgVEIuKq6LgVWVcVVFXFV4XFCUebPNOm+WNGl1O&#xA;+Jbj8Nvbp9uaUj4I18OR7nYdTtgUmnyx5s13Vdd1OfU9Ul9W7m2oNkjQElYox2RK7feakk5lQjQc&#xA;SU+IsLv++TSEoi1G+0zUINQsJmt720kWa3nQ0ZHQ1BGJFimwGn3B+Vnn2188+TbPW4+KXe8Go26n&#xA;+6uYwOYpvRWqHX/JIzDIo03MtIwK0RilYVwqsZcVUmXFVJ1xVDuuFUPIuKoWVMKo3y0tNRk/4xH/&#xA;AIkuSigpdEmRSi41xVExrgVEouKqyLgVVVcVVAMULwMCvm38xPNb+ZvM93IjE6bpbtaWKdiRu8o7&#xA;H1BRlYdjQ9Mswi92jPLowDUO+ZLSGM3j8i/gDQHxp1/HADbZVN+TfLFt5n8xxaTc3hs45Fkf1Aod&#xA;mMYLcFBK7kDMDtHWnT4TkA4qLdjhZp9Bflfp2geS7qS20GaS8e3f0tciEpLzM8fJP3bMIVkDcSvS&#xA;i1Fd85rD23k8USyiscxs5PhiqD2/T7601Cxt76zk9W1uY1lhkoRVHFQaGhH0504Niw1UrEYUNEYq&#xA;sK4UqbLiqi64qouuFUNIuKoaVcKovy8tL+T/AIxH/iS5KKCl8S5FKLjXAqJjXFUQi4FVlXFVVRih&#xA;eBgVcBil8w+dZPKb/mjfaVbaW8ekW0ItWGlxWhka4gI5fDcgrXm5jam/wih64JQNCljMAm2e2/k7&#xA;8vr3T2u4NAhYoGEls0arMsiDeNgSFDfTxPUGhrlBJDlxET0DzfTPLHlm61udZ9BuIbZWZzbNdWxM&#xA;dVd/TZCkTjgsbVCyt06nvPgmBdtUckCaIYhNInlT81pE0myjlaJ2gtLeQuFDzwcA2wd+r1oBXtkc&#xA;+n8fTmBJAJ3YZKjk2ZF5y/MKfy9oP1U3BXzBqqW8jXcUKxSRMkpivEkDInxx+iUUMlQGpU8eR1OP&#xA;sWHiiUf7uIOx336Nk5VT3X8r/Omp3ttDo3mAw/pBUP6PvIE9KO6ii+FgYx8McyAVZV+EruvRgu5h&#xA;O0ZcRj7noWWNLRGKrSMULGGFVJlxSoOuKoeRcKoaRcVRWgil8/8AxjP/ABJcnFBQES5FKLjXAqJR&#xA;cCq6LiqsoxVUAwIXAYpSzzVrseg+W9S1l1D/AFG3kmSMmgd1X4E/2T0XFXzR+Utpp2s+bLuPXFF3&#xA;9atJpG9Yn45vWikZqgj4qBj9+WamwBTHT0SbeqaBrWnQ6cIb6a2sLktxNiZoSI6AKsauHcy8VAHM&#xA;nfwH2RhmJc+MVRdO0T6yt3DxklYBIyZWkWkYqoRCzIOA+zQfCOmCXF1ZRjG3zh5/1ltP/Ni71a3j&#xA;WZ9OvYZ0if7LPbKjFWp2LJvmVi/unDzH96w7z95yvvNmtNqd1DHbAAiK1hrwQM5kbc7ks7FmJ7+A&#xA;2zJx4hEU1TyGRt9V2ei21rp2lW6SStYanY2+p6ZOXb1opeCGUJJ9pSjukimtfiI6LmsnGtw5+GfG&#xA;CCn2j/mZdaNdxaX5ydfq0pCWXmNVCRMSaKl2q0WJz/OvwH/J2rZDJfNpy4THccnpQIIqNwctaGiM&#xA;VWkYoUmGFKi64qoSLhVDSLiqI0QUvX/4xn/iS5OKCgYlyCUXGuKohBgVXQYqrKMCF4GKV2KvOf8A&#xA;nICaSP8AK/UVQ09WazRz34/Wo2/Hjko8wiXIvm/y/q11pGp22pWjAXFs4dAdgwOzI3s6kqfY5lZI&#xA;8Qpx4S4Tb6S0n8ypk0izuLPTpdV0+5T/AESWEn1ISpo0NyoVgPTPw8gSduhpyOJHNW0ubn+EJbgp&#xA;f5m8wLZRy6xrVxEl0U4Rx8qRRLWojj5U2r9tzQsfD4VGNkyGRcnHARD5G8w6gNQ1rUL/AJc1uJ55&#xA;FYgglSzBSQd+lMy8e0AO8uBkNzJYxc9TmW0vu7y5o8uvfk95SeyZV1Oz0uwnsXkqFM0dssbxuRUh&#xA;JV5ITQ0ryoSBmvnGxTkwnwm0oeKy1iwmtrqE0q0N1azAepFKuzRuu4DLX5EdKg5ikU7ESEhaM/Kj&#xA;Wb3S9SuPI+pTNOlvGbrQbiQ1Y2qlVktyTufRLqU/yTT9nL8cr2cLNj4S9Qy1oaIxVTYYUKTjFKg6&#xA;4qhpFwqraOKXj/8AGM/rGSigoOJcilFRjFUSgwKrKMUKoGBVwxS3irHfPvk6Dzh5am0Oe5e0SaSK&#xA;X141DsDDIJB8JoNyuKvIL7/nGTWUT/QfMNvOQyuqTWzwfYYMFLrJP1pueOWHLIsPDCCXyL+dHlK1&#xA;vjo1vHJG6NJN6UkE8HJF2kVJngkD0FKhdx1BoKV5RGW/Is8UpQ26JivkW9uoP0hdXv1zVWi5wXFz&#xA;+8KyMvw8aBUjG9DwQZhW7QB4XB+Vfnu6N/b2WlzXo02R7W6uIVZohLGVdh6hCj7J5fI5mxyAgeTr&#xA;JQIJUNQ/I78ybawGoXemJb2juI43e5ti7yHokcSSNLIx/lRScuOoAHJgMZOz6K8qP5zTyjo2i3l1&#xA;+hrPT7OG2e0smrcymNArGW66xgnosNGH85zAllPRz4accyv1LVtM0GyMNsipJX4YkBJ5uerAVZ3d&#xA;j03ZjlbfsAyr8tvJF7ZXE3mbX1P6bvE9O1tmIJtLZiGKmm3qyEAyU2AAUdCTkwhTgZcnEfJ6DljU&#xA;0cVWMMUKbDCqg4xShpBhVW0kUu2/1D+sZKCCg4hkUoqMYFRCDFVZRihUAwJXYq7FXYqxbzv5ovdL&#xA;Njpekqj63qrOIGlBaOC3hAM9zIoK8gnNVVairsvauQnKgzxw4jTF7vU/MME0enWWtXcmpXIMk1xI&#xA;IHEUQNGkKGL01qfhRVUVPsGyjxJOX4EeS3TryGQNaQ29zElmBEXuI3QEqKAKz09Tb9paj3yDcCkW&#xA;maBo2oNq11cQGe0vdQldrKV3e1aS342zSG3J9IuWgJ5Fa42WIgCbpSt73yXY6jcrYWdvDc2x9Ga4&#xA;trdE+P8AaiDqBUr+12B26ggLMAdHJrerazffovy9aPPd7GQrT90jdHlc/BEvzNT+yCdsMYkscmQR&#xA;5vQfJ35b2ejSx6nqbi/1sVKy7+jAWFG9FW3LUNDI3xHtxBIzJhABwcmUyZpk2p2KuxVaRiqmwwoU&#xA;HGKUPIMVVdLH+lN/qH9YycEFCRDIpRUYwKroMVVlGBC8YpbxV2KuxV5bqOp27+Ztc12esiQD9G6e&#xA;iAFjDY1a5YVoFH1mR0dmIUcF5EZh58gid3MwgRjZUfLEF01gdVv4/T1LVeNxPEesSEfubf8A55Ia&#xA;H/K5Hvgb4o67uGjVkgja4uypaG1j3dyOnyFSAWOw7nIZMkYC5GkmQDFrUX+nfl/BGjenqgt1jnc9&#xA;Y7uU0nah6tHKztTxFMMZiQsclj9KU+RvKUnmPUZNIsHa10rSwi6nfru6s45CGIsGDTOPiZmqFrU1&#xA;JplsIW05cvDsHvGheX9H0LT1sNKtktbZTyYLUs7nq8jmrO7d2YknMkCnCJtMcKHYq7FXYq0cVU2G&#xA;KFJxhSh5Biq/TR/pLf6h/WMnDmgoWMZFKKjGBVdBiqquBC/FLsVdiqWeZdXGj6BqGp8eclrA7wxf&#xA;78lpSKMe7yEKPngJoJAt51Bo8WnflnfI0wupzDLHql53dI5WW66dNvUJHTkWPc5zGXIZakcXIScr&#xA;yXyX9xL5hl0u2I+tPHbrAslSieoZnkmIBqVVIvarDjUVrm1z5RjgZFvlKmZadplrYRFIQS77zTvv&#xA;JI38zt39h0HQADbOcy5ZTNyaCbebeeLmGHWbyzjPw3RSbiKUDxqqyH5tzX7s2HZOW+OH80j7WzCe&#xA;YZf+S1isHk57zgEfUr67uH8WEchtkY/OO3WntnR4xs4mY3Is9ybW7FXYq7FXYq1iq1sUKLjClQkG&#xA;Kr9OH+kt/qH9YycOaChYxkUomMYFV1xQqrgSuxV2KuxV5/rmrv5k1cafap/uC0i5D3l2TtdXtu1U&#xA;giH++4JQGd/9+KFHRsoyT6OTgx9SwbU9W8zWvmfUrPyrCmoxS2s99qGkSn4GEASOV4zwlHKUuF9P&#xA;geZqRvWur1PZ/jHiieGX46M81BD+W7bzdYX8HmyOBb7lZi2W1juln9SzdhKnCRo4OXCnwctzU1OQ&#xA;1Glyzx8JkCR5Vfv3LIwJCe33526HFEYnVrG8oQYrlJRIreAjMYLHwp198009JqeQh9oajbzzXrnU&#xA;dWRtbaF7Wxt1d7WedHFzK1OUjKAyNGGoBRtz3XNn2f2bLELlIiR51+N2yGMgWdn0l5V0b9C+WdL0&#xA;knk9jaxQyv8AzSIgDv8ANmqc6MCg4ZKZvJGnHmwXmeK1IFWPQCvfChdirsVdirsVdiq1sVUnwoQ8&#xA;gxSv08f6Q3+qf1jJw5oKFjyCUSmKq64oVBgSuxV2Ksc87aveWtlDpumuY9W1ZjBbzDcwRKKz3NN/&#xA;7pD8NdubID1yE5UGeOHEaYTr2taV5Y0eOwtSIvRRYYUWrMtfhUACrPI5+yN2YnMV2GwCe/lb5PvN&#xA;Jt7vW9Wi9HWtX4BrckMbe1i5GGEkV+Ml2eSh+0afs1zJxxoOBlnxFDa7pf8Ahi/e5jFPLuoTA7VI&#xA;s7ud+hFNoJ3bY/sOafZYcYZIdW7Bl6FZPa20rcpYkkYdCygn8cpcxjfnGS0i/RRumEdmt9am6Y0C&#xA;rbi4jEpPYAJWuGPNry/SXtmZjrXlXnf8q9a1zzlf66q2Op28+nLaaZBqU9xELC4Rw/qxpDG/MMy1&#xA;b41PUbg0yBjZZAvN/wAxtH/OOHS9Nt/NnmKwkNxcuumWymZruW8kt/SAjSztgCFd2ZK/ZqKntkJA&#xA;9Uikb5GufzU1LTriy0LzjYDTdKWCOa3CtbSwW3pAoqS3dkasoI5swNT1PxbEX3qaVk8ifnRba8+t&#xA;yeadLN3K1w0Un1x2cLcTRrKLdJofSWkYCoCOKk/zHZorYZFpWmfnxHfWF9qnnHRntrWaKO+to2Hp&#xA;NAC/qmasCH1K8UAVlrTqDvhAl3o2STz9qP5s6tq+p2Og+YLW60W/1E6H9UsRzkt45VSvLjFzR4V5&#xA;tNIZOIBG46AStIp6/wCU9N8oeW9Ft9F0O4gSyhYKi+sjs0kxJqd/tSGpoB8hlgADAp8+SQh5MUr7&#xA;D/ehv9U/rGThzQULHkEolMVV1xVUGBW8VWySRxRtJIwSNAWd2ICqoFSST0AxV5xfare6lq7vpsX1&#xA;jVb9OGmwvVVt7FCP30xI+ASMfUNRy3VaFlAOPK5HZy4VCNnmn3lv8vtM0u5TU79v0nrYqReSj4Ii&#xA;wo31eMlgle7Elz/NTbLYwAaJ5DJleTa0l8432h2nly9GtfHY3UZtGt1HKSdpwY1hiXqzvWij+GCR&#xA;FbpAJOzCNGTUU0WwTUyDqS20IvSDUeuIx6lD3+OuYbtByQXmLQ49WtfScioDLwcVRlcUZWHgaYpS&#xA;fy1598weRpk03WvW1PyzHRAx5S3lknQMpFWngXw+2o6VpTLYZO9xMun6h7bp+oWOo2MF/YTpc2dy&#xA;glt7iIhkdGFQQRmQ4iT+aPJOleYrvSr+4lntNS0WZp9NvrYxiSNpAFkFJUljKuFFQV7YCLSCwef/&#xA;AJxq8jT3Ut3NqGqyXdwWa6neeB2ndrgXJeblAyyHmAPiBFANq75HwwniRejf848fl5pk1tK63Woi&#xA;1hnhhjvnilUG4fmZNo0PNDXhQ0FSact8RALxFA2//OMvkGCvG81Jj+62d7V0/co0Y5RNbGJyVkNS&#xA;6E136kkvhheJfaf841eQra6W4W81SQgvyjknhZWEj+pRv3PLZu4NT3Jx8MLxI/SPyC8g6TqGh39o&#xA;tyLjQqNCS8Y+sSq7yJNclI1Mjo0hoQQKbUoMRAIMi9EbLGKg+KV1j/vQ3+qf1jJwQULHkEolMVV1&#xA;wIVBilvFWO+eV9bSILI7pe3dvDNGQSJIg/qyo3X4WjjYMDsRUd8hkOzZiFyCWeRzDa6/r1jPvqNz&#xA;JHewzGlZLTgI1QHr+5k5VHbmPHIYjsz1ANs1y5oQ2pajY6ZYXGoX8y21laRtNcTuaKiIKsTiryvS&#xA;9Xl836gfM13VLeFni0XTGqGtot1M0yV/3omH/Ap8I6sTiTycTm4MYAvqmavdNczrJEqW6cRBIGqz&#xA;kir1WnwgbAb775FyEo1HzLaQyLb2cT6jeyFkjgtqEckoGDyE8F4kjlvVagkUyPELrqgzCUaxpPmX&#xA;U7RprqS309oxziggQzzAcalGmcqnXwj+nCkWUJ+UnmG58q+c7fyzLO8ugeYvVa0STiBbX6AyEJxC&#xA;qqTLtxA+19OX4pdHDz463fQeXuM7FXYq7FXYq0cVUmxQovhS3Y/37f6p/WMnDmgoWPIJRKYqrrgQ&#xA;qDFLeKse84KANImbaOC/Bd60C+rbTwpX/WklVR7kZXl5NuH6mK+V9G1ubXI/NNrL68M17dWtzbyF&#xA;V4W0chgrG1AStYgzKf2lFNjtHHHkWeWd2C9Ly5x3l3nPUD5n85r5ZQltD8v+lea0P2Li9f47W2b+&#xA;ZIl/fOOleNcoyy6ORghZtq8TTbHUI7u/Xjp9y6xXMys8bwSuQscgeMq4SRqI61pXi21GOazWQkBx&#xA;wNEc/MORMVuEx1fTPLVhY+q9ub+SakdpZT3Es6TyOaIvCV5EIqas3E8V36DNXDUZcshES5tdkoSz&#xA;0xLNXkcq93NT15VXioC/ZiiX9iKOtEQdOpqxYne48YgKDfGNLZwDsemTbHk+rK6a15YlgBNxDr+n&#xA;mCnXkZuNPetemThzaNR9L6mzLde7FXYq7FXYq0cVUmxQovhS3Y/37f6p/WMnDmgoWPIJRKYqrriq&#xA;oMCt4qhNU0+LUdPms5SUWVfhkX7SOp5JIv8AlI4DD3GAi0g0kvkeDU7Szv7C/tjbtb3szwkD926T&#xA;t6zNG37SmSRyPalaNUCMBQplkIJtPr68gsrK4vbg8YLaN5pm8EjUsx+4ZNg8l/LiC4PlePVrwU1D&#xA;X5ZdXvT/AJd43qIPksXBR8swybLsccain1/a213aT2t0gktriNopo26MjgqwPzBwNjBfy3sdWbWb&#xA;lNQlW6tNJjH6PuTX1XNwWRTL2LxxxsvLuG8cw8Ghx4shnH+L7Pc0xx1Jn8+ZjclWoTCC3lmPSNS3&#xA;3CuBkGCeW9MOsfmB5YsACUtbl9WuCP2UskPAn5zyRjLcY3cbUy2p9HZkuC7FXYq7FXYq0cVUmwqo&#xA;Piq6x/3ob/VP6xk4IKEjyCUSmKq64oVRgS3irsVdirEfzbuJofy28wiA0mubRrSP/WuyLceP+/cj&#xA;PkmI3QFtaxWlpDawikNvGsUY8FQBR+AzEdmEBrt2LbTJ5K0Zl4J822/DrikJf+XaIdJvrlWDCe9k&#xA;CnbYQokLLt4PG2LHqn0+LJinm+99K1W2U/HMat/qLv8AicWQTT8jtBd4NQ823CEHUyLXSga7WVux&#xA;rIP+M8pLe6qpzIxRoOuzz4pPVctaXYq7FXYq7FVrYqpvhQh5MUr7D/ehv9U/rGThzQUHGcilExnA&#xA;quuKFVcCV2KuxV2KsS/MyP19AtbOlRdanpwYUO6wXcdyw2/yYDkMnJsxD1BCPmK7BhnmmW/1bVrT&#xA;y/pRBvbh/TjYiqRsRWSZx/LDHVvc/D1IwxjZY5J8ItOvIum22meWEsLX1DbW93qCwGY8pCn16cry&#xA;buaHrjLmxx/SEyuWVVZmNFUEknoAMDa8+XSrvzr5pXSIC8dpIPU1K4WoMNippQMPsyTn4E/2TD7J&#xA;ycI2WrPk4RXV73bW1va20VtbRrDbwIsUMSCioiDiqqB0AApmU69VxV2KuxV2KuxVa2KqT4UIeQ4p&#xA;X6ef9Ib/AFT+sZOHNBQUZyKUVGcCq6HFVVcCF+KXYq7FWJedJBLq2hWQ+1HJcag3+rDCban0teA/&#xA;RlWU7N+nHqSbXdUh0zTpruVgoRTQsaCtK1PsOpzHc1G/ll5Wls7aTzBqUZGq6oo9JJBR4LUnmqEH&#xA;cPIfjk/2Kn7GZOONBwM2TiPkl/lGSaXyzZzT09Wf1Znp0/eyu/8AxtmOebmY/pCU+eNXNpZrawq0&#xA;tzdMsaQx7vI0jBI4kH80jkKMADMmhZZz5B8oJ5a0X0pisuq3jCfU7hdw0pFBGhIB9OJfhTYfzUqx&#xA;zLjGg66czI2ybJMHYq7FXYq7FWsVWtihRc4UqEhxVfpx/wBJb/UP6xk4c0FAxHIpRUZwKrocVVlO&#xA;BC8YpbxVLdf1/TdC0yTUNQciJSEjijBeWWVzRIokG7yOdlA/VgJpIFsBbXo01mW98wvFpt9qEANp&#xA;BLIoSK2gY/uQ5IRpVMnOUj+agqqg5jTlZc3FDhG6G0m0/wAY+cBGRz8v6GUmuj+zNcEh4Yfcbeo4&#xA;/lCg7OcljjZtjnyUKD1WeaKCGSeZgkUSl5HPRVUVJPyGZDhvNfJPJPIuhSTMeTafbzSFxRgXiDnl&#xA;7jlmGXZQ5BB/l9Y/4h87X2u3I5WuiERWqHp9cnjqT84bdlA/4yV6gZbij1cfUz6PWsvcV2KuxV2K&#xA;uxV2KtHFVNjihSc4UoeQ4qv00/6S3+of1jJw5oKAjORSiozgVEIcVVlOKFQHAldirz6Ob/EGrHX5&#xA;jzsbcvDoUJ+yI68ZLuh/bnp8B7R0pTm1cbJKy5mHHQtJvP2t21hpsiy04xoZ5jSpVEBO3+U2VuR5&#xA;s1/Lvy9LoXlS0trlOOo3NbzUu/8ApNx8brXuI9o1/wAlRmXEUHWzlZtLPzRvprqys/KFk5W88ys8&#xA;NzIvWLTogDeye3JGES/5TjI5JUGWONlIvNmjtBZSS2eoXNjbGNIJLGAx+lIooigc0d4/g+E+my1H&#xA;vvmM5wCa/kvFx8v6pJTebVZ2NP8AJiijH4R5k4uThZvqL0DLGp2KuxV2KuxV2KrScVU2OFCg5xSh&#xA;5DiqrpZ/0pv9Q/rGTggpdEcilFRnFUShwKrKcUKqnArHPzE1G4s/KV4lo5jvtQaLTrN1+0st7Itu&#xA;HH/GMSF/oyMzQZwFmkunkstJ01QAI7a1jWOKMeCjiiL92YjsQGBaLpl95z8628ZjL6Pplyl5rdx/&#xA;usyRUktrNa/aJfg7jsg3+0Msxxs20ajJQoPdMyXDedNHLL+bWuTXSkG20jT4tNJ6GGaa4acj5yxK&#xA;D8hmPl5uTp0L55m42kEP88hb/gRT/jbKnLCZfkpA6+Rlu26X99fXMf8AxjNy8cZ/2SRhvpzKxjZ1&#xA;2Q3Is9ybB2KuxV2KuxVo4qsY4oU2OFVBzilDSHCqtpJ/0tv9Q/rGSggpZE2RSi42xVEIcCq6HFVZ&#xA;TgQxPzoDda75bsP2IprnU5B4i1h9BR9El6jfMZVmOzfgHqYlrKap5p8yDy7pMhhjtwH1C+oGW2iJ&#xA;Kl6HYyvxKxKe4LHYHKoRsuTlycI83p+h6Jpmh6XBpmmwiG0t1oi9WYk1Z3Y7s7sSzMdyd8yQKcAl&#xA;H4VYh5jjEHnPSbkLRbuxvLWV6dXjkgmhX6F9Y5TmDkac7sG/Mia8uLu30zT/APjoXhjs7PavGa5f&#xA;hzIH7Ma/G3sDlIFlyZy4Y29b0XSbTR9HsdJs142lhBHbQA9eESBFr70GZgDrkbirsVdirsVaxVon&#xA;FVNjhQpOcUqDnFUNI2FVbRzW8f8A4xn9YyUUFK4mwJRcbYFRKNgVXRsVVlOKsE80axHa6rrOqEGR&#xA;NIs4rSJVHJ/rMtZ5EVe5ZXt6DMfKd6crAKBLIvI/loaBoiwzUfUrpjc6nON+dxIBUBu6xgBE/wAk&#xA;DLYxoOPOVm2Q5Ji7FWMec3C3nlsGtX1N1FP+2deNv/wOVZeTdg+pjXlrTxqv5mXuoSryt9Ch/dVG&#xA;31q5BiVlPjHDHICP+LBkcQ6tmolyD0zL3FdirsVdirsVWk4qtJxQpMcKVF2xVQkbCqGkbFURohre&#xA;v/xjP/Ehk4oKURNkUouNsComNsVRCNgVL/NHmAaBoF1qnoNdywhEt7RCFaaeZ1ihiBOw5yOq1wSN&#xA;C0gWWA3Vvdwaj5T0rVCtzf6vrH17Vmjrx9aKOW8QLXf04mgVFr+wormNE3JypjhhT1wHMlw1wOKX&#xA;NJGn22C/MgYqxjzbPbT6h5eiikSSWO+lnKqQSqLY3MbNt4NKq/TlWXk3YPqS/wDLe7so4/MHqShL&#xA;p9Yna4RjSh9KFUp7GNVPzrhxckZvqZol1bP9iVG9gwOWNSrirsVaxVonFVpOKFjHCqk7YpUHbFUP&#xA;I2FUNI2KorQTW+f/AIxn/iS5OKCk0TZFKLjbFUTG2BUSjYqx7VjHqOtR+uQum6E3ryctle9ZKpWv&#xA;aCJ+XhyZSN0zHyy6ORgh1Y95U1SDVPOuseYJlaS201V0vSkoKByBLdSb9zyRPajDucOGPVGolvTN&#xA;JPMFw20Uap7n4j/DLqcdCyaheS/bmb5A0H3CmKqNSd8VSrWjJBeaRfxtx9C9SGb/ACorsG34/wDI&#xA;142+YyvKNm3CakkcN+mi/mFcWFxtb66ALWQ9FuYQ8vpnt+8jduPulO4yvDLo26iPIsyzIcVE2d5d&#xA;wyKsLFqmgj6g+1MVZRXbAlxOKFpOKrC2FKmzYqpO2KqDthVDSNiqGkbCqL8vGt/J/wAYj/xJclFB&#xA;SSJ8DJFxPgQio3wKiEbFWG6/5P8ANFzqF7Lpd9ai0vukdysqtA54/vBwLJNwPMqhVSee70UZTLFZ&#xA;tuhm4QnnlryTpmh6RbabDJJKkCnlKxAaSRiWkkf/ACndix9zlgFBpJtPYtMsE6RA/wCsSf1nChEJ&#xA;a2gG0KD/AGI/piq/6takUMKEf6oxVIfNnlhtQ0iZdNpHfxPFdWsbGkbzWsqzxIx34qzxAE+GRkLF&#xA;MomjbzrR/LPmLzL5tjnu9NvNN0qxu476W51FVil5xj4beBVr6nx/akrxpWhO2UwgbcjLmBFB66NI&#xA;04U/dV9yzf1zIcVXhtbaD+6jVD4gb/fgVVJxVonFVhbCqxmxSpM2KqTtiqHdsKoeR8VQsr4VRvlp&#xA;q6jJ/wAYj/xJclFBSGJ8DJGRPgQio3xVEI+BUQj4qrK2BVRWxVUDYqvDYq2GxQ3yxVvlirXLFWi2&#xA;KtFsUrC2KqbNiqkzYqou+FUO74qh5HwqhJXxVMPKzV1KT/jC3/ElycUSY9E+Bki4nwKi43wIRMb4&#xA;qro+BVdHxVVV8CqgbFV4bFVwbFW+WKu5Yq7liq0tiq0tiqwviqmz4qpO+FVB3xVQkfCqGkfFUJK+&#xA;FKZ+UWrqkv8Axhb/AImuSixkxqKTAyRkT4FRUb4oRMb4FRCPiqur4FVVfFVRXxVUD4FXB8Vb54q7&#xA;nirueKtF8VWF8VWM+FVNnxVRd8VUHfCqHkfFUNI+FKElfFU28mtXVpf+MDf8TTJBjJ//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:5501A9C2C9A6DF11AA75DE9B6F5822C8</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:5601A9C2C9A6DF11AA75DE9B6F5822C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5CFE6032C9A6DF118A26F933FBE5E206</stRef:instanceID>
            <stRef:documentID>xmp.did:5CFE6032C9A6DF118A26F933FBE5E206</stRef:documentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:ColorMode>3</photoshop:ColorMode>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001480</stDim:w>
            <stDim:h>297.000110</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -841.89 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.89 li
595.054 841.89 li
595.054 0 li
cp
clp
[1 0 0 1 0 0 ]ct
595.053 841.887 mo
0 841.887 li
0 0 li
595.053 0 li
595.053 841.887 li
265.91 757.51 mo
267.08 758.282 268.313 758.758 269.518 758.758 cv
269.941 758.758 270.362 758.699 270.774 758.574 cv
271.487 758.356 272.194 758.089 272.889 757.777 cv
276.313 756.401 282.071 753.169 288.27 745.731 cv
293.094 739.944 313.533 745.731 331.038 738.315 cv
344.583 732.573 353.025 717.66 312.03 709.659 cv
299.757 707.264 286.177 706.271 272.432 706.271 cv
272.163 706.271 271.894 706.271 271.625 706.272 cv
270.169 702.492 269.212 697.267 271.746 688.482 cv
278.712 664.326 287.496 649.08 293.715 630.657 cv
301.158 608.625 292.608 587.547 302.607 566.748 cv
317.844 535.095 343.773 509.553 356.562 476.316 cv
365.265 453.717 370.494 428.274 357.642 406.836 cv
352.296 397.917 339.876 387.423 331.92 381.222 cv
317.061 369.639 309.42 369.18 312.723 348.426 cv
314.964 334.368 320.427 318.294 322.443 304.164 cv
325.035 286.002 328.113 280.62 342.675 269.874 cv
367.146 251.793 395.541 238.761 412.137 211.113 cv
412.803 210.006 410.706 204.732 403.938 194.175 cv
398.412 185.553 388.674 177.642 367.236 163.296 cv
359.802 158.319 355.392 149.013 351.108 145.143 cv
347.816 142.167 343.855 138.736 340.211 136.925 cv
341.874 135.563 342.954 133.569 343.872 131.868 cv
344.484 130.752 345.051 129.699 345.672 128.997 cv
346.221 128.385 li
345.537 127.962 li
344.745 127.467 343.917 126.621 343.044 125.73 cv
341.107 123.752 338.786 121.374 335.513 121.374 cv
335.211 121.374 334.902 121.394 334.584 121.437 cv
335.79 117.369 333.459 114.264 331.56 111.726 cv
330.804 110.718 330.093 109.764 329.715 108.891 cv
329.382 108.135 li
328.743 108.63 li
328.537 108.791 328.305 108.943 328.053 109.091 cv
327.512 108.001 326.952 106.901 326.367 105.786 cv
310.599 75.69 301.545 70.965 294.768 70.317 cv
294.505 70.2911 294.245 70.2785 293.991 70.2785 cv
289.119 70.2785 285.752 74.8702 283.896 78.471 cv
282.006 74.583 278.262 69.489 268.101 68.634 cv
267.804 68.607 267.498 68.598 267.201 68.598 cv
253.044 68.598 234 97.029 233.199 98.235 cv
229.914 103.185 li
229.932 103.179 li
215.398 123.875 215.397 134.946 215.397 134.946 cv
218.988 134.892 li
219.022 134.892 220.219 134.869 222.332 134.838 cv
220.623 140.968 218.249 147.34 214.569 157.221 cv
213.453 160.236 li
213.102 161.163 212.76 162.063 212.427 162.963 cv
207.432 176.193 201.51 188.352 203.481 221.202 cv
230.085 224.568 li
230.103 224.478 231.354 217.638 232.587 212.436 cv
232.344 217.836 231.624 224.82 231.624 224.82 cv
232.103 225.018 242.674 228.352 262.32 230.594 cv
263.31 235.924 263.451 241.117 263.367 241.875 cv
263.178 243.541 261.445 244.068 259.045 244.068 cv
256.985 244.068 254.432 243.679 251.946 243.288 cv
249.476 242.901 247.067 242.514 245.282 242.514 cv
244.784 242.514 244.334 242.544 243.945 242.613 cv
235.404 244.08 229.923 249.471 225.9 256.941 cv
219.951 268.011 217.593 280.359 213.03 292.113 cv
208.611 303.471 207.108 311.481 202.401 322.713 cv
200.304 327.726 194.139 330.903 188.793 339.102 cv
183.294 347.544 177.777 355.914 173.241 364.941 cv
169.443 372.501 165.564 379.98 161.262 387.243 cv
157.977 392.787 151.227 398.448 151.11 405.243 cv
150.957 415.071 147.321 433.665 150.381 441.99 cv
153.468 450.36 154.764 454.356 160.461 462.483 cv
163.855 467.335 165.975 469.15 167.139 469.15 cv
168.187 469.15 168.461 467.676 168.192 465.624 cv
167.859 463.104 165.195 460.053 165.024 457.497 cv
164.718 452.889 162.828 447.462 163.845 443.754 cv
165.804 436.61 164.544 428.408 166.285 428.408 cv
166.36 428.408 166.44 428.423 166.527 428.454 cv
169.038 429.345 170.874 430.974 172.224 434.052 cv
173.388 436.722 175.46 438.777 177.479 438.777 cv
178.223 438.777 178.959 438.498 179.64 437.868 cv
178.083 433.215 176.202 431.154 174.96 426.15 cv
171.522 412.308 164.907 408.609 166.095 403.668 cv
166.941 400.176 169.344 395.964 174.051 391.167 cv
195.223 369.605 217.301 372.681 228.902 330.547 cv
229.614 330.804 230.344 331.01 231.084 331.17 cv
235.105 337.452 241.518 346.706 246.96 353.61 cv
253.206 361.53 263.691 369.603 263.934 383.832 cv
233.712 416.907 218.79 433.746 210.789 462.969 cv
200.628 500.094 207.117 550.485 187.38 566.928 cv
143.973 603.099 151.29 648.009 137.61 686.772 cv
132.606 700.956 125.649 697.734 126.378 707.418 cv
123.867 712.692 117.423 724.986 113.598 731.655 cv
109.773 738.324 110.772 748.89 115.947 750.321 cv
116.125 750.371 116.338 750.391 116.57 750.391 cv
117.722 750.391 119.331 749.88 119.331 749.88 cv
121.311 751.383 123.112 752.056 124.797 752.056 cv
126.809 752.056 128.653 751.095 130.434 749.439 cv
130.436 749.439 130.437 749.439 130.437 749.439 cv
130.437 749.439 176.04 738.315 216.54 738.315 cv
252.539 738.307 256.733 752.833 265.91 757.51 cv
141.558 729.72 mo
144.478 722.045 146.892 714.457 149.652 710.865 cv
153.531 705.807 150.093 699.561 152.982 689.859 cv
160.119 665.811 172.161 653.256 182.754 641.349 cv
190.944 632.142 201.618 621.639 201.618 621.639 cv
207.639 609.813 214.866 587.502 221.31 575.937 cv
235.296 550.827 253.035 528.066 267.3 503.046 cv
265.455 524.097 265.473 545.229 264.213 566.316 cv
263.043 585.981 245.097 603.063 245.205 622.575 cv
245.205 622.575 251.63 637.979 254.409 668.679 cv
254.807 677.978 254.711 688.412 254.299 696.346 cv
253.818 700.482 253.246 703.852 252.949 706.892 cv
227.441 708.472 203.193 712.835 187.533 717.309 cv
172.291 721.665 154.335 725.599 141.558 729.72 cv
300.71 241.459 mo
300.324 241.459 299.936 241.428 299.547 241.362 cv
298.115 241.123 297.477 236.374 297.189 232.116 cv
311.365 231.715 325.194 230.285 334.068 228.823 cv
338.423 228.472 341.384 227.857 343.128 227.391 cv
339.999 229.735 336.903 233.019 333.855 235.386 cv
331.823 236.751 329.575 237.159 327.236 237.159 cv
325.503 237.159 323.72 236.935 321.939 236.709 cv
320.163 236.484 318.392 236.263 316.676 236.263 cv
316.062 236.263 315.454 236.292 314.856 236.358 cv
310.031 236.882 305.437 241.459 300.71 241.459 cv
345.128 225.993 mo
345.373 222.097 346.116 204.359 343.998 180.459 cv
343.818 178.344 343.638 176.283 343.467 174.249 cv
343.212 171.261 342.964 168.354 342.698 165.5 cv
344.215 165.026 345.659 164.661 346.893 164.661 cv
347.429 164.661 347.926 164.73 348.372 164.889 cv
352.62 170.631 357.543 185.571 361.179 191.853 cv
366.012 200.196 369.063 202.878 375.57 209.799 cv
365.912 215.702 354.588 219.685 345.128 225.993 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[482.615 0 0 708.983 299.537 419.504 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [1 .992157 .941176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .992157 .941176 ]
/C1 [.6 .560784 .580392 ]
/N 1.66691 
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[482.615 0 0 708.983 299.537 419.504 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr2orrr2orrr)forVcZlr;?Hh
qtg0cq>'j]q"OOWp@e1Pp%7nJoCDJBnaQ&:n*]T1m-O'(lKRQski_*jjlGL_io8qThr!;Hh;$c=g=b-1
f%/C$e'c[ld*L"^c-4ARaiMNB`l5m6_SO%&^:h1k]",>[[^EKKZE^X;Y-"e+Wi;qpVPU)`TqJ$LSXc1<
~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nr;?Kjr;?Kjqtp9fqtg0cqYBs_
q"XXYp\4CTp%@tLo^h\Fo'u8>nF,i6md9B-lg*j#l0.?ok2tddjQ#7ZiS`VNhVI#CgY1?6f[n^*e^W'r
dF$=ecHXSVb/qcHa2Z*:_ns7*^V7Co]=PP_\$i]OZa-j?YHG"/Wi;qpVPU)`TqJ$LSXc1;R$X,(PEM&i
~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:n*f`6n*f`6n*]W3mdBN1mHs<-
m-O'(lg*j$lKRQskih3mk2tgfjlGL_j5].YiSi_Qhr!;Ih;$f?gY1B7f\"g-f%&=#eC2jodEp7dcHa\Y
bKJ&MaiMNB`l5m6_ns7*^V@Lr]Xtee\[],W[C*BJZE^X;Y-+n.X/`.tVl$;dUS=HTTV%gHS=>t8R$X,(
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
272.889 757.777 mo
280.654 754.289 286.961 745.16 283.905 736.479 cv
282.237 731.721 278.302 726.791 275.505 721.889 cv
275.29 721.495 275.069 721.093 274.841 720.683 cv
274.347 719.748 273.904 718.815 273.537 717.885 cv
276.085 713.496 273.459 711.03 271.625 706.272 cv
271.894 706.271 272.163 706.271 272.432 706.271 cv
286.177 706.271 299.757 707.264 312.03 709.659 cv
353.025 717.66 344.583 732.573 331.038 738.315 cv
313.533 745.731 293.094 739.944 288.27 745.731 cv
282.071 753.169 276.313 756.401 272.889 757.777 cv
265.91 757.51 mo
256.733 752.833 252.539 738.307 216.54 738.315 cv
176.04 738.315 130.437 749.439 130.437 749.439 cv
130.437 749.439 130.436 749.439 130.434 749.439 cv
131.832 748.139 133.19 746.41 134.559 744.381 cv
137.313 740.294 139.554 734.987 141.558 729.72 cv
154.335 725.599 172.291 721.665 187.533 717.309 cv
203.193 712.835 227.441 708.472 252.949 706.892 cv
252.871 707.682 252.812 708.45 252.778 709.203 cv
252.202 712.147 252.602 714.088 253.267 715.57 cv
253.55 716.836 253.963 718.126 254.538 719.478 cv
256.887 725.769 256.392 740.952 260.235 750.384 cv
261.296 752.981 263.465 755.895 265.91 757.51 cv
level3{
gsave
clp
[482.615 0 0 708.983 299.537 419.504 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~g"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$
f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"
bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ulg"4I$f?Dq"bh:Ul
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~g"4I$f?Dq"bh1Lif[e6uf#u[rbLY4ef$qjneB-7iajeb[eBu=cd)OM\`mN,Od*BVWc,@oN_p-BAbf[`E
aM5m<^WFI/aMkj4_n3n)]#;Cq_nW^t^:1ki[D0;[]t(J]\?`]SYdq-D\$N6FZ)k=9Wj8e,YcF_*WMZer
UoUAfWMH5dU7\<USthmJU7@^GR[B\5Q^jA,RZir&P*2,lOHb]aP)G9\Ll.1HLl?t@M1L>7ItEB%J:`)r
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.418182 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[482.615 0 0 708.983 299.537 419.504 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j.f@SX+f@SU)e^`4#
e^`4"eC;sre'landa?Ihd*L%acd'e[bfn;SbK@uMaiVWFa2Z-<`Pf^4_o'@-^q[Ut^:q:n]=YYc\[f5Z
\$i]O['R*EZ*:F7Xf\_,X/`.uW2QVkV50l\U7n6PT:VUDS!ob5R$X,(Pa%ApOcYWaNJrgSMMR%BKnY24
~>
<~f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'
f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F'f%/F&e^`4#e^`4#eC;sr
e'ldodaHOjd*U+bcd0q_cHXVYbfe/Ob0%lKaN)?A`l5m7`5BL0_SO%&^V@Ls]tCth]",A]\@B#V[C!9H
Za-j?YHG%2XfJJ$W2QYmVPU)aUS=HTT:VXFS=>t8R$X,)Q'@GpP*(fcNJrdRMM[+CL4k22JUi9#IXHKg
~>
<~bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb0%iJ
aiMQEaN2EB`l?!:`Pog7`5KU4_o'@._83q%^V7Fr^:q:o]Xtee]",A^\[],X[^EKL['R*EZEga>YHG"0
Xf\\*Wi;tsW2QVkV59u_US=HUTV%gISXl=AS!ob3Q^=#'P`q8nP*(ieNfK*XMi*@ILkg_=KS+o/JUi6!
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
343.341 225.441 mo
342.558 221.292 323.991 123.606 310.365 104.49 cv
306.351 98.874 298.242 95.904 286.902 95.904 cv
261.153 95.904 227.871 110.781 223.56 129.969 cv
221.787 137.844 219.222 144.729 214.569 157.221 cv
213.453 160.236 li
213.102 161.163 212.76 162.063 212.427 162.963 cv
207.432 176.193 201.51 188.352 203.481 221.202 cv
230.085 224.568 li
230.103 224.478 231.354 217.638 232.587 212.436 cv
232.344 217.836 231.624 224.82 231.624 224.82 cv
232.191 225.054 246.915 229.689 274.113 231.696 cv
278.874 232.047 284.076 232.227 289.566 232.227 cv
312.444 232.227 336.573 229.068 342.486 226.971 cv
343.557 226.593 li
343.341 225.441 li
.168627 .121569 0 rgb
f
297.07 230.011 mo
297.029 229.13 297.002 228.317 296.984 227.626 cv
305.433 228.384 li
305.433 222.944 310.489 194.684 312.777 155.584 cv
313.149 162.263 313.144 170.206 312.642 180.207 cv
311.265 207.549 307.701 228.204 307.665 228.384 cv
307.665 228.384 314.214 228.544 317.717 228.752 cv
311.372 229.347 304.305 229.812 297.07 230.011 cv
261.87 228.432 mo
242.86 226.239 233.532 223.146 233.532 223.146 cv
234.306 217.314 233.343 202.968 233.343 202.968 cv
232.218 207.459 228.834 222.021 228.834 222.021 cv
218.358 220.005 206.757 218.655 206.757 218.655 cv
204.66 183.843 209.331 174.249 214.65 159.957 cv
218.463 149.706 221.041 142.923 222.904 136.738 cv
223.023 139.405 223.638 141.54 224.712 142.938 cv
225.684 144.189 226.251 148.293 226.899 150.561 cv
226.359 153.504 228.087 156.537 228.969 158.787 cv
223.983 163.746 222.219 170.739 226.287 179.595 cv
232.524 193.14 246.978 221.967 256.185 222.246 cv
256.365 222.255 li
257.439 222.255 258.487 222.136 259.559 221.907 cv
260.56 223.724 261.311 226.032 261.87 228.432 cv
level3{
gsave
clp
[135.833 0 0 135.833 206.243 163.299 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.247059 .298039 .333333 ]
/C1 [.419608 .478431 .490196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.419608 .478431 .490196 ]
/C1 [.0980392 .117647 .14902 ]
/N 1 
>>
]
/Bounds [.490909 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[135.833 0 0 135.833 206.243 163.299 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~5<h@t5X7V$5sdn)6UO4/6psI47Rfj;7n6*@84cBE8kM]K91qrP9he>W:/4S\:Jaka;,L1g;GpFl<)cgs
<E3(#<``@(=BJ[.=]np3>?b<:>[1Q??!^iD?XI/J?smDO@U`eV@q0%[A7]=`AnGXfB4kmkBk_9rC2.Ku
BkV0mB4b^dA7K+Y@:<PO?X@&E>[1K;>$5!1='&F'<E)pr;Gp@g:esk^9he;S91hfJ84Z6?7R]a66UO1+
5sR\"5!D+l4?GSb3B9&X2`<NN1c.!D1,1I:0/"q0/M&D&.Ocep-mp>g,pX`\,9e9S+<M[H*ZZ4?)]BV4
~>
<~9MA,S9heAX:/=Y^:f("d;,U:i;c?Xp<)lpu<`W7&='/R,=]nm2>$G38>[1N>?!UcC?XI/J?smDO@:E\U
@q0%[A7]=`AnG[gB4tslBk_<sC27U#Ci!p)D/O6/Df9Q5E,]f:EcQ2AF)uGFFEM_LG'8(RGBe@XH$O[\
G^"=SF`__HEcQ/=Df9N1D/=!&C2%?pB4baeA7K+Y@:<PN?=$oB>[(B8=]ea,<`N.!;c6Lj:f'q_:/+DT
91hcI84Q-=779O26:*t'5<h=p4Zkee3]T/Z2`<QO1c$pC0ek@8/hS_,/1W2".4?Pk-7'r`,9e<T+<VaI
~>
<~<E3%!<`W7&='&L+=BSd0>$>*6>?b?;>[1Q??!^iD?XI/J?smDO@:E\T@q0"YA7T4^AS#IcAnPahBP;'n
Bk_<sC2.O"CM[g'D/F--DJjB2DfBZ7EH,u<EcQ2AF)uGFFEM_KG'8%QGB\:VG^+LZH$Xd_H[C*eI!g<h
H[:!`G^+FUG'.nKF)l;@E,]`5DJa3+CMITuBP;$jAn>L`@q&nU?sm>J?<pf@>?Y35=BJX*<`N*u;c6Lj
:f'q_:/+DU91hfJ84Z6?7R]^56UF+*5X7Ot5!;"j4$#D_3&iiT2Dm<J1GU^?0JG.4/hJV*.k3"t-n$Gi
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
412.137 211.113 mo
395.541 238.761 367.146 251.793 342.675 269.874 cv
328.113 280.62 325.035 286.002 322.443 304.164 cv
320.427 318.294 314.964 334.368 312.723 348.426 cv
309.42 369.18 317.061 369.639 331.92 381.222 cv
339.876 387.423 352.296 397.917 357.642 406.836 cv
370.494 428.274 365.265 453.717 356.562 476.316 cv
343.773 509.553 317.844 535.095 302.607 566.748 cv
292.608 587.547 301.158 608.625 293.715 630.657 cv
287.496 649.08 278.712 664.326 271.746 688.482 cv
266.022 708.327 278.109 710.01 273.537 717.885 cv
275.985 724.086 281.781 730.422 283.905 736.479 cv
287.235 745.938 279.45 755.928 270.774 758.574 cv
266.733 759.798 261.981 754.659 260.235 750.384 cv
256.392 740.952 256.887 725.769 254.538 719.478 cv
249.471 707.571 257.004 700.524 254.637 671.328 cv
252 638.865 245.205 622.575 245.205 622.575 cv
245.097 603.063 263.043 585.981 264.213 566.316 cv
265.473 545.229 265.455 524.097 267.3 503.046 cv
253.035 528.066 235.296 550.827 221.31 575.937 cv
214.866 587.502 207.639 609.813 201.618 621.639 cv
201.618 621.639 190.944 632.142 182.754 641.349 cv
172.161 653.256 160.119 665.811 152.982 689.859 cv
150.093 699.561 153.531 705.807 149.652 710.865 cv
144.999 716.922 141.327 734.337 134.559 744.381 cv
129.987 751.158 125.532 754.587 119.331 749.88 cv
119.331 749.88 117.009 750.618 115.947 750.321 cv
110.772 748.89 109.773 738.324 113.598 731.655 cv
117.423 724.986 123.867 712.692 126.378 707.418 cv
125.649 697.734 132.606 700.956 137.61 686.772 cv
151.29 648.009 143.973 603.099 187.38 566.928 cv
207.117 550.485 200.628 500.094 210.789 462.969 cv
218.79 433.746 233.712 416.907 263.934 383.832 cv
263.691 369.603 253.206 361.53 246.96 353.61 cv
240.696 345.663 233.145 334.602 229.437 328.545 cv
217.989 372.78 195.552 369.27 174.051 391.167 cv
169.344 395.964 166.941 400.176 166.095 403.668 cv
164.907 408.609 171.522 412.308 174.96 426.15 cv
176.202 431.154 178.083 433.215 179.64 437.868 cv
177.111 440.208 173.817 437.706 172.224 434.052 cv
170.874 430.974 169.038 429.345 166.527 428.454 cv
164.43 427.698 165.888 436.302 163.845 443.754 cv
162.828 447.462 164.718 452.889 165.024 457.497 cv
165.195 460.053 167.859 463.104 168.192 465.624 cv
168.759 469.953 166.914 471.708 160.461 462.483 cv
154.764 454.356 153.468 450.36 150.381 441.99 cv
147.321 433.665 150.957 415.071 151.11 405.243 cv
151.227 398.448 157.977 392.787 161.262 387.243 cv
165.564 379.98 169.443 372.501 173.241 364.941 cv
177.777 355.914 183.294 347.544 188.793 339.102 cv
194.139 330.903 200.304 327.726 202.401 322.713 cv
207.108 311.481 208.611 303.471 213.03 292.113 cv
217.593 280.359 219.951 268.011 225.9 256.941 cv
229.923 249.471 235.404 244.08 243.945 242.613 cv
245.727 242.298 248.787 242.793 251.946 243.288 cv
257.328 244.134 263.016 244.971 263.367 241.875 cv
263.511 240.579 262.998 226.341 258.714 220.581 cv
294.804 193.248 li
295.902 204.003 296.82 214.803 296.946 225.621 cv
296.973 227.565 297.117 240.957 299.547 241.362 cv
304.686 242.235 309.636 236.925 314.856 236.358 cv
317.124 236.106 319.527 236.403 321.939 236.709 cv
326.124 237.24 330.318 237.762 333.855 235.386 cv
337.077 232.884 340.353 229.356 343.665 226.998 cv
353.403 220.095 365.409 216.009 375.57 209.799 cv
369.063 202.878 366.012 200.196 361.179 191.853 cv
357.543 185.571 352.62 170.631 348.372 164.889 cv
346.482 164.214 343.683 165.159 340.821 166.113 cv
336.906 167.409 332.847 168.714 330.822 165.843 cv
327.033 160.479 328.698 149.805 329.58 143.802 cv
331.821 128.538 343.332 138.114 351.108 145.143 cv
355.392 149.013 359.802 158.319 367.236 163.296 cv
388.674 177.642 398.412 185.553 403.938 194.175 cv
410.706 204.732 412.803 210.006 412.137 211.113 cv
.168627 .121569 0 rgb
f
122.889 749.418 mo
122.496 749.32 122.12 749.17 121.77 748.98 cv
118.881 747.414 121.338 743.337 123.165 741.582 cv
123.165 741.582 li
124.441 740.889 125.491 740.62 126.265 740.62 cv
127.453 740.62 127.993 741.252 127.71 741.96 cv
125.424 747.523 124.59 748.217 122.889 749.418 cv
117.457 747.513 mo
117.448 747.513 117.44 747.513 117.432 747.513 cv
115.164 747.432 113.751 745.38 113.553 743.661 cv
112.914 738.225 111.834 738.72 116.019 731.493 cv
120.213 724.257 129.555 709.794 129.879 706.761 cv
130.203 703.737 131.49 701.046 134.397 699.363 cv
137.295 697.68 141.003 686.079 144.225 672.453 cv
147.447 658.827 151.803 636.624 158.571 613.08 cv
165.339 589.536 182.097 577.08 190.962 567.162 cv
199.827 557.235 202.239 544.626 205.785 520.569 cv
209.331 496.521 212.553 469.773 220.293 450.765 cv
226.58 435.316 233.83 425.419 239.529 418.011 cv
241.656 420.406 250.528 430.77 256.671 442.359 cv
258.246 445.33 259.818 448.113 261.404 450.658 cv
265.932 461.129 264.784 468.244 258.165 489.114 cv
250.839 512.217 218.187 568.341 209.322 578.259 cv
200.457 588.186 190.8 611.901 176.292 630.063 cv
161.217 648.954 148.257 687.42 145.035 701.046 cv
141.804 714.672 139.752 718.641 138.159 721.683 cv
131.544 734.238 123.219 737.1 121.833 741.564 cv
121.832 741.566 121.832 741.567 121.831 741.569 cv
121.476 742.037 120.915 743.239 120.258 744.435 cv
119.41 745.979 118.403 747.513 117.457 747.513 cv
151.157 686 mo
153.503 678.799 157.477 669.918 162.756 661.347 cv
157.882 669.261 153.818 678.335 151.157 686 cv
166.221 468.022 mo
166.155 468.022 166.086 467.988 166.012 467.924 cv
166.065 467.939 166.117 467.947 166.166 467.947 cv
166.353 467.947 166.508 467.834 166.626 467.586 cv
166.484 467.884 166.357 468.022 166.221 468.022 cv
166.626 467.586 mo
167.004 466.797 166.985 465.946 166.746 465.028 cv
167.015 465.939 167.014 466.775 166.626 467.586 cv
164.28 465.144 mo
163.427 463.779 162.189 462.033 160.299 460.143 cv
159.741 459.585 156.951 448.002 156.474 447.408 cv
156.466 447.398 156.459 447.393 156.454 447.393 cv
156.328 447.393 156.932 450.043 157.527 452.7 cv
158.127 455.36 158.718 458.011 158.588 458.011 cv
158.583 458.011 158.577 458.008 158.571 458.001 cv
156.015 455.409 154.377 443.538 151.956 440.847 cv
149.544 438.156 152.442 415.953 153.09 411.246 cv
153.729 406.53 152.442 403.506 155.664 399.132 cv
158.886 394.758 174.042 368.856 181.287 356.58 cv
188.541 344.304 194.832 336.231 197.568 333.702 cv
200.313 331.182 202.743 328.761 205.803 321.867 cv
208.8 315.117 218.691 284.238 219.24 282.816 cv
222.552 274.014 227.241 260.136 233.532 252.126 cv
238.246 246.113 243.269 244.577 248.522 244.577 cv
250.47 244.577 252.45 244.788 254.457 245.061 cv
256.884 245.391 258.637 245.542 259.969 245.541 cv
260.685 245.541 261.28 245.498 261.791 245.415 cv
243.47 265.071 240.037 278.236 235.197 281.223 cv
229.077 285.012 222.462 290.295 217.917 295.884 cv
210.853 304.6 213.689 317.198 220.807 324.909 cv
218.284 330.201 215.507 336.056 214.047 339.354 cv
210.978 346.248 202.086 357.255 199.341 359.775 cv
196.605 362.295 161.091 396.873 160.443 401.58 cv
159.795 406.296 167.112 414.27 168.075 418.977 cv
159.534 426.717 161.838 438.822 159.903 445.518 cv
159.741 446.076 161.514 451.008 162.594 459.981 cv
164.033 462.889 164.313 464.387 164.28 465.144 cv
266.868 426.294 mo
259.956 426.294 255.024 425.052 252.711 423.882 cv
246.528 420.768 241.479 415.773 241.434 415.728 cv
241.353 415.647 li
241.99 414.823 242.6 414.03 243.18 413.262 cv
249.138 405.351 264.618 387.189 266.553 385.677 cv
268.488 384.165 266.22 369.702 256.392 360.108 cv
250.094 353.966 242.868 343.61 237.853 335.988 cv
240.02 335.869 244.326 333.634 249.87 333.634 cv
253.216 333.634 257.012 334.448 261.063 337.032 cv
269.735 342.565 276.863 344.534 282.691 344.534 cv
294.091 344.534 300.529 337.005 303.876 333.873 cv
304.686 349.875 305.199 357.912 303.165 369.324 cv
300.507 384.292 314.846 376.298 334.595 403.641 cv
326.109 405.496 314.444 409.035 302.364 415.746 cv
287.784 423.837 275.013 426.294 266.868 426.294 cv
272.835 406.817 mo
271.901 406.817 271.013 407.519 270.594 408.582 cv
270.432 408.924 270.378 409.302 270.36 409.581 cv
270.252 410.913 270.927 412.11 272.007 412.389 cv
272.156 412.426 272.306 412.444 272.454 412.445 cv
273.521 412.445 274.543 411.519 274.851 410.184 cv
275.202 408.663 274.5 407.178 273.285 406.872 cv
273.135 406.835 272.985 406.817 272.835 406.817 cv
240.517 322.536 mo
238.66 320.776 237.302 318.146 236.052 314.667 cv
231.822 302.94 234.738 292.014 239.724 281.025 cv
245.655 267.921 253.413 254.709 263.646 244.809 cv
263.638 244.807 li
264.11 244.553 264.537 244.242 265.014 243.882 cv
266.31 242.91 265.452 233.672 264.624 226.612 cv
271.682 224.905 282.123 223.445 288.342 222.656 cv
288.064 224.008 287.779 225.38 287.487 226.773 cv
293.446 227.308 li
293.511 235.965 293.316 242.764 296.889 244.177 cv
293.075 262.807 289.835 273.637 287.487 282.744 cv
268.481 292.201 253.865 302.752 251.327 320.338 cv
243.902 308.1 250.497 292.708 250.612 292.441 cv
250.613 292.439 250.613 292.438 250.614 292.437 cv
250.614 292.437 250.613 292.438 250.612 292.441 cv
245.495 303.8 245.996 312.162 247.642 317.559 cv
245.406 321.091 240.03 322.029 240.03 322.029 cv
240.192 322.206 240.354 322.374 240.517 322.536 cv
304.825 315.202 mo
305.045 310.882 302.236 299.627 298.143 293.112 cv
296.775 290.925 294.633 286.857 291.249 283.32 cv
291.667 276.87 296.412 256.039 297.817 244.413 cv
298.43 244.509 298.982 244.554 299.495 244.554 cv
303.038 244.554 304.706 242.436 311.616 240.687 cv
314.044 240.071 316.458 239.908 318.793 239.908 cv
320.11 239.908 321.403 239.96 322.659 240.012 cv
323.912 240.062 325.127 240.113 326.293 240.113 cv
328.701 240.113 330.898 239.896 332.784 239.004 cv
333.612 238.617 334.485 238.077 335.403 237.456 cv
338.958 234.684 350.316 226.134 354.861 224.037 cv
364.374 219.663 379.521 210.078 379.521 210.078 cv
377.1 208.224 370.188 201.78 364.365 192.132 cv
357.021 179.955 355.023 170.046 349.713 163.305 cv
349.713 163.305 li
349.713 163.305 347.637 153.779 349.209 147.982 cv
350.416 148.854 351.422 149.723 352.08 150.561 cv
355.14 154.467 358.776 159.642 368.118 167.121 cv
388.377 183.312 393.219 187.713 398.943 194.769 cv
403.217 200.038 407.882 207.362 407.876 210.069 cv
407.882 207.362 403.217 200.038 398.943 194.769 cv
393.219 187.713 388.377 183.312 368.118 167.121 cv
367.437 166.576 367.089 166.322 367.025 166.322 cv
366.211 166.322 411.381 207.337 402.561 211.392 cv
398.133 213.426 373.878 244.584 339.714 255.321 cv
332.577 257.571 325.611 254.61 319.752 262.458 cv
301.824 286.506 310.597 300.939 304.825 315.202 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .87451 .772549 ]
/C1 [.870588 .705882 .607843 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.870588 .705882 .607843 ]
/C1 [.890196 .745098 .65098 ]
/N 1 
>>
]
/Bounds [.787879 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2oqrVc]nrVZTkr;?Kiqtp9fqtg0cqYL'aq>'j^q=sa[q"XXYp\4FVp\+=Sp@e4Rp%A"Np%@tL
o^qeJoCMSFoCMPDo()ABnaZ/>naZ,<nF5r:n*f`6n*f]4mdBN2mHs<.mHs<-m-O**m-F!'lg*m%lK[["
lKRQtl07Hrkih6oki_-lkND$jk2tggk2k^djlPUbjQ,C_jQ,@]j5]1[io8tWio8qUiSibSi8EPOi8EMM
hr!>KhVR,GhVR,GhVR,GhVR,GhV[5Jhr!>Khr!>Ki8EPOi8EPOi8EPPiSibSiSibSiSieUio8tWio8tW
~>
<~hqm5HhVI#Dh;-lAgt^]>gY:K:g=k97g"G'3g"=s0f[na,f@SU)f%/F&e^`4"eC<!te'ldpe'c[mda?Ii
dF$=fd*U.ccd0q`cHa_\c-=MXc-4DUbfn8RbKJ&Nb0%lKaiVZHaN2HDa2c6@a2Z-=`l?!:`Pod6`5KU3
_o'C0_SX1,_SO()_8*k%^qd_"^V@Ot^:q=p]tM+m]Y(ni]Xtef]=PSb]"5G_\[f8\\@B&X\$riU[^NWQ
[^ENN[C*BK['[3I['[3I[C*EM[C3NP[^NZS\$riU\@B&Y\@K/\\[f8^]"5Ja]=Y\e]=Y_g]Y(nj]tM+m
~>
<~`Pf^5`5BL1_o'@._SX1+_83t(^qdb$^q[Y!^V7Fr^:q:o]tM+l]Y(ni]=Y\e]=PSb]",A^\[f5[\@B&X
\$riU[^NWQ[^ENN[C!<J['[0GZa7!DZEgdAZ*CR=Z*:I:Yck76YHP+3Y-+q0Xf\_-XK8M)XK/D&X/`2"
WiE%tWMukqW2QYnVl-GjVl$>gVPU,cV59u`Unjf]USFTZU8"BVU7n9STqJ'OTV.pLT:_aISt;OFSXl=B
SXc4?S=?";S"#n:S"#n;S=H+>SXl=BSXuFESt;RHT:_aKTV.sNTqS0RTq\9UU8"EXUSFT[Unjf^V5:#b
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
166.012 467.924 mo
165.509 467.782 164.821 466.985 164.034 465.876 cv
164.034 465.876 164.254 465.741 164.28 465.144 cv
165.186 466.595 165.657 467.616 166.012 467.924 cv
166.746 465.028 mo
166.236 463.301 164.754 461.304 163.098 458.694 cv
163.098 458.694 162.999 453.078 161.388 447.741 cv
162.999 453.078 163.737 457.74 164.097 458.748 cv
164.94 461.138 166.274 463.215 166.746 465.028 cv
.129412 .0862745 0 rgb
f
166.166 467.947 mo
166.117 467.947 166.065 467.939 166.012 467.924 cv
165.657 467.616 165.186 466.595 164.28 465.144 cv
164.313 464.387 164.033 462.889 162.594 459.981 cv
161.514 451.008 159.741 446.076 159.903 445.518 cv
161.838 438.822 159.534 426.717 168.075 418.977 cv
167.112 414.27 159.795 406.296 160.443 401.58 cv
161.091 396.873 196.605 362.295 199.341 359.775 cv
202.086 357.255 210.978 346.248 214.047 339.354 cv
215.507 336.056 218.284 330.201 220.807 324.909 cv
222.367 326.601 224.133 328.056 226.047 329.184 cv
224.657 333.328 222.868 334.474 219.267 344.97 cv
215.334 356.409 203.373 366.498 186.93 377.937 cv
170.496 389.376 167.274 396.108 165.177 400.311 cv
164.227 402.215 163.807 403.809 163.812 405.25 cv
163.818 406.988 164.443 408.502 165.501 410.067 cv
167.436 412.92 168.399 415.953 170.658 420.327 cv
172.908 424.701 173.394 425.871 174.204 428.904 cv
175.005 431.928 176.886 434.844 178.119 437.481 cv
177.67 437.785 177.258 437.925 176.873 437.925 cv
175.413 437.925 174.337 435.92 173.07 433.278 cv
170.72 428.358 167.446 425.361 165.34 425.361 cv
165.285 425.361 165.23 425.363 165.177 425.367 cv
163.08 425.538 162.432 436.302 162.279 439.668 cv
162.15 442.35 161.152 444.187 161.157 446.175 cv
161.159 446.681 161.225 447.198 161.388 447.741 cv
161.388 447.741 li
162.999 453.078 163.098 458.694 163.098 458.694 cv
164.754 461.304 166.236 463.301 166.746 465.028 cv
166.985 465.946 167.004 466.797 166.626 467.586 cv
166.626 467.586 li
166.626 467.586 li
166.508 467.834 166.353 467.947 166.166 467.947 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`1DY"SqFqPK>O13_OQ4pS:\VIJ\dh,_4-"kRXi2AJ%qD$^R9SdR!uf:I_M.s^6X2\Q@6H4I(Y_k]TdcU
P^C$,HFoAe\s%ENP'OU$H+B)_\<2!FOE\3rGIW]W[uY^ANchdjFgd9P[>f:9NH;LdF1$pI[#8t3MK6%\
EO(IAZAES,LiBYUDm>+:Z%m8%LMj>NDQeb2YD$hrKl*uGCp&D+Y(LMlK57T@C93#%XFY)dJ8)'7Brcbt
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X+4laJ7u!6BWHYtX+4obJ8)'7BrcbuX+4obJ8)'8Brcf!X+=ucJSD09Brcf"X+G)eJnh?<C93#%XFb2g
JnqH>CTN/(XFk;iK57Q@CTN/(XFk;iK57Q@CTN/(Xb1GlK5@ZBCorA,Xb:MmKP[cDD68J.Xb:PnKl*rG
D68M/XbCVpKl*uHD6AS0Y(^_qKl4&IDQ\\2Y(^brKl4&JDQ\_4Y(gktL2X5LDm"h5Y(pquLMs>NDm"k6
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.787879 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~_o'C0_SX1,_SX.*_83t(_83t(_83t'^qdb$^q[Y!^V@Ou^:q=q^:q=q^:q=q^:h4n]tM+l]Y(ni]Xtef
]=Y\e]=Y\d]"5Ja]",A^\[f8]\@B&Y\@B#W\$riU\$riU\$riT[^NWQ[^ENN[C*EM['[3I['[3I['[3I
['R*FZa7!DZEga?Z*CR=Z*CR=Z*CR<Yct@9Yck76YHP.5Y-+q1Y-+n/Xf\_-Xf\_-Xf\_,XK8M)XK/D&
X/i;%WiE)!WiE)!WiE)!WiE)!WiE)!WiE,#X/i;%X/i;%X/rD(XK8M)XK8M)Xf\_-Xf\_-Xf\_-Xf\_-
~>
<~SXl=BSXl=BSXl:@S=?";S"#n:R[T\6R[T\6R[KS3R@'A/R$a8.R$a5,Q^3r'QBmi&Q'IW"Q'IW"Q'@Mt
P`q;pPEV2oPEV/mP*1ukP*(lhOcbcgOcb`eOH5H`O,o?_NfK-[NfK*YNK&pWNJrgTN/W^SN/W[QMi*CL
MMd:KM2@(GM2@(GM26tDLkgb@LPLY?LPLV=L5(G;L4t>8KS5#3KS5#3KS+o0K7\],JqAT+JqAQ)JUrB'
JUi9$It)rtIt)rtIt)rtIt*!!J:N0$JUrB'JV&K*JqAT+JqAT+K7ef/K7no2KS5#3KS5#3KnY57Knb>:
~>
<~K7ef/JqAT+JqAT+Jq8K(JUrB'J:N0#J:N0#J:E&uIsuiqIXZ`pIXZ]nI=6NlI=-EiI!g<hI!g9fH[:!a
H?sm`H?sm_H$O[\H$FRYG^+IXG^+IWGB\4RG'8%PG'8%PF`hhLF`heJFEDVHFEDVHF)uDCEcQ2@EcQ2@
EcH)=EH,u;E,]c8E,]c8E,TZ5DJj?0DJj?0DJa6-D/F-,Ci!p(Ci!p(Chmg%CMIU!C2.KuC2.HsBk_9q
BkV0nBP;'mBP;$kBP;'mBP;'mBP;*oBk_9rC2.KuC2.KuC27U#CMRa&Ci!p(Ci!p(D/F-,D/O6/DJj?0
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
299.871 103.518 mo
294.777 97.794 281.853 93.807 268.425 93.807 cv
256.941 93.807 247.041 96.651 240.552 101.826 cv
229.23 110.853 224.064 124.047 223.074 132.606 cv
222.543 137.214 223.128 140.877 224.712 142.938 cv
225.684 144.189 226.251 148.293 226.899 150.561 cv
226.359 153.504 228.087 156.537 228.969 158.787 cv
223.983 163.746 222.219 170.739 226.287 179.595 cv
232.524 193.14 246.978 221.967 256.185 222.246 cv
256.365 222.255 li
264.645 222.255 271.404 215.217 299.043 204.723 cv
306.774 201.789 306.261 180.729 306.927 174.753 cv
307.341 171.072 309.303 114.102 299.871 103.518 cv
.168627 .121569 0 rgb
f
256.4 219.125 mo
256.342 219.125 256.285 219.125 256.23 219.123 cv
248.922 218.898 231.3 190.179 227.763 178.965 cv
224.217 167.751 227.439 162.369 230.985 159.228 cv
230.985 159.228 230.121 146.331 226.224 141.282 cv
225.927 140.899 225.676 140.424 225.472 139.87 cv
236.245 137.993 248.047 137.401 258.634 137.401 cv
276.612 137.401 291.087 139.104 291.087 139.104 cv
295.893 163.008 298.197 188.487 281.502 204.741 cv
275.291 210.794 265.338 215.885 259.94 218.559 cv
258.513 218.924 257.307 219.126 256.4 219.125 cv
level3{
gsave
clp
[80.6216 0 0 80.6216 224.815 157.282 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .862745 .772549 ]
/C1 [.941176 .862745 .772549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 .862745 .772549 ]
/C1 [.870588 .705882 .607843 ]
/N 1 
>>
]
/Bounds [.0666667 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[80.6216 0 0 80.6216 224.815 157.282 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~nF5r:nF5r:nF5r:nF5r:nF5o8n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mHs<.mHs<.mHs<.mHj3+m-O**
m-O**m-O*)lg*m&lg*m&lg*m&lK[["lK[["lK[["lKRQtl07Hsl07Hsl07Eqkih6okih6okih6okND$k
kND$kkND$kkN:phk2tggk2tggk2tdejlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_jQ#:\j5]1[j5]1[j5].Y
io8tWio8tWio8tViSibSiSibSiSibSiS`YPi8EPOi8EPOi8EMMhr!>Khr!>Khr!>JhVR,GhVR,GhVR,G
~>
<~gt^]?gt^]?gt^]?gt^]?gt^Z=gY:K;g=k97g=k65g"G'2f\"j/f[na,f@SX*f%/F'f%&=$e^`4"eC<!t
eC2mqe'ldodaHRlda?IidF$@gd*U.dd*L%acd0q_cHa_\cHXVYc-=MWbfn;Tbfe2QbKJ)Ob0%lLb/qcI
aiVZGaN2HDaN)?Aa2c6?`l?$<`l5p9`Pog7`5KU4`5BL1_o'C/_SX1,_SO()_83t'^qdb$^q[Y!^V@Ot
^:q=q^:h4n]tM+l]Y(ni]Xtef]=Y\d]"5Ja]",A^\[f8\\@B&Y\@8rV\$riT[^NWQ[^ENN[C*EL['[3I
~>
<~`Pog8`Pog8`Pog8`Pog8`Pod6`5KU3_o'C0_ns:-_SX1+_83t(^qdb$^qd_"^V@Ou^:q=q^:h4n]tM+l
]Y(ni]Xtef]=YYc]"5Ja\[f8]\[f5[\@B&Y\$riU\$i`R[^NWP[C*EM[C!<J['[0GZa7!EZEgdAZEga?
Z*CR<Yct@9Yck76YHP.4Y-+q1Xf\_-Xf\\+XK8M)X/i;%X/`2"WiE(uWMukrWMlboW2QYmVl-GjVP^5f
VP^2dV5:#bUnjf^Una][USFTYU8"BVU7n9STqS-PTV.sNT:_aJT:_^HSt;OESXl=BSXc4?S=H+=S"#n:
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
256.39 220.583 mo
256.336 220.583 256.282 220.583 256.23 220.581 cv
255.81 220.569 257.352 219.842 259.94 218.559 cv
268.153 216.462 283.712 208.937 292.132 203.049 cv
292.122 203.101 292.113 203.153 292.104 203.206 cv
282.208 210.48 262.505 220.584 256.39 220.583 cv
224.811 139.986 mo
224.811 139.986 224.414 137.948 224.297 134.812 cv
224.47 134.81 224.645 134.807 224.825 134.805 cv
224.772 136.843 224.994 138.575 225.472 139.87 cv
225.252 139.908 225.03 139.947 224.811 139.986 cv
.129412 .0862745 0 rgb
f
259.94 218.559 mo
265.338 215.885 275.291 210.794 281.502 204.741 cv
298.197 188.487 295.893 163.008 291.087 139.104 cv
291.087 139.104 276.612 137.401 258.634 137.401 cv
248.047 137.401 236.245 137.993 225.472 139.87 cv
224.994 138.575 224.772 136.843 224.825 134.805 cv
229.131 134.752 235.532 134.694 243.045 134.694 cv
251.181 134.694 259.038 134.766 266.4 134.892 cv
267.93 134.919 li
268.308 133.371 li
268.407 133.002 269.928 126.846 271.881 120.861 cv
271.602 127.584 270.765 135.144 270.765 135.144 cv
273.087 135.279 li
276.003 135.45 290.736 136.332 294.21 136.638 cv
296.397 136.827 li
296.307 134.541 li
296.271 133.794 296.136 130.464 295.947 126.234 cv
296.46 130.482 296.874 135.495 297.063 141.354 cv
297.736 162.75 296.125 180.522 292.132 203.049 cv
283.712 208.937 268.153 216.462 259.94 218.559 cv
level3{
gsave
clp
[80.6216 0 0 80.6216 224.815 157.282 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^
S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDB
KXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*\=A5^S:nDBKXdP*
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\=A5^RtJ5?K=ID'\=/#ZRY&#:J[_%u\!_fUR"2W4J$t\n[[)ENQ@?6-I^PGh[?Z0JP^Ts(I'o2c[$,jD
PC'["HF&c\Z]]U?Oa49pH*WNVZB'48O*@mjGI!6PZAs+6NHMLcFg6pKZ&Ee/N,u4]F0LOCY_mJ)MK5nW
ENb4=Y)%)#LiBMQDm"k6Y(pquL2O/JDQSV0XbCVoKPdiECoi8)XFk;iK57N>C9)r$X+=ucJ8)'7Brcbt
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0666667 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[80.6216 0 0 80.6216 224.815 157.282 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU[^NWQ[^NWQ[^NWQ[C*EM[C*EM[C*EM
[C*EL['[3I['[3I['[3I['[3I['[3I['[3I['R*FZa7!EZa7!EZa-mBZEgdAZEgdAZEgdAZ*CR=Z*CR=
Z*CR=Z*CR=Z*CR=Z*CR=Z*CR<Yct@9Yct@9Yct=7YHP.5YHP.5YHP.5YHG%2Y-+q1Y-+q1Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_,XK8M)XK8M)XK8M)XK8J'X/i;%X/i;%X/i8#WiE)!WiE)!WiE)!WiE)!
~>
<~S"#n:S"#n:S"#n:S"#n:S"#n:S!oe7R[T\6R[T\6R[KS3R@0J2R$a8.R$a8.R$a8.Q^=&*Q^=&)QBmi%
Q'IW"Q'IW"Q'ISuPa%DsPa%AqPEV2oPEV2oPEM)lP*1ukP*(lhOcbcgOcbcgOH>QcO,o?_O,o?_NfK-[
NfK-[NfK-ZNK&pWNK&pVN/W^SN/W^SN/W[QMi3LOMi3IMMM[1HM2@(GM2@(GM26tDLkpkCLPLY?LPLY?
LPLY?L5(G;L5(G:KnY56KS5#3KS5#3KS5#2K7ef/K7ec-JqAT+JqAT+JqAQ)JUrB'JUi9$J:E&uIt)rt
~>
<~K7ef/K7ef/K7ef/K7ef/K7ef/K7\],JqAT+JqAT+Jq8K(JUrB'J:N0#J:N0#J:N0#It)rsIXZ`pIXZ`p
IXZ`oI=6NlI=6KjI!g<hI!g<hI!g9fH[C'bH?sm`H?sm`H?jd]H$O[\H$FRYG^+IXG^+IXGB\7TG'8%P
G'8%PG'8%OF`hhLF`hhKFEDVHFEDVHFEDSFF)uABEcQ2@EcQ2@EcH)=EH,u<EH#l9E,]c8E,]c8Df9Q4
DJj?0DJj?0DJj?/D/F-,D/F-+Ci!p(Ci!p(Ci!m&CMR["C2.KuC2.KuC2.HsBk_9qBkV0nBP;'mBP;'m
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
247.704 177.336 mo
243.299 177.897 237.329 174.945 239.217 172.687 cv
241.071 170.471 247.059 165.341 247.059 165.341 cv
247.059 165.341 237.963 171.846 237.291 172.687 cv
235.047 175.499 241.204 178.655 247.704 177.336 cv
cp
.168627 .121569 0 rgb
f
225.131 142.472 mo
225.131 142.472 229.918 140.41 236.216 140.04 cv
236.216 140.04 236.503 138.611 236.063 137.406 cv
236.063 137.406 228.072 137.601 225.131 142.472 cv
cp
f
266.162 136.832 mo
266.849 140.093 li
266.849 140.093 274.945 138.934 283.728 141.037 cv
283.728 141.037 277.075 136.8 266.162 136.832 cv
cp
f
213.374 135.25 mo
215.027 125.144 217.476 117.625 229.911 99.9766 cv
229.911 99.9766 212.672 120.317 211.31 135.274 cv
213.374 135.25 li
cp
f
343.998 180.459 mo
343.818 178.344 343.638 176.283 343.467 174.249 cv
341.424 150.336 339.822 131.445 326.367 105.786 cv
310.599 75.69 301.545 70.965 294.768 70.317 cv
289.476 69.795 285.849 74.682 283.896 78.471 cv
282.006 74.583 278.262 69.489 268.101 68.634 cv
267.804 68.607 267.498 68.598 267.201 68.598 cv
253.044 68.598 234 97.029 233.199 98.235 cv
229.914 103.185 li
235.386 101.304 li
235.602 101.232 257.364 93.834 274.293 93.834 cv
276.696 93.834 278.91 93.987 280.881 94.284 cv
297.063 96.723 303.291 111.168 307.62 126.414 cv
311.463 139.932 314.073 151.704 312.642 180.207 cv
311.265 207.549 307.701 228.204 307.665 228.384 cv
307.665 228.384 315.009 228.564 318.303 228.789 cv
337.266 230.112 345.069 226.773 345.069 226.773 cv
345.168 226.044 346.356 207.072 343.998 180.459 cv
f
290.079 94.86 mo
280.08 89.046 273.717 88.974 265.284 88.974 cv
256.356 88.974 246.465 82.692 240.849 89.226 cv
215.397 118.863 215.397 134.946 215.397 134.946 cv
218.988 134.892 li
219.087 134.892 229.167 134.694 243.045 134.694 cv
251.181 134.694 259.038 134.766 266.4 134.892 cv
267.93 134.919 li
268.308 133.371 li
268.407 133.002 269.928 126.846 271.881 120.861 cv
271.602 127.584 270.765 135.144 270.765 135.144 cv
273.087 135.279 li
276.003 135.45 290.736 136.332 294.21 136.638 cv
296.397 136.827 li
296.307 134.541 li
296.271 133.794 296.136 130.464 295.947 126.234 cv
296.46 130.482 296.874 135.495 297.063 141.354 cv
297.954 169.695 294.84 191.673 287.487 226.773 cv
305.433 228.384 li
305.433 222.255 311.85 187.164 313.497 140.238 cv
313.902 128.754 311.571 107.388 290.079 94.86 cv
f
319.6 226.776 mo
316.738 226.776 313.962 226.643 311.526 226.305 cv
311.526 226.305 313.173 208.116 314.568 180.306 cv
315.309 165.554 314.999 155.233 313.925 146.614 cv
314.383 146.681 314.844 146.719 315.309 146.719 cv
316.019 146.719 316.734 146.629 317.448 146.412 cv
318.474 146.097 319.419 145.539 320.292 144.738 cv
321.75 149.319 325.728 150.12 328.968 150.777 cv
330.174 151.02 331.308 151.254 332.145 151.65 cv
332.874 151.992 li
333.045 151.182 li
333.234 150.246 333.747 149.157 334.278 148.005 cv
335.538 145.305 337.068 142.011 335.61 138.537 cv
335.985 138.537 336.349 138.512 336.703 138.463 cv
339.916 152.093 340.708 165.206 342.072 180.648 cv
344.439 207.333 342.072 224.937 342.072 224.937 cv
342.072 224.937 330.24 226.776 319.6 226.776 cv
301.68 226.287 mo
295.308 225.765 293.04 225.315 293.04 225.315 cv
293.215 224.206 293.385 223.111 293.55 222.03 cv
293.552 222.03 293.553 222.03 293.553 222.03 cv
293.554 222.01 li
298.657 188.596 298.935 168.75 298.098 142.47 cv
297.243 115.335 292.653 104.841 292.653 104.841 cv
293.409 110.34 294.372 134.622 294.372 134.622 cv
290.502 134.289 273.096 133.254 273.096 133.254 cv
272.151 118.386 274.203 108.648 274.203 108.648 cv
269.289 124.992 266.436 132.507 266.436 132.507 cv
261.101 132.413 255.876 132.376 250.957 132.376 cv
232.887 132.376 218.952 132.876 218.952 132.876 cv
222.444 117.531 228.06 107.901 234.792 99.387 cv
234.783 99.387 li
234.783 99.387 238.544 93.516 243.892 86.9791 cv
250.606 78.771 259.82 69.5135 267.226 69.5135 cv
267.465 69.5135 267.703 69.5232 267.939 69.543 cv
281.268 70.668 282.231 80.514 283.95 83.313 cv
283.95 83.313 287.418 71.2002 294.055 71.2002 cv
294.23 71.2002 294.408 71.2086 294.588 71.226 cv
301.572 71.901 310.275 79.281 324.666 106.749 cv
325.234 107.832 325.78 108.904 326.306 109.963 cv
326.142 110.038 325.976 110.112 325.809 110.187 cv
322.992 111.438 319.545 112.977 318.681 117.099 cv
317.311 116.107 315.866 115.767 314.435 115.767 cv
312.699 115.767 310.986 116.268 309.456 116.712 cv
308.268 117.054 307.152 117.378 306.234 117.405 cv
305.433 117.432 li
305.631 118.242 li
305.856 119.169 305.874 120.384 305.883 121.662 cv
305.919 125.037 305.964 129.168 309.798 131.526 cv
306.954 133.839 306.774 137.475 306.63 140.454 cv
306.567 141.732 306.504 142.938 306.243 143.856 cv
306.018 144.657 li
306.819 144.72 li
307.728 144.792 308.835 145.161 309.996 145.557 cv
310.428 145.702 310.872 145.85 311.324 145.991 cv
309.234 190.814 301.68 226.287 301.68 226.287 cv
level3{
gsave
clp
[124.177 0 0 124.177 218.949 148.145 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0431373 .0470588 .0901961 ]
/C1 [.423529 .529412 .521569 ]
/N 1.30479 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.177 0 0 124.177 218.949 148.145 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Chmg$C2%BqBP1siAn>OaA7K+Y@UW\Q?sd8I?<piA>[1K;>$>'3=BJX+<`W4#<)cgq;c6Lj;,C(b:JX_\
9he;T91qlL8kDTF84Q0>7Rfg86psC06:+")5sR\"5<h=q4Ztni4?GVc3]]8]3&iiU2`<QO2)R3I1G^gB
1,1L<0JG.50.nk//M/M).k<,".Olkr-n$Jk-RU5f,pai_,U=TZ,9e<U+X%sN+<M[I*Zc@C*??+>*#fh9
)B'M3)&X8.(`4&*(D[c%'bqGu'GM5p',)#l&eYcg&J5Qc&.f?_%hB-[%LrsX%1NaT$k*OQ$k!FN$O[=M
~>
<~LPCM:KS+o/Jq8H&IsuipI=-BgH?sj]G^"=SF`heIF)l;@E,]`6DJa6,Chmd#Bk_6oB4baeARo:\@U`bS
?sd8I?<piA>?b97=]nj.=&r@%<E)pr;Gp@h:f'q`:/4MW9M8#N8kDTF84Q0>7R]a66UO1,5s[b$5<h=q
4Ztni4$,Ja3B9&Y2`EWQ2)R3I1G^dA0ekC:0J>(3/hJY+/1W5#.Olkr-n$Gj-71&c,pX`\,9nBV+X%sN
+<M[H*Zc=B*#oq;)]BV5)&X;/(`*u)()@Z#'bqDs'GD,n&eYfh&J5Td&.f?_%hB-[%LrpW%1N^S$k*OQ
~>
<~KnP)2JqAQ)J:E&tIXQWlI!^3dH$OXZGB\4RF`heIF)l;@EH#l8Df0H0D/=!'C2.HsBP;$kAnGUcA7T1[
@U`bS?sm>J?<piA>[(E9>$5!1=BAR)<`N."<)cdp;Gp@h:f'q`:/4MX9MA)P8kMZH8OuBB7n,s:779O2
6UO1,5s[b$5<h@r5!;%k4?GVd3]]8]3&ilV2`<QP2)R3I1G^gB1,1L<0JG.50.nk//M/M)/1W5#.Olkr
.4?Sl-RU5f-7'ra,U=W[,9nBV+sA*Q+<VdK+!2OF*ZZ7A*?6%=*#fh9)B'M4)&X;0)&O2-(`4&*(Ddl(
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
263.97 226.773 mo
263.039 220.841 li
263.31 220.736 263.587 220.626 263.867 220.511 cv
264.056 221.999 264.338 224.176 264.624 226.612 cv
264.402 226.665 264.184 226.719 263.97 226.773 cv
.129412 .0862745 0 rgb
f
264.624 226.612 mo
264.338 224.176 264.056 221.999 263.867 220.511 cv
269.501 218.193 276.992 213.692 291.268 207.8 cv
290.391 212.509 289.416 217.438 288.342 222.656 cv
282.123 223.445 271.682 224.905 264.624 226.612 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
263.039 220.841 mo
262.998 220.581 li
291.602 205.989 li
291.492 206.588 291.381 207.193 291.268 207.8 cv
276.992 213.692 269.501 218.193 263.867 220.511 cv
263.587 220.626 263.31 220.736 263.039 220.841 cv
.129412 .0862745 0 rgb
f
288.342 222.656 mo
289.416 217.438 290.391 212.509 291.268 207.8 cv
291.381 207.193 291.492 206.588 291.602 205.989 cv
294.048 204.741 li
293.554 222.01 li
293.553 222.016 293.551 222.024 293.55 222.03 cv
293.481 222.038 291.433 222.264 288.342 222.656 cv
f
293.55 222.03 mo
293.551 222.024 293.553 222.016 293.554 222.01 cv
293.553 222.03 li
293.553 222.03 293.552 222.03 293.55 222.03 cv
level3{
gsave
clp
[124.177 0 0 124.177 218.949 148.145 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~#RM"I#nI=K&./aV$O[OT$k`sX'+GBa%Ls0`&/>]e((_)p&J>on'H%Q!)&*i*'c.f)(`aD2*Z,h<)&sb;
*?cCE+rh^N*[)dN,:4NY-Qsfb,:=ob-n6Mm/1)l!-S6r"/h\\.0Ink5/M]+61c-jD2D@'K1-%<M3]])[
4#T8b2a9Jd5sICt5W_A#4[qe&845^77R9[;6VU-?:.drO9LhuT85i8U<DZ=i;GC:m:0LUn>ZO^.=ArU1
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[124.177 0 0 124.177 218.949 148.145 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~;GpCi;,C(c:esk^:/+GW9h\5R91hfK8kDTF84Q0?7n,s:779O36pj=/6UF+*5sR\#5X.Is5!;%l4Zkhg
4$,Ja3]]8]3B9&Y2`EWQ2E!EM1c.!E1G^dA1,:R=0JG.50/"q1/M/M)/1`>'.k<)!.Olkr.4HYn-RU5f
-71&c,pai_,U4NX+sJ3T+sA*P+<VdK+!2RG*Zc@C*?6%<)]K_8)]BV4)&X;/(`4)+(Ddl'()@Z#'bqGt
'GM5q',)#m&eYfi&J5Te&.fBa%hB0]%LrsY%LrsY%1NaU$k*OQ$O[=M$O[=M$47+I#mgnE#RC\A#6tJ=
~>
<~?XI/H?<piA>[(E9>$5!2=]ed-=&r@%<E)pr;c6Lk;Gg:f:esk^:/+GW9h\5R91hfJ8OuBC84Q0>7R]a6
6psC06UO1,5s[b$5<h=q5!D+m4?P\e3]]8]3B9&Y2`EWQ2E!EM1c.!E1,:R=0ek@90JG.5/hS_-/M/M)
.k<,".Olns.4?Sl-RU8g-71&c,pX`\,9nEW+sA*P+<VdK+!2RG*ZZ7@*#oq;)]K_7)B'M3)&O2,(Ddl'
()@Z$'bqGu'GM5q',(uk&J5Te&J5Qc%hB0]%hB-[%1NaU$k*OQ$k*OQ$O[=M$47+I#mgnE#RC\A#RC\A
~>
<~=BJ[-=BAR)<`N.!<)Z^o;c6Lk;Gg:f:esk^:/+GW9h\5S9M8#N8kDTG8OuBB7n,s;7R]a66pj=/6UF++
6:*t(5X7Ou5<h=q5!D+m4?P\e4$,Ja3]]8]3&iiU2`EWQ2E!EM1c.!E1G^dA1,:R=0JG.50/"q1/hS_-
/M/P*/1`>&.k3"t.4H\o-n$Jk-RU8g-71&c,pX`\,9nEX,9e<T+X&!O+<VdK+!2RG*Zc@C*??.?*#fh8
)B'M4)B'J2(`4),(`4),(Ddl(()@Z$'bqGu'GM5q',)#m&eYfi&eYfi&J5Te&.fBa&.fBa%hB0]%LrsY
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
270.707 146.568 mo
268.148 146.853 266.575 147.771 265.243 149.587 cv
264.169 151.049 263.167 152.429 263.441 154.642 cv
263.686 156.616 263.002 158.424 263.002 158.424 cv
263.675 159.009 li
267.403 162.259 270.146 163.814 274.29 163.36 cv
282.721 162.439 289.714 152.516 289.714 152.516 cv
285.816 147.997 277.496 145.813 270.707 146.568 cv
cp
.168627 .121569 0 rgb
f
264.229 158.169 mo
264.229 158.169 264.658 157.296 264.586 154.644 cv
264.512 151.819 266.039 149.334 270.72 148.998 cv
283.994 148.045 288.332 152.934 288.332 152.934 cv
289.205 151.65 276.25 168.648 264.229 158.169 cv
cp
1 1 1 rgb
f
260.759 150.552 mo
264.43 151.785 li
264.43 151.785 264.539 149.101 277.538 146.94 cv
277.538 146.94 267.077 143.754 260.759 150.552 cv
cp
.168627 .121569 0 rgb
f
283.841 150.769 mo
283.806 150.305 li
283.384 150.132 li
282.161 149.621 277.813 147.96 273.292 148.014 cv
270.752 148.045 268.626 148.625 266.968 149.734 cv
266.728 149.894 li
265.671 150.622 li
265.641 150.744 265.5 152.637 267.057 155.244 cv
268.078 156.957 270.233 158.696 272.618 159.265 cv
273.388 159.449 274.167 159.54 274.929 159.53 cv
277.457 159.5 279.91 158.36 281.66 156.404 cv
283.17 154.715 283.986 152.609 283.841 150.769 cv
cp
f
266.923 150.241 mo
266.923 150.241 267.083 156.74 272.5 158.273 cv
278.143 159.871 282.416 154.676 282.13 150.721 cv
277.439 148.818 270.406 147.766 266.923 150.241 cv
cp
level3{
gsave
clp
[15.2084 -.18252 .18252 15.2084 266.966 153.76 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.509804 .588235 .545098 ]
/C1 [.133333 .137255 .180392 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.2084 -.18252 .18252 15.2084 266.966 153.76 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Jq8K'J:N-!IsuipI=6KjI!^3dH?sj^H$FRXGB\4RG'.qLFEDSFF)l;@EH,r:E,TZ4DJj<.D/=$(CMR["
C2%BqBP;$kB4baeAS#C_A7K+Y@U`bS@:3JM?XI,G?<piA>[1K;>?Y35=]nj/=BAR)<`W4#<E)pr;c?Rl
;Gg:f:f'q`:JOYZ9he;T9M8#N8kMZH8OuBB7n6$<7R]a66psC06UF+*5s[b$5<h@r5!D+m4Zkhg4$,Ja
3]T2[3&iiU2`<QO2)R3I1c$pC1,:R=0eb:70/"q1/hJY+/1`;%.k3"t.4HYn-mpAh-71#b,pX`\,9nBV
~>
<~QBd`"P`q;oP*(lhOH>NaNfK*YNJrgSMi*CKM26tDLPLV=KnY25KS+o/Jq8K'J:E&uIXZ]nI!g9fH[:!`
H$FRXGB\4RF`heJF)uABEcH)<E,TZ4DJj<.Ci!m&C2.HsBkV0mB4baeAS#C_@q/tW@:<PO?sd8I?<piA
>[1K;>$>'3=BJ[,=&r@%<E)pr;c?Rl;,L.d:JXb]:/+GV9M8#N8kMZH84Z6@7Rfj9779O26UF+*5s[b$
5<h=q4Ztqj4?GVc3]T2\3&iiU2E!EM1c.$F1GU^?0eb:80/"q1/M/M).k<,".Ocep-mpAi-71#b,U=TZ
~>
<~Mi*CKM2@%ELkgb@L5(D9KnP,4K7ef.Jq8K(J:N0"It)orI=6NkI!g9fH[:!`H$OXZG^"@UG'8"NF`__I
F)uDCEcH)=E,]c7Df9N2D/F-+Ci!m&CMITuBk_6oBP1sjAnGUcARo=^@q0"X@UW\R?smAL?XI,G?!U`@
>[1K;>?Y35=]nj/=BAR*<`W4#<E)ps;c?Um;Gg:g:f'ta:JX_\9he>U9MA)P91hfJ8P)HD84Q0?7Rfg8
779O36UO4-6:!n'5X7S!5<h=q4Ztqj4?P\e4$#D_3B9&Y3&`cT2E!EM2)I-H1G^gB1,1L<0JG160/"q1
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
277.534 152.463 mo
276.689 154.167 276.809 155.969 277.805 156.485 cv
278.801 156.999 280.295 156.034 281.142 154.329 cv
281.989 152.624 281.868 150.823 280.87 150.307 cv
279.875 149.793 278.379 150.757 277.534 152.463 cv
cp
1 1 1 rgb
f
235.667 148.87 mo
232.027 147.516 229.911 148.791 228.397 148.948 cv
227.213 149.072 224.314 150.725 224.395 151.187 cv
224.262 152.072 225.695 156.748 227.534 159.602 cv
228.475 161.06 231.026 163.674 232.83 163.868 cv
239.153 164.542 245.444 158.119 245.444 158.119 cv
245.444 158.119 244.072 151.996 235.667 148.87 cv
cp
.168627 .121569 0 rgb
f
226.9 150.565 mo
226.9 150.565 226.642 161.536 233.368 162.249 cv
239.396 162.888 244.072 157.731 244.072 157.731 cv
244.072 157.731 241.045 151.02 235.687 149.932 cv
229.179 148.611 226.9 150.565 226.9 150.565 cv
cp
1 1 1 rgb
f
225.813 151.754 mo
220.816 150.645 li
220.816 150.645 228.342 145.979 236.407 149.141 cv
236.407 149.141 227.886 148.523 225.813 151.754 cv
cp
.168627 .121569 0 rgb
f
241.443 152.526 mo
241.332 152.369 237.817 148.966 232.503 148.743 cv
228.799 148.586 226.534 150.565 226.534 150.565 cv
226.559 153.019 227.646 160.267 234.436 160.553 cv
238.077 160.706 240.882 157.615 241.577 153.116 cv
241.628 152.79 li
241.443 152.526 li
cp
f
227.818 151.434 mo
227.818 151.434 227.496 158.352 233.265 159.081 cv
236.82 159.531 239.367 156.61 239.945 152.67 cv
239.945 152.67 237.374 150.513 232.723 150.317 cv
229.7 150.19 227.818 151.434 227.818 151.434 cv
cp
level3{
gsave
clp
[12.158 .512313 -.512313 12.158 227.689 154.486 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.158 .512313 -.512313 12.158 227.689 154.486 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
235.669 154.433 mo
234.852 155.922 234.895 157.561 235.763 158.093 cv
236.634 158.626 238 157.849 238.819 156.361 cv
239.635 154.87 239.593 153.232 238.722 152.7 cv
237.853 152.167 236.484 152.942 235.669 154.433 cv
cp
1 1 1 rgb
f
251.349 205.749 mo
252.745 203.833 258.084 203.341 261.845 205.696 cv
261.845 205.696 255.637 204.125 251.349 205.749 cv
cp
.168627 .121569 0 rgb
f
265.517 181.646 mo
261.419 181.794 257.018 182.527 252.906 182.432 cv
248.292 182.324 246.152 181.487 241.529 181.652 cv
239.306 181.73 237.855 181.864 236.096 183.033 cv
238.187 186.565 240.465 190.4 242.712 193.856 cv
245.639 198.356 249.048 202.254 254.835 202.565 cv
260.93 202.894 265.117 199.165 269.038 195.273 cv
272.372 191.961 279.627 183.521 280.641 182.3 cv
280.641 182.3 274.89 181.302 265.517 181.646 cv
cp
.419608 .203922 .254902 rgb
f
237.415 183.515 mo
237.415 183.515 239.402 182.819 247.591 184.062 cv
260.759 186.059 265.517 181.646 278.805 182.658 cv
278.805 182.658 276.876 183.997 270.432 190.899 cv
263.507 198.32 257.373 200.641 250.8 198.145 cv
243.793 195.481 239.263 186.632 237.415 183.515 cv
cp
1 1 1 rgb
f
345.537 127.962 mo
344.745 127.467 343.917 126.621 343.044 125.73 cv
340.929 123.57 338.355 120.933 334.584 121.437 cv
335.79 117.369 333.459 114.264 331.56 111.726 cv
330.804 110.718 330.093 109.764 329.715 108.891 cv
329.382 108.135 li
328.743 108.63 li
328.005 109.206 326.934 109.683 325.809 110.187 cv
322.992 111.438 319.545 112.977 318.681 117.099 cv
315.648 114.903 312.246 115.902 309.456 116.712 cv
308.268 117.054 307.152 117.378 306.234 117.405 cv
305.433 117.432 li
305.631 118.242 li
305.856 119.169 305.874 120.384 305.883 121.662 cv
305.919 125.037 305.964 129.168 309.798 131.526 cv
306.954 133.839 306.774 137.475 306.63 140.454 cv
306.567 141.732 306.504 142.938 306.243 143.856 cv
306.018 144.657 li
306.819 144.72 li
307.728 144.792 308.835 145.161 309.996 145.557 cv
312.282 146.322 314.874 147.195 317.448 146.412 cv
318.474 146.097 319.419 145.539 320.292 144.738 cv
321.75 149.319 325.728 150.12 328.968 150.777 cv
330.174 151.02 331.308 151.254 332.145 151.65 cv
332.874 151.992 li
333.045 151.182 li
333.234 150.246 333.747 149.157 334.278 148.005 cv
335.538 145.305 337.068 142.011 335.61 138.537 cv
336.393 138.537 337.131 138.429 337.824 138.222 cv
340.956 137.259 342.576 134.271 343.872 131.868 cv
344.484 130.752 345.051 129.699 345.672 128.997 cv
346.221 128.385 li
345.537 127.962 li
.168627 .121569 0 rgb
f
324.432 133.92 mo
323.829 134.235 322.902 135.198 322.362 138.555 cv
322.092 137.97 322.2 133.722 321.786 133.083 cv
321.093 132.048 320.643 130.824 317.205 131.04 cv
317.601 130.626 320.436 129.762 320.832 129.213 cv
321.534 128.232 322.362 125.775 320.211 120.393 cv
320.877 120.753 323.766 127.071 324.657 127.314 cv
325.62 127.566 329.706 126.117 330.498 126.108 cv
328.491 126.576 327.132 129.717 327.294 130.941 cv
327.393 131.643 329.292 133.389 329.454 133.956 cv
327.735 132.948 325.611 133.299 324.432 133.92 cv
343.602 128.529 mo
340.848 126.819 338.121 121.266 332.856 122.814 cv
335.313 117.315 330.129 113.787 328.77 110.664 cv
326.142 112.698 320.022 113.184 319.563 119.133 cv
315.702 115.371 310.833 118.764 307.665 118.881 cv
308.493 122.283 306.441 128.628 312.102 131.22 cv
307.602 133.884 309.114 139.698 308.223 142.848 cv
311.589 143.109 316.755 147.195 320.913 142.272 cv
320.94 142.38 li
322.299 148.806 328.716 147.825 331.794 149.292 cv
332.469 146.07 336.528 141.705 333.729 137.07 cv
333.882 137.088 li
340.155 137.772 341.289 131.112 343.602 128.529 cv
.882353 .890196 .364706 rgb
f
322.362 138.555 mo
322.092 137.97 322.2 133.722 321.786 133.083 cv
321.147 132.129 320.715 131.015 317.961 131.015 cv
317.726 131.015 317.475 131.023 317.205 131.04 cv
317.601 130.626 320.436 129.762 320.832 129.213 cv
321.515 128.258 322.317 125.905 320.377 120.819 cv
320.424 120.862 320.471 120.906 320.517 120.951 cv
320.522 120.884 320.528 120.819 320.535 120.754 cv
321.535 122.168 323.872 127.1 324.657 127.314 cv
324.734 127.334 324.831 127.343 324.945 127.343 cv
326.252 127.343 329.769 126.116 330.498 126.108 cv
328.491 126.576 327.132 129.717 327.294 130.941 cv
327.393 131.643 329.292 133.389 329.454 133.956 cv
328.675 133.499 327.813 133.322 326.993 133.322 cv
326.004 133.322 325.077 133.58 324.432 133.92 cv
323.829 134.235 322.902 135.198 322.362 138.555 cv
319.243 130.515 mo
321.449 130.515 321.795 131.413 322.308 132.183 cv
322.641 132.696 322.56 136.116 322.767 136.584 cv
323.208 133.875 323.946 133.11 324.441 132.849 cv
324.956 132.579 325.699 132.373 326.492 132.373 cv
327.154 132.373 327.852 132.517 328.482 132.885 cv
328.347 132.426 326.826 131.022 326.745 130.455 cv
326.61 129.474 327.708 126.945 329.319 126.567 cv
328.732 126.575 325.915 127.555 324.859 127.555 cv
324.764 127.555 324.684 127.547 324.621 127.53 cv
323.901 127.341 321.579 122.256 321.039 121.959 cv
322.767 126.297 322.101 128.277 321.534 129.06 cv
321.219 129.501 318.942 130.203 318.618 130.536 cv
318.841 130.521 319.049 130.515 319.243 130.515 cv
.14902 .109804 0 rgb
f
330.372 145.233 mo
327.888 144.045 322.722 144.837 321.624 139.671 cv
321.606 139.581 li
320.363 141.051 319.009 141.521 317.659 141.521 cv
315.371 141.521 313.095 140.17 311.391 140.04 cv
312.111 137.502 310.896 132.822 314.514 130.68 cv
309.96 128.592 311.598 123.48 310.941 120.744 cv
312.585 120.686 314.802 119.526 317.003 119.526 cv
318.161 119.526 319.315 119.848 320.377 120.819 cv
322.317 125.905 321.515 128.258 320.832 129.213 cv
320.436 129.762 317.601 130.626 317.205 131.04 cv
317.475 131.023 317.726 131.015 317.961 131.015 cv
320.715 131.015 321.147 132.129 321.786 133.083 cv
322.2 133.722 322.092 137.97 322.362 138.555 cv
322.902 135.198 323.829 134.235 324.432 133.92 cv
325.077 133.58 326.004 133.322 326.993 133.322 cv
327.813 133.322 328.675 133.499 329.454 133.956 cv
329.292 133.389 327.393 131.643 327.294 130.941 cv
327.132 129.717 328.491 126.576 330.498 126.108 cv
329.769 126.116 326.252 127.343 324.945 127.343 cv
324.831 127.343 324.734 127.334 324.657 127.314 cv
323.872 127.1 321.535 122.168 320.535 120.754 cv
321.023 116.152 325.847 115.744 327.924 114.129 cv
329.022 116.64 333.198 119.484 331.218 123.912 cv
331.726 123.763 332.205 123.696 332.658 123.696 cv
335.984 123.696 337.92 127.3 339.876 128.52 cv
338.103 130.499 337.186 135.445 332.749 135.444 cv
332.524 135.444 332.29 135.432 332.046 135.405 cv
331.92 135.387 li
334.179 139.122 330.912 142.632 330.372 145.233 cv
.780392 .792157 .133333 rgb
f
316.35 323.613 mo
316.269 323.604 309.672 318.717 304.695 316.179 cv
305.532 312.912 302.598 300.204 298.143 293.112 cv
296.775 290.925 294.633 286.857 291.249 283.32 cv
291.69 276.516 296.946 253.71 298.017 242.586 cv
298.062 242.127 297.378 241.749 297.288 242.208 cv
293.301 262.053 289.917 273.321 287.487 282.744 cv
266.868 293.004 251.415 304.551 250.947 324.972 cv
242.316 326.124 238.905 322.605 236.052 314.667 cv
231.822 302.94 234.738 292.014 239.724 281.025 cv
245.655 267.921 253.413 254.709 263.646 244.809 cv
262.647 244.503 li
243.576 264.663 240.111 278.19 235.197 281.223 cv
229.077 285.012 222.462 290.295 217.917 295.884 cv
208.989 306.9 215.874 324.117 227.232 329.832 cv
237.411 334.944 252.387 327.564 252.387 327.564 cv
264.042 338.823 279.576 343.944 290.061 338.904 cv
297.576 335.286 301.311 330.057 301.311 330.057 cv
305.631 328.653 312.003 325.755 316.089 326.052 cv
316.755 323.352 315.963 320.157 315.963 320.157 cv
316.35 323.613 li
.168627 .121569 0 rgb
f
215.73 301.86 mo
212.121 309.915 221.058 328.311 235.926 328.77 cv
245.376 329.067 253.602 326.268 253.602 326.268 cv
252.846 325.8 li
252.846 325.8 246.825 327.276 243.981 326.223 cv
239.319 324.486 232.785 319.572 231.732 305.775 cv
230.949 295.407 234.306 287.532 236.259 282.762 cv
236.259 282.762 220.86 290.385 215.73 301.86 cv
.980392 .964706 .501961 rgb
f
300.744 327.564 mo
300.744 327.564 310.968 324.828 315 325.071 cv
315 325.071 314.865 325.854 315.207 324.198 cv
315.207 324.198 307.629 319.194 303.3 318.717 cv
302.805 324.396 300.744 327.564 300.744 327.564 cv
.705882 .760784 .0666667 rgb
f
312.433 148.022 mo
313.242 144.258 317.069 138.96 321.018 140.166 cv
324.966 141.37 328.882 146.96 327.673 157.304 cv
326.464 167.648 318.01 174.702 311.615 168.87 cv
312.433 148.022 li
cp
level3{
gsave
clp
[16.2813 0 0 16.2813 311.615 155.484 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.2813 0 0 16.2813 311.615 155.484 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
312.433 148.022 mo
313.077 148.161 li
313.41 146.593 314.351 144.65 315.605 143.157 cv
316.231 142.409 316.933 141.771 317.658 141.332 cv
318.384 140.891 319.124 140.65 319.855 140.65 cv
320.176 140.65 320.498 140.696 320.826 140.796 cv
322.363 141.264 323.961 142.503 325.181 144.618 cv
326.401 146.731 327.238 149.717 327.238 153.624 cv
327.238 154.749 327.168 155.95 327.019 157.227 cv
326.581 160.99 325.147 164.297 323.233 166.635 cv
321.316 168.979 318.947 170.324 316.641 170.319 cv
315.104 170.316 313.555 169.744 312.058 168.383 cv
311.615 168.87 li
312.273 168.896 li
313.091 148.048 li
312.433 148.022 li
313.077 148.161 li
312.433 148.022 li
311.775 147.997 li
310.945 169.15 li
311.171 169.357 li
312.865 170.906 314.763 171.639 316.641 171.636 cv
319.471 171.632 322.165 170.021 324.253 167.469 cv
326.344 164.911 327.859 161.381 328.327 157.38 cv
328.482 156.055 328.555 154.803 328.555 153.624 cv
328.555 149.53 327.679 146.313 326.322 143.96 cv
324.966 141.609 323.124 140.12 321.21 139.536 cv
320.758 139.398 320.303 139.333 319.855 139.333 cv
318.829 139.333 317.854 139.671 316.974 140.206 cv
315.652 141.011 314.516 142.257 313.623 143.632 cv
312.732 145.009 312.085 146.514 311.789 147.884 cv
311.777 147.94 li
311.775 147.997 li
312.433 148.022 li
cp
0 0 0 rgb
f
314.612 153.848 mo
314.612 153.848 314.087 144.565 320.937 145.491 cv
320.937 145.491 316.667 147.256 316.505 151.882 cv
322.065 150.907 325.369 158.376 319.756 162.731 cv
321.21 159.903 322.226 151.798 314.612 153.848 cv
cp
.168627 .121569 0 rgb
f
252.387 325.899 mo
252.387 325.899 251.883 316.773 259.614 305.226 cv
267.354 293.67 283.626 285.489 289.197 283.086 cv
289.197 283.086 292.518 285.327 296.82 292.689 cv
301.284 300.312 304.416 309.375 301.734 321.147 cv
299.043 332.919 285.894 338.724 273.753 336.6 cv
261.612 334.467 252.387 325.899 252.387 325.899 cv
.980392 .964706 .501961 rgb
f
252.546 323.075 mo
252.792 318.717 li
252.869 319.135 252.969 319.541 253.091 319.938 cv
252.82 321.147 252.651 322.202 252.546 323.075 cv
.117647 .0941176 0 rgb
f
278.742 337.032 mo
277.079 337.032 275.408 336.889 273.753 336.6 cv
264.217 334.925 256.481 329.28 253.599 326.935 cv
253.601 326.934 253.602 326.934 253.602 326.934 cv
253.602 326.934 253.599 326.933 253.594 326.93 cv
253.435 326.8 253.29 326.681 253.161 326.573 cv
252.918 326.303 252.627 325.851 252.431 325.125 cv
252.546 323.075 li
252.651 322.202 252.82 321.147 253.091 319.938 cv
255.156 326.638 263.518 330.322 271.891 330.322 cv
277.612 330.322 283.337 328.603 287.064 324.954 cv
308.457 304.029 289.197 283.086 289.197 283.086 cv
289.197 283.086 292.518 285.327 296.82 292.689 cv
300.168 298.406 302.767 304.934 302.725 312.806 cv
302.712 315.43 302.405 318.204 301.734 321.147 cv
299.41 331.315 289.282 337.032 278.742 337.032 cv
.690196 .733333 .0352941 rgb
f
125.405 750.63 mo
124.529 750.63 123.668 750.215 122.706 749.547 cv
122.768 749.503 122.829 749.46 122.889 749.418 cv
123.219 749.499 123.561 749.544 123.913 749.544 cv
126.239 749.544 128.979 747.603 131.121 741.582 cv
131.436 740.691 132.723 739.836 133.893 738.153 cv
136.386 734.58 137.052 730.881 138.735 726.363 cv
141.687 718.425 143.388 713.403 145.773 711.108 cv
149.058 707.94 147.609 707.103 147.771 700.209 cv
147.842 697.172 149.066 692.021 151.157 686 cv
149.635 690.671 148.798 694.635 148.734 697.347 cv
148.572 704.241 149.706 706.932 147.123 711.135 cv
144.549 715.338 142.416 725.076 134.181 740.178 cv
129.911 748.003 127.609 750.63 125.405 750.63 cv
121.912 742.108 mo
121.675 742.108 121.741 741.87 121.831 741.569 cv
121.931 741.438 122.014 741.365 122.079 741.365 cv
122.084 741.365 122.089 741.365 122.094 741.366 cv
122.13 741.366 122.265 741.357 122.427 741.348 cv
122.538 741.343 122.664 741.338 122.782 741.338 cv
123.102 741.338 123.369 741.378 123.165 741.582 cv
123.165 741.582 li
122.47 741.961 122.098 742.108 121.912 742.108 cv
.129412 .0862745 0 rgb
f
123.913 749.544 mo
123.561 749.544 123.219 749.499 122.889 749.418 cv
124.59 748.217 125.424 747.523 127.71 741.96 cv
127.993 741.252 127.453 740.62 126.265 740.62 cv
125.491 740.62 124.441 740.889 123.165 741.582 cv
123.165 741.582 li
123.165 741.582 li
123.369 741.378 123.102 741.338 122.782 741.338 cv
122.664 741.338 122.538 741.343 122.427 741.348 cv
122.265 741.357 122.13 741.366 122.094 741.366 cv
122.089 741.365 122.084 741.365 122.079 741.365 cv
122.014 741.365 121.931 741.438 121.831 741.569 cv
121.832 741.567 121.832 741.566 121.833 741.564 cv
123.219 737.1 131.544 734.238 138.159 721.683 cv
139.752 718.641 141.804 714.672 145.035 701.046 cv
148.257 687.42 161.217 648.954 176.292 630.063 cv
190.8 611.901 200.457 588.186 209.322 578.259 cv
218.187 568.341 250.839 512.217 258.165 489.114 cv
264.784 468.244 265.932 461.129 261.404 450.658 cv
265.707 457.566 270.11 462.713 274.934 465.05 cv
274.181 467.793 273.46 470.642 272.727 473.625 cv
271.364 479.172 270.304 485.477 269.466 492.2 cv
263.062 504.576 248.089 529.018 240.597 540.252 cv
231.732 553.536 219.33 570.69 214.326 582.471 cv
209.331 594.243 201.114 614.925 194.022 623.511 cv
186.93 632.088 171.459 647.226 162.756 661.347 cv
162.756 661.347 li
157.477 669.918 153.503 678.799 151.157 686 cv
149.066 692.021 147.842 697.172 147.771 700.209 cv
147.609 707.103 149.058 707.94 145.773 711.108 cv
143.388 713.403 141.687 718.425 138.735 726.363 cv
137.052 730.881 136.386 734.58 133.893 738.153 cv
132.723 739.836 131.436 740.691 131.121 741.582 cv
128.979 747.603 126.239 749.544 123.913 749.544 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
237.852 335.988 mo
234.306 331.596 li
234.545 331.61 234.785 331.62 235.024 331.626 cv
235.851 332.918 236.804 334.393 237.853 335.988 cv
237.853 335.988 237.852 335.988 237.852 335.988 cv
.129412 .0862745 0 rgb
f
334.595 403.641 mo
314.846 376.298 300.507 384.292 303.165 369.324 cv
305.199 357.912 304.686 349.875 303.876 333.873 cv
300.529 337.005 294.091 344.534 282.691 344.534 cv
276.863 344.534 269.735 342.565 261.063 337.032 cv
257.012 334.448 253.216 333.634 249.87 333.634 cv
244.326 333.634 240.02 335.869 237.853 335.988 cv
236.804 334.393 235.851 332.918 235.024 331.626 cv
235.251 331.632 235.477 331.635 235.703 331.635 cv
244.126 331.635 252.387 327.564 252.387 327.564 cv
260.993 335.878 271.716 340.845 280.957 340.845 cv
284.232 340.845 287.318 340.222 290.061 338.904 cv
297.576 335.286 301.311 330.057 301.311 330.057 cv
305.188 328.797 310.717 326.335 314.763 326.057 cv
312.415 335.748 309.411 346.099 309.411 356.58 cv
309.411 356.58 li
309.411 356.58 li
309.411 370.035 310.869 371.718 325.53 381.978 cv
335.787 389.151 343.28 397.393 346.86 401.703 cv
345.02 401.858 340.605 402.327 334.595 403.641 cv
315.482 323.007 mo
313.519 321.619 308.607 318.174 304.695 316.179 cv
304.763 315.913 304.806 315.585 304.825 315.202 cv
310.597 300.939 301.824 286.506 319.752 262.458 cv
325.611 254.61 332.577 257.571 339.714 255.321 cv
373.878 244.584 398.133 213.426 402.561 211.392 cv
411.381 207.337 366.211 166.322 367.025 166.322 cv
367.089 166.322 367.437 166.576 368.118 167.121 cv
388.377 183.312 393.219 187.713 398.943 194.769 cv
403.217 200.038 407.882 207.362 407.876 210.069 cv
407.875 210.349 407.824 210.579 407.718 210.753 cv
406.593 212.598 404.019 217.314 396.441 226.287 cv
388.863 235.251 376.461 245.061 359.532 254.988 cv
359.073 255.258 350.46 260.676 349.488 261.27 cv
335.691 270.495 317.916 287.091 316.359 292.491 cv
316.359 292.491 li
316.359 292.491 li
321.66 287.955 li
320.517 295.38 318.267 310.725 316.521 317.97 cv
316.521 317.979 li
316.371 318.805 316.207 319.638 316.033 320.477 cv
315.991 320.272 315.963 320.157 315.963 320.157 cv
316.011 320.584 li
315.843 321.387 315.666 322.194 315.482 323.007 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
280.957 340.845 mo
271.716 340.845 260.993 335.878 252.387 327.564 cv
252.387 327.564 244.126 331.635 235.703 331.635 cv
235.477 331.635 235.251 331.632 235.024 331.626 cv
234.785 331.62 234.545 331.61 234.306 331.596 cv
233.622 330.75 li
233.622 330.75 248.058 329.103 252.387 327.222 cv
252.387 327.222 265.9 338.03 279.517 338.029 cv
280.1 338.029 280.685 338.009 281.268 337.968 cv
295.443 336.96 299.961 329.67 299.961 329.67 cv
299.961 329.67 301.461 324.244 303.3 318.719 cv
302.805 324.396 300.744 327.564 300.744 327.564 cv
300.744 327.564 310.117 325.056 314.453 325.056 cv
314.646 325.056 314.828 325.061 315 325.071 cv
315 325.071 314.999 325.074 314.999 325.078 cv
314.921 325.404 314.843 325.729 314.763 326.057 cv
314.763 326.057 li
310.717 326.335 305.188 328.797 301.311 330.057 cv
301.311 330.057 297.576 335.286 290.061 338.904 cv
287.318 340.222 284.232 340.845 280.957 340.845 cv
315.207 324.198 mo
315.199 324.192 307.627 319.194 303.3 318.717 cv
303.404 318.405 303.509 318.093 303.615 317.781 cv
304.077 316.921 304.478 316.062 304.825 315.202 cv
304.806 315.585 304.763 315.913 304.695 316.179 cv
308.607 318.174 313.519 321.619 315.482 323.007 cv
315.482 323.007 li
315.392 323.403 315.3 323.8 315.207 324.198 cv
316.011 320.584 mo
316.011 320.584 li
315.963 320.157 li
315.963 320.157 315.991 320.272 316.033 320.477 cv
316.033 320.477 li
316.026 320.512 316.018 320.549 316.011 320.584 cv
.129412 .0862745 0 rgb
f
300.744 327.564 mo
300.744 327.564 302.805 324.396 303.3 318.719 cv
303.3 318.718 303.3 318.717 303.3 318.717 cv
307.627 319.194 315.199 324.192 315.207 324.198 cv
315.138 324.491 315.069 324.784 314.999 325.078 cv
314.999 325.074 315 325.071 315 325.071 cv
314.828 325.061 314.646 325.056 314.453 325.056 cv
310.117 325.056 300.744 327.564 300.744 327.564 cv
.541176 .541176 .0431373 rgb
f
310.132 281.827 mo
310.132 281.827 313.388 264.479 329.38 253.643 cv
329.38 253.643 314.174 270.994 310.132 281.827 cv
cp
.168627 .121569 0 rgb
f
264.852 255.323 mo
264.852 255.323 267.351 260.874 270.414 259.697 cv
273.475 258.52 276.538 255.492 278.149 255.323 cv
278.149 255.323 272.186 257.173 269.769 256.837 cv
267.351 256.5 264.852 255.323 264.852 255.323 cv
cp
f
119.245 740.741 mo
119.124 740.868 116.936 743.713 116.936 743.713 cv
116.936 743.713 117.472 741.141 118.09 740.081 cv
118.28 739.753 119.633 740.341 119.245 740.741 cv
cp
f
116.076 738.4 mo
115.314 740.82 li
116.936 738.691 li
116.505 738.074 116.076 738.4 116.076 738.4 cv
cp
f
195.839 566.927 mo
195.839 566.927 195.194 576.514 201.318 578.87 cv
207.442 581.224 210.827 576.207 210.827 576.207 cv
210.827 576.207 205.594 579.5 200.598 576.166 cv
196.67 573.545 195.839 566.927 195.839 566.927 cv
cp
f
342.606 164.519 mo
342.552 163.948 342.496 163.378 342.441 162.811 cv
343.944 162.478 345.408 162.231 346.653 162.231 cv
348.004 162.231 349.099 162.521 349.713 163.305 cv
349.713 163.305 li
342.606 164.519 li
349.209 147.982 mo
346.441 145.981 342.618 143.965 339.531 142.282 cv
339.426 141.763 339.318 141.243 339.207 140.723 cv
342.357 140.937 351.774 141.967 349.713 146.547 cv
349.514 146.99 349.348 147.472 349.209 147.982 cv
.129412 .0862745 0 rgb
f
349.713 163.305 mo
349.099 162.521 348.004 162.231 346.653 162.231 cv
345.408 162.231 343.944 162.478 342.441 162.811 cv
341.747 155.788 340.9 149.063 339.531 142.282 cv
342.618 143.965 346.441 145.981 349.209 147.982 cv
347.637 153.779 349.713 163.305 349.713 163.305 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
342.072 164.61 mo
338.211 140.67 li
338.211 140.67 338.588 140.681 339.207 140.723 cv
339.318 141.243 339.426 141.763 339.531 142.282 cv
340.9 149.063 341.747 155.788 342.441 162.811 cv
342.496 163.378 342.552 163.948 342.606 164.519 cv
342.072 164.61 li
.129412 .0862745 0 rgb
f
251.613 324.954 mo
251.613 324.954 240.813 314.19 250.614 292.437 cv
250.614 292.437 243.234 309.375 252.387 321.93 cv
251.613 324.954 li
.168627 .121569 0 rgb
f
234.972 329.67 mo
232.693 329.67 230.701 329.43 229.365 328.806 cv
223.524 326.079 216.477 315.54 216.477 315.54 cv
216.477 315.54 217.107 316.166 218.229 317.065 cv
221.785 323.204 228.016 328.526 235.926 328.77 cv
236.402 328.785 236.875 328.792 237.344 328.792 cv
244.721 328.792 251.106 327.035 253.019 326.453 cv
253.064 326.491 253.112 326.531 253.161 326.573 cv
253.377 326.813 253.554 326.91 253.594 326.93 cv
253.596 326.932 253.597 326.933 253.599 326.935 cv
253.415 326.981 242.592 329.67 234.972 329.67 cv
246.716 326.602 mo
245.696 326.602 244.729 326.5 243.981 326.223 cv
242.287 325.592 240.346 324.541 238.51 322.797 cv
238.525 322.793 238.539 322.789 238.554 322.785 cv
238.554 322.785 243.812 326.181 248.414 326.181 cv
249.673 326.181 250.882 325.927 251.922 325.279 cv
251.937 325.273 251.946 325.269 251.946 325.269 cv
251.946 325.264 li
252.097 325.169 252.244 325.066 252.387 324.954 cv
252.389 324.96 252.39 324.966 252.392 324.973 cv
252.369 325.575 252.387 325.899 252.387 325.899 cv
252.387 325.899 li
252.387 325.899 252.389 325.901 252.392 325.903 cv
251.396 326.12 248.932 326.602 246.716 326.602 cv
.117647 .0941176 0 rgb
f
237.344 328.792 mo
236.875 328.792 236.402 328.785 235.926 328.77 cv
228.016 328.526 221.785 323.204 218.229 317.065 cv
221.078 319.35 227.103 323.396 234.02 323.396 cv
235.484 323.396 236.987 323.214 238.51 322.797 cv
240.346 324.541 242.287 325.592 243.981 326.223 cv
244.729 326.5 245.696 326.602 246.716 326.602 cv
248.932 326.602 251.396 326.12 252.392 325.903 cv
252.424 325.933 252.639 326.13 253.019 326.453 cv
251.106 327.035 244.721 328.792 237.344 328.792 cv
.690196 .733333 .0352941 rgb
f
252.387 325.899 mo
252.387 325.899 li
252.387 325.899 252.369 325.575 252.392 324.973 cv
252.404 325.025 252.417 325.076 252.431 325.125 cv
252.387 325.899 li
f
253.599 326.935 mo
253.597 326.933 253.596 326.932 253.594 326.93 cv
253.599 326.933 253.602 326.934 253.602 326.934 cv
253.602 326.934 253.601 326.934 253.599 326.935 cv
253.161 326.573 mo
253.112 326.531 253.064 326.491 253.019 326.453 cv
252.639 326.13 252.424 325.933 252.392 325.903 cv
252.389 325.901 252.387 325.899 252.387 325.899 cv
252.431 325.125 li
252.627 325.851 252.918 326.303 253.161 326.573 cv
.486274 .556863 .00392157 rgb
f
247.974 325.186 mo
244.728 325.186 242.373 324.295 240.517 322.536 cv
240.354 322.374 240.192 322.206 240.03 322.029 cv
240.03 322.029 245.406 321.091 247.642 317.559 cv
248.668 320.923 250.139 323.136 250.972 324.204 cv
250.962 324.459 250.953 324.714 250.947 324.972 cv
249.879 325.115 248.891 325.186 247.974 325.186 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
248.31 325.926 mo
246.126 325.926 243.25 325.252 240.517 322.536 cv
242.373 324.295 244.728 325.186 247.974 325.186 cv
248.891 325.186 249.879 325.115 250.947 324.972 cv
250.953 324.714 250.962 324.459 250.972 324.204 cv
251.362 324.704 251.613 324.954 251.613 324.954 cv
251.946 323.653 li
251.946 325.264 li
251.938 325.27 251.93 325.274 251.922 325.279 cv
251.725 325.362 250.307 325.926 248.31 325.926 cv
.129412 .0862745 0 rgb
f
251.613 324.954 mo
251.613 324.954 251.362 324.704 250.972 324.204 cv
250.139 323.136 248.668 320.923 247.642 317.559 cv
247.746 317.396 247.843 317.227 247.932 317.052 cv
251.946 323.649 li
251.946 323.653 li
251.613 324.954 li
f
251.922 325.279 mo
251.93 325.274 251.938 325.27 251.946 325.264 cv
251.946 325.269 li
251.946 325.269 251.937 325.273 251.922 325.279 cv
.0901961 .0666667 0 rgb
f
272.454 412.445 mo
272.306 412.444 272.156 412.426 272.007 412.389 cv
270.927 412.11 270.252 410.913 270.36 409.581 cv
270.378 409.302 270.432 408.924 270.594 408.582 cv
271.013 407.519 271.901 406.817 272.835 406.817 cv
272.985 406.817 273.135 406.835 273.285 406.872 cv
274.5 407.178 275.202 408.663 274.851 410.184 cv
274.543 411.519 273.521 412.445 272.454 412.445 cv
level3{
gsave
clp
[294.942 0 0 294.942 112.936 444.555 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[294.942 0 0 294.942 112.936 444.555 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
273.656 407.019 mo
273.897 407.487 274.04 408.048 274.04 408.656 cv
274.04 410.27 273.039 411.579 271.803 411.579 cv
271.365 411.579 270.959 411.408 270.616 411.124 cv
270.894 411.752 271.377 412.225 272.006 412.385 cv
273.225 412.694 274.5 411.708 274.853 410.187 cv
275.167 408.83 274.639 407.507 273.656 407.019 cv
cp
.168627 .121569 0 rgb
f
348.48 401.58 mo
347.805 401.634 li
347.589 401.652 325.755 402.75 302.364 415.746 cv
287.784 423.837 275.013 426.294 266.868 426.294 cv
259.956 426.294 255.024 425.052 252.711 423.882 cv
246.528 420.768 241.479 415.773 241.434 415.728 cv
240.417 414.711 li
237.753 418.167 li
239.058 417.492 li
239.175 417.591 249.687 429.183 256.671 442.359 cv
263.538 455.31 270.351 464.715 278.451 466.227 cv
278.721 466.281 279.351 463.275 279.621 463.275 cv
283.662 463.275 286.056 456.012 288.369 448.974 cv
289.341 446.04 290.259 443.259 291.078 441.81 cv
291.321 441.378 291.591 440.883 291.888 440.343 cv
294.858 434.898 301.032 423.558 315.801 415.692 cv
331.893 407.133 349.119 406.035 349.29 406.026 cv
351.801 405.882 li
348.48 401.58 li
f
240.273 416.853 mo
240.273 416.853 250.533 427.896 258.489 440.901 cv
266.436 453.906 273.231 459.342 278.226 459.261 cv
283.311 459.189 287.172 446.058 289.971 441.126 cv
292.761 436.194 298.674 423.306 315.216 414.495 cv
331.758 405.693 349.218 404.685 349.218 404.685 cv
347.904 402.975 li
347.904 402.975 326.394 404.685 302.967 417.69 cv
279.549 430.695 258.597 428.346 252.144 425.088 cv
245.7 421.839 240.543 416.7 240.543 416.7 cv
240.273 416.853 li
.980392 .964706 .501961 rgb
f
275.997 461.328 mo
266.864 455.961 258.489 440.901 258.489 440.901 cv
258.489 440.901 li
265.642 452.607 271.862 458.18 276.676 459.118 cv
276.445 459.848 276.219 460.584 275.997 461.328 cv
.117647 .0941176 0 rgb
f
276.676 459.118 mo
271.862 458.18 265.642 452.607 258.489 440.901 cv
263.072 445.863 267.414 447.682 271.32 447.682 cv
277.283 447.682 282.228 443.439 285.448 439.664 cv
281.518 445.872 278.871 452.186 276.676 459.118 cv
.690196 .733333 .0352941 rgb
f
350.748 403.443 mo
350.127 402.597 li
349.101 402.669 li
328.644 404.019 309.906 412.344 296.352 426.114 cv
281.538 441.153 277.38 454.698 272.727 473.625 cv
267.858 493.443 266.85 522.927 266.04 546.615 cv
265.527 561.708 265.077 574.74 263.727 579.357 cv
262.269 584.361 259.56 589.599 256.95 594.675 cv
253.341 601.686 251.532 609.165 250.749 616.275 cv
249.948 623.628 249.597 632.538 251.253 642.213 cv
252.342 648.576 253.476 655.137 253.98 661.518 cv
255.294 677.925 254.556 702.342 253.08 707.904 cv
251.64 713.295 253.188 715.689 254.43 717.606 cv
254.808 718.191 255.168 718.74 255.429 719.361 cv
255.933 720.54 256.545 726.426 257.04 731.151 cv
257.679 737.289 258.336 743.625 259.236 746.424 cv
259.587 747.549 260.712 749.439 264.177 749.439 cv
269.766 749.439 280.575 744.174 282.366 741.186 cv
282.915 740.277 284.553 737.532 272.88 717.21 cv
273.834 715.266 274.491 712.179 272.547 709.326 cv
269.658 705.06 268.956 699.777 270.333 692.703 cv
272.844 679.824 281.745 655.461 288.945 638.28 cv
295.182 623.403 295.812 602.118 296.19 589.401 cv
296.226 587.961 296.271 586.62 296.316 585.405 cv
296.334 584.964 296.325 584.496 296.325 584.001 cv
296.316 579.204 296.289 570.258 318.438 538.065 cv
352.998 487.836 359.874 466.533 360.981 442.683 cv
362.079 418.995 351.216 404.073 350.748 403.443 cv
.168627 .121569 0 rgb
f
268.83 754.591 mo
266.727 754.591 264.432 751.842 262.869 749.337 cv
261.953 747.868 261.288 746.483 261.063 745.785 cv
259.452 740.745 258.489 721.566 257.202 718.542 cv
255.906 715.509 253.332 714.501 254.943 708.444 cv
256.554 702.396 257.202 677.502 255.906 661.347 cv
254.619 645.201 249.462 628.047 250.749 616.275 cv
252.045 604.503 262.035 592.056 265.581 579.942 cv
269.127 567.837 266.544 506.907 274.599 474.129 cv
279.504 454.203 283.617 441.864 297.702 427.554 cv
309.395 415.681 324.26 408.61 339.697 405.845 cv
338.696 406.025 337.696 406.223 336.699 406.44 cv
336.699 406.44 349.218 428.571 339.714 466.227 cv
331.452 498.951 293.193 559.314 289.647 571.419 cv
286.101 583.533 279.117 612.126 277.83 623.898 cv
276.534 635.679 263.538 682.47 266.22 713.835 cv
266.517 717.282 271.71 733.626 271.377 736.281 cv
271.152 738.126 264.141 739.836 265.014 744.777 cv
265.419 747.045 266.472 745.434 267.516 747.081 cv
269.424 750.087 270.693 753.507 269.451 754.506 cv
269.451 754.506 li
269.247 754.563 269.039 754.591 268.83 754.591 cv
269.451 754.506 mo
269.814 754.405 270.221 754.274 270.656 754.119 cv
270.212 754.345 269.765 754.418 269.451 754.506 cv
275.584 751.826 mo
276.874 751.07 278.01 750.242 278.685 749.439 cv
278.095 750.134 276.897 751.517 275.584 751.826 cv
359.129 439.377 mo
359.127 418.028 349.218 404.685 349.218 404.685 cv
349.043 404.696 348.868 404.709 348.694 404.721 cv
348.869 404.709 349.043 404.697 349.218 404.685 cv
349.218 404.685 359.127 418.028 359.129 439.377 cv
339.961 405.798 mo
340.04 405.784 340.119 405.771 340.198 405.757 cv
340.119 405.771 340.04 405.784 339.961 405.798 cv
level3{
gsave
clp
[108.579 0 0 108.579 250.546 579.636 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[108.579 0 0 108.579 250.546 579.636 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
270.656 754.119 mo
271.614 753.632 272.56 752.432 272.142 748.818 cv
272.142 748.818 273.619 751.887 275.104 751.887 cv
275.113 751.887 275.121 751.887 275.13 751.887 cv
275.282 751.882 275.434 751.861 275.584 751.826 cv
273.986 752.761 272.151 753.586 270.656 754.119 cv
.129412 .0862745 0 rgb
f
339.697 405.845 mo
339.785 405.829 339.873 405.814 339.961 405.798 cv
339.872 405.814 339.786 405.829 339.697 405.845 cv
340.198 405.757 mo
343.018 405.267 345.853 404.922 348.694 404.721 cv
345.855 404.925 343.016 405.27 340.198 405.757 cv
f
269.451 754.506 mo
270.693 753.507 269.424 750.087 267.516 747.081 cv
266.472 745.434 265.419 747.045 265.014 744.777 cv
264.141 739.836 271.152 738.126 271.377 736.281 cv
271.71 733.626 266.517 717.282 266.22 713.835 cv
263.538 682.47 276.534 635.679 277.83 623.898 cv
279.117 612.126 286.101 583.533 289.647 571.419 cv
293.193 559.314 331.452 498.951 339.714 466.227 cv
349.218 428.571 336.699 406.44 336.699 406.44 cv
337.696 406.223 338.696 406.025 339.697 405.845 cv
339.786 405.829 339.872 405.814 339.961 405.798 cv
340.04 405.784 340.119 405.771 340.198 405.757 cv
343.016 405.27 345.855 404.925 348.694 404.721 cv
348.868 404.709 349.043 404.696 349.218 404.685 cv
349.218 404.685 359.127 418.028 359.129 439.377 cv
359.129 440.427 359.105 441.496 359.055 442.584 cv
357.975 465.795 351.396 486.702 316.863 536.886 cv
294.917 568.783 294.388 578.326 294.392 583.605 cv
294.392 583.859 294.393 584.102 294.394 584.338 cv
294.394 584.681 294.392 585.008 294.381 585.324 cv
293.94 597.438 293.94 621.324 287.172 637.47 cv
280.404 653.616 271.089 678.708 268.434 692.307 cv
267.953 694.771 267.716 697.021 267.712 699.091 cv
267.703 703.644 268.825 707.325 270.972 710.487 cv
271.635 711.465 271.871 712.453 271.876 713.359 cv
271.889 715.506 270.603 717.192 270.603 717.192 cv
270.603 717.192 li
270.603 717.192 li
270.603 717.192 280.765 736.639 280.731 740.038 cv
280.73 740.064 280.73 740.09 280.728 740.115 cv
280.718 740.269 280.714 740.436 280.715 740.613 cv
280.715 741.254 280.767 742.041 280.765 742.912 cv
280.76 744.896 280.478 747.317 278.685 749.439 cv
278.685 749.439 li
278.01 750.242 276.874 751.07 275.584 751.826 cv
275.434 751.861 275.282 751.882 275.13 751.887 cv
275.121 751.887 275.113 751.887 275.104 751.887 cv
273.619 751.887 272.142 748.818 272.142 748.818 cv
272.56 752.432 271.614 753.632 270.656 754.119 cv
270.221 754.274 269.814 754.405 269.451 754.506 cv
269.451 754.506 li
level3{
gsave
clp
[108.579 0 0 108.579 250.546 579.636 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[108.579 0 0 108.579 250.546 579.636 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
269.662 744.441 mo
271.971 747.75 li
271.971 747.75 271.272 744.497 271.165 743.713 cv
269.662 744.441 li
cp
.168627 .121569 0 rgb
f
270.859 581.032 mo
270.859 581.032 274.591 589.818 281.059 588.906 cv
287.527 587.995 288.266 581.908 288.266 581.908 cv
288.266 581.908 285.958 587.298 279.293 586.462 cv
274.666 585.884 270.859 581.032 270.859 581.032 cv
cp
f
395.83 376.268 mo
394.173 377.126 392.189 377.557 389.872 377.557 cv
387.76 377.557 385.891 376.888 384.265 375.552 cv
382.639 374.215 381.827 372.417 381.827 370.156 cv
381.827 368.661 382.214 367.288 382.991 366.034 cv
383.764 364.784 384.761 363.754 385.975 362.95 cv
386.964 362.26 388.096 361.727 389.368 361.353 cv
390.637 360.98 391.956 360.792 393.32 360.792 cv
393.544 360.792 393.763 360.797 393.979 360.806 cv
394.193 360.816 394.414 360.831 394.637 360.849 cv
395.405 360.904 396.156 361.041 396.894 361.255 cv
397.631 361.47 398.291 361.839 398.871 362.362 cv
399.169 362.623 399.383 362.917 399.515 363.246 cv
399.646 363.573 399.711 363.905 399.711 364.241 cv
399.711 364.932 399.459 365.562 398.956 366.132 cv
398.449 366.704 397.795 366.998 396.993 367.016 cv
396.526 367.034 396.114 366.955 395.759 366.777 cv
395.405 366.601 395.067 366.381 394.749 366.118 cv
394.526 365.936 li
394.302 365.727 li
394.456 365.656 li
394.61 365.586 li
394.983 365.381 395.31 365.163 395.591 364.928 cv
395.872 364.693 396.094 364.354 396.263 363.905 cv
396.335 363.694 li
396.348 363.483 li
396.348 363.166 396.216 362.923 395.956 362.754 cv
395.694 362.586 395.376 362.503 395.002 362.503 cv
393.993 362.503 393.095 362.904 392.311 363.708 cv
391.526 364.511 390.863 365.4 390.32 366.371 cv
390.097 366.783 389.895 367.194 389.717 367.604 cv
389.54 368.016 389.386 368.39 389.254 368.726 cv
389.106 369.137 388.965 369.605 388.835 370.127 cv
388.704 370.651 388.629 371.175 388.611 371.698 cv
388.611 371.852 li
388.611 372.006 li
388.611 372.697 388.745 373.342 389.015 373.939 cv
389.289 374.538 389.788 374.968 390.515 375.229 cv
390.778 375.323 391.044 375.394 391.316 375.44 cv
391.586 375.487 391.862 375.509 392.141 375.509 cv
392.352 375.509 li
392.535 375.482 li
393.694 375.407 394.795 375 395.843 374.262 cv
396.889 373.525 397.665 372.669 398.17 371.698 cv
398.226 371.6 li
398.282 371.501 li
398.337 371.417 li
398.394 371.306 li
399.459 371.698 li
400.021 371.921 li
398.879 373.958 397.482 375.407 395.83 376.268 cv
cp
f
412.466 376.31 mo
411.496 377.309 410.131 377.809 408.375 377.809 cv
408.262 377.809 408.144 377.805 408.024 377.795 cv
407.902 377.785 407.786 377.781 407.672 377.781 cv
407.226 377.724 406.793 377.613 406.384 377.444 cv
405.973 377.277 405.627 377.006 405.347 376.632 cv
405.159 376.37 405.029 376.098 404.954 375.818 cv
404.879 375.538 404.842 375.248 404.842 374.95 cv
404.842 374.725 li
404.87 374.5 li
404.908 374.128 404.982 373.754 405.094 373.379 cv
405.207 373.005 405.329 372.66 405.458 372.343 cv
405.478 372.286 405.515 372.193 405.57 372.062 cv
405.627 371.932 405.683 371.782 405.739 371.613 cv
405.777 371.539 405.81 371.456 405.837 371.361 cv
405.865 371.267 405.888 371.175 405.908 371.082 cv
405.944 370.95 405.977 370.815 406.005 370.674 cv
406.033 370.535 406.046 370.409 406.046 370.296 cv
406.046 370.127 406.014 369.992 405.949 369.89 cv
405.883 369.787 405.767 369.736 405.597 369.736 cv
405.263 369.736 404.945 369.88 404.647 370.17 cv
404.346 370.459 404.094 370.772 403.889 371.109 cv
403.777 371.294 403.679 371.47 403.594 371.627 cv
403.509 371.786 403.45 371.932 403.413 372.062 cv
403.207 372.604 403.01 373.15 402.825 373.702 cv
402.636 374.253 402.449 374.801 402.262 375.342 cv
402.132 375.716 402.005 376.084 401.883 376.45 cv
401.762 376.814 401.636 377.182 401.506 377.557 cv
396.151 377.557 li
401.45 362.138 li
406.832 362.138 li
406.105 364.243 li
404.703 368.305 li
405.094 368.1 405.528 367.918 406.005 367.758 cv
406.482 367.6 406.972 367.491 407.477 367.436 cv
407.57 367.436 407.667 367.432 407.772 367.422 cv
407.875 367.413 407.972 367.408 408.065 367.408 cv
408.608 367.426 409.131 367.52 409.635 367.689 cv
410.139 367.857 410.571 368.147 410.925 368.557 cv
411.168 368.82 411.34 369.104 411.445 369.413 cv
411.546 369.722 411.598 370.034 411.598 370.353 cv
411.598 370.539 411.583 370.721 411.556 370.899 cv
411.528 371.077 411.477 371.259 411.402 371.445 cv
411.346 371.633 411.285 371.823 411.219 372.02 cv
411.155 372.216 411.084 372.417 411.009 372.623 cv
410.935 372.809 410.864 373 410.798 373.196 cv
410.734 373.394 410.672 373.595 410.617 373.801 cv
410.561 373.912 li
410.504 374.052 li
410.449 374.22 li
410.394 374.417 li
410.379 374.557 li
410.366 374.697 li
410.366 374.79 410.388 374.87 410.434 374.935 cv
410.482 375 410.571 375.033 410.701 375.033 cv
410.794 375.033 410.887 375.019 410.982 374.991 cv
411.075 374.963 411.168 374.921 411.261 374.866 cv
411.523 374.734 411.776 374.548 412.019 374.305 cv
412.26 374.062 412.485 373.81 412.692 373.547 cv
412.822 373.361 412.943 373.174 413.056 372.986 cv
413.168 372.801 413.251 372.632 413.307 372.482 cv
413.364 372.37 li
413.42 372.229 li
413.477 372.118 li
413.533 372.006 li
414.933 372.679 li
414.261 374.099 413.437 375.31 412.466 376.31 cv
cp
f
422.292 369.343 mo
422.226 369.213 422.062 369.147 421.802 369.147 cv
421.708 369.147 421.615 369.155 421.52 369.174 cv
421.428 369.194 421.335 369.222 421.241 369.259 cv
420.885 369.408 420.531 369.67 420.175 370.044 cv
419.821 370.417 419.501 370.819 419.222 371.249 cv
419.017 371.547 418.834 371.842 418.675 372.131 cv
418.516 372.422 418.401 372.669 418.325 372.875 cv
418.306 372.931 418.274 373.025 418.227 373.155 cv
418.181 373.287 418.138 373.435 418.101 373.604 cv
418.063 373.736 418.025 373.869 417.991 374.01 cv
417.951 374.15 417.923 374.295 417.906 374.445 cv
417.867 374.557 417.843 374.679 417.834 374.809 cv
417.826 374.94 417.821 375.062 417.821 375.173 cv
417.821 375.454 417.867 375.688 417.96 375.875 cv
418.054 376.062 418.222 376.156 418.465 376.156 cv
419.007 376.156 419.488 375.932 419.909 375.482 cv
420.33 375.033 420.69 374.538 420.989 373.996 cv
421.158 373.715 421.296 373.444 421.409 373.183 cv
421.52 372.921 421.624 372.688 421.718 372.482 cv
421.942 371.903 422.109 371.399 422.222 370.968 cv
422.335 370.539 422.39 370.174 422.39 369.875 cv
422.39 369.652 422.357 369.474 422.292 369.343 cv
cp
428.795 376.338 mo
427.833 377.318 426.455 377.809 424.662 377.809 cv
424.59 377.809 li
424.52 377.809 li
423.923 377.791 423.357 377.655 422.826 377.402 cv
422.292 377.15 421.895 376.734 421.633 376.156 cv
421.129 376.622 420.553 377 419.909 377.291 cv
419.265 377.58 418.607 377.753 417.932 377.809 cv
417.695 377.836 li
417.611 377.836 417.522 377.836 417.428 377.836 cv
416.774 377.819 416.143 377.687 415.536 377.444 cv
414.928 377.201 414.391 376.79 413.925 376.212 cv
413.569 375.781 413.312 375.333 413.153 374.866 cv
412.995 374.398 412.916 373.921 412.916 373.435 cv
412.916 372.576 413.144 371.745 413.602 370.941 cv
414.059 370.137 414.645 369.465 415.353 368.922 cv
415.895 368.51 416.522 368.17 417.232 367.899 cv
417.942 367.628 418.671 367.475 419.418 367.436 cv
419.658 367.408 li
419.896 367.408 li
420.493 367.408 421.074 367.498 421.633 367.673 cv
422.195 367.852 422.699 368.129 423.146 368.501 cv
423.428 367.66 li
424.342 367.66 425.253 367.66 426.161 367.66 cv
427.068 367.66 427.978 367.66 428.893 367.66 cv
428.781 367.997 428.665 368.339 428.544 368.684 cv
428.421 369.03 428.304 369.372 428.193 369.708 cv
427.95 370.379 427.712 371.057 427.478 371.739 cv
427.245 372.422 427.016 373.109 426.792 373.801 cv
426.763 373.869 li
426.735 373.996 li
426.68 374.15 li
426.652 374.333 li
426.624 374.445 li
426.624 374.557 li
426.665 374.781 li
426.82 374.921 li
426.945 374.963 li
427.1 374.95 li
427.211 374.95 427.32 374.926 427.422 374.879 cv
427.526 374.833 427.631 374.781 427.745 374.725 cv
427.95 374.594 428.155 374.427 428.361 374.22 cv
428.567 374.016 428.754 373.801 428.922 373.575 cv
429.09 373.37 429.235 373.165 429.356 372.958 cv
429.478 372.754 429.566 372.585 429.623 372.455 cv
429.679 372.343 li
429.735 372.229 li
429.763 372.118 li
429.82 372.006 li
431.277 372.651 li
430.585 374.128 429.758 375.357 428.795 376.338 cv
cp
f
445.938 369.343 mo
445.938 369.455 445.938 369.558 445.938 369.652 cv
445.938 370.343 445.728 370.889 445.307 371.292 cv
444.888 371.693 444.424 371.894 443.92 371.894 cv
443.877 371.894 li
443.836 371.894 li
443.443 371.894 443.07 371.764 442.713 371.501 cv
442.359 371.239 442.106 370.819 441.958 370.24 cv
441.902 370.071 441.832 369.946 441.747 369.861 cv
441.663 369.777 441.565 369.745 441.452 369.763 cv
441.266 369.763 441.055 369.871 440.822 370.084 cv
440.587 370.3 440.341 370.594 440.08 370.968 cv
439.631 371.547 439.248 372.193 438.929 372.902 cv
438.612 373.613 438.332 374.333 438.089 375.062 cv
437.976 375.378 437.874 375.688 437.78 375.987 cv
437.687 376.286 437.584 376.585 437.473 376.884 cv
437.433 376.996 437.397 377.108 437.36 377.22 cv
437.323 377.332 437.285 377.444 437.248 377.557 cv
432.061 377.557 li
434.388 371.053 li
434.444 370.856 li
434.444 370.717 li
434.444 370.51 434.364 370.376 434.206 370.311 cv
434.046 370.245 433.866 370.221 433.66 370.24 cv
433.172 370.296 432.745 370.521 432.37 370.913 cv
431.996 371.306 431.688 371.725 431.445 372.174 cv
431.388 372.268 431.333 372.37 431.277 372.482 cv
431.22 372.594 431.172 372.697 431.136 372.791 cv
429.735 372.229 li
430.221 370.958 430.935 369.815 431.879 368.796 cv
432.823 367.778 434.006 367.231 435.426 367.156 cv
435.556 367.137 435.693 367.128 435.832 367.128 cv
435.973 367.128 436.118 367.137 436.267 367.156 cv
436.883 367.194 437.475 367.348 438.047 367.618 cv
438.616 367.89 439.071 368.296 439.407 368.836 cv
439.818 368.539 440.252 368.259 440.71 367.997 cv
441.168 367.736 441.64 367.53 442.125 367.379 cv
442.35 367.306 442.569 367.254 442.785 367.226 cv
443 367.197 443.208 367.184 443.416 367.184 cv
443.697 367.184 443.971 367.222 444.243 367.295 cv
444.513 367.371 444.77 367.484 445.013 367.632 cv
445.254 367.802 445.448 368.006 445.588 368.248 cv
445.728 368.492 445.827 368.745 445.881 369.006 cv
445.92 369.118 445.938 369.23 445.938 369.343 cv
cp
f
455.315 369.343 mo
455.25 369.213 455.086 369.147 454.825 369.147 cv
454.731 369.147 454.638 369.155 454.544 369.174 cv
454.452 369.194 454.357 369.222 454.265 369.259 cv
453.91 369.408 453.553 369.67 453.2 370.044 cv
452.843 370.417 452.526 370.819 452.246 371.249 cv
452.041 371.547 451.859 371.842 451.699 372.131 cv
451.54 372.422 451.422 372.669 451.349 372.875 cv
451.33 372.931 451.296 373.025 451.251 373.155 cv
451.204 373.287 451.161 373.435 451.124 373.604 cv
451.086 373.736 451.049 373.869 451.012 374.01 cv
450.974 374.15 450.946 374.295 450.927 374.445 cv
450.891 374.557 450.868 374.679 450.859 374.809 cv
450.848 374.94 450.844 375.062 450.844 375.173 cv
450.844 375.454 450.891 375.688 450.983 375.875 cv
451.078 376.062 451.246 376.156 451.489 376.156 cv
452.03 376.156 452.511 375.932 452.932 375.482 cv
453.353 375.033 453.712 374.538 454.011 373.996 cv
454.18 373.715 454.32 373.444 454.433 373.183 cv
454.544 372.921 454.647 372.688 454.741 372.482 cv
454.965 371.903 455.133 371.399 455.246 370.968 cv
455.357 370.539 455.414 370.174 455.414 369.875 cv
455.414 369.652 455.381 369.474 455.315 369.343 cv
cp
461.819 376.338 mo
460.856 377.318 459.479 377.809 457.684 377.809 cv
457.613 377.809 li
457.544 377.809 li
456.946 377.791 456.381 377.655 455.848 377.402 cv
455.315 377.15 454.917 376.734 454.656 376.156 cv
454.153 376.622 453.578 377 452.932 377.291 cv
452.288 377.58 451.629 377.753 450.956 377.809 cv
450.718 377.836 li
450.633 377.836 450.544 377.836 450.451 377.836 cv
449.796 377.819 449.167 377.687 448.559 377.444 cv
447.952 377.201 447.415 376.79 446.948 376.212 cv
446.592 375.781 446.334 375.333 446.176 374.866 cv
446.018 374.398 445.938 373.921 445.938 373.435 cv
445.938 372.576 446.167 371.745 446.625 370.941 cv
447.083 370.137 447.666 369.465 448.376 368.922 cv
448.918 368.51 449.544 368.17 450.254 367.899 cv
450.965 367.628 451.695 367.475 452.442 367.436 cv
452.68 367.408 li
452.918 367.408 li
453.516 367.408 454.095 367.498 454.656 367.673 cv
455.218 367.852 455.722 368.129 456.17 368.501 cv
456.451 367.66 li
457.366 367.66 458.276 367.66 459.184 367.66 cv
460.09 367.66 461.002 367.66 461.917 367.66 cv
461.805 367.997 461.689 368.339 461.568 368.684 cv
461.444 369.03 461.329 369.372 461.216 369.708 cv
460.973 370.379 460.735 371.057 460.501 371.739 cv
460.268 372.422 460.04 373.109 459.813 373.801 cv
459.786 373.869 li
459.758 373.996 li
459.702 374.15 li
459.675 374.333 li
459.647 374.445 li
459.647 374.557 li
459.689 374.781 li
459.842 374.921 li
459.969 374.963 li
460.124 374.95 li
460.236 374.95 460.342 374.926 460.446 374.879 cv
460.549 374.833 460.656 374.781 460.768 374.725 cv
460.973 374.594 461.179 374.427 461.385 374.22 cv
461.591 374.016 461.778 373.801 461.946 373.575 cv
462.114 373.37 462.257 373.165 462.379 372.958 cv
462.5 372.754 462.59 372.585 462.647 372.455 cv
462.702 372.343 li
462.758 372.229 li
462.787 372.118 li
462.843 372.006 li
464.3 372.651 li
463.61 374.128 462.782 375.357 461.819 376.338 cv
cp
f
477.237 372.833 mo
477.167 373.015 li
476.737 373.894 476.26 374.674 475.737 375.357 cv
475.213 376.038 474.466 376.613 473.495 377.081 cv
472.915 377.343 472.275 377.542 471.574 377.683 cv
470.874 377.823 470.158 377.893 469.429 377.893 cv
469.248 377.893 li
469.065 377.893 li
467.981 377.836 466.94 377.626 465.94 377.262 cv
464.939 376.898 464.122 376.313 463.487 375.509 cv
463.15 375.081 462.902 374.646 462.745 374.206 cv
462.583 373.768 462.505 373.323 462.505 372.875 cv
462.505 372.016 462.766 371.197 463.291 370.422 cv
463.813 369.646 464.486 369.025 465.309 368.557 cv
465.85 368.259 466.514 368.002 467.3 367.787 cv
468.083 367.572 468.888 367.446 469.71 367.408 cv
469.824 367.39 469.925 367.379 470.018 367.379 cv
470.111 367.379 470.205 367.379 470.299 367.379 cv
471.007 367.379 471.681 367.463 472.318 367.632 cv
472.952 367.802 473.503 368.09 473.971 368.501 cv
474.195 368.726 474.381 368.992 474.533 369.3 cv
474.68 369.608 474.774 369.933 474.812 370.268 cv
474.812 370.367 li
474.812 370.464 li
474.812 370.707 474.77 370.95 474.686 371.193 cv
474.602 371.436 474.476 371.652 474.306 371.837 cv
474.101 372.081 473.859 372.258 473.58 372.37 cv
473.297 372.482 473 372.539 472.681 372.539 cv
472.555 372.539 li
472.402 372.51 li
472.233 372.492 472.059 372.45 471.882 372.384 cv
471.705 372.319 471.541 372.24 471.392 372.146 cv
471.149 371.997 470.953 371.805 470.803 371.572 cv
470.654 371.337 470.561 371.091 470.522 370.829 cv
470.522 370.772 li
470.522 370.688 li
470.495 370.633 li
470.495 370.576 li
470.495 370.147 470.634 369.772 470.916 369.455 cv
471.195 369.137 471.541 368.922 471.953 368.81 cv
471.84 368.773 471.729 368.74 471.616 368.712 cv
471.503 368.684 471.382 368.68 471.251 368.698 cv
471.098 368.698 li
470.943 368.726 li
470.791 368.753 li
470.634 368.81 li
469.98 369.034 469.416 369.497 468.939 370.198 cv
468.462 370.899 468.138 371.652 467.971 372.455 cv
467.934 372.623 467.907 372.801 467.888 372.986 cv
467.87 373.174 467.86 373.351 467.86 373.519 cv
467.877 374.247 468.074 374.879 468.449 375.412 cv
468.822 375.945 469.438 376.212 470.299 376.212 cv
471.738 376.212 472.907 375.814 473.802 375.019 cv
474.7 374.226 475.437 373.239 476.018 372.062 cv
477.336 372.651 li
477.237 372.833 li
cp
f
484.974 372.945 mo
484.927 373.029 484.886 373.118 484.849 373.211 cv
484.55 373.81 484.222 374.389 483.867 374.95 cv
483.511 375.509 483.082 376.016 482.578 376.463 cv
482.109 376.874 481.555 377.201 480.909 377.444 cv
480.265 377.687 479.522 377.809 478.681 377.809 cv
478.583 377.809 li
478.514 377.809 li
477.99 377.791 477.49 377.687 477.013 377.501 cv
476.537 377.314 476.148 376.996 475.849 376.548 cv
475.663 376.268 475.527 375.968 475.444 375.651 cv
475.359 375.333 475.318 375.005 475.318 374.669 cv
475.318 374.576 475.322 374.487 475.332 374.403 cv
475.339 374.319 475.354 374.229 475.374 374.137 cv
475.411 373.875 475.461 373.613 475.527 373.351 cv
475.593 373.09 475.663 372.837 475.737 372.594 cv
475.849 372.295 475.958 371.997 476.059 371.698 cv
476.163 371.399 476.26 371.091 476.354 370.772 cv
476.448 370.474 476.545 370.174 476.648 369.875 cv
476.75 369.577 476.859 369.278 476.97 368.978 cv
475.764 368.978 li
476.241 367.632 li
477.448 367.632 li
477.541 367.352 477.634 367.077 477.728 366.805 cv
477.821 366.536 477.925 366.259 478.037 365.979 cv
478.129 365.718 478.222 365.45 478.316 365.181 cv
478.409 364.909 478.501 364.633 478.598 364.354 cv
479.214 364.259 479.83 364.171 480.448 364.085 cv
481.064 364.002 481.681 363.914 482.297 363.819 cv
482.596 363.783 482.904 363.741 483.222 363.694 cv
483.54 363.648 483.849 363.606 484.148 363.567 cv
484.036 363.905 483.919 364.241 483.796 364.577 cv
483.675 364.914 483.559 365.25 483.447 365.586 cv
483.335 365.922 483.218 366.263 483.096 366.609 cv
482.975 366.955 482.859 367.295 482.747 367.632 cv
484.259 367.632 li
483.754 368.978 li
482.27 368.978 li
482.139 369.372 482.002 369.769 481.861 370.17 cv
481.723 370.572 481.586 370.978 481.456 371.389 cv
481.306 371.8 481.167 372.208 481.037 372.608 cv
480.905 373.011 480.764 373.407 480.615 373.801 cv
480.578 373.932 480.546 374.058 480.517 374.178 cv
480.49 374.299 480.476 374.408 480.476 374.5 cv
480.476 374.669 480.512 374.787 480.586 374.852 cv
480.663 374.917 480.764 374.95 480.894 374.95 cv
481.009 374.95 481.135 374.921 481.273 374.866 cv
481.415 374.809 481.559 374.734 481.709 374.641 cv
481.946 374.473 li
482.186 374.276 li
482.54 373.958 482.83 373.604 483.054 373.211 cv
483.279 372.819 483.484 372.417 483.671 372.006 cv
485.1 372.679 li
485.063 372.772 485.021 372.861 484.974 372.945 cv
cp
f
492.614 368.81 mo
492.447 368.68 492.203 368.605 491.885 368.586 cv
491.193 368.567 490.595 368.83 490.091 369.372 cv
489.585 369.914 489.203 370.51 488.942 371.165 cv
488.847 371.389 488.773 371.613 488.716 371.837 cv
488.661 372.062 488.615 372.268 488.577 372.455 cv
488.801 372.437 489.035 372.409 489.279 372.37 cv
489.521 372.333 489.762 372.277 490.006 372.202 cv
490.716 372.016 491.367 371.707 491.955 371.278 cv
492.544 370.847 492.846 370.249 492.865 369.483 cv
492.865 369.165 492.782 368.941 492.614 368.81 cv
cp
496.426 375.202 mo
495.846 375.968 495.042 376.593 494.016 377.081 cv
493.398 377.361 492.749 377.566 492.067 377.697 cv
491.385 377.827 490.688 377.893 489.979 377.893 cv
489.867 377.893 489.753 377.893 489.642 377.893 cv
489.53 377.893 489.428 377.883 489.335 377.865 cv
488.885 377.846 488.446 377.795 488.016 377.71 cv
487.585 377.626 487.167 377.519 486.755 377.389 cv
485.67 377.014 484.778 376.444 484.078 375.679 cv
483.376 374.913 483.027 374.005 483.027 372.958 cv
483.027 372.697 483.049 372.431 483.096 372.16 cv
483.142 371.89 483.213 371.613 483.305 371.333 cv
483.68 370.213 484.437 369.337 485.578 368.712 cv
486.715 368.086 487.932 367.689 489.221 367.52 cv
489.501 367.484 489.777 367.455 490.048 367.436 cv
490.319 367.418 490.585 367.408 490.848 367.408 cv
491.24 367.408 491.624 367.426 491.997 367.463 cv
492.37 367.502 492.716 367.568 493.035 367.66 cv
493.188 367.703 li
493.341 367.744 li
493.884 367.894 494.394 368.157 494.871 368.529 cv
495.347 368.903 495.595 369.408 495.615 370.044 cv
495.651 371.053 495.231 371.848 494.352 372.426 cv
493.473 373.005 492.511 373.425 491.464 373.688 cv
490.885 373.837 490.323 373.939 489.783 373.996 cv
489.239 374.052 488.773 374.071 488.381 374.052 cv
488.474 374.725 488.73 375.244 489.151 375.608 cv
489.572 375.973 490.128 376.156 490.82 376.156 cv
492.22 376.156 493.398 375.762 494.352 374.978 cv
495.304 374.192 496.052 373.203 496.595 372.006 cv
497.996 372.651 li
497.529 373.585 497.005 374.436 496.426 375.202 cv
cp
f
512.714 369.343 mo
512.714 369.455 512.714 369.558 512.714 369.652 cv
512.714 370.343 512.502 370.889 512.083 371.292 cv
511.663 371.693 511.2 371.894 510.696 371.894 cv
510.653 371.894 li
510.611 371.894 li
510.218 371.894 509.845 371.764 509.49 371.501 cv
509.134 371.239 508.88 370.819 508.732 370.24 cv
508.676 370.071 508.607 369.946 508.522 369.861 cv
508.438 369.777 508.34 369.745 508.228 369.763 cv
508.042 369.763 507.831 369.871 507.597 370.084 cv
507.363 370.3 507.116 370.594 506.855 370.968 cv
506.407 371.547 506.023 372.193 505.705 372.902 cv
505.387 373.613 505.106 374.333 504.863 375.062 cv
504.751 375.378 504.648 375.688 504.554 375.987 cv
504.461 376.286 504.36 376.585 504.248 376.884 cv
504.209 376.996 504.171 377.108 504.134 377.22 cv
504.097 377.332 504.06 377.444 504.023 377.557 cv
498.837 377.557 li
501.164 371.053 li
501.22 370.856 li
501.22 370.717 li
501.22 370.51 501.14 370.376 500.981 370.311 cv
500.822 370.245 500.64 370.221 500.435 370.24 cv
499.948 370.296 499.518 370.521 499.145 370.913 cv
498.77 371.306 498.462 371.725 498.22 372.174 cv
498.164 372.268 498.107 372.37 498.052 372.482 cv
497.996 372.594 497.948 372.697 497.911 372.791 cv
496.509 372.229 li
496.997 370.958 497.71 369.815 498.655 368.796 cv
499.598 367.778 500.78 367.231 502.201 367.156 cv
502.333 367.137 502.466 367.128 502.607 367.128 cv
502.747 367.128 502.892 367.137 503.042 367.156 cv
503.658 367.194 504.251 367.348 504.822 367.618 cv
505.391 367.89 505.845 368.296 506.181 368.836 cv
506.592 368.539 507.027 368.259 507.485 367.997 cv
507.944 367.736 508.415 367.53 508.901 367.379 cv
509.125 367.306 509.344 367.254 509.56 367.226 cv
509.774 367.197 509.984 367.184 510.19 367.184 cv
510.47 367.184 510.747 367.222 511.018 367.295 cv
511.289 367.371 511.545 367.484 511.788 367.632 cv
512.03 367.802 512.221 368.006 512.363 368.248 cv
512.502 368.492 512.601 368.745 512.658 369.006 cv
512.695 369.118 512.714 369.23 512.714 369.343 cv
cp
f
514.788 372.426 mo
514.899 372.576 514.979 372.739 515.025 372.917 cv
515.073 373.095 515.096 373.277 515.096 373.463 cv
515.096 373.65 515.068 373.829 515.011 373.996 cv
514.956 374.164 514.872 374.324 514.758 374.473 cv
514.572 374.754 514.32 374.973 514.003 375.131 cv
513.684 375.291 513.358 375.371 513.021 375.371 cv
512.952 375.371 li
512.88 375.371 li
512.811 375.357 li
512.742 375.342 li
512.872 375.529 513.041 375.693 513.247 375.833 cv
513.452 375.973 513.674 376.043 513.919 376.043 cv
514.684 376.043 515.295 375.836 515.754 375.426 cv
516.212 375.015 516.442 374.408 516.442 373.604 cv
516.459 373.025 516.469 372.45 516.469 371.88 cv
516.469 371.31 516.469 370.745 516.469 370.184 cv
514.788 372.426 li
cp
520.142 376.197 mo
519.039 377.01 517.824 377.482 516.498 377.613 cv
516.33 377.631 516.166 377.645 516.007 377.655 cv
515.847 377.664 515.694 377.669 515.544 377.669 cv
515.357 377.669 515.161 377.664 514.956 377.655 cv
514.75 377.645 514.545 377.622 514.339 377.584 cv
513.795 377.528 513.268 377.398 512.755 377.192 cv
512.24 376.986 511.796 376.688 511.423 376.295 cv
511.161 375.978 510.97 375.641 510.849 375.286 cv
510.727 374.932 510.667 374.566 510.667 374.192 cv
510.667 373.987 510.68 373.782 510.708 373.575 cv
510.737 373.37 510.779 373.165 510.834 372.958 cv
510.965 372.474 511.228 372.094 511.619 371.823 cv
512.011 371.554 512.442 371.427 512.909 371.445 cv
513.063 371.445 li
513.19 371.445 li
513.317 371.459 li
513.469 371.501 li
515.964 368.024 li
521.263 366.679 li
521.32 367.67 521.38 368.665 521.445 369.666 cv
521.51 370.665 521.581 371.66 521.655 372.651 cv
521.749 374.202 521.245 375.385 520.142 376.197 cv
cp
f
363.574 357.13 mo
361.919 357.992 359.932 358.421 357.615 358.421 cv
355.503 358.421 353.634 357.754 352.008 356.417 cv
350.384 355.082 349.571 353.281 349.571 351.02 cv
349.571 349.524 349.958 348.151 350.734 346.9 cv
351.509 345.647 352.504 344.62 353.721 343.816 cv
354.709 343.125 355.841 342.591 357.112 342.218 cv
358.382 341.844 359.699 341.657 361.065 341.657 cv
361.289 341.657 361.508 341.662 361.724 341.671 cv
361.938 341.681 362.158 341.693 362.382 341.714 cv
363.149 341.769 363.9 341.904 364.639 342.119 cv
365.376 342.334 366.036 342.704 366.615 343.227 cv
366.914 343.49 367.128 343.784 367.259 344.11 cv
367.391 344.437 367.457 344.769 367.457 345.104 cv
367.457 345.797 367.203 346.427 366.7 346.998 cv
366.195 347.568 365.541 347.862 364.737 347.88 cv
364.269 347.899 363.859 347.82 363.502 347.643 cv
363.149 347.464 362.812 347.245 362.494 346.983 cv
362.269 346.801 li
362.045 346.59 li
362.201 346.521 li
362.354 346.451 li
362.728 346.245 363.056 346.026 363.334 345.791 cv
363.616 345.559 363.84 345.217 364.006 344.769 cv
364.079 344.558 li
364.091 344.348 li
364.091 344.031 363.961 343.787 363.7 343.62 cv
363.438 343.451 363.121 343.367 362.747 343.367 cv
361.737 343.367 360.839 343.77 360.056 344.572 cv
359.269 345.376 358.606 346.263 358.066 347.235 cv
357.841 347.646 357.639 348.059 357.463 348.47 cv
357.286 348.88 357.13 349.254 357 349.59 cv
356.849 350.001 356.71 350.47 356.58 350.992 cv
356.449 351.516 356.373 352.038 356.355 352.561 cv
356.355 352.717 li
356.355 352.87 li
356.355 353.562 356.491 354.207 356.76 354.805 cv
357.032 355.404 357.533 355.832 358.26 356.095 cv
358.523 356.188 358.789 356.259 359.059 356.304 cv
359.331 356.352 359.607 356.375 359.887 356.375 cv
360.097 356.375 li
360.28 356.346 li
361.438 356.272 362.541 355.866 363.588 355.128 cv
364.633 354.389 365.41 353.534 365.914 352.561 cv
365.97 352.464 li
366.025 352.366 li
366.082 352.28 li
366.137 352.169 li
367.203 352.561 li
367.764 352.787 li
366.624 354.823 365.227 356.272 363.574 357.13 cv
cp
f
375.431 349.997 mo
375.236 349.745 374.988 349.619 374.689 349.619 cv
374.5 349.619 374.296 349.671 374.071 349.772 cv
373.848 349.875 373.625 350.021 373.399 350.207 cv
373.305 350.282 373.217 350.366 373.133 350.458 cv
373.048 350.553 372.958 350.646 372.866 350.739 cv
372.436 351.245 372.089 351.819 371.829 352.464 cv
371.567 353.11 371.38 353.767 371.269 354.441 cv
371.25 354.665 371.232 354.885 371.212 355.099 cv
371.194 355.313 371.185 355.524 371.185 355.729 cv
371.185 355.842 371.189 355.982 371.199 356.15 cv
371.208 356.318 371.232 356.487 371.269 356.655 cv
371.325 356.973 371.422 357.257 371.563 357.509 cv
371.703 357.762 371.922 357.887 372.221 357.887 cv
372.688 357.887 373.105 357.725 373.468 357.397 cv
373.833 357.071 374.127 356.702 374.351 356.291 cv
374.408 356.197 374.464 356.108 374.52 356.024 cv
374.577 355.94 374.623 355.853 374.661 355.757 cv
374.362 355.552 374.132 355.295 373.973 354.987 cv
373.815 354.679 373.736 354.346 373.736 353.992 cv
373.736 353.88 li
373.736 353.795 li
373.792 353.234 374.001 352.707 374.367 352.212 cv
374.73 351.716 375.194 351.394 375.754 351.245 cv
375.734 350.666 375.627 350.249 375.431 349.997 cv
cp
383.351 354.371 mo
383.202 354.679 383.033 354.991 382.845 355.31 cv
382.49 355.926 382.056 356.491 381.542 357.005 cv
381.028 357.52 380.425 357.776 379.734 357.776 cv
379.455 357.776 379.187 357.734 378.937 357.649 cv
378.683 357.565 378.445 357.458 378.22 357.328 cv
377.493 357.926 376.636 358.393 375.656 358.729 cv
374.674 359.065 373.669 359.262 372.643 359.318 cv
372.404 359.318 li
372.319 359.318 372.231 359.318 372.137 359.318 cv
371.166 359.318 370.231 359.173 369.334 358.884 cv
368.437 358.594 367.652 358.16 366.98 357.58 cv
366.436 357.094 366.044 356.575 365.802 356.024 cv
365.559 355.474 365.437 354.917 365.437 354.357 cv
365.437 353.478 365.698 352.638 366.222 351.833 cv
366.745 351.03 367.436 350.347 368.297 349.786 cv
369.043 349.3 369.885 348.917 370.819 348.638 cv
371.753 348.358 372.715 348.217 373.708 348.217 cv
373.857 348.217 374.001 348.221 374.142 348.231 cv
374.282 348.241 374.426 348.246 374.577 348.246 cv
375.38 348.319 376.166 348.492 376.931 348.764 cv
377.697 349.034 378.371 349.442 378.95 349.983 cv
379.455 350.431 379.836 350.941 380.099 351.51 cv
380.361 352.082 380.492 352.673 380.492 353.291 cv
380.492 353.515 380.474 353.74 380.435 353.965 cv
380.398 354.188 380.341 354.412 380.268 354.637 cv
380.529 354.599 380.758 354.528 380.955 354.426 cv
381.15 354.324 381.341 354.161 381.529 353.936 cv
381.64 353.823 381.752 353.679 381.865 353.5 cv
381.978 353.324 382.099 353.123 382.229 352.899 cv
383.744 353.571 li
383.63 353.795 383.5 354.063 383.351 354.371 cv
cp
f
389.071 357.173 mo
388.154 358.174 386.817 358.673 385.061 358.673 cv
384.968 358.673 384.869 358.668 384.766 358.659 cv
384.664 358.649 384.565 358.646 384.472 358.646 cv
384.005 358.59 383.548 358.472 383.099 358.294 cv
382.65 358.118 382.286 357.833 382.006 357.44 cv
381.818 357.18 381.679 356.888 381.583 356.571 cv
381.491 356.253 381.445 355.936 381.445 355.618 cv
381.459 355.408 li
381.473 355.226 li
381.509 354.945 381.556 354.673 381.613 354.412 cv
381.668 354.15 381.745 353.898 381.837 353.656 cv
382.453 351.88 383.065 350.1 383.673 348.315 cv
384.281 346.53 384.883 344.759 385.482 343.002 cv
385.948 343.002 386.411 343.002 386.87 343.002 cv
387.328 343.002 387.79 343.002 388.257 343.002 cv
388.705 343.002 389.158 343.002 389.617 343.002 cv
390.074 343.002 390.537 343.002 391.005 343.002 cv
390.333 344.947 389.659 346.89 388.986 348.834 cv
388.314 350.777 387.648 352.721 386.995 354.665 cv
386.92 354.833 386.864 354.987 386.827 355.128 cv
386.79 355.267 386.771 355.385 386.771 355.477 cv
386.771 355.59 386.817 355.679 386.911 355.744 cv
387.004 355.81 387.154 355.832 387.36 355.814 cv
387.509 355.814 387.695 355.753 387.92 355.632 cv
388.144 355.509 388.378 355.337 388.621 355.114 cv
388.958 354.777 389.233 354.422 389.449 354.049 cv
389.662 353.674 389.865 353.281 390.05 352.87 cv
391.453 353.542 li
390.779 354.963 389.986 356.174 389.071 357.173 cv
cp
f
396.974 357.173 mo
396.058 358.174 394.722 358.673 392.965 358.673 cv
392.873 358.673 392.774 358.668 392.672 358.659 cv
392.569 358.649 392.47 358.646 392.376 358.646 cv
391.91 358.59 391.453 358.472 391.005 358.294 cv
390.555 358.118 390.191 357.833 389.91 357.44 cv
389.723 357.18 389.583 356.888 389.491 356.571 cv
389.396 356.253 389.35 355.936 389.35 355.618 cv
389.365 355.408 li
389.378 355.226 li
389.415 354.945 389.462 354.673 389.518 354.412 cv
389.574 354.15 389.648 353.898 389.743 353.656 cv
390.359 351.88 390.971 350.1 391.58 348.315 cv
392.186 346.53 392.789 344.759 393.386 343.002 cv
393.854 343.002 394.317 343.002 394.775 343.002 cv
395.232 343.002 395.695 343.002 396.162 343.002 cv
396.611 343.002 397.064 343.002 397.521 343.002 cv
397.979 343.002 398.443 343.002 398.909 343.002 cv
398.237 344.947 397.563 346.89 396.891 348.834 cv
396.218 350.777 395.554 352.721 394.9 354.665 cv
394.827 354.833 394.77 354.987 394.733 355.128 cv
394.694 355.267 394.677 355.385 394.677 355.477 cv
394.677 355.59 394.722 355.679 394.816 355.744 cv
394.91 355.81 395.058 355.832 395.265 355.814 cv
395.415 355.814 395.6 355.753 395.827 355.632 cv
396.05 355.509 396.284 355.337 396.527 355.114 cv
396.863 354.777 397.138 354.422 397.352 354.049 cv
397.568 353.674 397.769 353.281 397.958 352.87 cv
399.358 353.542 li
398.684 354.963 397.891 356.174 396.974 357.173 cv
cp
f
406.871 349.674 mo
406.704 349.544 406.458 349.469 406.142 349.45 cv
405.45 349.432 404.852 349.693 404.347 350.235 cv
403.843 350.777 403.459 351.375 403.198 352.029 cv
403.104 352.252 403.03 352.478 402.974 352.703 cv
402.918 352.926 402.871 353.131 402.833 353.318 cv
403.057 353.3 403.291 353.273 403.535 353.234 cv
403.777 353.197 404.02 353.142 404.264 353.066 cv
404.974 352.879 405.624 352.571 406.211 352.142 cv
406.8 351.712 407.104 351.115 407.122 350.347 cv
407.122 350.03 407.04 349.804 406.871 349.674 cv
cp
410.682 356.065 mo
410.104 356.833 409.299 357.458 408.272 357.944 cv
407.655 358.224 407.007 358.43 406.324 358.561 cv
405.641 358.691 404.945 358.757 404.237 358.757 cv
404.124 358.757 404.01 358.757 403.898 358.757 cv
403.787 358.757 403.684 358.749 403.591 358.729 cv
403.141 358.71 402.703 358.659 402.273 358.575 cv
401.843 358.492 401.422 358.384 401.012 358.252 cv
399.927 357.88 399.036 357.31 398.334 356.542 cv
397.632 355.777 397.284 354.871 397.284 353.823 cv
397.284 353.562 397.306 353.295 397.352 353.024 cv
397.4 352.754 397.47 352.478 397.563 352.197 cv
397.938 351.076 398.695 350.203 399.834 349.576 cv
400.973 348.951 402.189 348.554 403.479 348.385 cv
403.759 348.347 404.034 348.319 404.305 348.301 cv
404.577 348.282 404.843 348.273 405.106 348.273 cv
405.498 348.273 405.88 348.292 406.253 348.329 cv
406.627 348.366 406.973 348.431 407.292 348.525 cv
407.445 348.567 li
407.598 348.609 li
408.141 348.759 408.651 349.02 409.127 349.394 cv
409.604 349.769 409.852 350.273 409.872 350.907 cv
409.909 351.917 409.488 352.712 408.609 353.291 cv
407.729 353.87 406.768 354.291 405.721 354.553 cv
405.14 354.702 404.581 354.805 404.04 354.861 cv
403.497 354.917 403.03 354.935 402.638 354.917 cv
402.731 355.59 402.99 356.108 403.408 356.473 cv
403.829 356.836 404.384 357.019 405.077 357.019 cv
406.478 357.019 407.655 356.626 408.609 355.842 cv
409.562 355.057 410.309 354.066 410.852 352.87 cv
412.253 353.515 li
411.786 354.449 411.262 355.299 410.682 356.065 cv
cp
f
424.939 353.698 mo
424.869 353.88 li
424.439 354.759 423.962 355.538 423.438 356.22 cv
422.915 356.902 422.167 357.477 421.197 357.944 cv
420.616 358.206 419.976 358.407 419.276 358.546 cv
418.576 358.688 417.861 358.757 417.131 358.757 cv
416.949 358.757 li
416.766 358.757 li
415.682 358.702 414.641 358.492 413.641 358.127 cv
412.642 357.762 411.823 357.18 411.187 356.375 cv
410.852 355.945 410.604 355.509 410.446 355.071 cv
410.286 354.632 410.208 354.188 410.208 353.74 cv
410.208 352.879 410.468 352.063 410.992 351.286 cv
411.515 350.511 412.187 349.89 413.01 349.422 cv
413.552 349.125 414.216 348.866 415.001 348.652 cv
415.786 348.437 416.589 348.311 417.412 348.273 cv
417.523 348.255 417.626 348.246 417.72 348.246 cv
417.813 348.246 417.907 348.246 418 348.246 cv
418.711 348.246 419.383 348.329 420.019 348.498 cv
420.653 348.666 421.205 348.955 421.673 349.366 cv
421.897 349.59 422.083 349.856 422.234 350.165 cv
422.383 350.474 422.476 350.795 422.514 351.131 cv
422.514 351.229 li
422.514 351.328 li
422.514 351.573 422.471 351.815 422.387 352.058 cv
422.303 352.301 422.177 352.515 422.008 352.703 cv
421.803 352.946 421.56 353.123 421.281 353.234 cv
421 353.346 420.702 353.404 420.383 353.404 cv
420.256 353.404 li
420.103 353.376 li
419.934 353.357 419.762 353.314 419.584 353.249 cv
419.406 353.183 419.243 353.104 419.093 353.011 cv
418.85 352.861 418.655 352.67 418.505 352.436 cv
418.355 352.203 418.262 351.955 418.223 351.692 cv
418.223 351.637 li
418.223 351.554 li
418.197 351.496 li
418.197 351.44 li
418.197 351.011 418.335 350.638 418.618 350.319 cv
418.897 350.001 419.243 349.786 419.654 349.674 cv
419.542 349.638 419.429 349.605 419.319 349.576 cv
419.206 349.548 419.083 349.544 418.954 349.562 cv
418.798 349.562 li
418.646 349.59 li
418.492 349.619 li
418.335 349.674 li
417.683 349.899 417.118 350.361 416.641 351.062 cv
416.165 351.762 415.842 352.515 415.673 353.318 cv
415.636 353.487 415.608 353.665 415.589 353.852 cv
415.571 354.038 415.562 354.216 415.562 354.384 cv
415.581 355.114 415.776 355.744 416.151 356.277 cv
416.524 356.809 417.139 357.075 418 357.075 cv
419.439 357.075 420.609 356.678 421.503 355.884 cv
422.401 355.09 423.138 354.103 423.72 352.926 cv
425.038 353.515 li
424.939 353.698 li
cp
f
432.676 353.809 mo
432.63 353.895 432.587 353.983 432.55 354.076 cv
432.25 354.673 431.923 355.253 431.568 355.814 cv
431.213 356.375 430.784 356.879 430.28 357.328 cv
429.811 357.739 429.256 358.065 428.611 358.31 cv
427.966 358.552 427.223 358.673 426.382 358.673 cv
426.286 358.673 li
426.215 358.673 li
425.692 358.655 425.191 358.552 424.714 358.365 cv
424.238 358.178 423.85 357.861 423.551 357.411 cv
423.365 357.13 423.229 356.833 423.145 356.514 cv
423.061 356.197 423.02 355.869 423.02 355.534 cv
423.02 355.441 423.023 355.351 423.033 355.267 cv
423.041 355.183 423.056 355.096 423.076 355.001 cv
423.113 354.738 423.163 354.477 423.229 354.216 cv
423.294 353.954 423.365 353.703 423.438 353.458 cv
423.551 353.16 423.659 352.861 423.761 352.561 cv
423.864 352.262 423.962 351.955 424.056 351.637 cv
424.149 351.338 424.247 351.039 424.351 350.739 cv
424.452 350.442 424.561 350.141 424.673 349.843 cv
423.466 349.843 li
423.943 348.498 li
425.149 348.498 li
425.244 348.217 425.336 347.941 425.43 347.671 cv
425.523 347.398 425.626 347.123 425.738 346.843 cv
425.832 346.582 425.925 346.315 426.018 346.044 cv
426.111 345.773 426.205 345.497 426.299 345.217 cv
426.916 345.124 427.533 345.034 428.149 344.95 cv
428.765 344.867 429.383 344.778 430 344.685 cv
430.297 344.647 430.606 344.606 430.924 344.558 cv
431.241 344.512 431.55 344.47 431.85 344.432 cv
431.737 344.769 431.62 345.104 431.5 345.441 cv
431.376 345.777 431.26 346.114 431.148 346.451 cv
431.037 346.787 430.92 347.129 430.798 347.474 cv
430.676 347.82 430.56 348.162 430.448 348.498 cv
431.961 348.498 li
431.456 349.843 li
429.971 349.843 li
429.84 350.235 429.704 350.632 429.565 351.033 cv
429.424 351.437 429.289 351.842 429.157 352.252 cv
429.007 352.665 428.869 353.071 428.739 353.473 cv
428.606 353.875 428.466 354.272 428.318 354.665 cv
428.279 354.795 428.247 354.92 428.219 355.043 cv
428.191 355.165 428.177 355.271 428.177 355.365 cv
428.177 355.534 428.214 355.651 428.289 355.716 cv
428.364 355.782 428.466 355.814 428.598 355.814 cv
428.71 355.814 428.836 355.786 428.975 355.729 cv
429.116 355.673 429.261 355.6 429.411 355.506 cv
429.647 355.337 li
429.887 355.141 li
430.241 354.823 430.533 354.469 430.755 354.076 cv
430.98 353.684 431.186 353.281 431.374 352.87 cv
432.801 353.542 li
432.764 353.637 432.723 353.726 432.676 353.809 cv
cp
f
438.829 346.857 mo
438.53 347.09 438.212 347.263 437.875 347.376 cv
437.679 347.418 li
437.511 347.459 li
437.362 347.479 437.208 347.498 437.049 347.516 cv
436.89 347.535 436.735 347.543 436.585 347.543 cv
436.174 347.543 435.763 347.492 435.353 347.391 cv
434.941 347.288 434.578 347.114 434.258 346.871 cv
434.016 346.686 433.825 346.465 433.684 346.213 cv
433.544 345.959 433.474 345.704 433.474 345.441 cv
433.474 345.293 433.501 345.143 433.558 344.993 cv
433.614 344.843 433.69 344.704 433.782 344.572 cv
434.044 344.236 434.386 343.983 434.805 343.816 cv
435.226 343.647 435.662 343.545 436.11 343.508 cv
436.264 343.508 li
436.417 343.508 li
436.625 343.508 436.829 343.521 437.036 343.549 cv
437.24 343.577 437.435 343.62 437.624 343.675 cv
437.791 343.732 li
437.931 343.787 li
438.324 343.956 438.683 344.19 439.011 344.488 cv
439.338 344.787 439.501 345.152 439.501 345.581 cv
439.488 345.763 li
439.445 345.973 li
439.333 346.33 439.127 346.624 438.829 346.857 cv
cp
440.666 353.798 mo
440.617 353.882 440.566 353.972 440.511 354.065 cv
440.212 354.665 439.885 355.247 439.53 355.81 cv
439.174 356.373 438.745 356.878 438.24 357.328 cv
437.773 357.739 437.226 358.057 436.6 358.28 cv
435.974 358.506 435.324 358.636 434.651 358.673 cv
434.526 358.673 li
434.4 358.673 li
434.12 358.673 433.84 358.655 433.558 358.618 cv
433.278 358.581 433.007 358.514 432.745 358.421 cv
432.036 358.178 431.531 357.798 431.233 357.283 cv
430.933 356.768 430.783 356.2 430.783 355.582 cv
430.783 355.376 430.796 355.165 430.825 354.95 cv
430.853 354.734 430.895 354.514 430.952 354.289 cv
430.99 354.177 431.022 354.068 431.049 353.966 cv
431.078 353.862 431.11 353.753 431.147 353.642 cv
431.447 352.779 431.741 351.922 432.032 351.069 cv
432.319 350.217 432.615 349.36 432.914 348.498 cv
433.363 348.498 433.814 348.498 434.273 348.498 cv
434.731 348.498 435.193 348.498 435.662 348.498 cv
436.128 348.498 436.59 348.498 437.049 348.498 cv
437.505 348.498 437.958 348.498 438.408 348.498 cv
438.296 348.835 438.179 349.176 438.057 349.524 cv
437.936 349.87 437.819 350.212 437.708 350.55 cv
437.464 351.225 437.226 351.904 436.993 352.589 cv
436.759 353.274 436.531 353.962 436.305 354.657 cv
436.25 354.787 436.204 354.923 436.167 355.063 cv
436.128 355.206 436.11 355.331 436.11 355.443 cv
436.11 355.557 436.152 355.65 436.236 355.725 cv
436.32 355.8 436.464 355.828 436.669 355.81 cv
436.819 355.81 437.007 355.748 437.231 355.625 cv
437.455 355.505 437.689 355.331 437.931 355.105 cv
438.269 354.77 438.543 354.412 438.759 354.037 cv
438.974 353.662 439.174 353.269 439.362 352.856 cv
439.6 352.969 li
439.837 353.082 li
439.987 353.157 440.14 353.226 440.3 353.292 cv
440.459 353.358 440.624 353.438 440.792 353.531 cv
440.752 353.625 440.711 353.714 440.666 353.798 cv
cp
f
448.85 349.997 mo
448.655 349.745 448.406 349.619 448.108 349.619 cv
447.92 349.619 447.715 349.671 447.491 349.772 cv
447.267 349.875 447.042 350.021 446.818 350.207 cv
446.725 350.282 446.635 350.366 446.552 350.458 cv
446.467 350.553 446.378 350.646 446.286 350.739 cv
445.855 351.245 445.509 351.819 445.249 352.464 cv
444.987 353.11 444.799 353.767 444.688 354.441 cv
444.669 354.665 444.65 354.885 444.631 355.099 cv
444.614 355.313 444.603 355.524 444.603 355.729 cv
444.603 355.842 444.609 355.982 444.618 356.15 cv
444.627 356.318 444.65 356.487 444.688 356.655 cv
444.744 356.973 444.841 357.257 444.982 357.509 cv
445.123 357.762 445.341 357.887 445.641 357.887 cv
446.107 357.887 446.524 357.725 446.888 357.397 cv
447.252 357.071 447.547 356.702 447.772 356.291 cv
447.827 356.197 447.882 356.108 447.939 356.024 cv
447.995 355.94 448.042 355.853 448.08 355.757 cv
447.781 355.552 447.551 355.295 447.392 354.987 cv
447.235 354.679 447.155 354.346 447.155 353.992 cv
447.155 353.88 li
447.155 353.795 li
447.211 353.234 447.42 352.707 447.786 352.212 cv
448.15 351.716 448.613 351.394 449.172 351.245 cv
449.154 350.666 449.046 350.249 448.85 349.997 cv
cp
456.77 354.371 mo
456.621 354.679 456.452 354.991 456.265 355.31 cv
455.909 355.926 455.476 356.491 454.961 357.005 cv
454.448 357.52 453.844 357.776 453.154 357.776 cv
452.875 357.776 452.607 357.734 452.354 357.649 cv
452.103 357.565 451.864 357.458 451.64 357.328 cv
450.912 357.926 450.056 358.393 449.075 358.729 cv
448.093 359.065 447.088 359.262 446.061 359.318 cv
445.824 359.318 li
445.739 359.318 445.65 359.318 445.557 359.318 cv
444.584 359.318 443.65 359.173 442.753 358.884 cv
441.857 358.594 441.071 358.16 440.399 357.58 cv
439.856 357.094 439.464 356.575 439.221 356.024 cv
438.978 355.474 438.857 354.917 438.857 354.357 cv
438.857 353.478 439.118 352.638 439.642 351.833 cv
440.165 351.03 440.856 350.347 441.714 349.786 cv
442.463 349.3 443.303 348.917 444.238 348.638 cv
445.172 348.358 446.135 348.217 447.126 348.217 cv
447.276 348.217 447.42 348.221 447.562 348.231 cv
447.702 348.241 447.845 348.246 447.995 348.246 cv
448.799 348.319 449.583 348.492 450.351 348.764 cv
451.117 349.034 451.791 349.442 452.369 349.983 cv
452.875 350.431 453.255 350.941 453.518 351.51 cv
453.778 352.082 453.911 352.673 453.911 353.291 cv
453.911 353.515 453.893 353.74 453.855 353.965 cv
453.817 354.188 453.761 354.412 453.685 354.637 cv
453.948 354.599 454.177 354.528 454.373 354.426 cv
454.57 354.324 454.761 354.161 454.948 353.936 cv
455.059 353.823 455.171 353.679 455.285 353.5 cv
455.398 353.324 455.518 353.123 455.648 352.899 cv
457.163 353.571 li
457.05 353.795 456.919 354.063 456.77 354.371 cv
cp
f
469.876 357.173 mo
468.894 358.174 467.544 358.673 465.826 358.673 cv
465.712 358.673 465.601 358.668 465.489 358.659 cv
465.376 358.649 465.265 358.646 465.153 358.646 cv
464.685 358.59 464.238 358.477 463.806 358.31 cv
463.377 358.141 463.022 357.869 462.742 357.495 cv
462.554 357.235 462.418 356.959 462.336 356.669 cv
462.251 356.379 462.208 356.085 462.208 355.786 cv
462.208 355.637 462.218 355.488 462.237 355.337 cv
462.255 355.187 462.274 355.047 462.292 354.917 cv
462.349 354.618 462.429 354.319 462.532 354.02 cv
462.633 353.721 462.733 353.44 462.826 353.179 cv
462.843 353.123 462.881 353.03 462.939 352.899 cv
462.994 352.768 463.06 352.618 463.134 352.45 cv
463.154 352.357 463.175 352.267 463.204 352.184 cv
463.232 352.099 463.265 352.011 463.303 351.917 cv
463.339 351.769 463.372 351.623 463.401 351.482 cv
463.428 351.342 463.443 351.216 463.443 351.104 cv
463.443 350.956 463.409 350.829 463.344 350.725 cv
463.279 350.623 463.171 350.572 463.022 350.572 cv
462.834 350.572 462.621 350.66 462.376 350.837 cv
462.134 351.016 461.854 351.32 461.537 351.749 cv
461.087 352.385 460.704 353.071 460.387 353.809 cv
460.069 354.549 459.77 355.299 459.49 356.065 cv
459.377 356.421 459.265 356.771 459.154 357.117 cv
459.041 357.463 458.929 357.804 458.817 358.141 cv
458.761 358.266 li
458.704 358.421 li
453.491 358.421 li
454.051 356.777 454.613 355.137 455.172 353.5 cv
455.734 351.867 456.302 350.226 456.882 348.582 cv
462.097 348.582 li
462.041 348.75 li
461.985 348.917 li
461.901 349.115 li
461.843 349.282 li
462.274 349.04 462.756 348.83 463.288 348.652 cv
463.821 348.474 464.368 348.358 464.927 348.301 cv
465.022 348.282 465.115 348.273 465.208 348.273 cv
465.302 348.273 465.395 348.273 465.489 348.273 cv
466.031 348.273 466.548 348.361 467.044 348.54 cv
467.54 348.717 467.975 349.011 468.349 349.422 cv
468.59 349.685 468.769 349.974 468.881 350.292 cv
468.993 350.609 469.049 350.935 469.049 351.272 cv
469.049 351.347 469.043 351.431 469.036 351.523 cv
469.025 351.619 469.011 351.703 468.993 351.776 cv
468.974 351.87 468.957 351.958 468.937 352.042 cv
468.918 352.128 468.89 352.216 468.853 352.311 cv
468.796 352.497 468.73 352.688 468.657 352.885 cv
468.583 353.081 468.516 353.281 468.46 353.487 cv
468.385 353.674 468.311 353.866 468.237 354.063 cv
468.162 354.259 468.094 354.458 468.04 354.665 cv
467.984 354.805 li
467.927 355.001 li
467.872 355.128 li
467.844 355.281 li
467.802 355.422 li
467.789 355.562 li
467.789 355.655 467.816 355.735 467.872 355.8 cv
467.927 355.866 468.021 355.898 468.153 355.898 cv
468.264 355.898 468.372 355.88 468.474 355.842 cv
468.577 355.803 468.684 355.757 468.796 355.702 cv
469.021 355.552 469.25 355.361 469.484 355.128 cv
469.716 354.893 469.927 354.655 470.114 354.412 cv
470.263 354.227 470.395 354.038 470.507 353.852 cv
470.618 353.665 470.703 353.497 470.759 353.346 cv
470.816 353.234 li
470.872 353.096 li
470.9 352.983 li
470.957 352.87 li
472.358 353.542 li
471.684 354.963 470.858 356.174 469.876 357.173 cv
cp
f
487.874 350.012 mo
487.677 349.76 487.43 349.634 487.13 349.634 cv
486.943 349.634 486.739 349.685 486.513 349.787 cv
486.29 349.89 486.066 350.035 485.84 350.222 cv
485.748 350.296 485.66 350.38 485.575 350.475 cv
485.49 350.567 485.4 350.66 485.307 350.754 cv
484.878 351.259 484.533 351.833 484.271 352.478 cv
484.008 353.124 483.823 353.783 483.711 354.456 cv
483.692 354.68 483.672 354.899 483.655 355.114 cv
483.635 355.328 483.627 355.539 483.627 355.745 cv
483.627 355.856 483.631 355.998 483.64 356.165 cv
483.649 356.333 483.672 356.501 483.711 356.67 cv
483.766 356.988 483.865 357.272 484.005 357.524 cv
484.145 357.776 484.365 357.902 484.663 357.902 cv
485.129 357.902 485.548 357.739 485.91 357.412 cv
486.276 357.086 486.57 356.717 486.794 356.306 cv
486.851 356.212 486.907 356.123 486.962 356.039 cv
487.018 355.955 487.065 355.867 487.103 355.772 cv
486.803 355.567 486.574 355.311 486.416 355.001 cv
486.256 354.694 486.177 354.361 486.177 354.006 cv
486.177 353.895 li
486.177 353.81 li
486.234 353.249 486.443 352.721 486.808 352.226 cv
487.172 351.731 487.635 351.41 488.196 351.259 cv
488.176 350.681 488.07 350.264 487.874 350.012 cv
cp
495.793 354.384 mo
495.643 354.694 495.475 355.006 495.287 355.325 cv
494.932 355.941 494.5 356.506 493.985 357.02 cv
493.47 357.535 492.868 357.79 492.175 357.79 cv
491.896 357.79 491.629 357.749 491.378 357.665 cv
491.125 357.58 490.886 357.474 490.663 357.343 cv
489.934 357.94 489.078 358.407 488.097 358.743 cv
487.117 359.08 486.112 359.276 485.084 359.332 cv
484.845 359.332 li
484.762 359.332 484.674 359.332 484.58 359.332 cv
483.608 359.332 482.673 359.188 481.776 358.899 cv
480.878 358.608 480.093 358.174 479.42 357.594 cv
478.878 357.109 478.487 356.59 478.244 356.039 cv
478 355.488 477.879 354.933 477.879 354.371 cv
477.879 353.492 478.141 352.652 478.664 351.848 cv
479.189 351.045 479.877 350.361 480.739 349.802 cv
481.485 349.315 482.328 348.933 483.261 348.652 cv
484.196 348.372 485.158 348.231 486.15 348.231 cv
486.299 348.231 486.443 348.236 486.584 348.246 cv
486.725 348.254 486.869 348.26 487.018 348.26 cv
487.823 348.334 488.607 348.507 489.374 348.779 cv
490.14 349.048 490.812 349.456 491.392 349.999 cv
491.896 350.446 492.28 350.956 492.541 351.524 cv
492.802 352.096 492.933 352.688 492.933 353.305 cv
492.933 353.53 492.915 353.753 492.876 353.979 cv
492.839 354.202 492.783 354.427 492.708 354.651 cv
492.971 354.614 493.2 354.543 493.396 354.442 cv
493.592 354.339 493.783 354.174 493.971 353.951 cv
494.083 353.838 494.195 353.693 494.307 353.516 cv
494.419 353.339 494.542 353.138 494.671 352.914 cv
496.185 353.585 li
496.073 353.81 495.943 354.077 495.793 354.384 cv
cp
f
507.468 343.999 mo
507.627 344.296 507.726 344.606 507.764 344.923 cv
507.764 345.049 li
507.764 345.176 li
507.764 345.662 507.614 346.105 507.315 346.507 cv
507.015 346.909 506.568 347.166 505.969 347.278 cv
505.858 347.292 li
505.745 347.306 li
505.632 347.306 li
505.52 347.306 li
504.867 347.306 504.335 347.092 503.923 346.661 cv
503.512 346.231 503.306 345.755 503.306 345.231 cv
503.306 345.133 li
503.306 345.035 li
503.344 344.755 503.451 344.485 503.629 344.223 cv
503.806 343.961 504.073 343.747 504.428 343.578 cv
504.357 343.578 li
504.259 343.578 li
503.679 343.578 503.189 343.854 502.787 344.405 cv
502.385 344.957 502.054 345.568 501.792 346.241 cv
501.625 346.671 501.473 347.092 501.343 347.503 cv
501.212 347.915 501.109 348.241 501.036 348.483 cv
503.616 348.483 li
503.139 349.857 li
500.532 349.857 li
495.373 364.855 li
490.354 364.855 li
495.485 349.857 li
493.831 349.857 li
494.335 348.483 li
495.99 348.483 li
496.045 348.297 496.101 348.115 496.157 347.937 cv
496.213 347.76 496.27 347.586 496.327 347.418 cv
496.606 346.597 496.924 345.834 497.278 345.133 cv
497.633 344.433 498.212 343.82 499.017 343.298 cv
499.522 342.98 500.142 342.718 500.881 342.512 cv
501.621 342.308 502.372 342.195 503.139 342.176 cv
503.251 342.176 li
503.363 342.176 li
504.016 342.176 504.653 342.255 505.27 342.414 cv
505.886 342.573 506.408 342.839 506.839 343.212 cv
507.1 343.438 507.311 343.7 507.468 343.999 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Diana) ()
%%Title: (Brunette.eps)
%%CreationDate: 8/13/2010 3:01 PM
%AI9_DataStream
%Gb"-6Bj9=adk5r1YNs>\E+TA`1_2haAD&.P,U%`_"#7fGK<^8MZC\]Nc>Ppi=*8;_jWSEAGOMrsZ_J@)X4:K]<F'`KF\B;m\(8=^
%STK0j[JkY6.L$o2kZ%])](*hs]2(JkgV[KSWb&_Yi,LohCAD:'Q-F%T)CDVcpKQ79mG;N+cu6=I_mnUk%u)$gpfFe'H/:ZY1X4't
%G.66+ZVp*I>8MBU[-JbZSSgOR%ka?HMH;[Fcp$HIh[Ja!C&l#Lo%dWQH[X?!VsE(b]9dVgaCkDqro9Y7)A0O0.oZ(dVj8]"`b8>;
%5.tj+FbZYWF4BIK^+?$o[-L;]#OSRhS=mm#*BKMMA>S-HD-hEV6;8c,7DFkK.qiCgo(!,66bWnD1ANWR+b,nG>+gp6'E>CRPJ?(#
%X(#-Ml">L\N]o"ni#*9MV:1aA^msTg,tgoWG^.lT]]qCFD&0,d#$!#Zh25\[<BE%MaV'">ab_ZR1TH1@KVU*mc#c&q&;:BWRh[,(
%gd#/0ksYD]Vu>dJj[m(0dN0ga7t]2TkJ'R+Abq&eYHPS*_4+bDUa-lGL*EJWrKDD+QZ5Aa[gBV.3QF?aNPjo:X?@bmmWYiXUl@uS
%k]8D[0DCpMg4NWX0<a*C_u<jeH-Q!ZWaQ`^-+'%#&oH1j4MP@Z^/YJk<2cBm1"EI"oVr-QLW4Ep5304L$N"kj3U?;q1nFWncCf6A
%Bec'C+$>j(OSa_-UIZ^9N(33+*eS/I`QtlV%&<[s5kT,AIXQLsCNbMb+XrC>C^3*\RM<G]F4;J;E%F3r=oG6rq_d@^7cQFD)a?Ir
%5Jn$sj&hZ%2SO#IB5JT#D-P:4$"#<OGoisto/uq=2:"WIcV"o,.&i>gT;WFO5JB5g;(W2R%DUjLWl6]m`A'!)A"8Bce4C:C9bPe4
%bEE&DP!go8U4m-O8G\RW\5]*0D7U]oW.o<N-`UT[HF.]&K>LF6_4^:]a0+)=(Lp_FM8(_mr'XK#/86#T_G;47IR,^.KjKJ2634)p
%B_[EF8V/]L,plqX/\DcuiMTp1UR(ueq*LYEcbsTrkpl67eM'Jj6rP:#)7c89K#97?L,!F7$Z"g4N"J;E(Bu:6J=h^D']CF>@>st1
%_A%,)jpD:U;sOJuY;Jn0:.Q)UUREl4o0u2&"(:,B2!J/semagmqB,!1J6GGt5e^Jm/uLEnr'WEiFc92m+rB8el<o-a\^kdaPD"A4
%LM48"B<=!on!J>s),U`(8[N;fqa-qE?@!CL1%AF$H@/%CWp0MZH"fOhb<JG.9N9DUOhEG>RRm4GW,afnjVk^8ce`K0BkCrJ5Vucm
%JP6aQnk>PFbg3)eH(@M/1hh.(jV^]J\XI'bZSX5"R\mq$n?#B\WW$%dSBAS-TB"#MfsgmSb?\2,Z>]R%qsnt)/cUDfrXOOepH\\8
%+utp:bJ.4Trm&7>+'i3V92YC7ru)@B48Y=n7f#p6H,pO]7DA?%r_'s[7a$W/2lR`^'Z?.1,k=MR5&mC4'7>^g&h,G\O+50p9+u\u
%^=DSFHe6b89H@!pcu17%pZldloS<;$n>-1=iX:pkiFLhnq;_hEJ#!Cb4PsmY7]lurjQ"ihMV9le&9$W#b`arCj-ktV3FBqnijTQU
%3(%^Rd%i0e/)kt#h$@QXGqLK+>V?%-`;'_N;YjA]3UR)s4WoXXN)o(\H?*L;kNWcC/UT>!0<"'QO6XF"D5FnT^skK<A?`Xm2NLdZ
%)?7uVfWeB:4O6s*eJV!FAb1j@*R']E4EL$sT9T*W]q0()TII&/?*mb3A<-F67\W:iMfF++jlJsaW/1j2m,Y99_:hTR[Z$nOm[Mb(
%=>]>j>c$!4ds7KcAPqJMF&V'7<8IJBS0YhmU<TDb[5J]r:<a"_jjNr_@BAT.%+6u2(`dV]V#:)KS/ra``Z?F9Cs./Ck4Vbs/rY3:
%a'B'6BDM0?&C@\>%XO)Ke+GgV@V)W=BBZ7`:A)2W,0^?=pG.0Jhlc'E<eETMeY!EbDY_4rQGOW4T>p\Yh")NK.sV]t9nm]8A_IQE
%XaitQK]>X3q69jDkForqqppdA<,sYDkkW4cRECIsIN=p_dDBZn37MKA[@+&T;\WFJ&%sU3F)t'3*kU^VY?Q-MOapF7+!55a!<<Qo
%k2uGt)_7AZjTQBCe)%!c=Dg)4[gJXd!p4egY2qbK"+suq#BT;1F@_SB#j$ejG8C=W8_IKZlXD3*5=L#gb?ZoErE>%YA7I8oOK"]:
%AgZUu>i_^/ZEYST1LB7d2aDU-7kPgr=I2HuI]fhHcT'S&0<F8Fginlm<*EVFFiu#47l1@(^>guDOohsM>VBd&p-2J#WB"3bClE`O
%6Kp3&(b1O&TIQ8re7],1E8@EWfrsp7nT\Q?J@pj(Rb("$*r#,E;&.bN1\0R^RdfEZe+\5C%Xel#p1lLH>/92lYGKsEq7(H<;srtl
%bt8So0>MK[Q=pO!"O_P3Ee,*r:`1IlNY9P)4U)$8RQb>bk&F[JIT!lB9\AkYOWjJXIp@p$Nj$t[F@5&;/C"NA8-6*^*b7$;-70CL
%I[[-Lqbj<F"_1QTD=Kal7u/'*Wkq>XR,SW4%b]PQ1`^'-"GS'F@j#l%XdnSM:[6i$,*/W?m\5`+:)TRPG6(E+,Y3q\.Xe&4:^gr*
%j75I"-8K9j9\8hiT')>]4@[fR4b_tVfZVg-q$eldZ@W`CeKg,.#Z5N`BAtWQ#6-eLV^=**\u$9i?c]sG)XqIF0NB?KKs&B-;"G;c
%+cXK?SAuE[7^*9e%TOZVK8XbEQ"^*>+>f'(Af1#ro6$hR[_r6Pg*K5\)d0uoa9m^,),rAd3=M],\X8g!G'mP+`_FK\$A#$.VP_22
%K3G(F@Oplr1ncaZ5S.cXb0AX+]"qp;"X@TEA^ZNJ9V"^s:<pRfhjB[FlN@9@/2GWpG`@RERdfpqlo_!W.mpo,6T;qg&=/o+=j"sG
%MW5IDnVkQkkBuF)NZ9V?50SBE1$!%*s7%93RqaF2mec">4>*5)gX?j@.IA*O;E#N2C!C8bR5e&9$bt]5U=D8!a-tIn,,+ldEPJ1#
%-#,5EY^b8$B+6ShVP:-MOtDF"7L$LJ.+RHH1n2!(^7J&Rl+>)K9`&A6:NAEi14q`,(="V`q/:/pPR%rBS!dtGVG2Z$kEZ@j!K@kQ
%#FPi:bF?fM5#&dJg[_t2\n&?=RU]hJZI6%-P=YnO6380Z@;i0U0BAHY3RN160MKW&.u_/ZHC:/=Vk\`$D.j!G%e9.QU+2Jcl_[fo
%,]Y\Z\g83:?-N>Q3AX6DA*kV1*#-Q.;G?[ZKs[L:X1>JQ2iEN(<[$#h79!@&5s@sG(l7$9Q?0(JI)6\A#=FfnV9/2*]pJP`8HZ7h
%Y&ZjO$$@qkQ)01[(-r3O79kJ58#7i^7ujIOVGs^=0b^Z8O;X,LZ.D]Oq6:44BI&@OThjZ#4dAEL_^TD[122duXf=,#^J?=parC&X
%)=)s6/7Fb0Cl+MY91k[VfkE)*2j?3)A5&YQ_Ff3?Z(e3>6J>-4>X83'P]i5e3Mg"P=X3$H%HsaD-YtCP.oYZVo?;`Z0%/6#V4EbP
%)$b)D8o([tLuS[Q./)5Q]XU64at^Rl`-GrmRPgOC>:4_LoKN'oE+$\FaGUJ34`l4/!*"VJ@Y6g[ArM3=1F6fn3O?o:@h(UD3I>aO
%Z-e)(6+VFFqMU>unt?Gjl.k.e6^_C7`f/GAh-qt76fr4\h70U6&-8.%81GMrm`nb[&pQ)n]pME"m%\]f/iQdt6hA"2C>t.L)D:tg
%,Fm\t%B,bU8KQuP<AK7k$`OS!'$$)82ZhGSDR]mQ"u[XhkLZZVi1+BSjU6Q9?58cGZQW#re:lD,n=@(e(t]SeM2c."0SFhO"u)Xf
%?5!\s^[jTHp=UR)!F*SO)R:H-)5;G/@1Yp/D%lGO3lNij)(>tJ$%=8tSk$:(=lM2pWlE3FPP$^UJAN`ReN90&"%>PVG/&@JO.f/s
%ooR]9DBMd8F]]e7P<.,pAMM+KHZR,dX%N1X5nm\15cQ`R=<Ro==.-7O'@%EF&JXiW_]e8mNsZ;nApG$M7rm%=bV<u_'6^l&9e</]
%b^8i:kS%'cp5ohNYUpNY?)k?:3.?f_'^(kTco(KqK6V>:)MZ5Ra_@3qP)0K,e[$Wn%c\rb6NC8Dg_\2357#R*rTXEFp03mb!62To
%[7L?A(L(r%JnuLTQ]Io1#ud8DDF8GR^@7J_,4g@GPJT)/.Ts5JUt^,q5p5-j;a\\<qLAtie4%6(9O062&p,j?Ybt1L0l&!OaRW:`
%CP8$dMCJ7U$rFd=Em,@k.-uj=7(hZa2+!WQ[U[Q47i,Y>H\MkD$oNqmh&)6WL/Q"\0FNJX`c3KK<T_ApB-<**2]MXIP&fQE=!s/o
%o:i&o7@O#_:p&e&a!]'kpI+HR=dK2t4?GuK=@l((TjEpjh=n<tk!'[mdoJDC;cc:%KaF1&Om4c6$f[sh+jXrF>VGTgcq@QFSd;[I
%o[M`U_0,iVc%$,\>/r-*@rpPdjJF*EKD'"+MUoaOA;D1rT!L$GT!8J_BqQftBjp@ESqmkg@8=_mBmPrh:FAgEQE*8EV7/Ri(<fk2
%M;HEs"smHg3Eo0o"L$Um=A]QV\<MUfq07iEd[?+%Q)X*e0Io)HZ[@4fZ\gaZPWM;^8p^+T!5Q&N%F_s*HWYfgCd625HqMtc(,hDQ
%@!XsgjL$=!+&QIc:DV>%6O-t]-HHCa")uRf]>bUbeeq*W434j<0#VhlPW/YteR6A"JcC0Nc.kj]QK)JB>skgg//jIAh)I.6Z>-]q
%bBdnf/H]uo@9NXUc]99*_QkS&A(-hmGX1h)'2#=mm-MC_R+gJo:8R-<el7'QZ:]j*X9`'"m`[Z6/"N>k..(BJZWY_5%:j!a9/#=L
%9oYn.)lp`*XE;"S75A&gEjC0fC&bK8PuAQ`PT;)2?Mb'TVL">V#9^d/F_joJ3u,Bi5?`>,\J%^8=,t1gOV8JTn>kU_Go'/Fi:NDp
%VHDMsq1AuAc$@K;3!0")6$]KG$k+D2]l9EaC@AL2ltgI,T<O8+.0Kqb9Tq>q,gSk5Y.5s$EA]>?1;@[91X8c55gJ7T=\Oa4<mGet
%BE/Ora`%,^fZ"[d5FFY_Za%/`i!EWLUR#oQ)<\QRWPrilS`J4Ym'_i08HPh[fY>J;^s89<X.`l=H5LsZV:`_)V7\.=!#h*Iai@0R
%<q&B#DrjVTM;X7l[`jtrRE@t521q1F'rAW@3hVihj^j(oRnDZt"lEoA't9!CVoNe`e29+_2t@n8-C#oX="BCb1<P+kJ"`'$I\t"l
%*jBq0X='4U8fQ=9.5=k]W3"kQV0WrDAFiC75Bb<Brc=rWY.>BrJ&].l#^Tq@;;`_-W+q;WD$^SmYSGF8&Mn':U.eEsRZ#-"()&8E
%hXo862YD+)Cu\'`2R1'O`&-@9[UEcG[mXYa6rF-VZJo*]3DT<gdPa^C5G>6*erBR#6EY>M(m$df=pnJBS;IunBIr:\IT$X2gc$8>
%kE[k><Em/(N<=&b2OHQgY.=tR,S;_O.k^hG>m2jdXiUC-)kkGSQF,"Jr9pN^?(^,?@a/:EAuKJ<?%O]OZ<'Ipc$2H+`Q]9"Q,/Wj
%2K-dhWs1V/+cE]"Ui&o]rDMp=b*K7Z5-gFsmsfAT;IUDEKgYF<9OuU9AX7M>WYQ@U`c@?Tc_LoE.fp&flh%-OpZ5AK%G#VIrC]bP
%B5X=4M^`M+,h_mR%&B[l>0%>PEK&#/qo@@a)bN1t=nt.oBe(YOl>^Cs'O,<CA%`mi"UK.ZfN;IY/RdDD>:OOKS?o#V'G]3Chp$\e
%78dIO:CUaehc8B.KcOfqd(@YfQ>Fa%'><-4[sTO8gF78CP-N2>\])9q^k4B_.*fN3BOXYP5uifAM/Z`JSMJk:*-/5s>dY,6/SNr[
%FWE7T8o;Su,un/&`NbQD3*b_rHEett=X10mAU=g)+lRh"NR>To$"_T>Ub1`P<?r5m9=q.F:4WZ!O]6dnljPh8=!:^&aMZR8X]&44
%p*.86E1IYuQ#U/(5i87n@7)@VQraA']nL9[ek%KcD2K0i`H,(d'mH2F;smJOU;0q6C0J_SDKVul[DjYu.DaUE`f8fB=<>;YM%f#[
%6&DRO8/Nt:Ag]4'cbRZW5tYcp)9MtsZKj6kT<XoO(]k1c(L#PhMb9HdIdV'<U:e,d+>.EL6mT`C&&#ID^Ir8u`OS6ML@V?PJY@=i
%f#74ZEGT4(s%_,ki_TON;I:dF1%bNr(Bb&.Q?I0$W`b+<'&9Q+V]1pR>T=/Gd5p6j]'UWpYVKL$-SXq@]9qN%rXQ4QAP^nq*secS
%,(Quh!Td>aEDgX6NJfE'P-I#@>@:AYYKM/C-:=cWCpb!nQR'5VbcjCEbF(uU-in+=D)tPaGmg-m.-#a?U/Dkib8Hi(3pju_DRFd[
%?M]m8ep"YF`O5Jq"T?i(GXCD$>V<<?#KR9X9au*4hBP$TSTWp<6Kjsb[euU\Rd</bS__@.ehKh,V^Z]paNG]&1@n?QMXqIQaj0_;
%F.Gq;jlSI(e<=KU)40)0ZaKChH'7c]^@t]q9MoJn2cUt)1g(gQ"Ki8G:Ep*]Z0ku*Nl/SVgn%L4)o^QGq'm_?)R&sS2G\44N:ZYS
%m%a!&1oB)P1EI&(<a:bN)Q<-NLZuB&NnVgfoh;lPERs+*SE[NWQ7f+1of<c(a[+np01Fu`TpnlNGu'Z&]jl+gRHp71E1V)\Olq)f
%`//1=jdEA'=Hr[s"#8D!Q:0(52J%W0^S1+$:_2X_XTue'Dqc[;hc]6WfQ.FASBfcW)CqrMPH$>nm98$8BtU"9d)j5YBCf<Qa<Zm<
%VeJg$Rnlg1k^5G23T$[":Y:bK:@iN7U\n'?;M.jQ`6.8t35b=2r6;(^EC5lkArH2kpfu!6=?&3AB5)bXF,d&25oFfZ"J*l\:%6t7
%q4;p5A":bH&Y#iiV07<VTe8:V3D3R%5Q@*DE-pU'J5OT`9lbQGVIuO+jMQ(l;7(>#53Z?kbq%uF6FO$j]B=[$S=^[PQ)Sd>72C.g
%/7q5GWm,"F0kaP3itBi"Vm/pE!m[BcPIrP?pJ#>r%'[=)\L=D]+6B*HH:)Rp.6b7aEX:.DH3W]tII$\meNcOedouE#EN/fj7dgIU
%]N;kfrCaf)!7/9DVr@(TqVD.=3h-)ak764@l`1uqI"*b.HI8Vu3^#TFs2H-6jBQZ2hn>nN4+mP*eSai_J)cTdkbN^`Y3\);kET5[
%h)cK,=&bUc=cl@UFKb:7(KR#rX5u?9*rNT3mWUb1bI#*58c&<.9cX_4/K..@jmi(gCID7)K']t!lcuHB85oD10>X=UZ6pk<>S#.2
%L])Z\,uR`>Vp`COK99F1YN[=7>h/qHr:`)j2nRnkfq<V5hJ&7_?ZJ?tBZd`@FIRBAK6GfYs%2+Gpg-Lb>:d0;MMnC\/gddsGOtu'
%ST]<,F9ta5N:["k/%fGkEcBmJ68<4%\XJH'?Z2S1#F@I,i6k*`B=lp5apB1BBi9`TRY.YpVH11ZCCVhA,&Nf$dsdL^h3bV0ZE.4'
%Lb*2q19Rb8pqs/^H?m]E1MEA%aRF(HQJV7[c-,fPj\-Ch9[f]$b00U_344qhIseita4?57N:DD[Pf$*(Rh#C6)c#@2WC>SLm.'&`
%&b$C\&b/^S@\_4=K9!l@\9WPk592X&%NW'W`hUF1r>U6R!?E=(=<F]6Yr_/l,`4!TCt%@iiQ;Ur<^9/g7<HH`5?lW0XFs,&Du;n$
%D;2=$3]u/p,HsPI7Rq:Hm04R;%0hL<NoRX07u-O9:?Y)f`(o-&3!k>]pE2LLNS='i#i*e/\Zo@_)g!@D!g?0[l#N+t!TJHW(OD3F
%oAU^=4IXTGX-EK!n%nrr"sCuar-)*=HV+>`K2BYi;Lf`rP!PY70J3ZqjC!fqM#Wl"!r`<_=k#tL%K7V(%7n?6Z>`q^5"Qn?.FaS-
%)E7XdAO4b;WfR?I+pWK>Q:6G&!EiMM$&bXB8YS\0Op1C5T[%Ap_BieE=[]5G10M+2LQqi3M5*p-P3cT5J4GoO;h`IW.p@kgKj-J,
%96Af4IORFWT)nO:Un:LZT53*+`-dN3PMg">p^)rn\%l"V#/fNr?jL[fiiV@IHEJ+V3FnZkM;'b5lG@Q'GD!FXqJYs6cuVHa6(j5V
%c\8kg)sCeoUu:gFJ0\542uXq&aNUT\Zboc6"&dO0nWdpBWVZWRs8Du3`T_QX@'MThPOX-^_GO*i3'D$AM"h8+&b&*;3q;J(pi,J:
%pos"epjc96FQ*f"Y>,=o\l,:JU*HHYTYm\FCNqf;J2(o&;F)$hPqb:,[QmlG?aPDT;:OkC*?cF(hl,nlC#Y=3Op[ECa0[Uhr'jr+
%nHW>2a#2Nb)[CK[YnrV'Ln31YC!)Na0mJe>>.k^CHX<FM=:8k-*F?u:dpq!CHI:e2L^@V>coEsbMkVW\nB$a(a<c%=8(`6(0U!DC
%?6%P5#]JKqr3)/%E=&O#Y;:V4RbqW1-;QIXj%?*TE'20Z1*"74N8on^j#,uo6N#tI*+dnP*Du`X'Yd@%UQjO'4Dq'ef"<=Man(t3
%S`=i0KRW-=DWla3R7B%iJgBHm0n'fa5U6<4Y)ZU)20D=PTMC>J_Frjbn5D:r4OmVOAX].SE^RN"-r0S2*5:qJo2p':o3$-<nX@#5
%O"M@22fkMbST:7q005]Vo":P1H!fXHk.fJiQ2pI49D,tlj"i\D8ML18b2&iHJ>"C+K<RtX,n/idK[hc`9\7<<NbS>2TiTLAdcF4-
%mlN?.$Q%jrHq/\Jg=hYbXHFNF/\DYA1&Shlkni*:Au^UMH3(dgO?Th&oCsUc8;4!*QT?m\N.et''I^!3ZN*5mr.RFdi0K"E.OV[W
%3RCR3&lt^OO<[d;,goVCF=UsI*g1RLoQB*coi\RT%FRLDbE*](*4kHn3"<#U>"mYoH4Bh-Ss.1[bOICtdOUqH/0nN%Ok/&u%=OQ7
%,USLbKLe@3Ue)'\PZQ3HN>]*AdiM4.hI$EF2H!K^4KEJ'i%H3TijhGiRL4aSFUS<3>#RCQ@oeS[]G.Ete#:)TUBWr<NX-Tgp(c<0
%=5mC(DcdYb8!p"*!liJ.>S7BRgmer.Oc)<#.CTm;8)^ap&BCH7E'8=J@Hn%P(I1HIbSlt#4TskmA*!gpjT$93r/K4q_[H^J\[PMh
%WZA,qoV<=?CioQ\CZh5)\4]X.@EeBWh-u0ebYFFf,P5A"/2mhc9MF1bX's,^6URB??[P#'4oR(%s*q3m0h3PoP;"/gDThaM"ASXq
%22imOD4q7j1u*g-<;jTCoCVtJ[[8C&LGuZQ/k-%Ll7*Gdcqs6!9='#BOZ1CsFktq5IUTeS$Xrl=q2SS=+7e*?@f@Oo5klh_%1:Kd
%/^$>F#tJX-jWH&tR>B(9KE^*RQ32<J9=#+RgQ>VKNc7Qko6*L(aBP1YjqOpm/Jj+tc#>#(@VU,BC6ZR*,#"L0MJbGQJam/]OP,T3
%X@41lca3_K0n7;S/7L8!@a5[7nX&FhR(`9!m>/G0*3+NY8EjA4jJaJ&,D/20)P0:WN_MO;apG$e62s2[Is2[_B'CkDiiuW+\:GIk
%r4^I<f;WN3)$7p>+:/K"I/6r%<?/lE*Z[FQcS/n>RUV3[is^GAPOPWlaAie,b:4Z.@%i&L-RfH(H%S<f_$cV3K9<F@:bo8768ugg
%@%;bpFH)CmYYKfcPCAZ4Jf,.7%M0bfON3.7FUT^Y'+8m7AHYhsb6\*q*#Gnc/oMe(o8O"qBZ;C55t9,i$'4llT#ZbUTu,O\OZWc,
%Ap+e(JB39^3&maZ>V#:[]ENL:DhB`9d2VVAT*#E'B*j1MGW8Cm(^#m#TFhE_GJZ<$Q6*;L1PJSa:7is=XWd/'`e3Sl);Qb/VAb#E
%_<.@()3`@U8ol[95LlE#O$`h?`[a8n7-Z^e7/p9ua>g-U^_cs?s/hmlQN'*K^Sb/0\M-77/$Gdu9"^D.YEFh:3JU^8fiQ;->+?8U
%?73#a(T)Z%@]omK';W0=S^DMD[pbMh@SGu%[#:"ll'4\feAHXL8Y[KXV?TrAUdkp:";7\r";9k-6i7CL0,S%_RNad*P$mS_eN4,c
%@iej9'dk^Sr+rn^b;Eg5j!K8sT*ut/XMIJg#&/'NqM]AL,[,R>$G,Yec<D@7A'a'iLkI069]]NHic6@Y:CT-?8^^-s*=6n:nt'fc
%*:OM`%%CLhST#Vgq+qn6jJRFcUWYZ5jAAY+i'^4jZ`Q)kE<n.Ar1D/8>2)ZeVsukPCIZN/(:$\%8"m8X1DsOTY2jgo,L1OsECB>L
%\H-$d$@Kp9Thu*iL]_1'$67-H4r\itjOq&L;:Cn2)9^\'UJ&Xo)e"2SfdJZ02tT(D`)EJ()m>Pk`gi%">l$]gRJaa?o\'$2*%7)e
%n6lq\OFaZQp6NkU].S\e'`S7\j'NiZRo<5os$UW(**hmjD7\"XY`e,u/;;DUIE'gN\kX$IjN76')Z..^_'r0.3:8bFaBXsQr@63f
%;@UcK"cO/&Z\mGt2f_[:if=Q@WSEi<*.R,C,<fk$6=WcpeQ'=;!CC>t?n_`!@IqP%jIE%135qWMJB)U/Z\1Vq9'\p!QU@&%_s]Qo
%or7OA56m4th)]0tRH4W]DZ5k?0je-d/P+'Il:W/I@d9gJr0UUQS:hr\5S*j):-DR:>[06+ZlB(NF$MAh6P>+s!$VJ5>W/UbJg-n?
%H8V!EOM"-=<76Ms+`GHU<?SKbnqNrU/F<k?(_$!9<$67:.NE_YlL7BrOF!.?apruRTrJ^),L?\'QnF4MQ\7kP$@an91'e#S710#J
%n58[&"$ha!A:b[!.:2#35TgMc_Xoo`Tang&m$coRTFi#.1/`TJ+pe\dq55O%@HVS"n!<faV?a;&Eg\L*,U4aJ$VMcGQPMYTq.,8]
%%Zanp!)WKZ*Ae=B1$*'UT*.FD"JABe.0*r@_Y,YkgX@H`LI64fhZU%/Un-U,C/I#k$dt#V>Cab`!^[)gJEJ8s-iik#<@:gg_Y-Qr
%=Mb-V)_=F/;EbPd`c+OplS+t='VH(0A[3q8XN;%nK*IX;<,_oE49jEa_cYS9#sjM:p`W95g<'P.G(iC+VqW!,5Ze4O'^S@2EL](!
%%6lZL&Qc&!#l2`p*O@OS]&T;J:*GJ(jLeF:gbLm%hW0f?c4!VSW+6Gk:bOC5R-*nd]#?*<6flB.]Hkg+Emc2XPI&-K;SF^M]5#1>
%;;2*Cp&K^bY$+be<?=>5Fc^jh("Z?No\7`r!/Dqp+3DUJ8Ke1dP7Xr(!](tc'OW&VE215AN9AJG'IrTUF4sR>d*Z)n=!DZic>bhi
%hf8(!hMuRk$,2Y!))ir==la6;B%@>Pc#K".RKqAS+\#><o=Q+,0(YF:??96==E-;BC^Ah?F*WL@'1_Y?m1o9)9XF&"1R2,G;S3N?
%g/GFeq(mT(!e4a<%3M7(JY,:TqNY;`acHr+CfL;`RM&0WV9<b&J^$cie2aRONQtP'H&Z)]X:'VA"^q4g2>MITX]qA5F3X6/4[s(J
%i&8cpN'l?I50Hcqf&fp\B4Nu[PsJR_CMV(P82_ti*JpUYXE#^,JG%GgXSmo7[h<E<P&i4<V,DT='I`ggS529QFY'*@8b4tE@U]?d
%Tg;r*B<8C4?qkW6kGt[@&BOV]V#8@="#p3Mq.2>-KPO>KN)&t\H3>/QB)/lO1b&&k6(?r;FQQ29<uGf^E[)$7\Z%,MQ,0jRKuujc
%H<J1O_V^54:7.%b#EX%V.9k>Y(`qd[94#2u+do2)?9PAZkWO6Pb$6\M,%GAcJ4KnO"G[[*C8<O3<"K>N&F_%ka\ds)Ir'j'!'UjH
%4AIKQ0,7`%=^Iof)CMio78Q=$13JSq$pe$F@+$@`ZQq"r_Q1p8bXTke_A$X.ctVotOhB$$kfA_u7TV,$^A_$e7ld+so95.]*Q']V
%o6Xt=8&P4@k@LrJCIA;CVI[$QG9>mhb`qR_YmUrgNHAf8EOdN(E$B(\m8lo^+@fq\>t\>7Ya3HK$>_7[*:Q""4-T6(oB@T?#UXGe
%&BWF)\25#R:iH/cdr1e@%<Klf>5$HAajQA8e)46f-<5r=-V;u`8ruogno7)R/=2`JSH_\1U1'-O-3pYU#1d&&k/k!d(PVf$`>+X%
%]7_V,,O:KHZ(8&8PdNB^,tID_c6YhuX"Z`^s*Q"9j]L*rA?5M_MmPV"G0tN^I*!ZDlB?1iYh#a2-;b(^&K,S^#h_VY5Qpl&F@)`Z
%8,7@5;IE8e(oT4HZM>::XF(BcJNs=n3C%<"1-.F'k_-a.q$dr9>an'Tc\1K.WiLnllbuap6WQj(?qZ)p,)?"*1q!\2/A9lBoQHEY
%f7\/s)N5.q^Ue:IHMq!Ms(@DmWb`5MrD[^-2Qs`f0?]XR(PH!CX&S8TF*Z;QVj34`9==AP2i$=9haGTP4G,dK$VrF6LMG)(O7s6h
%8H8O?^Riklhl5tgMGne,q=MY)SD9cYe1C>[G^3T__qD]m7qJ5>`@j>)@RY02o=;3bm']EZ[L?[Gpc%DCqXg3p(legF;5`=KZHOkE
%s'K/>n\gDOp070gA`TYXrgoAJW6p3--H@Z;rh<;XL7FKt-IL?CUW]XAn^;,7.&-&+ehq=r<O\D<Xm6$:%fYh%^n0]HQR[7[I.'N(
%Ucmi3AnC3kQe`]_=DNpdK?j#[W'+C?;GuUi0PLG=D<;r*-!.9mhW^U?g-&HZWiYY%X4#Jl1&?TNjnSJr^#&8BB6,c^UtL#Y4nR$W
%Fal<]f4efd(f%&dOAsb/e-q7brZBId?GG)uKM1-Ml_8g5&=[dleUPO<O#t#g,1p.2OJFZ;mEl:_blS!l=8sY5ipS\BSB[;;=OCh(
%GM<MMN(##j^KhG#h^E==>hgm'm_;-J1!\ACE7DZ#(RVu;<YaF-2?C>G6YRSoY,VFOjp_ppDklKFel3]^rqS4on,EJ@q68UfrQd4Y
%!H)nO8>EKi]%u_u)"r6eF*>:E*)*F4/*s_a\lHXjXLSH2ZZ@l_?YFhek.bAM']<2u2g96@=_u+W>6Zs/4MMXMc`_i?G\D9NqYaRW
%3UVq6@-k9s7kY)fIb)O@_je=&?\9ZW807E,#H`.YcX-EkJ-kddrsCe>gS<m;Tr``oR.,#-F8JA%8f#jc>]%%Le+<9)kPDLT\ioD(
%Y>oTmD(+*qbt=F_i<O\fO[Z$B]@S*'p'9tnHW8*UHqU>826'-KKo9V'\aFW`)fOJ`+n\-6a6+3n8!VQ1m8g];<GD+,B`D!K[*Rq[
%4UHL;0l?9?6$###&(Z3<>GM1jEnp">H``f0.da*_4mI3:mE2C+T@"X9Xt\SGcZZ/bZTYfb)J_=q$JkJr2!A;BF#ZsQ=jcf=>kIlp
%$bE'Q-BAb-<OY?$C6%#5@m'OFT/e6?\>eSLG/MJop@,`cR[MV"02=1_UoZ2RNPZtpY=DY^_OQNH/F]Gj#V409kd]LiS<1Cp`-IR1
%9(gZUeJesd^#;tT[(l9lL=nSd$p4L>?F8+d5s(Vq=<@mI=17Z6bcUbH%1gldc<Pt-Wb+PUqc]*l8a.^aPKp+Ph!&uO^G;Kuoq%Ou
%Hd1F#Fn;\?g$`:E=u(q,Mf.OIh0m]k;+l97<jR_K3ogY0:*m#:7'm32og7L4q*P9_kZX#[])kma2;rP]pTlkBa94XlXe"IDX6.OG
%\E7-VLDSue*+&;.j7Sks:21oYd[aWcWiF9?73nBh2O8$c&m^RpWPY!hMm.6P]V<M1ls*k@S%2[0:6g7]4q4RC+.T]68k*,iJ'f>Q
%c^X`:Hi;18<'!1NL&E/Z(i;R^D,k7oZ`J:U/\,m1UDk_Yqg,9ijgr=7os\CICB\KX0LSfE02V1ke\j5fZpf#c*m>uQm>%`e\kHA:
%L^._^+"YVAWBGkIPEfK)4+C)2o6H?f]u=,$om`HDEnMX11CG`pB`;g4^[@+C1u(X$o'eN)RM#gier@7H1(,qA/C?Uff9nYb)9,ss
%3kN&'P"fY_oM88`f>BN"O;e*<VR"LL1MZLP/^X+l("@/!\eA?Y8)<He[)Fi&XX@t2];Vmtjm^cY\lU8GKY=t1`Mp@.RG4a;0sd=J
%kR1(s)H8ebj<CU0MC]OD3U1B]JoKJQB%J*bdK@QTKQHEOS26(d(+T>U66EXK;U"gZa6QI(om?_+fK/Ahp%%h1RSo@2HE<j2R;Huh
%rb8:b?DM%OGha0B2Qu8mPtH]!)-U(SeK%Unr>p6<&Nnu&E`"]:+332LlXEoV_+D%!J>Hu*UO[*NP%d&I&,o4;b`ll/X9u(pa:fR-
%Q/1S&omG/E5A/?`(5,!q1*X'&'3CFoP`t9h\g4:QB9Z!%C:U0EO1I0Ei=GL)VQ%L?d1#:3:AaYJ%<B&`k1+#SEnhWCB?pL.Z(5Y\
%$FM[:Ys@E`\QGMN_-2(^lX)OT(W.uM(T<m%^-LdBjU5$0[rW5"3UMg+-f(i>BtlTJnm2d+5^R#TL3'.RXHFkt^tGKoGt9VdoflO.
%_1[qZcr!j:Ca"-n'pUd/L<hY*8glfsc,%M03&ZE61=gM0*GQ+?1HKG[<d!W_])4G7%V@TqU[o04P]E?8OdM1I4en0\mgH\X]YU!&
%=:6SS,m$MGDGD\%^FJnBk9gNg2e7#A%["tS`C7s-bn7FC1OG:WW5V(&9`#/M=<srsSH2R3oauh_"WRhKdS@_;VH+X6XP?QTRp0lu
%>EW/kh:Ac4HHMLV^#;YN;Pd6gS)o$p3e8GtGg3;-<d1].)5Ka.N,Gn87Hp%;)I=M`A$a@\=h"@9h46EuL4km);p7.W^%N=(b+CJF
%%i\/TXuE7Vf7YSjVKA0*!=\LDo;"N_%qcc^.kt0eKB8H9-Sh%-m,^'n8k<d,H1#%IAg%Pb0q?2`Y&SKq=KFZ/iLDn[(AtbqRV<bO
%<jUCN'0\4Pbr*RQi,a4UoVQq2Xh8Ek;kW$DaL1Sal/:C@rQiZPT@UCE&fr5=!L*a&<!e[r-V^mbVMROuE["eqP0]\YVddei$HBGf
%LQ`3-XYQKN2PqfTb$._c`g^,7F`_^I*Q5S%JQo#Xs+L.GhK9mS]_?,OleTJUS'C].:[NK^f4s&mS]gVaZeis)aj&A4qf/N:*T$>C
%4DB&L2n%W14F6EXhUq^Qs7uBH]&b:KlZmI$FI_*?0s#l.T<0#U[Pts%+)Gkt?4FB!c`D9SAp\Ufk!7OE3i\`6H*t,pjg5QXcGN/S
%HF8)!Cne,HP7Q0:?Vg*-p`F]Lp$Z7&cH!?Ckd%r^N-5_$k:;V+gXf$Q\auut]mKc"F]1L^SfX6,G/k+hrO8soI?"ftlJ(R:k3Hl3
%g"s;2^2.]rX-Y@0e[sGTda#r`Fi4,L^)ao"Y+L/gkL[<"h=hkd[I[7CmXI&$*;Oc]hD4hSCi;JNs%XIVU5/9jZ`efRmG<p#m`FnA
%g04"E:3<^`]-g"ZDk:342rXM-Pua[A^06E?SYOH3kcT>PV=nBkgWF\es%O-8Y9,lQqt0UXAujIp^i,d/`p)?jFDVr^9n1O#o518o
%p$#&MHh[(/[DC#KlY,bFh@C$&H$f/I\P:n)Rr?&X8%mLPbE[k/2qS#OcOW+O^HOcfUHr\I>e/K@djA;lVo-!^3WFQ_IqK]J)kD5e
%8O>>-5?qArD:cAurhYS4_qs5:G^&KI]>eUL@afLKpQKguOWX>4Y&(d7q6XQNhu:L[53gt#+[,B;gkJopH1/CI4g=3Km:+aQ;[WBp
%ABusEgjWR:Df4B(DQ\@,TGnCh^2b`/Kt9"!Ds]U`a3(/f9Du<lY453Na/b2<d[KjFg*I2WDlc'Ie6'-DO3\lIL>G)Kg-#31i[[YX
%V3ot`=`\^E<3,^L-/hKdK":OC2/9N>/ots^l:9(dH@,G>nNM9V>L?mXqb$g/rRm6$Z[)RGbr^CGC?nIikYZGHhASi[G?W=f6d(2k
%7/iM`\*9WNO,`nk*abgM''1]Yldq&r[@g_E4OHLmd''&_1esF7e8B>QjjEJ?G9S??9\hOcba#XpkP`k?HS@F/j(pi-pR%ck\=J1@
%&q$pp;X9*Fa15=mHCjeu<?b[)7GVd_4M4uml<U`.4EWUHa,\Q0L)tW\rU%kIdB2X%l0*GVRq'mjZ!L*'rST$F%Umh8<'/JeX0,fb
%m:>J<eT-'*^&HYD2RX[VgOm>BdGBA_R8P4K8_LAX'-04n=m*6E^*T/Pc`6Zoms\2<!Kh,9nDj(Bo^ZebGnQ`5%1Mj]nOX@c>^g'R
%=sA`m>1\,r/o05]m61ALHZFB.i><0V%FNRP=l6d"gSV\kD8FlW`p(LTrZo2;oih"Bl=fAGeo;P0CcX5hGd=kQiGdQiG!%[RCS1=&
%jkICCZ>j`i2ssu"S:8-[-%!AsnEIuk]%=:7ACG?UH["qpcKOKQ1-54([(bCB\<KMdVtZg.dGa]rg%O1<h.G(@?G37S[T8@,kEI2m
%NRe"9/%Oh[]I1O&LQ0m(O*eGCSg`ElR-AsimdH:?I!@l%h7\,rYP5'mKM:?Qa+&O:TGfujE.Ab1j=ImFE3t&Whg670rAZVA0''j^
%qIt'OCV_=0:6MC6S*)mF1;LR]9eH*am&X4g<4F?$T%rE<aK=n&)lnarLW%88mq@Tn^U*LpTkEuMk[8PF(O%pD:,'2IW,c!ip?]n)
%ZINo\q(.Thlp4G4+$SSr>O+I1WfYi1CngdBj3@a>qsEpb^]3BjC\.>eS&i<fo1m2,^@O3?GN-;Qr:Yq'h0`nCO#J,LX%W!C[-SBI
%;nPZ$EZ+kX_*Z.h-3*3MlrgN2p*!e7p(4"#-;?p5CPhM_eR)NN+0QT]Z3:VqqC&>@IFV0[7FmQBK+<fVCo?>Y9!?n..NiArBjr8?
%)JUZ5@PC[t1WTWM%T0[VX_$=-)rk0)d:L#^T:0J-nt='#^1\0mGp&/(DG"J:-]ID_D8&W1E54#!]@k>f-BmA_RIXWc(h8`%DT7>Q
%(P,prj#dlb<KSL:H!K$pgf3##:.>A/;\\Gj1<#_3(*T,r9?/?lAq):).ohW6F9@g&dW&jp19S0&1fO5C:r^X689<j#2JQ3?=iT'u
%.8/KmCj\3#dZc=&`ASbRabd?>q<V4e=uP%:biqhf[#[!(jiUt#<&/#C;\Jh'1Erj!7[#MZ\_T^-SKhU@dP0:H!oRYDpnKT[aFd.K
%kjKrFb="(%/+%neI-h+"nk8sV7$*GZpYJqHaddjiPp6^4?M+*dlkoiLB3/UB,<C5LXI!amjoon6F*Hf'f]"N/3Q,t:lL%\n1cg#g
%]kQij>\Uj!s$Zam[6$C-O[BK9@8sr^'H1tDJ/\"$/%OT_$n7ip<qG_m-=$O,2;Ia]5OKh[I<"F!7g[-XX`4&#h$!\SL>Q*;4a$&9
%*rg3Mh:.J=dHfZ*S*47eHeDNS>@/kOm3^THh('Le]O&n#1[/?Be)?AOAR*u&A>;uQAUucSV?3;'a-o@<ratK@lcB,(oQC,si5)n.
%"sWf`QeglY]2uepMRGHf06W('gB3-9pUhETo$>iC[&D7[/S<$<$orECJ_#5Kc'S.1qWY'>_0Tbo'1(p'O''3-D;G%F4'J'k.T&/#
%BIQkZ$r-lopX.0[rr(YMh"gB?Dk::l4X91f^a-?NqW@[Y:\p`%/V?b)i?!*UA5,@`<GVW@!Y=`cRQ,Ok5?h?@/3UYO++5@6p[Wc\
%^@EFRmlYp+U#]3a<?Y>P+RQ?Z=gSU,QC#Mg',CWAC>VLH@8CuPl"H*?BedZA8##G)4P5/37Gs;^#K>=<7r!:rIMUCo:0*Nr7utO`
%c3OB6U@s=Q=?Fh"nTJ9q>lHi$_^J5pk`3EkWh7".fcdDee?.hrL.k#GBAjIi0k+M!mTiMU?[hS=bCeP@UNc[]\f4r[=p;?8n#V!G
%r79`Rg8k0h)U4&\(Fg#9rS_YdlG^ToUqV5N:LlND^M!<Xf>md.hQu7C/<V&M:08Sk+Ii0(o?E8[7ls42>/.dN8W;24[>X2u"T8!i
%ZcTh1XN];ML%XqIFs9Wt(`Oih>m!:P"W74nbDRJk/F!,*mTKXi(\pXM<IM:GphfVXmbuOMhL,%U(58.=2iE[1N"1#+^6<@S%]o%V
%2a`l5$fU'm[FL#kSam*>[)_@ICR0);MG,RDo<h/,*"EoX=6B&Hk*u7u>Z/ge]=0[oYP5e%LMrV'W/$A8OaQ#oM4>r/WN@4;FWd=-
%:&:d:oYsS**pRI0Df*=)C_r7rZY-RPH-s>%Z-tn(4,n<G?lGY'Tp+U:mUf@@5?]Ru5(%W0g#N4fJ6]^5\S5='4$%#?68jn;Vq:V,
%l]\aDN>LJ*;P/*qh+E!uasN8YY$M"iGO"M_2n(Y;n$gopgL%^HV*d]-:ApkAVsb\<nGH>So&V++[/q=niRD1?gE2:.YD8+&#Ms1?
%Kk8sCL%=ZerXisb]_g+04FM6t[_;2paYtO>>=/8W(jTe>nZC=Ph@jchkKd..@u8(u;2\u[EO4N9HF_'5_n3VFgd[]3Is1Vb<n>%c
%[_$`ST'u3?`f\[G;Em=G,=1*em6A@Gh!O<(UUAub*^`dSRsB2OJuia4b9*n%GT.[kD.>baCQmgt/Su$L_Wtn8p%k#7cI_!=V#Kc_
%A<TADih%9pPMYXh+P?8\9ldUd^-:DSp#sFB8c%f9p5d7rG'3rX\rMC&X0\i%jR&rs,;B:u*T$UsQ7V^Hjfrmhn_UF6[?8%*&H-(?
%f"En88SKe@HB0sjIb<Mi$I-]/WHp*7Wp0hmq@BISi[Plp-c\FuX*e0Q)r\j78_j"lU;M<+XEB0MJRP\[k\P1MI+;f%jc.N<0(J5H
%_q+]\1jSB4UXt:U5:.-+p+YnsHp6?B8FACLa56]apdP,SE=*XJm;Mp):?ti,\+P'^k.J#i'@Qo,q^+<:j&NDWo^Q8_jE!(S!*KW6
%9'Z,ogO+/l3j#%1ro3\l=4N[';Wg?sPe]SlG1u@OpHEFGhmn(:-/WGWYCF27_K)>%34sIu+?@#]msmm;o"";`ql%JJb=S#fN#KaE
%#><Rk`q'rB;fm8/mq+js*q,unm]!"JdZ$CEanj?0;mbW-m3I_+&9cjc7<UAaY9(8hRSi8X0;?HpjG0qb6K_S?P(m*qVH/7TBHiaG
%?L+^7VQc'>[)9A60=J>2?"'/"f'O@L9%mt10(+dlesm8[hE6)Yft"lE=;Cfc['E[0bhZOj^7atkdEbTRDn?P[p_4$4)R+#7V?l0k
%R'j2-"ufm7b9-FJdBaAG8Zp[#cX*-k:G0Q8_MSTG[R<Ubji(A7NQ!1;^R`!I.@[JgM"t>%dJmN;%A.h0`t(4T_nBu@XX*3*DK-//
%9PL.$=:j84&[-\e5C9iH/f;l[Fg./gbgWD!,C4c29D.*R3J,.kmpQhlWd/flh"kopH[!=@Fn_5Z4'u=3YZC)9G&JPO2)^Z,<j26^
%,hp?&L]lTs:2W6t2(?h!K8W'SArutNk2YJEf<5'[BitL6s3UeGQbTutN\03=5&;Q=]9cB>rqXP#UqZm,+Luj\OI^[K523M]+.[4G
%.We(nA[mX7![Ia'Fr\omanF:hFh,.(e@N,A,kGZKeZ^DKg[0p?=fT/L/.IZT^o!LZr%a#-+'Ak+K@`:\n)e#]AhBVrQF:5YIsQ^^
%qH;<4J,(3/>0WMAXSlj03-,.sH2CCMJcL(!p#a*9kFK4H?NO,oMsFX0d9cBt<+,S5itGbaA.7jB5He-qSo<_TpQ;r=:ED'jHA%<K
%]+esqGBqGRZQ6L2Wc^Gml'qTQo=9b!<jK8^.uX!H2(e:>Y>.iVV.Vku?IGp\Y<Lj`M/IESI!$n>V<-MoX'OQh^?5LGp62O!l1E3t
%%<qEhhJ2nVY?pWe#M3mq8I+8clFWCR+o/Cs-'?jQP&J\8L=9#9bDe)!]&Mm#Hah10Y(9%Rp=EN.j8P7M3V<mN^&-5kIbVP9]3Mn5
%o@^+?jY4g:([jrNS_QDZZ.<q/E+5nf0W.Dda<qLI&00SUOZI27VV_XQh^A0$YM(ks\jiA)"m!5@SZ?!J"_:B/NGe.\p\jLUm`DM,
%rTVa.K([W!=a>n9btCN"NR>GqS%@p`=C*Sq[<lKC<[$87m1X0jC@pf-&c'Z%V3s9f:Tm:.m\cVXZ"]n%6a3D0\FJSEnTFEiX*"_C
%ZdZ>XO*QG*fWO>K!G8u`ii[:kM1!;>V>BGiX4uLpg#ujbe?,ki]BO]K4X5dl+8?d^<t;I/Zna6QHb!c&88t#[F8p\R1uCH#O+Nq]
%#l>/=kj::cD\&2lhl8nfqW15\^%M&!-8^Pb^,b8_:Tqj&HsZP*NaLXIoQ"1U;Y9YC8THZaZBf=aD]]`roK8]ub1Ppf@@t4*p=adW
%*NnhsHjgKL2i\EDGP*cd?>%KFV++/5YLIQMa\lS^YW/la!DAjNq5:>:8[Q6\[IJWhh(N@R4n".D^94s)k!f57B>*DFfo:18j6:G+
%9keX5".K)l$%,`/$J)5dO>Y^"$RSR%s6(PRHa96mY9RB1HpoaMr`VJL7F0)N*\Q%s2Rh6OC`.$ZN/ZT/p#/KN)+6$NC@p&YR_,(t
%T2"?VUOJLbSZ9QcD8g5.^,OI*rn]U&d?!CIHsdCAfC!SE2-.KADUPrDAX:bUIZZSgg]>kFrHRh=If-qYR\no9-T`E1Y.h0W9W-8P
%m\^+aRDjqlcI\66hVcqJ`rq2>PJM_AUW,-e.95]adKj$ajh9>3=f3_GAi7,7/l?`hlLeojl-3-O56e*7AU89ES4;igP.Q)?``V88
%AS>7fn)IQSIbOh-_MP/<`4*&M[/a@k_k$,Ye^s$<a5nFB!Gj3phe6<QqAR"o@NU?ulI4#=B_Cc4ph8*1%NG@$='f_,>C:UcgrC=Z
%:`qf9i6'f2qEK`#fJ<$'rh]5FG%'Vs1Be^nRr=p3/1:YUY6Z(3:[[],9qGUeE>(c;n*X0@:KMGGq6%?)4,qh]l3VB%G\90?`L"(%
%62F(OEa+5;q%nO-oBY+QF;XmF'UbOh+MPS@N;?C5af(D(m%nB:Hh5FMRbuj_2!\Mo^0&Ga*-A[AF_bMKp.o?GG.))."dI_3md9@H
%AQt_*2t)H=4n!+JbWB),nBl"+>cY!!pJ.0$_R"Fg,50,VXkU"HETcJ^qj9;m%pD3_`gsLY]6s?br4o+iiUR`f")j3DOD_aIgAgW:
%CmUepH.kKc]Y),<b$h-l:Dm9uL:ZVrX7a`:KA6oadqduuPX4ij^XE"FL)6D]j)22I0rLVu$e=XifEmFMKD*Xb@+`JL"q.l<a#3=o
%/_h&m9^eH&DT3r6n+KNRq5p#Wd7OAJ?.lD/l:t43qpQ@4N8J$4Qdq#2G1W.k9Bsd:IV@e$CZ\ijG/JEYjNDK:^`[>"8'h(GId;C.
%^MMO!J+hq8@2&BfQ>T(hNQ3Q6M$cTO!V/nbge?QDmE=WpY\Lr1mA0X<9CK%2,C%?)q^"'%@c3mW_8T`(b>7Q7g#Aid4oSh)h(e>l
%MYX[qgkJb#pGXuslVXVXO6O;j<DHhidbAa3!mF'AMd%[+j8R@bXC(I")W$F5'a)l'Oe-]AZYuio8t9"-_KQ"JSri"pVk%X5cQ)E!
%T_WAXWrATi][#?-@TcX:4<*\Vo=:)aYHFA*k;gcS[lE1#l;g,?,&.S`a3E"<o2g8mqc91HF&M>a6KY(K1O`+^LGSBMdF9WQGC-I[
%ou'g75l]$"__R.V&B[stc;rgW4dpN6rj]pNm--%,kUn[bIp"b=r;DTPPd8tp4sV!d'V;!Q]edC)^GbP8anZJ5RB>W:dFu@t4:FJV
%58Z6aapht=&>eVU*-<g*j2TC_pG6C)_$rf'_D>NBR6LN+qA>sjpI;?[":I#-YAb<He8ZN>RTESTI:'<,MjZ7Jf\)-Y/)5G5[BB(V
%LUj;a/YM+fI4,I3oZaVb0^g]Fa5#,%3LS,!F]]NP[k$_JbmH0FcQsZ6r]G,n.`:CEBN;B?g$NsdQh`\VrL0AiCf.#h`5rE;l=VnQ
%/(?!dVOp5dY0c[ArcR=[TMpQAFrUFCH3"o3kZP7@X)rZ.*I"VH?*-rDB`gM]F_0&m6`kO._p=*P<k;#9mMDH=71ppl.4/SMh)YeW
%]=g6i'd7?dH<1!,C0_M'rR6^ucEM?F]>1cPX4-#:Z^P'8%6@Pug8Q+:B>W_bkLZ'@]k40(o2bO9N\BNML`BkU&&7$SB'LVoh088H
%\"35b$WE80(UF;se$G6-9Co#c\T=<14k[EZ6(/0_8fbjW`u9o+]m''crCnFB_3s-GnHQa^)]/.qV$!,KI,QZf\V8,Il-bLC[kq^4
%N#rc::)t)k,?]2D_gSI2h5'R0DXLU*WJB>hj2P=G%5C:ko1GTCek'9_`QN@_`%5o^;gNI>*6l0%A*gT5GO],J4N?_Wmc>(?>3/a)
%VL#M&=g9H*=M[)$l-#/IT'RKTpg].2=7#%k?B6=@&n0H,H/Iu>.8lJc7oW]%IcH6ae#DGfc6L!EK3p(urm13G-&]KC"?5pV52L]n
%\]k#;5*C+#mft$*mfm*DTn0t!XjCF_j6Rd8[<&Q`nkFY3kq(jX2MQ)GIUru'RD'!-c)NmjcE-"W[_g4fkLiUA/T_*[`hVEr4)h3k
%@@<D7fo84d^oD]-?HtpYRVr>Z0X-.d'o#`GZ`K$o=]IP&rCW'hGREGF[Ag7"pWTPSaC>&<]Lcl8+.euqEO;bgKlqXo+'ct!>WrC!
%p]rpYhe[=t;)0b@GpCNmT<5lJB;Mcdb*ck%='8_0]RP.cO))ftHTA]eacEFXO,eEjWct?W^[YJIZ_3&MD%OSnWtJT9a0eViSEYB#
%$R.>8]B]6i?*R(!KI/":<V]32F8]@OJETL[CJma^<mB!dlb'G?"?mRQ6uLpa>'-/S<:S[8dbH<Y-sEm-T^%3-?O=EGl%[W0BNK'I
%KA&5aU#XlBgU)Y;?-B\$4I&;J2/YKN25"``0VemSVdd8]'lX&NR$L[i]:#WEMb9p>dMXKBWcW$:+bc6HW\IF02aEj`Y=b`B/tiZ0
%(0*mfP%pfFT&GbB9h<j/6!,rW9iFMkpkI$0>!A&eg>KVXdla!/`@mf!f7hh>HMV2OJUS,pmjJd;?9inW0Bs"Fl7GPPESCunb+k.A
%;+h`%OLOUZ<BhT,GSYT\]S[/)R3Y&TUfeCV<+=iM>Vr"!gTT<S=\j"kTHX2CDgZ<N_#'t0OC[UdFJ7aCI&G@p`&&-GAkbq6D9o<;
%Gk5WMbmLI?8@-,[Z'klrLLlU`".'G)M$K?6+su<O@Cg'i2k6o,3"T"Z!s.p8Fl^q$VlEb0nugt\hKut@M<R?)+4#-4.`<;OQ/%Qi
%;BqM8M2sPI[AnHn?H)M-E@iqP..LR-g`s5G/**')_l#iL6-jVQ?:a4u,/O,a9mr29\IQ#89'MNP$;X7b5m%F\P`NC3M2.mk9EPW=
%<JZtT="N?])k[=3E2c^_8'u(t;M4)^81fZ*Y!uS1n:^nE#F[Del@W'2Aj)H)@(Sh-6]A<<P`Yk`+P*Hi861mG8:*ZnA4.uA@$3RI
%W>%<-6qPo;1']5$Ti2!VIRm2u!pBb(k*oMAD3O>mI>>EB0P]/tdm8gh%8@A.JRXe"P8J#fObPsUc(qf9nWY.L7jBo_IAf^Vn'o$=
%Ta_)p)JZ4J/.84m8Xa0GLcGsG7c8n7dK5T$-diF(XrGeS4VFei+ss1Kfci$AaGCb:6*)A,-eeurO?%lbE?S$d(L4;&n$'SCM8sS'
%Zc"WaPt`,!i7LGOm8P)F$>RId&OWNRdOEq:C1L7Z1(=dBhRCPUI$`M#cn'C:2$hN=5*7O,4s2u.Jhhoq"qg_G1R%IYZ$_ic?@5:Q
%E:GtM^<Ujl]-%9>-8@H$D<?N]-@4/V:OJc=Cbp:V9_63CE7mA&ZunpOI?t)s^s\G7)0i-cO"m?98KkL[4-h$#GmCU'Ip:=pO`;Yc
%`I%Ub,YT#?%dfHN*096^:I8M/hI#8BPV<NKjc@quo)l9/+?uu7CZ4*.1c\9CDUZBLjNGX8R,`=;ig=L@`OaO>8=<eW,"4_Ga3ZnU
%1T<'B("Mu6HC4C;:<^a(-8I.sJ99T?C!O74n:Df/&T9.pO]=c=.+r(a+]WVI35q!7JLf$nF\*8Jl*:a?k65bB-*8:,@`ig][M+B1
%QaFhf0dk^Z22Ms7])4m1p:Y]tElB1,mgrA12aWhI+jN,4$j4+T?aLRpBUp\bQ*``V3$+Tc,Q0V>!_k)`V((=_E;!fU/Xi4eiMn%M
%-^Bd[L&H.1]^ETP/bee(E&+g2]Ri^2f-WlQJ."8d&_"4&bbWpf1EN/t&C_>F'S^:ekcnt98d5>4$EfJp2K?a@PaV2Ym#EMA-:B#:
%h]b[0LR^LSW9oe!1!;-]BEaKQk7f'C1,4ga4$X:6`+#GEU;$d)'[d7]T31BP8O>&'O"04:*5b\bQ7SV;"'!o,DB<.t'9uO+_?R=*
%&j@'fA)MKlE%6Be7L8A?X8WCEdof"16l%4faDSf3)^>Z5;MUsB$)MXP't+OTL#bG=iS))!+h8eYBc(@j#RZ`hUf7scWJpZZi5%O#
%,Z6.-N>s/PNl:;bc\LQp%:Uun,0>q%oC8PNYeju,8aso9$q?GtA3Tmdo*iXkX5ZI$g_Gg&=9.Ok>RLg1-V7&iG6eo@]"ecj?G\dq
%j%>(p'ro*L)\t[D_%sJi5Tf&h>[TE'd_()^$qT+53@tcIofs!A_$"$bHpGKi6/3+(0o0c\)L2BY\0Na[Sd.HjnM#HcQ"\nA"@rXJ
%6@aU+lrXR+;)JEF(9u$_obP(b]\AgC,ZY9pBN>a!6d\BS"Tu*LZP[Bn^sW3>g_$&)3?>rIe1<<YE$rU$.1$U8FS7k"9Oa>/QuENl
%IB%PR31V@k:QrD"H?]H>3A!W7#)3Rm,qhpF8A(cQa:]n<J:VecXJASW68dXHnIpErP#4P$%"K=k`WkZ]?V$]"!C;u<6>A&Jp0&do
%%q,a0\K?oWKGuU-eg)AU@Ko,;^ct^U!-Op2$gSmH1P'^ScC!B`qM2%9SV>E^Ek[QISJR0H&fbF/OP^L7)IR6"/Af/CUuHB)?j$92
%*$R'l;=2LtRMCQgbJXfPbg92G.C.k]ZiHDBI>\\.\6oW&RH>e)RKJiUo@(PRYVC;6Y77T\4ersh!Z.RH:msY&(j.Zc=1#:8qk4-T
%Se3r@0o1ofK3n[F%P*rWcjY^!!u_ud&l[<1";i8NAi"+DAD.YH%?n<[(h@(r^dk\)+k\7K;@?kfBm/FB`+73s1"J$M1l4OC>^SgK
%@Q'@B,<K+L#e#qJ=-,>5OZEO&'h@C$L6'V#^cr4@RQ=sq$%HK>YV0$*0pdep^``lA"kQm(BorLaDaG(UUN!3*_*\5X`52p*T+"f<
%<h=C5E7H-#6^,b=DaH@=#"1h$^_oCDqMTHc#UCoc7%(bokTYRDc,1D%-JA]R,L]+_VMZ0L;i/"^#@T&&LYn7[SJXX41nh\jEae&=
%1f$g-GfN2tj&)!M&.&f!<JI"KGu&17VE)m;T*IciFLdhX&A'ZV*E[=e`k`E*ob!_1;a\7?[pd>lbY][,ln7N(`lBkNY18)Ck4):k
%k)r1p"?t)W&2qnB+T@K6EFFc%a.TZ;@T*QSbhrlNi4:7\eIWi>_kCfZ*SBGO6_mF+i#U/q@MA>-R[oI1NKZY[0;^e+:'')BU"K:P
%@g;]IR1<"a%iHj+X:9s-dg"6A!1LtH#Z#t7TP*>s8bW<u[N#Slacqr#oYkWl!KGoi7Bg/$>eE)N^d(F1A.6Cm;1/[)24t=n%8Cq4
%r2#5k+FSeRK'pQ*)pZ9=o[J"#71gRaeNu-.!Ns]+[nDK!T'?HSE<&M#PB"T43:G5IOGkFmd"C_;Y&cYLoGO&_f?"L_b#/l4$j3WJ
%SbiBmjN#q"3?]LSjocq2OQRP'-[<dF31+`R?ndCk0<Tmh&!^P2_^QLk<$W9H9E]J[A7gRX'a7#-CBtc=1hh8uUET0Tj>As*;fUdJ
%I;oE+E!oo4YcDQWa!1r`8Q;i'3sU:I!@7`DP1##d!XCVi+q@jOC6+_jcBPsXFVc6!"(qrC$gU)6,]]_GLU8BrTOet7dBH\_U2_4/
%XQOPZ)q(NM*AW2gl]Z+j&Wd#"R]]VBpHo)M6Kp'7C<2M^H#Xd2/=+Z+Y`\CISiu#T/dc;\T[e[k#APRNK;8La8KUob>XCnJi]TX$
%!c:aNWj'k4KLZ<si!HZ^9tJC`>9A\+QCK$&Ap;0CK,L1%!K&7u@mFuKj<&6Y)+\:GOt.nu@k=,kn;q*G-p^_;aWZNfnLaiX\diuo
%jHkB[OWZpa8J)^#'aR=HgCQBZ06mt@Sj5/-#>@2fL:Mj60Gg-7QDkEVd$7<ZbCehC_UKpe9)ai'Zl+\j,dUq5i$/O!;MW1_)k`X`
%4Cl]"pgY8,b^b@[I`pM7^`a;VlNtX#:r<#A%lm)q%?]jZ3-LALY[O>q9?r_EdH"a@K+4"Bn5\$N.8LO*E"mDQ)+qWe-+el$#/bG"
%PZ3g7#AQO7Pak9PJ>P$A`eUh9iqm\C#])NWJiD\/#)2sqOUg\E.Z=dnn&Ua%#t0l8qV43,7hRYH7Dj_3^aQE!-e$2ISOWcqNsj&i
%#=okuO!ICjP7=sl&?K?,p-'Os'j3).R,[8\fatT"m3WM5Z#_XmM&lmXn08UoYJetq[uAQo:7V*Bn3lcfaUkb;'(#_";Su'#YYNjm
%@UQ,R3C_mBk[S*hL<qos]`e(dA]+u@(@_o[%V`6Sp;lt!N+1b//o`oVCGPOCJ\6ap:8gRuq&'R.;jmnYVkmrm6&3MF:3%(G!CLFF
%&H<UR6#@*S9eN]$E*G)%>btd[>)0.5P`h,Y0NURD:SEqJ&8KUU7<;Vn!kb`ClHH!ni%\o>&8-e5nrL^dZ4!h&?$JmFq#q9`\I#AC
%`3<>d1]``*L!Sg:((6*U"(jDL#"gI?>TcQk!_sPp.<A5/HJ'pf$Vmc(TOS>VUnm2V<l7GKaSbY6#R'bZ+LT6ZK7mmC[3<_$n>*>j
%Am?s^n3Qh^0P_61PLJ'GMEJE$4EA2moT9<rY]1hJ(^2<eJrC^QE.T#QBlo#-.dWnO0cZYT%<rY5n3BZ`i3VerWMK=jA-:U`V-Z,#
%@/)pHch19EX/O;J[a['h@9]6=%P@H69R61Z,R@$Sap7Go9L>2]7,jU8Qd']9U()m19O9.Kl/[=f%N6c3#ad0\:g$S;;l"=KO$eI*
%8*rc:)@MTBR(`]h?JnAF_"(M#:$qi;:4[)/cZq.=Xf!%42c,D^SFVFa+o/XD]$PN"!O-\j91-VfA-i5GLE\Yq]G]qo/0c.dod),B
%TN1Ifq0rm#abX-9',JfY)BDC"6n/KDJVdqf$#L\K0E?;?@WKs`*"tlogQ\%],-l0m!9nLmlbgn,&9<S+6stnI",=*U_2a<r49.PH
%-Wgk[?p2VbF`fZ<Db/4jKSYMI2g6#/G:eO'aH2Lt"UmFZ#)]Pd74<\aFg/%0"A\JBnpM\?4V"E=jI[D/I2bI!eM4T7hSojZ`[/TJ
%fj`^K6Ku?)_FFa)#)M,d5m\8,Mqb6.jl*GEUd?iIEZq>SJE]E$9pC`Pnce+[Y+cVL"o'2L:T:>?2ise5M/L+K(OcTSTB:g+0eO)f
%_"KBNYt09GTG.tI+VTl"fX09pY@sk:_l%6s)(/j3=b-,om$:(bZ%?YB%"lT1U$1=\+UYtuQ+\+[/OnS2E(SDc3g)3&WH=H-+O:=l
%K4daq%@.4>9V]NpMTde_$nW256=Qgi+sg<Q@<dU=Lm'GhH3ea(L`1&jV@L1b)(c2P+YMrb(]\X2'2^Ee^'0SAiM,S63_:CIi?$Z?
%,0lubD'k4JHQ6ZB>_^..d%R1+$C:jT(g1nkZuW1b5mkQj.$Ht:S)&3(GUeRsC+T)DSn&+'@M4?e'#7Ga2_!u^BR*3=4KKeiDGHV)
%JcjslJ3^2?Lj0K'4)d6HPKJi*]At>IVn=!F!Af-6oe]I,8j_gB^f(JhPj:&4^.I@/OErgIEPd;T@0hah0HgnIeKOMd`(,@q9ipCG
%)<EAa5gu'Z(rB'Z.md1o26:M3TF+mjSrjghL`o[Si>2VQ%&%(5#d-d!_Q0X]$'(rXj@fOS4TnDi^_mPkqDcI^nfjT#$$U*&2M@0l
%ab`c'_*KBo%"M*AI<@7,HpMpHj>p$Yq0M$)S-^&8,a'2+@I3kV@K98Y"2eP^?fD>JjrbBk'KK=ukW[&!A9Lh%Zo5;6!p'J_aRUIc
%!.@-3`US0RR28MI(/72\#lN>7+U[D60Y7M,V>t"seE#t]>5kjj^\*`gJn)T"(<7mc=&#^@D@#*gEs?RlZ8dY_As^t7#iC&*QdM13
%)T#VH2@#0U5o_`)V:_Pp]J?[hV3VdI+B<KjWAZ`(C[gTs>t?$Qo9%ZMqdXll=&RE'\<t>OX>mWqnk!7AMpi5Va0=*Q#$$(E-,@W2
%HCS^2@%=QsaAF,F8WGghFKGb:ABdZC0g\:M"rTi\aoUti3`7P9DaiNFfC2Mo4B'-H:"p(9Vo`(P,Wm)7V(kLVN)#KO74<u!.'H=>
%J6."m_HK;b;K()N)1c`?4$d,-M&:t-j]CA(4R&+);)hZe&c[PI/p8_;bTIR:+r[gK3D85Vnp$inm5TYqnY@\:*l-lV+k:#5@EM"^
%(.G0T*2(7s2QT,M"WKns-DFcnPUnR!ggL84>C$fg7gQ5N3fV)D^;NKIl2Waom#*#+6^?SX83F=jgVp=3lt/M[OYNd^a^7@^FLbh:
%H:$9&'A4eogKN7N,Qf>8cXJr0,b3<$6B?\_7['0Z@9-g;dTekHN]\@DUFr!'UeFm=@=h5?TlDeLO4D2[<-B?<&GC0Q8W("L5bApP
%95ZpI\V/Sdd#3[<)d`m4"8rLpGnGS.Kqq:KGMmo--,T`+@KAt+VTr4g!,+ni_02ZP)0;ANJ"P'V*&E/?/<tKId#6F&19I6_KUIYs
%KI&/u)[TaclRE$0*(sk_H*I>u-XR/^X5_W\_g@n%13=E+Z5^X^+9bE0?C::CU2U[Rqn-j)j'*Jr(TD)+(IGAJcRF7LP6stZ1eVX1
%Qu&i[@;u`A+.+A4rm3C>%N*0+98<rt4),<*=E`dd!Kqoa3eAY1S$Qr;aUp="$6Q=>*7H#\m<FF2TcuZm[$O0ckoaaI:Puq=QA&M_
%@UG"'&[JmOd":Up-nlZ=*Y],Ufg3=eCPT2NC]GNGC5F)caZsrK('8OZTKt\Rab>R;hU9CR2FL8AS)u.)]"$*eKdQRq/@!Ii&mqeo
%U6F\YZ!#19+rP8(!P[lEZ3AP)RmLB<Enf(A\O^N[@qg^ohKt-Z84U3mHSd]@JCQtSK/@<UREJ:sBpMR(A;K3),q(*qA9)'GE!!k%
%.(]jl_W2[FgUoVmOHRs%"_WXLfK"r:311h.n;Ia[EfXTC.i4#O4]m(W@LUHr_cM1a6B`.?(U=U&P-0(hrBa#NAk:l3\Ia<0;F[lc
%f^FN-,7$8eJD@$^=!f^\Xm,^ObeTd`@DkK?iE0hr#B,>`\sU/=OL1(U,*FCf@Doqo*;k)e[VQd8Z%#2DYI.n"%n/Y?gpVLK#^0n7
%mT<cQ%+cpb4G+,M/]7:F4;GC9,F716@UTourt7Ai)=T7T?ge^!e]q".&(iF:[Lq"F,i"(6.5'V>TU;7b4>mH<QHQNBkrJ!AVuSh/
%Dd[$d@S7Fr*KC7.iaD-YRcYQp\3mLXiW@sbpe*3f3#n8nq\cT\G`oD;IFp8mnN`(T82,A&#`\7g:'r.@F7eaf/Wi2^MG1*@/J>Y&
%rbq#oIm^^FrLk0KQmNVFcIT;r6>V^%WNIZXFD0LN%--Ca1A+`UZ`o_@2&,N]B]4Xe/C8*m`4M#5E(Ep__dXtp*S]N"&Vjf1:#lC>
%+,bW7jJFos`P-s-JQWf[FMc1\bmZL(0UVTL"^(^]6ptcJEO$%!.cRK[OpfY+ThHddce=,b73FH:ilQRS!9]k8VAF/kJM/a*L4`to
%9UX%QDYl7W5%H^ZbE6r7;Q\"@@h?AIZWO`TIO7=*hnaVsbL&"XIZP>PAG\LX%7hum5Dk^NCl5Z_M$$l@9W(\$(^M!^db"Y\2$'c_
%+_>=qT<R[H-:$sK!+<5h`*re[AW\h?VHtBlV`c+Udo%\\5#Qg]hL_VL',jo/6J!s"DM9bYfOF4efEao<jrafu6;.lbMCiZ9`km^A
%p:sk."h]HkT7Gn.D"ECAGX-2M/K6Cr5%3]3,>5`\@4I`?"0paVh/R[&M,4@#E3tVl.j"DCKoSb5=JG^q*2R")@B..'"rVG3j913I
%)R;rdZNX!q:mPe*:i-_5`9ncRY6tBtGq+--\fR$W]G@T8VI\uHYb?"?T&-,rh1<5P&?@4l^D:r?4qDne1%1u<(Wr%]fM!R=H1ro!
%@/@fK%Zr)<:m;rn#0gYEf;:Yu[$Qq;kHu,mB6QAXDddc6jCKnVHS//A`'+4kOmJ*#"S'20/<D#&JCM6L]3dp3W!Ph-)@%@hj3Qb5
%]Hf(R<?$dA'Y;r$M$44BX5G/\%%ucc@1H!;aVG]/6\e=Rng?a,m"WCbZUa4H&Vd,>3&P#l-(ao^,VcMZ#:j)G/<_bt!@,Fc!6U:J
%&pQ>UmpK0(4;PB?_?c?k8-"8;8>$Q!F%t>A?m4#GmPCmGa&%L+U804?rBlrinOP7I3ELB;E#"._i$1s(\9`K&H!QJ4!;R\<8V-i/
%JTo#rE#0[KALcJkn/lMhmV=#1U(8<(ClZNT>c<%D/tfALDUQn^JMMcV&BPY+7SX4S2m#*R@@J'#/?d^mIfjpACFStr#:^j#--?bu
%%P_?5*>[)0/a9dG#[&Q\Me%Fu!kMl66LHO9AB9$FejiR.95Up6RphM*XcDjmZ*:Qb2r5aDLm4k".;Rk_dL[UHC))YFJZKbt2lMRe
%5i1,On@$ef/tm&lYHtcMMM(]5:*ksFVSPjoOt?Ck@;hIXfgTF)Gh3K9"YPs$1p5jj>N.R:`[QfI>2i=+,p>%E'6=&L4Z`L.aQr(m
%M0<am++TS3n"]Q+"%+>PO[6t_Sqeo@jF4'2Gn(4)6EJS8,u0oXTdO`8d3&6-^9>NMA@!*0PCkuTR!HU.KhpJ`kBU3?Hq+Gr4SRcj
%PgR-RYoCM?Xs;1-acFn4A8ISkDM0-c8&[Q[GVaomYgrGXo,.H:&<-OORDc(?T@_,'IgMD0[S+C?#<B5bJl4W*5bZ.9NlHGDab5o9
%cagDPUq#&\R_/1$<f:.`lc[oY;>sknlLmh$+5")e&6@A4rPXL_Gm.j>Fr/s)eWm3QDc4UAjXng"MX`8I5&XDsR=PrXItD+]dNER!
%P?l6@Yg&+cjS55b$)MFmVM)p/TCYE8)VD)bYq;Fa#2[RCgOn'%1mTg0$P9rW`^`#LgTk%LLf3UB?N2SBZn)#VOMPQCK<7YPl,aB^
%ADh]Z";6:<e&+8@4D[^.C+/WX.,c&^G<)Z"'!PfrF0Xm:8S@6G;KZ_UO9,="jrmOi]l.E,VSpE_*K]`No<FFAf68A>!#6TfD@t\I
%$\Jn<KFK33c#Z(5FWMWKRg<'7Q>d?dq-o-TrW34f'[OS1$7*QM)]1,*Z]UQi%1O#%"l'f1_?.mBrSp(NA(OdT;h=:0i^.GjL=Z.8
%Cg=jO-@"8;l]RRf?4UmDCY<)YHn'"hom"6b+qXK5il58PQ_-h)js;^laU_97#M??u"HG*&DB*3rdeNN=Cjk8u!7JYL&hd[i,qZYt
%KC9`%<=:,'k///UR+hX"l?Z^NC&XFboj^pRp]AG>HW:(1Hs<_H_;GP,DG12AL:X))jQ&/p9NRD,(>mFC#_bto\>^jkRN6L5dhV.'
%LGq]VNpNQ.l\*'YZ\MQ.OoF!]6/*!$E0:p<$-:c[j`Zi+Z6:NZ'#qXMAVZH_nBOJ(6]u%(Y=>Bc;O/Xb+s3K:Y4@ZRaSU1C;Wf;V
%#Ra>_82rf2'Vl3JAKi+$mPVeua.@A-Ms9iA^-M)d$fMCg,#Ami.;UG*93Ng`^ugBQRc=]eH&i+%braSAB?>:d3GODInW4!K'5F:;
%>%6t2?(68"ah&64;93N$HW#YF\WloQ9<^e<'X5J6SN-WkHge7Ua`1kuc4e9Ki4&b!DJuji.;B\b!sPJs)W)T*!&\IKq"K3fA"/s[
%92UpE'tUGeP02F!5M+`HCd6NXgY4gnI+4sTl[;c;l2[T4YSaamja$d;003qACa_[akGs7hm0cnuUhB'<o^*=*QIs-Bgb3J-H>2l=
%&sf-qV<%n-jFX$@!E]Nt$26$i<qr06`)mHo&6#l,IBD^7pGUtd+W*Rh'&RnU/m2,>#BU`mVBB8$q2=#Ik.#(?\fsM+*aa@7QfDY4
%q\EN1/uLaC+^m)E/^-',oTa*[n-tM5N5#@s))#Kh&6$o(IWd^@lo(7cQ?meKV_N.l\l7eO&M)h=Wo'S$9Wb`e'49had4O7rmd!7(
%?l-l[,/+i;;ufLa(n8(,d`/"K*@,1d#)frj\2ZDE_J(7alI.ciYUtbC<:h'fbJBJZi"@C<PsjRuOAR"<>'C]cOQAl4L(6;QiPQeg
%"ht44<rrrt'B$NG[,5-b\u6Oa7(k.Jeo1[DNY_=STRE+$JKI"-"\k<T@Yo.F1Ws>Olt&\N%.La]Lqrg1#L)4YU]=(&)k]A/DbTB4
%6(g@N(KqL2ZI3(a[/$o2%dJ/6Y\OVZ\)S"K:f1sro\!Yai,o`Y\X=RdjI34t[.tLuVP>sS?gjJ+IMnW+.04#N^Yi&mq:?:n)R_*]
%mUH+5N.Uk4'[j42&LrV;D4W]_"%[=(ir9hZcVa>jF<%<D7?F`pm4YJ.&tb/*<^Xpo#"'TU\E[iSrC+`,G5N96&R>TVho=o"AqDY9
%:'<)cR2L;N3L`+?n-@X2#98*n>4@GjGXS$CFq?G#Je532])_O@m4s7"!?@[Z9OP1O7&13Zmm?0<6U5D'""5$Y8jnq)gka"dMS7N?
%D'/%X5]8uUTTof6:bZ0C9;q%idMp"$G4PiUq]c5tG6\C"@BK>'3WtisF2MA8hT`K*SG]c#R=FZ,s/Z(>hMK`N<.V."Vka+;hbI5%
%?`D9NjhT?A6ifD4B!h<0784_V6MUuNH<Y[,)@;>)'\gA$cQE2&O8o#WIN4C=CSB5KVuIK'Ms0nkmZ-`c?.*A+rns7U#]Wlh'mOR9
%#!"q`F\t<+h131[$diEsqO`5q:ON'".7Ip"6#2"p(AhIRbIj0mK>Mes+al.T"?K.jXD=J&KBaZW#g-^P"%mcNiBVgriW,ad"-;Q?
%q-TIqC9UQL)I8eSm_n//c0NS)B=NTkh5Af)J^B=qA7cRQ^+,#9.tT$\B?SZfQ.R@C>`[TIl%h90UmW,!O9o<I'Q,0Z"i;4Nf#7[n
%r[%[d<-"*OT6M$&T!Y7Pjg;7afC7hPU1\#%dCAaOKBMP[NesBiIE2jFI+kHIGJ9P(q+6DB'P7dbb*DBe9>"eM>^CfBQ<i-ZhQ-KI
%>-flk.[`6$Yfk>djMWf?&\\\3'Gf+n+(->gcO(9;h21$==WI>XWXW3\W37a'h=L1:f_,(]LBAR_CEdtU/0_+J?J3V?5?Sek%Q5(X
%QAr+(D@@6LE(1U^I6VFmZ5V<I(l?N4kth4lY2paRH[I3<97,SD^K\df1Lph>OXnMRFL8\H2@seVeY/YX_crgTJN3U;rY$jmFFm"[
%<6L7T,#.o[.IO4g*$(>,l`-;SkR>oRI7$gX[4^XQgMYsn#Wh".DWJ0TN8t<hA#g)G$gAP[Q^]g)DHV5b@U_Fg1N'I*0bW@Hc%:Yi
%pZ6.!$!=J7>7UQSonFTST:92d#YP/+-*[P;$k%!,2/;W:OK3,==sC$lFogP^'Jd-UO]$.\N7nNNVAO&MJp,cNoG=eu-tA;f?ts<N
%$f5h@WquY%?[dFh>UdG]hJ^`g_/<!G4FqP1@fq?j#IIkI#f-&*Q,adlTI3#/JGXS.2C`2eOV`]9LK,`TPJ/n1dpKamFB2F>pBNkn
%of,YT@[#-aode[hEcBF!BD(r5J)Wfm&H>h;7IGe"B^4mte%9=E]KogK&i,8;l#k7C&n)W0:Vr]PlMd4=kB$k+J>WH2-)L0UUP^mD
%Ai0lLh*[gt+9.OSrf)DjX*munUWdC84JCZEBDrsOh`n@=s/UtSIYl:Pr!ISo)f8sYiP5B<?aRi"qrhdiO+V8mGGk77eSuW=-dg2Z
%+9gj@i$kL,Y:2>JR:p"/4DOjOVUqJ*W(CV8MA#3LYd-F6+qrfAEs>SZA1bV`A>^O67#(-AfWI^p+M\>K'64iS2I3DI:R4.h9$tc\
%q>Gcm>lP,#0<[<0^K'\!a1qZ/3iN_!beM2S(UmXHVZ8aW?/PdQM,%G=e4QN_H.cBd6Kjgr_Db.dkicCV`eiO`])#9X#AkC0=Q;W6
%@Y/qlJ;$9#FUg!ln%r^-_3'U3X*?i?40g#P$58G4?l'&MmDMAE;KGLr/LF@0RHk6P)ElklA4]q@2KmM9+LP@Ag;W8gTuIUu[T:q-
%pgBmOH=*eh=8TOCIeg[l_gVK:2YjMu]\j^("fW[_;6/t9_phJ.bFX]M^bQr!;jG&ofp+[C9ODP*bQR$>q\`,m#!d0IlKFrNib.*i
%m,pTV.=TU?I]^p"e/+\&id_]Q<CJ9,/^<1[K*_6=3'pk,ML`BN\R&q^E".o2^7B66+^Eam0Dr'o!?["55_`@R.b#`oc]B)9Oti2&
%;3'fW6s5;LTKEs@V)gMpMFdKE-JH;VQ^WempK+JcL^=(p*Ce8s6$3Mk&3rpf:A6#*1%5TI+ho&*(a'R`UnkH;7XM[pQ'-E(rV-AZ
%OE5QC'B";[d.[.!hYc[]]<Z^^m"[5q@1eG>)PF%&gKCBZFP-0-p_c79%i!H6D1rX-=W;90b:L?nK90n`>^HC>7<u\K2map`)gF45
%Y"T'<kSj%9>Ig_&W?/<?&,RluR8;ZZro\n(r0.04;Ue$q#lYJV_GN'g^'Z=jf=$q&;r[hXi7%H73=(d%D$`3"c:lLKb;jds`NK"a
%1_5)MmH)\hk[(\^2;P2Vej&[@s86+#,!J>m5-T]Mrt^+P\*p0NjO!l!jo>@l;b*me//8Nrhjr808Hg.TLrqLMkeOJr3ojj>1T,gf
%-@.lZb>9+(Re/1q5H=$=P.6+@UfMaG/=5(dcVBg8a>?fsDZVDd\#E_4`s*7']!h<AGQ=GM:EW#pWZf49qtp=TTC/PF9>:BCTC*5/
%kaF43J525l&RPWo=>2+SL\1^?*#Nm%gkCDp*HE)-GhBM\W,^3eM>esbBa:=QT76en"tJ/!O8<n4iD<b^PG:2BA6&TF_rmBZbaGGA
%W`^X4R]0Qh,q9DEe;7FMOBmgqaO>^a5'h`?pks[5@hak;[H9:p>3M?"C$$m4&\8C6Z<SmUZ<#JT,hZ.,<9a<<@'%aqa;m%pZkCcG
%T.4BaR:K0_m5BSSOlE3ooGD=68<i7gfdh_Sbn#>Z''sI;@p!`$Ym>D?"!KG3+QVc\KRkY,E4_s=rm8dn=Gq$UHk7'T"BD,5(n$5V
%-2lG2=8j@^H3djXRj/J&Z\_F.^ni^';+`!?ok%1!Rm?LG#GRbRJ$HcS#.<&1.)3YA/jgXuI+6M#DB%eM`B`u!rK[b@@<9ifV__\:
%9jLZnKu[goaY4A^JBaHF"E*A*XeI@i8,EG3c\2;-">L7X-@A;rR/lB$1*Bc8fR2A8l%;5&?(7O0<?-Vc7eOX]-uQB,PEPJ"dqetH
%(%dQho.-('0E2h&r."Tlap/at2W:>t^6%&,Ao")c'0q;0DEfmATnJ;f%N</[M95tfP@-.jU69h%^sH>B&VmO+5of\5?F^X#Osj^B
%5"^`@cpV@f$H6iWL7opkKRFZ-lr!q5._l/R5K>+'A6sF%(CF<h!N6&I0.NAm'moj?J09re<8(g7R#R\E`@JU:q9)qsBJqFf^b`$^
%#L#9*8qmJqH,^Oe%kt.o)?pEWWkgqFK+K'q4BN<q$3#"'4pQ#Lep8R!aSq/;14c<Q3)j"1J^>=8QbB3DOu-1L5VHr-.`&<Nnd!74
%U7ZI7L_0TX,cUS/'59a@'D)GpEm18(%OM*S9_tPW)Z\>7FOicFS:=98'1%ekVP%HW]`<aS?Z`W>5_+/;L^l1#ADM2,6sfsAn;B=:
%fZB':1We\-Zp6;Rp1%n9-+%%n/m=8.+O)Vq0&@h;PiRQ2$Yj%K=-2//MsbrF's[CDW.V;AP>LU[TWs3rk9FgM&lIR()Tr:i^cf>n
%Hli?)MK(%XiaR<JoEqUg?]2`KYf#ZO"u-*s*4Vfi>be4-X7-*%\@T28\rt%'SQge9&lnl`;0P9Tmnu8A'IPr1G9)9g3ea[fQZMQ9
%/KQl79K"<(OEg*tO+O0;8-[24R0c@e%/mUs^Vs>\B3i5D`f;5)NDbSB%@-2'h>CZIb=mU8_GuC)ellZ^NO>]J)'9*:>pd0J36DH)
%r0t3uM/-cg<Q0V6>=bbXlpXJ/Gn`a/^9L1t$oAje*:-2<_BM[:UL3ElUIp3!)<n#3JoD:*T2<TPKfNn^:e:qapo2(pJ3r]Igf>:M
%+TKrX6/5E/N.H37r2Yr;f^rO[ram,??iK)Hq^G6f$!VJ)4W4u?,LHa<-m?JrTLBr$cDJf^1";&5J!ugVO)Xc'e/^YRHn426Tk;Ym
%`go$p$!r32IaN=Q34i.?&9;EiR4P[S\VZ)\flg2#n_A4`'FYrl1bmp50fqC_\0R_h=j'&L2X=6`@F0Ns"AgEX-=P\]OHH=rhLJL5
%-'M-M9>qJFLZa.iETtOs'OJ&D"aqNGdBV*q#jjdng.iqcb"6!;i(B0.Nsr3G%1JiZ;AS>OnNU]DJ-m800H6[#GZC$;Jbhp&H?6&Z
%BV"-<e^=j38m3%P8]1p,k)f_O]n;;O!85=eV3P-\]kS/cfcG-`W3FWlq*jq-l3fn-G:(4<(T/AJqs=1UCk]hWjY^D`X*7iS)$'jg
%&9XdODBN@PT-V7FJ(\Xik7LHFp)c$1afUSqGNl;3.0%6!o/[/lh0K!<=Kj8)5%kimVL4a"C8$*,MWZf)%L^1/+j(fU4fd9]34@q,
%QCmR,&2"S+UKp`-N`25Q'%5tWmttrA7rY.gDfN]&E+8Xki"5+\$XD[F>*Tq25jiV$2qSBM/.12-E&aqH,H*j1CA;ds&kli(fD^^)
%^8VC#E5*!T9]1X4fmB#G'^?TbDbY!+m%Ot*LTKWW?miSRi>k335sgWsJ$J7C$/!M8EN'6N.YgHH+olqpAD+anEF(n45`,]rYg@C,
%444qi6h;A'3+T_u0R"`N;S"\I!Z]o4)YETb0E)T='.gtfWV!sh5*E<m<`rRoHU2k:2bl--^2KOV(NTF`]CT+J`BX?+&\C/6BC,,<
%?c3$nU'Ffe#n/=JdV.HYRRf/"Bo8:a,\];])6[I<'6ZW;.AI1OUq\#R!@S<c1m*CbO9rsa4fmHR.WF_,2+]Q8fQq?bW!(mH\1p!D
%WoG"58.nPR?t&fg+UC\89doN?k60M**4"A"-3Alj7^kFQ-F-2Vb";%(b5aFd!\;*1a[;>rXicj?RfuMiD(;Q-+6OWJ6R(XV7Ois=
%$FfmD0U*#/A<!#JPf:*>MO6_@F&q#:#E8k\&9<.?,rE\E<mM@(lJ)#C$6'!ql7V@70e7;r"sg!I_a.4j1[/2Xmn)"q]&4ma4*5\[
%L_`Hq03EudImkn6ISbh/ori$7-<Y35^F(I6ZTAQ+R)hM!dB"gecno]#M"9Q*0Cq4h2X%ou!-""WZ[t!O#(V5#*-Vl\K8q/lN?1?Z
%,[9TJ?@Z$#)h7tEcsR5mQb$f]'#1'S'IFd4KYSYk!+6?mMYu41Gc4D2G@7X*$k[3BTg4flWSCe&aDuIe0Q+o#"NV>T'14p]lf$7?
%#L7,ROqQob,:L+[-j>Z(:6Ba>-7nj:STFK0A>sp=N`4amR[e-J1H)u]J5E!,:PLP\YVX'ViV'!Xmin\W\IBis&"l*5oGk5?Q.EGA
%C`mW9=9&Kp,AD!S>Kcl8Y]3jjOemVtq?2?mXZ@@&c.DmmQT@9C?ZOP*YKpQi!8*D=$1ZuH2pVGM%DX3Brl9"d&2sPdClK[V4D,!'
%g5mJO&4n.q_1QM+51Eu`EE+m)6,/2$`IT2m0D<=l*X/#Jr$U%]D$9^q1H(=U"ReO=*)(WFY-GUr&03Nn;+6]XkEB:p1ph+A;bNd0
%O"u/O<Yu,(c&:KA<5p:=X!A6"(].q]U(5sfJ15Bs=A_urPGJ=[^W8^&'Rt#'27b1FfjkM"+nYgZ[YDf#:,JTTF?j6X@:ERHRj7b6
%YPj@A<+P3K))-/*]dh8u\VBk\:_M??22\/KJ0bidi6"O8!@VO37Dtd(Us^4'j0OT.&L--M2\q(6iia[rk0tD/4gS,;3rRR81\Kr8
%a++=OIA-9u\4)l6n_FW'@"5nFDZk3IAs'?Xh3IE&!2>J3Tm[1bcm[b49#csN**h`&e%g:Zo0n,Z3h2V7hAEUE2H4<S9F7.P%XG!9
%Gk]&AQVhX:GZhCA@+Zp_[i2OElN].@K=QbjQ0-F\m[8uj<];;<:ekKFZdJE[2"o5sq(bCf5Z.]!Hr^t9aIilcV[^H`C@Le5P))%V
%nacJR/eX;B63u4Had`'H,SM+GKNP;6FApV/j#+'cE&J*%YTa$LWZ+Et!l]_%+C>EO]<E[0ag-`qq0^i0\ZU(g2IbWi3tOccC5#Qg
%EtR%_.WRBl,$^s0"HR)1K7ugS_FEfA3\#+5dA$dh,u;6f&^)0&.usj*\W]5XYXqpV8"#dh[%LaG*^dunlcYCF!LQ]h.<Y;&"5Zp=
%)Zq1>,Dld.JkbC0QsOL"&;`QS%lAij<:SW?+q(M3_'?IX8>*r(5m!1cD+;j,_];$r!0092,e?$QH0"QN:b33Oao-NcFa?5QlmFH9
%@=8]I&lr6EqSs2#J-V?&rq#IR^QsW=+3a<n,kq!*r,27Pe]E$ren4e2@POr$j8GU7HQah&Qa-=k>,i'(LNi`]'.0MIbRTsm'.I`J
%J0la@;8Zo\X=IJ-5<mlJ`[1P,]^,(!Fr7H*\(&'.dcRiTqQI)!#:5Ma1B$,1c8h[Gfg(_,Hgh-kUsMO7O4\;O6fUYX('%EshN+*j
%h9fd]7W^@qLV4BgVJ?GHkSoY3R_k2lj6B!ONWof?l+PfC;h$Sga\76P5lr0[c]QJ$55hs?NZ87b&G3fDa/NGH"03Xqi`\Q.&M'@Q
%#F_.&`;gs+f#te_^gjeW^\oo1=7,eE5QC+XApcqknGHQ914J[GbetOkEX9f!dXe[cGDBa$)h<sG&o,AXU"+<dm<>p%B%IM"A%X42
%..bT@N0tEN&@5&8Jo.7W$Ab\"fmGH23Ph2<*rWNfpsSXJ3/)O!-"/pSp_"2%kD0*4*JtZ!M3Ej\WUPmr!43:)(o'LkGdHK=\r94,
%GFpQ&#qps!dElG)GT+dW=n^LP6b60[rM,F33'e+M[P$`9'8_I6$-rPAS6BMZiU'LoPH0G6GaNE>gk^gDTGI?R%lJZF>#k1?U<AF@
%WEl*'bI2fN(%cOA!bcPgUapG9nGutVVks4bT@U5bm<ua^kf?EWWBqbW':_JI(]tQM#X\W(]2Y9E*(WV)e.jpS/BKFYr'B=>5(AH^
%s*+5Ps*VlK^NfYe\1l%27kP*u6UA%=1c=Prne=#,JcW^n'N".)"J9E!Cb`5`7,'eJHMNOaP[Tss-.I_[bG%_.<e+[S]tX.I_@+Wj
%r&@Ea\VHmJ;0?R9V$EFY4f/ELr1tZ3@JX^i4*rM*S)ONF<^p41LtH8\WDRNM@uJWVHu[/N]5NZJ"+1pPr4[&%ri6#j$qXVXf+sl-
%Ek]E89uRc^#Y1YJgdIe+23>Qi+N%ACr4$p,/e@[dG'"n,`0k^I!4i\`A279([)`G_Slr_B\q9TGiG2Fp6Y#7k.Z;BAB4)uRWrj^P
%?j&*l==Q:b5Sem870>%e+csmnhh-IfL*:4u=1D$@?"oYg(NFQJadZ#)'hmG97g]0CFJJ*hZ-ieG100[Yb;^MLe.hWaE]k2#>iqE=
%K5XuDU*cfX8nAiAp"J@VLd/%KQ,P'+(_Mt/d\CMPUX7s806QFNn6EeOLV\[@E3/#,('6cb`:!c9""IL5Z^Hb0.m,4]35H/6D,f9+
%nm4=bOAh]1bS>Ap?LGW4\?TL^/>aU6KZ2M93't-F:$rki_U1?12MhcN&pkIn*0<@K<LtZMIkm="AiJ3g=T:%5<[Q:E&C2R#"j1_9
%s.lo46L=Ba5sIVDh-Z`Wd+)tu3dq(saHD%8NZZM&?#QrDi`U%-V8lD6cB;J%3Jc8[JO,d$9>HMAm.FPZQM@1=<ku^<c$7(>L"->j
%J98TNm,Fl#gj2C=g?^MY!+$21)N9O2QG=#o`=^&dbZU.W^MQ;e9fYZ'N569#<.Lc)&XPBI/NGa*^Y!"]&?$k\7U$L,nt1%'s%2DR
%T61)4J"ZE5A'()OV`uhH!TCOL^h<HGfu".\#U'dAZb%*&-pK]t6m$+FcRuOADa3ph)X9hBq$t0Q/)$s%mG*+S""X"CJoaG!bAcW1
%Zi)W^lABc1Z\:"s?`9@+-N_ku/l;6dT$AQ;$l8ohj%.D1H45(gi&Am?);jBQZJ#0)e&i-?&0#()3GQRIh%5bLMT-'t*),8K<*qI2
%,PCr?-_&RA?^Kop'>)Cq4%XK23AMW3(kl*4o([@TlQ\<eT#^hXL^u^Tf29AC)[:2-\0b*W4rg69ht/II4q8S7le4;RNp%N>%Q!nX
%HX6i^:]n&7-_c+Bn3>3f-INlU*dh46O@2HH(4?qN)jlm<HAQ/J9gb`hX22JD977'A*8mnd;+bp6MUb83%Y[8n!fh$loO,EuG^@7:
%!6AN9aMQ'Z624RO!laZVDu]fTT1=f;3.?f5'/EMC=+Tt=W`]nY-t*7SlK#%[:Oi*$5?Nu^l"+%Ga4BZ.A9e\#'(0&D(+c1IgXdS2
%^i6R`F5dc,#]c5YKqEhY07<YlOpp!QE48.1cf22+p2VGV8TTj[M.<nP;ud>H5:I&E0r1lkjEai\r1&7VQOGDkILR@:O_:l?:B.E@
%-;l3LWmXYOT,bT?oaAYjfZOLV\-`fb9_S;PJ,c\5=A_Ho/bkM(3P.bk,BG$>5u*]^LI0D"9ReGjMa4P_,]-Vni"gL@H[Kn^.qL<h
%=R'XHr`QSJ,&Y9ikXn0#\*jac_][0tIS$7O_-Dn!`Bcm!pf`PEQ6ECM7X7uN?CZ%.:`Y-Uh'_5\p)0#V2&r,4@r`@K)YcG4:db#,
%*1folPQO/>jXq53K;/pLP+"PS;mYjF8#'<AQ]@qDYtB\`H1aW?C^lGt1V6"6'TXogDNmp)o62_LA\>Cds,'kAGD7V-2jeCn=WW#Y
%E/S69,'g^`=rGS*70\BS(f!XTeU95XR"TM"n$ApqZF(m5q=4T[F%^afOr&LN"pB(t[ih?7];?o\_rC,$h8lT658bDW&PD#K)!8;W
%_7(e'(LESP$?>+E\8*W2"1-<hqSetd#%m4i+l=SVs&%l$$fL_$Rj2L@.f%A@3%T7u7_5o#F=T%WT&tY2l9^L0omta+`-:-BY6;WT
%,tg3EI7lcR.&Fo>Qa%&-6[oY,o7Jt+j[h[cR3i>.+#%gSJ-5!9)sdQ4kAtVI-$blO%j8^H__4nuoER)f-&j6tV8D1]LuM`J65B+O
%)'9Sf-HO84aB/P]=#`1m5"FZ9P*VJL#XV]U^H`EuP(Q5`c6]@aWqHdB6<lMH]f6c.oH$DBN$dOnIWIH1;M_b(e@>ke/\"!@idNpR
%rBeBii?![LZH8OMk57-"[#l_PE<6eOM>iESaZ\a).eo[8UK:bZQ'`2H57SH`Ap=juKFPIU#TGI'ONa%IWJSYsf$K;=Yi3H_qbZ.5
%3QOh4gS1@5NG/+B"\]j@#t\.?&*\77,3;-kO=(FM&(A_KI:OUYKT2CaT^VE/]HQDH0FX6$l0C!nOKZEo15&JQE@[KUO%"q!#a_!3
%rk98.M`"^(K)DDi,La.+<3;@+1sd()`R!m]+\90`7r79K=\(RS$T1]a4iGt6Db8(acK?U>J+9okG>W(*ljDdT=C;=_LOC6=!Y*uR
%bcFk#QjkP@&B']b[`U4/9Gi-&C](9!:"_>1R6UK/!\WYU(\<h,"qLP=<BnJ_%;$:Z5C!5].PUX+/7PYcXs"BI:`!Ve/^UGZ3VEgI
%M9mC_qEt.QR^7`JI/6TfQj<HOdg!'@lBjP_7'qk7RCS#Eo1ST$?m-b2*<da#XHkG+A>=X;4^bRIK=g)Wr6fcb@rhb>&tBB&P%,EE
%9;osFe<il<;`KZ&VMWM2,FT6XpI>I?LhL3jl(NY2\<^sWe-:J,s3Q@:`"I8G3n)/F#+$6`KS,:mCDW&M.sB+lPF'*`%hq5$@')*h
%S8HX.b".%%BbmtpMh<0X7RQ;I^;(/@N$&i0,*JO;*Y#$8Omt&>PeFn7F^=8PVtrpOPG?[4;/&idU2$@Q+&a_Rl(q_S^T*+_d]<e/
%2l$'(=im\]YSr\2M=3[)<X=ULG#f9@!@u?r.4Ch2QLMhTA)1]T4ALOLR#pJV&JFSEbU:W[I"Gt?+Q3aoT5g^kd\f^fjM.e>2#7[.
%*pTY(A0Epseh)F]f?f2%oQaA@$,bQ0'&r^2=2,[T&r1CN9aNuLRZ0DE<sAt:+\4H!We'r7)?$XsHJZ^I?O[2leRQ$fVLUkra<dLs
%+*mr4PXi+B\"TRNg-nN\<@6A'O;SLsM]$BY1E]9:itDLOMQ+b13cm*UM#fE7LeO+>!$U9T=c*=U7HfIraF^C!.):?dN9CMDH*5C`
%aE/hN0Pn-%"X,sUnAk_=_ecQd"Dc,qA7+CEUUOS6'RIl$+A'kJ:<>>ELh\Y_kiH4&GYGK\rI>3p1*q@Je;cjc9'1=DAIqKHoB'h!
%-_0>ARF%G`0<rbih[YALPWgf9OC!tG!i"dZ.g%U0]&@*0%&aR'o8lpN%^DGDlGX^SRY%fXQLaafdW`6f5`gk;SqjU9DKNF`S#UuO
%d"4)V]ur@C+pfLN\<.XYYb]UA#:!cE+b>_-;a&=*&SFi*.i=!Ag7H`mbZ'-TN#!Bmq[Hi:.('+D#CeM/D$=W)%VO!4Jh8t@7<V`a
%B:i/r(C/5cNF2q]3\^Bu]?RG$cnIKtrZc4jID!eS#B"q+IDPV0JZ$'rCkA=>_*J)0"[d!W%<+8`>lm4iV7Zr&TAqqoJlcfZi*[ps
%?\^7Dp'^&QU8E^t,jLp(*Y,eI.;"^0^'SgtO+o_.RoBWB<GQ#>HpB!Pg3%NIY2_KEhM8BZLB^eO`[sKc1+J&uWgMnnkig=SU7:;b
%9ZW!QK*n"O'OX!7.3`*[#/KJr:\>llJB[2U3maYD)Q`YK3CTd2FY]J'ZjL*<mO/^5m_lQ\i>Au,\le(5r@H,`g(%eM70>M&2,pn]
%3LmFE:(*dBR@IQe\0/XXpN@pLnl1utW\2ZT;(3h&4rdj]XajW<k(UELs1[1sIqMP,VG[GYp&=VUaYVWRmi>Q;k^hYm(?JG0.J@CM
%qQM!n,CGJ!8]$WtYK[3`U4FIZr6K'.,Z$L?$^_`Mq3s<A'C=NKp7kIBAtaM]Z"#N"\K2(C;CLlUpnJ;=^^HBufdt".AAET/&9?3n
%D^>!8lm83orUZiL:/Xa]mA!Rk7iWdL[QpG<,uKUY+qX6^GR2tD%`aJZkp]JX^f<Y>OE_(,nO[I&Z-G;#DAB8s<g[P/Pbr)(+<K7t
%j.DhoS^7b#aB2Qa7Xg35(P7dC)gMU:I3#>/5-NLQC&30r3KT<[D5tEYs#5H&cfB6M)L/r$M<8(F^!B@OehaP?Ll23-"TJOhqZ&N'
%=V0@9TkQOH#Ea,u9I"62l9qk&dh@?lqX*Y@7fs_V6qmNVcMl^&B+GFk`UK6i$N@-;;eXXR,PeKFS`f,<B&Fr5l#75a#1HtWEdOUc
%k:i8/U:N&FFNC=/Ee'V=)Wp^=;b,3oQu":D.QS:gH^%(n,T%4)rF1W&kB*uo?6bHA\@<CR5p*9LbeV2o'+Z3ZATTXaMJhV>i"?^!
%P1EnGcCe6)Hq$G1()>5m3uoT*-/Ll9ACuEj'H:\_&-W:,%A#.uEEF[R*\+iCp<^.d*!@Nb8>/q]iCBNcpE*]'QU<tSB%4D4e5$^5
%$TP"hM&NHG!LIUL.U)b:.stEmJ,4j@qds1k8KB#eR\n)ta[f1^OS8eqQT\a#o:iLBgD_-F=])/UZ4hHqa'K0(H!%X;)ds^*-f6(5
%b*!o%KL=kr&X:Q-32"Sfqc-*gA3e3$`;MJTJo<KgVS<1Sj?g'OW$8d3$)*(O8,7s.%"O#LfgQV\&pW5DGu/JdTUM8t6io"o_Q"0\
%#h/n=LO`K;?D:mKA+@&pd#G>[J6<nc[YKMT]lkM"JF(sPJQYM*MReEH@%<Z2]0RIfI8uq>9UKW\8<9nMMM@!gZCH&$Q84758I]E=
%4F/?QF-nSq0:4)9I;,bpTZ&1qX%:Tf\HD%8Z4^6M9E>a>"Q>)S>tYPTF;@HWRFanT&La]AHjIrTM=p%#llhPq=Z:lj!:m!t])N/%
%c4X`q6TFiA4mnjR[K8bnl'Y3XbT!$XN"7tC$ICcK8dlD^jc..]-X&,3[YKqQ<=j1g0(SY)2?aCK%q2)%El=[BH2>Nl7.!l&*<aTc
%ETK\+fP"66MdGEYXjS=CalX[)07;9'5lDCYo#\@4ehuoX]psmS#F+B#hq+24:&4\t@D"ZeD@h[cAVo9Onk<[JbA/I>8_b<q:+PDo
%-pq$sPZC=A"3?$s&ltM2IJd[NR,+BC1c5e1_A3/C=BNQ:,K1XpdkjkqVJGG:";ZUm[X\uKNl.F81UT@KT%dcEPb>sgm/heps,CJ*
%,]%LRKKJ#!&L0dh-YB?S7R*]%3[@nT^<<="#\K5C6oBQ/Zli7%I3\Qdph>=ZAMrQm+S7]OeJfWVD3q+T"*Of3EmOV]87CK$_n,>A
%!0%'e3P$?44C,4GHt*9.)&qu.-j)a:N3oqq$QGX)q\4;!U1@R(0j.#g.,)__aZ]h\6T=^e+_6?H*t)oV4:u7G.ic^%FHWT+]JN##
%6HHM][uiT5ddUHn+3o6>r%5R$pJjXE%fCt-!a/172k7%_E%h]EdZ?ZtaTX"+X?9,ld!X8VfXGRK2Cs03-3k4t%Y^b5AoAjPEhnU9
%a]i[:(JbUUj$!mA7G(KE2ZVhQ4YlkXEpGDIV'LWcaZ!4s\_AS=aak-,R*%&FlKCS$6FW/P!(%19K*:]s+Km$;:'#PH1^64Lb<,)7
%PVG0D9VOZQjr([_b/NKbSs$D5;aNC6pDZ+=N/nGk>t#EQ*I;:k6"+7p,iY(t*ufkAWbBrsJ1;DK""t?$.:3hn;i35XJRT'TElg\3
%FV1#C$L=ouF@_kt*a+BNNtYKDD8je!\c\-D.163j-+kl]GPJ\,aPE`s^rH*fl0:Jc;g"ZE1i#?C\-/F=k-2HY9+\E)&,"n_?NU6G
%cesMY#JClh5@keuaoKT?<'946pc,??Z!Re!o@u-h2Ga?f+?8OAAA$j88Y64oi)l3p:[a"!h\e5p8/DVi<#>qr]'M,\W@3%[J@O!!
%m?6V*"9d2<TML-%Y5@M*pO+j^#gghoA\9WYWCTc,8UeK6Df]bWlaQj#V"#`D+n"g%rc?e#^b.\F-=g4Y'#23#]@3da"S<UOC4Us"
%ki]p7kOA<9&117d_E0(?]aDt12tu<9?1BZnq7op(bp%UA<_u,G"PO=4?A0=#a_EhRj>:-Jq+BY7aVJ92Z-d3c>Jg8l5;e+"0^UCT
%U5V3F-#:;ZKVXC9NR_t'7e2m<qLCm5Pm%;$hT*KDO*H5[n@rG?17o6['mfuS7sZ0lVC=-g2s(s)UV;uOI?cU1LX%>q$QkONUCZ;p
%3;P'I2Wp<dn*0d?7dQB'e>(Qsl:LdP-s8#8nk&)20L#iVJQL?uo%Z)T"5O"Ab`m/'W,mc?A[;`6^fh/mZ^.uEWq/sGM/O>7dDcAa
%PQGRH,uQp!5_qg&T'(PtIBZ0/'`VKI8*6ee+=KjnO"%DArpgK$p7\BP:6A=.,sKR,)d)f^dDOA<p/M10ITnd(jNjM@W*BL[IHg4j
%X$Vt&J7&r8,(33XO[WirKC9JJ#/NA6'9ion=Ouo$J$[cEG?IDiXIj,"Q@+#J5]Y2W-ATT>.Zh_DZZGY%8O,it>2Ui2`00oZd\4]m
%A7EsTA!<SGE;5,i+8o$Z"_Z-OFbl)H'i[AoRDp_e&Z\+[R+I99pBPNu[R/.@B>*m=Ao=:dnG"mJ]Fk(rFa8W'W]hJ.#VBUD^[8??
%gY//POH?pO)h$p`@>GK^iY7RWDp0]#d-)3&->#b;pX.6Z0AU!t)qfiETg%"l[6^2Ok5ig+?5O\t8n(&mQ@>oL==5AC"@5a*(rbbp
%;A&EcOcBe%=8eAL#%bf?,m,mA85EA)>H$Q$d3PeG42TI:c1WYe#5U<Fc85N[pc&!Nmo*%Odc5a)HNr)F;7eVU>=YJp/m,b;GIT\%
%UQ>g-KJFVJFY`J"Q\-h,-%4!SL1Hub_D,SVp0Xob0;e]";m@X_;-dc2[=ZSf/LDMR8.8%$^[tJ#ZIV^DVPTA"d?'=;[5+qhT*;'+
%oYF1J296IO(Njgb^c#E.mbF^J7#R72;$?H</>D(8,3*"[K5(jHo#O02Bpj`QjcYibq1e&Ic!pV<BtoS5p[JL]TeF5]+j_$H2P1LP
%j,X:Ynk-WW'Eh#]_f(pDJiUFT&mild40JOXCj)ZRi:2@DfrnqD$kbm<H)UW=MSu)OGYPrIc7)KAd[H=^(6WQ#/ABbO9*UP34XB`$
%YZ^INP+*dJ!D`>pP$;*<D#X4h7"Q[AH!Y!(RI/TqCiQ6.<=n0f;^/CP3uunCkSX91=L18GN`4YTI1-hiZeP[p)9D\j-,o93)i<+=
%0NI"$?N>LQcs2g^QgI/@*&hbDl+X1AgZP6J:2D@j^Rm96n6Y=u;3EIZ=*mOVb3^-8Lm_,$5KFTc^!'C0Zs)2p\io3oc_Y^8bp^p,
%%$&XcnZKFnGu7IWMNZq(Pjb69qmLN*PTo1"T4eKq)pd?b9P\k@C)eV*MXgpJF/hWM,VL:L(cVk;eY9P*0j3O6\K>56Ljl3Am%.Pc
%$#<"haD*,l,";S/HLQY3Om7Jq923r0!gOqfXE`X$pK<%j02b/"FN>41&R)JF]m>YMpU-R=Y"aD-oPg#p?VAN5O#qqY_rEUrUfitY
%"C3M3Z\5"*e*Nb[MX#o)[gC0`_&l4b5pD9lM=H<7VIaE!U2DB&#J*Kc.A7E!U`]Z$jD[77",>6QK<X4iRLQ4iF*5H5T-LbQ8<.38
%j<S^C&BM+k[M5N/S!&Njb"%+SZJojpn;n35D<Z=KXm\1M4SO:Lfde,1.22B9eCHk?W'22UKilZ[O.>=!86_kEhia]jqG"UW)__aL
%Vd=sW.7MgWcNnf*m4Snr<Zs$L*_e2X5TVGZMBEJ_0h;T8i;0S;/[M0*;oMl@bVb<qN'cdoU%u6ilc0sBpu<giV7A[^.-tO0'Rf6d
%D7Lt*ECACC\89[BT9;qSr,Eq]q@RMl"%5@dGN;ED.UfsFOnK9H\Ola8ZL-3/)H]oe<jS/KZS:N*KnDc64X(6)E@75^k>LJre`!E4
%1Tlam@Ms6Z^n""8a6_2*+dbI4N>=-5!Vl7LP"$0.(g*7i,[&["gSq3+af#?A:.XS:eD6@D"rB2j!8Z.q"%YQfY]p[HFDRcqOta\f
%`urrthX(YOD[KW8s%dJ8o1.?^4DCU3il9rdHFo.bQ;i1QS-lLCiKL"dDO*ZL)jpcB0*ASqpA1#8U?HSAcGBL<\h&]p7t*DHdQUNQ
%RFLt.;ufC#((6HlH'1h<>m<EWMGZfF7G_.ZH1>YW6-tM8"GT=[qq(G3>oY*g2h,@o<,#\@>YF>U^XpXacgeLKUpjWja3dVk8`lX%
%01eB\K8dD+V$XuV:0,?R*%D0o3K6URPGWe!AOST4*hNOC;HQ@hG-Eo83JkQ?#A.p<o;0pt(K9T3p(*i(?a\VGb)leXD]7m)?Ts.%
%&g1V;',%Gq7fZ7PZW@WJg`n73S-BO;L^rfM1Ya.I`u-hArZ[dO[@FpjZS)D(![X1=&K4@#32c^H(:GY0UE2V^.A85J)k.LHE1HIe
%\th6sGu%"KA`'qM87b"2$J6D_E(s-%]GQ[`c$CJW2l/p!lldqt9;=WFcu?I(Q+J_"r&cM2KbG;1;0K1%Ng>*4)!A&$@<Z5:<Gue2
%c9iLn0p?Luh$M*FPo2p'4Aq1ZdX9+YB_Ok/8UB2q8I'P]_/)@.U8#t2k`064G)q'Z;jI5ZFO&QB4?O,45WDtq^t?hW7O:$^9Y"VJ
%%:/(sUc_DBq!'Pl1o3D-7;g;uL;BRh+3^^/Ci,l@!dD)K*k1N!V6ZbUX<dhOBP56QRgq8J]\Wus.\]^0[+CWh>#7Rl%V0cqPiEpE
%]LShM+K1W3>]M8jdNd<PQhDSu9++<>&@o1-U7+lE[ToLG_PJiN\>sM6(6TTHfPkOZ\VW=,-@-L(-#htQq,SQ)J$WhgZ-h]tb:8R=
%ZPm_j%P"lD/#3A4,_U!IKS2I!9RAHtP+u)4,kgo`a+%?+l;(%5>pd1[O@1-*2"\(IVK.AY"mcX9Mag#"?,+nFaMJ]o2GV,W#ZEgR
%09`Ghq',1Y)]WZJ_YDhS-e4AnmditE(t4=GipC4_V5EW-jI2?^H)VTc`[X(a-IqLOl4V$JDf^Y?11X(q]V+j>GO92^in.80%-Kr`
%U;r7q7+fN_#RQ0S$(7aV;:6<%+BdtSQs@OA(<%lHKFi%INfra%1@cO$:LlT/ZaQkQeTi.cM\:W/TG6Ors'Q`\.RkW`p9`L<CD/#5
%WIo%7i1R8YDA,9,e2#_5+c3UT1tSb,3gE'H6W,/$TEtIWN:<N9Te[tl&Ya50\gi!TbRqhBN2>Sgn_II2l?'8jfVs.kO!lD.c(R3O
%1FWt_98[A;6$M-$_PYIbUcpK(KPkVUaQYX\qX,RN6!'R.Q`3bF.cR(X5^;Sd#MnG+q]%Lh#6[0,b8H#WIrMZnk0,4r*i.hU6pII5
%m*R-'33FO/Z&dDWi<X'<ouME1c^?r#/7l269(Mp8:*Ia#q+J*RA0^A(Hrb13BV*+%C,LJ(T`\(6$"4kfc=2)j@WLiZN5k>O;16qF
%bTYO!N!ua;Y$ok(Qb%tXWYL2c96t-BLUqM<B>4V_Y=;C`]Lp;N;e!F\hT)MJa&VCaIn4m7]<><]hcCPP;W3g<UCjZ0,#D86+_1&5
%lBEGDfR/@)$'gF7\`k:Y?em[+"c)926/j([CrDcIhZt\>hImNZ7L-"Z".?<l6?^j^P>0j%?h'+De8A^V\8WCU$QspiPd/,)>rF4`
%flqgj%.&\`R&ac$Mf&)<5E>fAA?1Y$<i(HgZeZ#Y9XH;:*E[)6Z&t`F$67St8<fJLpDoD`^4B+;^6.dgF;$o4!"%iHg`!DA%NSR!
%j\-s;+iru"KZ(j$&hmg#E\R-#+CnI1^[24Q$Cc)\oG\qr:B=?c9Pg#g;ASjIII6nkXG,?$`dV[K^"Bk08A&-<iW_T8XH`]iE@]RR
%C.<fMDIH1AI*t/SZHL?`VV[K3q61sTE=;G3LP/4!Ve!`@*C;&25f5B0&HW;%0<Ee9o-=.PW'#9A?OXeUhJm(&,ob'MoXg.q8:=Sh
%M)$t,I0A%kRPml0T+r;$$<^J!@T3Ci"#!WLZoIDX!YrN/mA.IE<S%>iM2(cYm'Unq*8^%j+WU@/FIS:`8Ug5\P#7rolV\)]P;`sf
%rMt<UFmBSRO@1%_iY.>,;#qf_\<K=kU:q-ZRHi!i,+9&.cAM%g_2-TMe(!-pA#QA!F4JqrOtf^C9B;_?'h5dX'&FHrRI`0L#EGGA
%)IN"3M\5Oa:(\,$s,O+)&j5G(OGb?%]g:X!kROt174ja'1R032ZSFF#bur0aTs^&WY,6I_.-Y):DN'f)d:6`+!+R<:TpEfDJ2A',
%)@QXr&C2>Y0'pRHA_MGIW4ne3;d$1;Zg/$?4Dt>@OX+*D]QeRO&XVp[Jb$mL/b+fmU>2)8RpuBrPb`Kk%=5B>V&\Tok?klZZ`0AI
%A*OH8A8t1!L`=2\O[,q60f"V"AWpm5jKQ?,nOpU>r^<8kba40p"(I;KKNqeoCAq%S-Im\!GkYRt9_6pPHE2Lf=1oN-[EBXT\`0j:
%+/!eel<0]$EPQnDe@1E*4>*+c2npYMf$?:Pr4M<s*WjIH5K@[<]CsX`qW@5"#PqhaFZsR_@!8K8?;S$?FR3";79'.L%k:<Rl1JQa
%MK82`r'8^@H.R60j!EA9N*Z>]#=\2p.XlmnU7J\&b[PlL!q/e]m^r2/@J><fA-i@?Yk>\_dB4nR*1+VG`kM\uJ%P*jIKhfOBV*<A
%UagbB5DU&)Zg\"\S)J*!XVRmum6diA;2=N"U[V-m=mC1h",sbt$`!2g]/UfQKoaqFA`YOlm&du0+1L;ZI,%%)5&*%2fIhR0TpcVp
%]C5h*lY@ES:&S?\/GLiFe/;rpU[S;ELoM+Af:]:fN2u6kXoO^TRKl$gi8[]+GY(rc#ZUErfj`H"G1?\*m*u;5<KEFJIhl#j1nQLb
%HknB(7n4Sd'h@Vg,Xn,4hcGh&W2jYuqkNA[O4%2'BYh$^M]OOn$L=I]8*e/L+#OQKEV5I\RKj[C<na;%4Jm9$)\0u9<%u\ZbA=%/
%l065j,lSJ)KR7XsNbf39?1U;d\b'gi4?B2K)q80d5YnS2_^Km(A:WhqH\fYt5f+proFsJWPW_:<_I&,18&$7gFjrSN,s(<Q1"@pU
%#4B&m^V&cCh;]Yhh1Lm6\RD=fY5fC]FV"*n/g!R54k`Y77c!*hm$n95h)T<%4Wp^)\6sKiH/.k`mK"J>X1Rdcaedlrh;aad\d,0L
%VUJOa(\)F</9fq1+c1m'6ccjZ.8ep]+c3eN.9,,uXT/i!h*\"$\n9PWg<Nklh;_i'W-aVC3j?q-pE6_udTjqf5u9L,\kB9-YVs,[
%JNXWO(^uZQi+ChgO&!9joY[HlJ_emU]nMQTql,Gu?&&2(HslE'l5-7j7u-Bb.&<g]pVtp@O*rX(i<.+jFatlfi6X3>Hknn"1+'Q9
%U7RGd3.`Q,i8EomO4"8(BZ^Z5%khCY^g6d:*R==Yq</s-C5S'Oq7sY[jKa:c+.Q_PLs3#L5e%lF4,bu*N.#]=SE!EcPn+-FfO=mp
%Jo7NiK!lMTn>L^sK_19J=[j5W]*ThLA9cM)HpB+Q&=!bsfXS@?+$Iih=o!S`'EsY*q7qqZG2qu<7k[_BM:0ElJ+]mkCq&iVqn^R>
%*ba.hRRRJ92%@oM[A[e-l(_8'.QT2_@\1;,+!AHt;J?q2>.rB\MVlda*B?fI*%b?YccQK)$'hBCf]Lc`MGa0LNEC?R?roO03usRs
%3!&E/L')5@E7DWQ+2O7`kGZb+*Z7*Eb]GqH^?;YHJ?Q)%B?S)0ZD`D%<B`*gE)c4t?29#T)5aCU8%V^P.XZd'Bt3lN$Qfqc:G)tr
%/K)R4$QkI$2][S_#]6VApLrb6X6[3#Pa#U''6Ohs?YeFDLQ^"lWdD+KWT6i2OeNjZl5jor2^FT0O6/([8)9r:#ZF'*F-Os*+Hgl.
%;mP^1ViZ%^q[k%<f1`:=."&D[Mr'/Kk&IkS70DF-7?c",J\\55l?O8-6W_5pKo\:u3XQte$lZ:`-o]:G(riqgmK"6?@Q<94,C#UN
%?2)-k;DC$9+2OiK."(f3m]o?`\$B#e")",Ma>7BRneNV;=n[B_&83H6*`OWR/a!N7UOsV1%rh1VpNNY*ED)>'a!k!DUNt#%Y'YOo
%D80'E^s%]($li2Dh_!?RW2]QDP2t>kZ=m`-"Muncl:#?lHoa1Jp)=CO#nMDXh\<kkbhXb-c'BSi@g&Z*a`-aUd?M!W]FWDDP6ZJ(
%^?al7?,W477fo\-NTtjVaXr-&YAQJ8.qK!c%%ZcX[9GsB[)<=L\;XsD%uF$Mo1%>?O3:-9q'f1Q_rF5IkhS%h+?]Q?^/29?fTKqE
%A.[RfIp'sSHiApt"$#e*N)IFF;^!]e)+5J\g=7L"TrNNm5aS_&/=_gFqGcOnn7TC(;ut[(6c1"On?DPt0KcDWOUu4/bZ-K]oS<Og
%`aFG$0h'Sk<I3R/os:3A]n1)@#tsJOF`%rGMWj7ce-dlc\p'%oX4gbAV'X0WA5H9!oGbf2L=(gkG)'?bccNU'jsA<s-T5KiJ8ejr
%bE\\4Nk0YqQs=4:07+RImQEZI!V"SEJ_uARjR@E83u,jn\+IFNkrkRE4ec`klD;\3j$p^^Od\(n^n1*r=;:@d:+Be,g*%W<!KSd2
%-b5"42l/TNFg6WQ-_:sjeIP4e\_KPSH0-.\!CBRR[Yo;9e+=H"FuQuA+\AY[htI#/)\>[%:$%Y8A\(8F\QH]l3PNn>N:<&,=fOd]
%`V]dT@G0:\j:u]A[s8SoNBJpBfX(<>89eV[!U\pQREs(+mpt>S]Q$>lcb>?:V'tR\R._q(QggAMVj_DB*%Ib4?jG&33E[#Vq1_a7
%,b(&R<c,A97@G\Y%BJTCe?=m%C=u+06]8IOb9^c+%0m+>/OPOnoec@KT#7D?em,O_Wt>9&jm.n":7C8,)fO[h;Yl]\G=`4FH4!eB
%Hq8R3]9-[[\5<XN!JUGqG);8Wdo4]5meRV-F$SNDjehr-.B.d-:D",gWl:mr(Z<r,aE\Qu00EM-Qr@aAJ&=g1ne[%m)_\[/cj<VA
%>nJHRFG4dN,bJ,9PN4Qr8/mVsQ!"St%CNH+@cP<Z!dCcRhO`1_f1Pq06k+Lh)c_e\069^bKFURkml?1iZjk/?eYtP8q0l=@Rl]%B
%.=H\kA'jte>b3su]&lWJa#R5n&gn/"Ho#8&O"XO7+>MnZ]'1@T=aB<dF_LueCo]I=!m2"CaU3]%mbVAFT\A5.0lPGDW)YhSS.L6'
%a+ElAR=qhL:Fa_HUl;[O.&B0u0Q0X[lm'-\QPfh:$5[2@6Pe+o#*!e+!aLhsD=C]&^m=?,FnOD(I`(Q%e0rJLHS%p#G&ieSbc641
%=sG2&`\(a@^!g?s1.Z%*7j&1D^lc3Mj-L_a'9bMMr;X68heWnU@b=-p<Bl1p@hF<VL9%jUN\A;]+pPc@)@L?U%sbYo#Z`/iW7S%Z
%C"?'l]eOan@5po5MtU'miM9h8%/<5`CQ%,X7Y5Xbp^@uRd=.oG@4jTl:bqm-G%h;*@F9:p$5P\-G8H@N7V5cMU\6TX=OH.aK6'f0
%2:JHBpN,`F"CcdMb'X($4AO"?)E'#%7W7C9pu/e?,(T'houNM#&M90nC:ItM30YKAYc6O-Y)o2be!u5W/Gkg5G2?K=kZurj2p,:X
%<B<[Ne&C=O\0XL6Tsuh1U=5dR!=;?X.1*pkE0aGTSM%@GcoaUfRk'nijX((Q:]!VjgdZ39,Yf+WXm_UJRtR/EPMG+OflMJCeoK[<
%*<7&8ifA(Jl:\[^@ID.Q=6\+%F]7r%Rn`2ljV`6_ICgg\2WE\(oRIf)V$i%AMsn:\#ckKVcFa6Gr*_*]')uao$H'tY`/>&oNR<oe
%gLiIWTnQkHCW:EW%f%T^jX5B^m2`uFT%`>8AQ=rMaH%ZA7&)R$j'dm*&i*IbaRN>Qr'r6Dlq`h8MB>bKMtdd7HTFF+G\B+8dqhoa
%3cJm352g4\;M&c0.(Gt@@m3D,pm^<'2f>73ppipmfWn:0q%^)8)HXMKXHM62.%DVrFMKj5[6UT];_Y)s]@N"+1m(lQ`bUs3^hGWe
%JF4?h^\(;F7s-B&1Cst'je0#lIj)XA$:psdY`Llkd/UX<T0t.j89CTNL<*`E\g#SX+ND'1q><:mGQR5@c13G1jumGS+;Cak7h.2g
%[jb2k,]/)Md1S:\KD'.Bcr1jb2,!:U"+IIt`gRq\1lU+04MH"lBg&*C*djX(*nMhldH[S9n'""6()V3)Jm!3,@:@Wsi+#iTHo\20
%Or9*G65aDCZ9qArMVIQlPB8lB"`+:B=A\A:=ks7O4:P5a_/p?OU*?m`g.+u%Ml`F\C"]?BR,+J4/pT]V1JZq_C]PJ*TT#'tBaBoN
%,*$lC7(Cbq^n-_6YB1+O@=TUYpEJM26R=ksZUs\[db38k:al&W7_s,bI(P0'ZFMTJb7jtqWe$#NK38@911d=J^,Wk\5K2uq!Z0fW
%F#,QXB5N8AED8Ad0GUhd#UH3ARea*R</6<OBB0.OHb2ns8Q-6soA.r:hrm+]M9pK*U-Ks)/^D[]GM)<ZJIAa:dA/A6+hj8:EBcff
%PO;TI_i.t\c5f(GZUK'F)bi-EbtZo8OZVNckPF>o@SQoCHCtEDPL+L[8L/Jk1+Q1*a@%[08Ig,l5':M4(Dm_M4#J>r0K>"bW,T=%
%-ijscV#nE>ltWV-FUke0\dYatM;`TF:%q<iPNt3#)/HHT108K%g^eVa#J*NUqW"lnTDa@mig`)WW4B(@0C9!U4a#$ud@4IFEo;(Z
%`/RSi_qf$hXsW,?nR2jRlD1Q3ia$_D0o=5J1qV%FMo'g^"U?C:1+ac\LA+g]9#O/)+`,17D6`^gDokk'^P)\Dk!!s#M_jL5F28c=
%gfCr)d%d[)^rX%S6*;DEcX$+_>3l,FC/)OWWkYl$dXqR.Q3g4"(Hh:+=K?1o,*&M8WiL4WCe+8$#!LR$Ru/:O)g!Vn.S#O:l`0q"
%m'KW#_)=Q;CoIHpU=!1_38=M:'t)+=n\(#^D<6&2\qi7g'@'"S*Sk/Yg*lTn;'A%qeO]"m2h>V^!7P]c\9nL!J/7IJCO[=o\=qYl
%ErIsch$V#:TU[c4TY4*L/.T^rUmko;P@L9mdcGS.\mRcRS=CSY0K/,*dnA_(lsZu'4G3ejq-;1>qfXE\,:9V'_EEQ_&<#BK88@Hf
%J'WKF;iWJAZpQu.a"KIUCKFoAL3-9+O[kof-bJarRO^=8&pJt&NaQ&G7[EBRm.=YOEJI^!rG,M!77g;u=+G(<3=3PNUoUML)k5MX
%R=kWcY'AGY[PPAdMI]H0A!KR3)4S")'(7]%)skbV.L5pj=QbijotA:&,S<=TUC1*,P^pYp%snZsIFZf@@8*+<5EB%YkX7jW3K<V2
%F*DUh94G;)#4(<bZ+OCQDO.RN(Br3fS76%hnZG.oVbhCE*??1n([!\:/]gj=4R^siEOmb=2atP?L#]PA(=7lfoqD9gUW3O=6jV:8
%3%3[.kr;pC!l\3NFm'5;E7@ED0c]$*_E1"\Y7nSPaV>dcOb(Fm<.@(gHdS$LSb+$gRd5-!>[5)\$R\<p#+/X-!J9n\Y5f"]hS6J5
%&l!\[OP))p&^ttLQ=lR\l@"lY`gA\+;L.t;Q1DM<a\`@J8=![Tol=E[.28:g"Xj`S#3b-oqrQio32!)fV6([VoaoPb4="a#Hq9t\
%ndrA]&e]V9pI%>E/gmZo-aKT)_<7C\8;(]7m__N.YZ,NIDo>`[YPPtLB4Gh9d.u!,G:i0qXM#!Z>3u.#)D/5k181\A/$`I(dEKuR
%fuRR2[(DaeKnP9+J7H!&7Rcrel([ZfD1O1E?,;R9?'15Y9QYJI6J/'RK3aV$Cf3Veg*+ks34^:Q#KVjG$R*'JHB,/L"pW08mi#Jo
%&2k8gh%g;gWNP)4&I+)t_?WK+JQ95TW"<tR8ZjZcZI%;jTj#Yk*c7#Nl:=Ci%MJH'#.bT`Q+E$ba9G[>iQ9jjfuU4/P<aX4,U8bn
%UFd+qmZ'e\77,p=7X%9f@W9EE'hMggD\o-Z#U7[>?8;kVWKj5-P!Z<m1ds_Tim^M2;kg\2Rj'TW_MMju7)"ng'#S?X,_S%ESX509
%8ucrj>bXT+pI%3!HD*^CHKJ-]@K?u_m0+T5[fEee9Sia(7o(C`]+MMfpKl6Tk,([?HM<i=:QPh"hG'-U"lm3D'#Qt(Cs-LL`"_F6
%s!t4bmW'/FDJS*WN4UGM2!`UqFtum0\s(o4O`1hc:!*[-4a[H7@l[u=PU-Z<<cCO#4cu-)&_6^5'+*8W:3Z=u@Xb/7\lp<0'X[DX
%'8bs#fj6kc4^@a)oWL[32=TsEVf]huJl$lfdDuTM!++(>#`1Fjh%L+R::'c%&nU2';^GDkq%q4KdmZs4:7a+K:F$Ic2U1ZHPgU+D
%L5O")gHC[\#f_#Z6pdi,V!*Yg,#^$1(aDR>!I8cU6?Sa%g22u%bLN](Cl>)4?p"=<nWCNSA__ZpLq#1n,&(_fgCL&2&jc\:g_L2(
%`OV)BhiUruh*OV9A0ZH#)h@WnqpQ+O%'t?AR+rJ1;Y2`V/[CKSpP;.EoJPI`8>SYO"BBu7+E:*@^.:dui09rjo(FNf(C>Y#/FJFl
%5[3::MkkF"nHe12LLF]RB6WS(1GqkE<4\n4\41ZKNhsi;-WM(!7gqrL!H2ARbO/U_g6#1\"8Igd=bW3-'q#c_F$O2(&bdpS7X<Go
%k)RVo"q)_+;rYe\rgUC)K**k]11L+TU"sX3s1R]+](]]7I:?f9@$acN66&l]p'=PR,uIYqG6;XFMS;`:E*RDGKfFJ7?V4H)i#:Pi
%Es#tg,`./i(/lpgpqL;`qJD[Q3(R#HJlP<1'bZkl\h&*9Oj3fs\=C:*nlJ2H]n_9G@!IeWjM5RlU]F-&\>_+jju[o[.-sf7b^-;4
%Yp!U(9%<?T-a<5("sJ&@*rY/3pr8t^"^d_JU-\,cB<A[4SsVl9H:2I`Nkr2%RJ\1fVJt7+V%=7c!$;iNC>Wn[`FL.hZ80Fh`+nL]
%j.82M?`)LZO?h?J#*V4="AHi'/nQsKk5%Q)>'Fd\Vc0nFDSKIuE)9<mGj%u>1BJ)P3ZjhH9br&R:_ia4P&C+g,(D!HT(&8PP<lWU
%m.=h;?BFQ9EeQIkrB#84URVgfo?0LP-D)bYmM`1tB8q#/$uhRs<QD)-mh2)X:9CZ13;:'b2l.dUTU&*P:q2JZ)5,rcp;huAcjtUs
%C)G`)aS?/=WM88tP)b]LN;oT0bbr]%>-95-QD&&N#""Y?W190Y"8%qYSModTo`t,[J\fUSSOt`BG6%oTV&U2jZB_@SoU%*s=l-E:
%0+thO/T;[$j"=8B*>di2r*.RRGMKQ8RCMDE/k7dX.Aru[',l6o+m5)21.&81RrMrG&J_hBR%D)4Q_0eI9tm-:QsKMg*m`f-8=(8F
%H-jP:<NMC^$#r6%e?2T/%,@O!%#mHe^'Zm1j<$#f6t8kCgDh[in*Eug^ST\ZG^)dI4s131qd8#g7*2H[AR"J^5aqg_(,puP+dtP>
%aeAAV)-:>ZhTt66m9]\q1,@Gls5X.WpODML\BLMC\UO<<Ic((PdYk^_!7>Pb.ku%-/^;O_\_#-DQt',7:uagF;o$8cKNgu20]okO
%C3a/dN7F:qB<ImR#Qlk[j/BkJq`lgMI/<1Jl[i9_@YSNq(rP.;"?B$a+uk6YPC)gucE!'W]MP@%0oRMcT)F@d-&+q2h4jIFfU8Q%
%lbM^B1`Xp1`+[+eI9Q[R?:'rF$TKA5*`r]p]J;nnHI!$!ci@`g:(_[_QVuJ9$nhfpVr5`5c=+KA/]!EpLVLl@*'$V_`r%`T-\hn[
%,l([&)^<`u+WPo$f]p?+QSSm"MX%)`H/FC#"MrM#k*Oh*:t26Q_RN3'N$(um"bPmqBq7ELq^l>M0kh-s'k&2S@bE3WY$&t9Bm^lm
%nP\^V0+@/WP?1apMc%KJ8!]c_./i0&'XD/_/k.j"6=+pG53$bP>LF6$`Jl%jfM_W2o@9e>FKTXC+EMh&-?&5T"YWrPnBQV5/YbA3
%1ihRu\`-KFfYX"bOrFCUV$ErK<V=]0,VkJjDq^CYj'+diSqOs=>%I;&EIps%7heT[p:!u:r3B<5Z1L65E?ZdN'hS<sb_<1/cYmK?
%Epai(kAjZL#!fmJZtp]`](U"lCj0"+UYd1;8n8f,W8I$CH''44rh)lA9lV,EPk.-//NC?W'&qOZgVm@O.*rdM9%M"I;)8MnA\DhI
%71[9(]M^;[0]F($R[QDD1SDq<\C-$".JAn=TjF3%4+.h]M4cZ/#n!FIk)tI>42-cGQ^edRo_2<O_7o;b4sb;ZpO*g?SqZ>=BuVGu
%1LA%IF@p9CrKQ:&d([K"quN]6@^pM`o=8(9W'n"2pLVHa"TBJ+fO4us`+(_t5`p=6_>V/khhGAmd]H/U.gRnEI'IBiSY6[u3NLR5
%ZmjEQ76^bY_7D&Ek0'cHBHS4O)dEV]>U2F.p>UbK2N5/$=h&"7+]OE0=B??hh+W8LA,RQI?O^hqniUTKLf@C!U":Ga0-JDDS5\+P
%/3XH+fc0;m_WcIU&19RcOUHREo@m8uO?Y&E+9!$NcOOhuq*tE<3Z8P(`l*\Y+gelu7ali6&>WS>WiiH1s,'#u%5+1m'^%-J5q*@c
%]QHSg?PP,Ih<L*#i]*'4BR@oZQ4>#?q?di[_(_7aBs3B61*kYNQY9OJX"qN>VaSYs\,1iE4YPjFHV+9\JV:iQ-+.R\X4)_<6Mci0
%Q5Ui\PC:5G3:&_V8H['mi&QI,Tljnl5!Dc+/X4pM2[tF\[$E(_E^JIKAS]FF.=K#^CKTtA)H[7aeTBl.3/!T4VE9;qM:3"m$MF-1
%"7Y3,gS^OB+;*ZUGbN<ua!"u:D(\Q!VM$B&87p6_'[?7S!l\)E\#GA=r[OU\G1cE%kC(gO&8239Q"+*N!+JF[rYk7nlSCDRg$7jI
%`HOS0lFV]X6Qm_(Lh#+J_fL8<,YA*`^.6"IT"A`^drQ$CO[]IY9fFEFNLEjPN4]`S=%0>pQ5%IM*`RC(BR"e?9Db\3_2T<!cKanE
%R6%Vs_:FAeF\>9K_AfCe5UK?AYGD:cR5p'pElh(u##r9rUXY)Ra)^P>Nkg:2EtR_mH#A>oG!l('9]7!Hm@3TSCgEpN)[5S'0'kHc
%6IE68=uV,oGRkrDA4Jg0SbV9T)[0"u0,#\pP^!S-2^[]dn&qm2`W8F+Jtbpt^c:V%"W7cOF:i4r+ZmmZ?CJ>4pJak.\,!,<1kpZW
%a6c7G7*^[>X!\1o0>oU=VZd6X?D]Lt/O=o=E>JL))*=ucKMu*O&CcN[2_5L)'D,fAmfnNecntU3bTe^KM\UA-a@'2p9EWFg>HgP.
%4-r@:n7"D3/g1uC%n\+"5rMlEMF+\+N-d&l\k\?=iEL?@J?LG_k'@k8<X)q^m`VVo/ZYi4='.p0E[>&+?&fj]HPf)Bgrfus=%].)
%Y`"oK%LI&ib3._TTbMGk["F[F%6-8&j4b>)2Ed(`Z(u9A_hi.3Kb8_iZOSW91TY\Fn,(VP1VnN+7mP[]+m'^FSn^;4DQJOg\P>+2
%%&4-&*rbZ%!BDE(kq(`%Kqn^AH6O2a(dn'f1TIBpaQrJXJkXE4a>KT@?JQT;V^jP?`[5J2C]?\pSfku1018t[h8cMqFJaRCF6o\4
%K]4DqL@85Bi7[-$Nm+K`l2GZ\M#'T+Kr<a%82t`)fMrf?*.W:bC3un,V<t."&s-ek-ZT2`LB(#S&TuAnb?(W+QVa+sH($Q&.SU^c
%W)#Z$U^k2GR6UC_Z&[<c2kkIu;KL3/$,rpPN8Q,.:)?JW_XkVcp"F>@c[uE7SsPRK#6Mi.4B[eSM&%9V5_;1$(7PC`4mS8U/g+gM
%l-(Lg?0Fh/"<\IHe3P5)/G58BobH%UV^0e=%L<56I0iR2\kK5cbJhN=Jp#L5$@Y&T%OnX*iA1:s(tDm.UI0&Z4"f9[,'uir#]WO+
%)8f$oS;=7r/+17QXD@./W_O:a+I!GP""slX,pc!O"V"hoa%@B-%Fi`M\YSSKKQp%Nq7%J4dP+6jjWlFB)(?^`dqka4N>nj#B+#ro
%TCfObY4?hV[`a,R9FI1l0$Z65b)k!W8EPMO$<Bqt,_3OA0<']W_K3isqUo\+P7r`5+fO$4&q<:Mj6t0KLZ7<kHII$^57j?S<OTWn
%BKiq8Bus0cqenHWh![:?D=asZ-ud9"FRb"seq1,V1[A:Z:r6qN\*^uR[nE'%=q/2@U$GYe?,T5aH#CNqAldt<B(^cdAOHi]/jqHj
%Gln(0iZ"'GB7$qgQrF8d+4UU291[4a"1<id(q;^^@s6dlbWD$]&8JtN'(hAO,qd++;3R]B*K;Y[eV;Q!J:[KH/9;OhePogB!A?c_
%-InRqbITM=[LB#4j,i#-47.sk>.)ss91oiXB5RM8)%0SZn70@]K*c)l0qI*Or^P@I_<GS%&[!9?8G9&O>>,qnQtT5Do6H`N0gLn9
%6A)`P&o15H'?aIna"R'2h0)%%*(]pH[i6X-0tYDZR1NOAW`"*5['M(F=jaTpS%U74>6Kk76tmGW6==28)OVnhR;5hR0V[pej`4W^
%cl0R87ZL/nk^r$tXrSZG=+N>VkVC1/9kO<bE!CZI)n3&E3$_'I\)5Cf\>E4"Ek:PMO$Ft\0Q(DnI)8j(GY%\u8Z6aHL5[TX7Ek3_
%Kj><'=5+)i%qJ7",qK;>%Lt]_(U)!_aTaRf-7/bfm?^#(kb=@J=qoM$lq.d13!=BU::Kde1fIs0KaDj!@H(l)Zc3bYhUmfA$R$d1
%MnULTSNi/SJZ^PbbG(!mPc.UOET8m7o=f%/QKscK](:1l5h?GEpLWZ2GP`s`3WX0n$(&*i%ADdZJbkWQUg)-3@VjW`F.2T6H2KAQ
%=6NJ4gC[6.lMHdnr-MS0r<.jY>eFc\:K:-r*Nq8S"C^l077/.\K@n_Olhh8b9qa'IU!NX;:-Eu1f>)*TC2`VIZ]fjZGi7K1EfgQr
%0r"i6dJ%_M"!Ib#A&9^T>h<W?)K[9/]V$HJR3m,+/G@a'!nP*tf'gX!TVqUI7[E@qQUkAqAO[ht$<%T'J>%)"D\S]/oDkqtY1r'i
%O_5n<;q>c_<ad_-#4]e-[>2If.!3`k1G8.X[_]53<HpGDDs8_%'%V:G(R-1X)2E2t'rR)@C*:Z(k/5ikL%t\9cHEM%J(qK7@-0M/
%bDO[SgUJAiXqY@_(J%Z`4,jW"!r5c'?1*u`Fc"Rk)Aeo@EaESB!^f`Llo$IMpA4%&\1G*Oho96`[RA,Hh0.j;0#68>IN"R7q%C/V
%fojgo*'tU2j]^.l/g,&A,(#pU(2ZH1gr<pmX_lg5#e"GMdFGs*b7_8Y[Ocu-4tTD9X1_6N$I,qPb;-WVBj9/C0SaLrDBj)G[Oj!u
%:#rN1.p@V8D.,0=V(^L;,Z%#@o2*(SAa3=B0ra6"1cJAtDJTeXcHE"oD@,sVGV_s*`F?a)IG$;m_C8?3cf<#Z!7ZGM1b%lF=[pHF
%h'd$/D-U+8W.8m(![VK:[W,I+*@0CLXQE!)D-To#c-C`Rj+>75jTt1XJtR!c(J(>C&*j:*7%CV:/0F&#=I2slXii0cRGZ^IX:$),
%"<"+[_;jiLLODGh=c+iu$beClG>A%P!j>CRljK:0I4Sr:<kf+-2DFL@C[3Z.-rCWJZn2]*!CUar(1n"#Wj[UI_35:/gVTU_bML%`
%_Vdcp_KK-#*'i\ACgj1Q.LuonN%'*UQtb@)D.0=9cF,F!/BH;W<'jB9H]$eEJ![D#jkabGZX(aj<`'j8kQ4pTiQLNjeAZBppmBmg
%3%t?FQOWc,J%;6BQ>M5s>-AJP;6imLlZ$:hkp=_:h,tEs=5`^rCdPuXX/VQ6bAsk%g6/6WjRYi\OPcB.ODf00H)F%Mmme5t_Qk6u
%Xm?e9#h_+q[LB8Jlr'A8-@W_8WO3lpX5UJ8,"3K+OGH.?b?*KN%@@Sr[:&l6cN]W444I_2(Z4'!LaI:LDmgNDK"Xgj]n]ds%a!M9
%hhP$n@Rs#s_Q7\skOtK>SGL5X%:koR8p2d!X[9M"KBZRbi*bFLP]3m.b,m8WS^]\(>a2H2H'8YC6/K?^^i*EPA/n;m>ghVG6]4&?
%/&%]rN"A<=?\["t$pGq370:`u3==B+r4i"9S%gGT)7INP,n#S([t+DNAR.8ir&bl9+fJ9*#b":@O>K0:+YVH'2_If%6dUuH)ls;A
%'K5&[Mhukcpb5?g[hS=V5nGS0=-WF20X%NVX$fsB7'CFco1sGi+n(ma'(@r)j)d@Dge"qFYqr5TYS"bs0=20?-(Tl<X)*\6MP7CP
%OO-omBk(ni5U`s2Ar@l3jHAGAV`l%@C]!'AADluZAE'RmZ,A08&*!IQc_+0p6b-`W5dd(Ij%o%Q6*UM@_*-;=Wo$`%Z2Luq%P(hH
%W.>*bk,m"ge=H(<gbb:R.ZQE^]J5;e9JSr?'9PT=!km0DYgEE&k/5@Zb;lNQcu`rE-;(r&1gKplCb,*hJrY1PSP8`Y*$XD+)C4qN
%3[.X;blWsAp5/=XUK$l$\G`$GRr=I(+q/PTSEu_%C.jE/Un<-?XJ5cIB>1*jQ=0d.ld]$ZF0hN7kT*ZGJ9\LkM$no<+C9Qj5%<,1
%MrD0]IqJSockD#m@7mr,qsb8o($r'm;b[p>1hrrs+9U5#BCJ,j,n)H*I)fa/=FieJMnX)+MTb%EO=;?&``9Y_W)'e"7rYn`C(d$)
%H^QK:Fq,h3Jl<Tu$0ad]LO00?Xki]7'Hs8`.,P!S`@JcR@'QVfK\Qi>e,B&NfS&d]%:?,g;&:!R1@!Fb)M?<d03;b1XUm)pT"ncW
%(Y*3V\:qd<_^F\<IpLN,oXSad+jp1E5tlEY>Qlm8h^o8d%_u0\OIn?<.O7dIhJ)PLX.hZ?'<98]V-%]n)rdDn%VS_`43^'-O!HF*
%7F(&MLM)o4gE,Gr4%e6`bElXsE%STmoAq.!E6Xbj9?XZEi1e`,LLIrfES[Qb#O#)b)*(s"7"F*>H<:_b7Y'sN1`#;>,c+q@2_#8^
%?D\;Y\"qnAnGC3@RK:Alm(cS=^J[fC3XS2/\s4j.s*4=6njGpB^Z\>m'iE*Y[Z!._`>1kGB^X#UdL$Vl+[J>i)#/PK[QI#>Tt=4q
%2ODPsM/2IldD@k,m(b/mYpSc_kdP*5*q^"eX$J_Tpa\@?#6i=1_Du!hNA_7BcHpdOVk9'()%sZ"HKV;C_AFIrqB]gn$%Tu9G)^sg
%!+HRj%EV<&GG.GE?^;"bLUWM&'aTJhC'//K6_H%Sd<qYjLV]NQ%`nOQ+:p^_=[h`@NQYXfY?Hh'[QDLh;T#n!i1$X%/.m-q>^cC3
%WeO:VQO?Mk9"l7SbT!l9+Tqk3kEqYeHjqpVEuoX,W&>q/k*fXSrandh-..0-_N>gkOH:dhRP>$64G:pET+X&>4XC^04G9Ms5:(0+
%\%`bNZ%qf`4B,$i=8(iu4#t?g)Zi"BIA<ahO="H]*(t;IZ82'JDA,$h?oF.$87A/lcpAP!$=Y_Lk<<W/gR.)1i._sl7p!De'5IfV
%2.'\bOSJ]gW9JSqfRHYQ\Hnfdb/,0#("O2`oE54d3(sPfQ-<L$02lDfg43@!$Dn]0Fh"AaH/pkiZ.cla97U6L`20ML,lC&5T>LM$
%'0,hPd8JG9_gbCs!"^hq8;:-mjp"KML*2EG.*_8BQ;7]19\7.Y]0#^0e7=r%KM5&M8T=8bKKuS#,W]HH8a5u/*:6.'W331Sb7^QH
%.9O()fL"iMLSS289iB5_G7$d'M8ec"W\E+Z2<KF%GV[1^@9T?\$rF^RTttpMoP1D9*>o,'`FWNE\/1UE^@JX!:rsrn`fFn<i&,#.
%@tTGlOroZR)W=g(jnSeE(2=L#mrqF1H/@s.V[ur(<R[k-Ns,aj$cCo`5jhQ!Z]aeG4F48"a':5BZACNU#t!$:n!0<4%^A@8lq_[T
%kV./qQoq5jiTok!7@$N43lT%h9ubIJrC^"<(rTf,3SuM)>ACS^Vj@m%%lH^;#YBk@,#q]Z?A(=W`_s28X1f8P'U%^fA-Z;t+k`VI
%n8$WY=Q>TOB?lf]_]YRbl`uNLW(TI^P@JI^[6^$OX+puk8LQ!4`,QZRX.i>(eY#477l;FeN$j;_aUXOmN$alQ(]/Nb7#@Ff#`h11
%\nCGn1B>[;@bRbC3qUV\>8Zj*J\YJ^[:GISiCe^qm(7p+7)R]%#a/)*`-"Bh%XdhV>03"Vi5Lelj\0t4,.$Js34Ia9jZ=n$@<EM8
%]i>?fc&3*"\#eqNL)\tYTfR`2+,Blb=4j^NGe<,&OpMbfdt8b6N-.IE$!THOBVBCUZ0(Jr)Fmd?6D`J_b=(IjON:^VhRFYD?Y4uF
%.B1qr?Yfe@.:LE%etTmg+2.qXDc)S&UGe)7A`Yf617Q=!HJ&^N\N<_R9ZNVq'ER$E!/WG(O^cA>AZ?/!>Yga3,qqZ?RScsg]jWa@
%$;.Wr4,(To9&^bM#%HYgVkKS]/k;Nl%MKO\Ni"h.Y,V^TM?ga98%u/0Sg=t&%>d,\7YIW8NNIJ8@>o.S>sWCeJiiqB,7K<p2Z)RK
%aDa9p>pas=p/>qoVb(ZJT`O%Dd#+ZkK0/K2Y9__5@QU*<>bf^;d]?:5L!=ns@$5P\"V6,4"9%3N!tj@NaPVSR?hFO`5e(;&.UJUb
%.>2($A"!c=1!!G`Aj>!J=G\X?$p5eOWBuB>G!qMrbl520966$<b>^!R3:m:$&iXRs&/1B"S06)4gDCZ4:9hmr$A>4Pe/L-8KG::a
%<4R@Ig$0VSK/9P>WdDksNdn3%#:=@/*Zp%J*K*WPg<s#gZHY1kjri^0dmb9V]Z`1>K>$5X-0:!g62,.s27g0rH&NpVl:/d%G5Hkd
%rhXD)_iq[!dgR@0\-S?o?&ocIK^2:>,%7hKN;MCNkr)I2Ao1]i"Z@Y1Q"-/hoo8CHm`n&V&K#/bCu"[hio*+jAg%kn4,U<(60AVu
%J,Q0%[-(J>N8UE5Tjfi/6_`aJlrn:kBHs,=1Q7aF)11\8+Jh;HI^oN(n.`Ggf==t18S<@5djfV\#0C?nRl.'o_(B;`E*d.O6=e6G
%F9]T5YboB]CO+`!F4qa^h:XrRf4'5Pk@,YdT;1Fh"5`SWGi>mMRAZsN*9DMS0D?q%;"p,Dmn>LWlUFe/:a;GCK>J=?;>+@u;4-fW
%oi':jcMJ=(Skr>/^7\>3GUg+@G!U$+;$43q&u4J-m?hi5E`D\K<Pa9PIU9F2%,[7G%9EFJeN\TOr'&YS8=i\%+!W*0k4m5Q@Oj7+
%F#g!cgZ[NR<45<`*L#%V#N-Q?Zl'^O_cc7W'U7F=8j>:1LQ6lV.IqT%oV1"n8Kq]rl2.=@'q:dgL/UcJ9n3Bi;:Xs5XH[00gB/ul
%Y;DF4m'EBRrn0,podA)Yc*ONcHVX-l?\+lM.hE><ao"'B>eQkAmq((6"iVdql1Q_8X1`TqV&EWJ=A;QN.R?WJO:],HqHR+3[Kp-\
%%%qEX;85eGJN[8m@Ii@Dg6Q0u.(H\oVb.K\#kF,'\X"9_MrH!VBfChkZ^7Ui=$08K'>e2q\GX_U<44U9\"okH2\(94j0H;)E(b6K
%Ht/k$3%pJYgs0fRO;-^["3CaU]Bn5eNg20WL2N)MU;Um"K@0oi@hHR(L.,"`F\M/=[V]@GQiCE&GGjR-CQ0<DKJF#,Aims`5nVU$
%m4"88U.NL_We6r^F1:GBs5:kad5*+^i"<8!eeH4m1>M][YI+>&$a7H:Ak6ZEHa7!U,68'e25,5N\_*uA&,ereS'<BiP0C/"1$P?d
%r?ac'Suk7ZTY'4.OYp89js3/O\G\:Ta%<_J#W'GuOo]5Er2unq3=Ts_ARYqUDZj]:,_EEdDN*!:pLVT#iMT)Rg;f3/*%q+<'F3>Q
%-,YZ;\8NeKG[E>'e*E*o0)iA!\oeHn:jAb^&Q^[C-[7IZ\el?%6,#!pB:LTRQKqjd(iJQ&i`<B`>i7-MH^Lf)G3U!0jRDil8WCAd
%I)0]6$HoWW?)>Se_Ud]gm)Gn6OBo;XWl+<.]5HGgmcc/s(N^2?J>\Lr.E%"/XGQ71P`R_&N)'c7YN!8-Ej[&-mS_4#d\El7E-`)'
%mh;`?Pr`C5d\D5jbOB!lXS/Ob7na`(OR#u<%XRAjmPVH%P@JJW^Vgj^!0-ViZfD"9e(qQ2+k-%hYX,"7:O8`XXa'TCddTr&HFNI_
%4Jh8#--sMHYGP1:AOS]4b@h^D`QO,cnEKHnY^Y,q/)`;-$L9N;C[N.taZi3u9$*#[4rcnVegPi``1ZL9:9NMj,XoBJj>&l/Z<j,H
%9b>QtUYB@W;.4PI$n\Cd(+U_o%d26.CC0[F4).nhKYUTL1n#D<Vh6,t"E,P>$URUQ4hg7Za?)Y'_TX+9=A_K0.:2eN=&SBW;rQ%P
%mt`-)f1&s"Zq]o,K0ZF;6,%dB1Am:cAsANFF$`2hMTVpq7T2uIW6`_E.=%PcD7tBrF\Xdg`fq;RU>)m98FIoPhHX5?h1@VSgi<'g
%br^N,&E+'\(g9;0JfRi:2S3[J/mo7K^sI[AM%qpXM9N\UH(IZc_+-"8+^mKHJB?3gA9ER."Bp"o+9=S:M&+8\V7<QGEU0FO4=#,q
%HO/Bk\ks\g&/WeND^Pe#J2Od!,C^,q5;F%&/<Yi6`7A:s*f4iT)"A%MRs3iqiHkmC^9b<$R$Z1d5mKnY8=dMm=QBrj3:3Y]2+e'l
%kM`kD%O"iOC@8!Q%fP.A_Hre"H1r<l\^taY\jLgO2WDqTd;a/iMQRC!Ir.P#<u]#Pqa:PuXAd0]!U@5`qg?CG5k$af:^::h=jpLs
%C%FO'_gMWD*X[pQ115S^C9oLJ$7d(rqX!9"YDsQ$`rY7Q#&BW''Npg:]g;>M/;t#'3d)I_)4qP-aF)k\WiS]^<r,;-ne/IO`L/LY
%^5MZjm\),7%<<eaF'"G3o<>@(muoUr_Cb0hkRs_P0$Ek9UMg/Spn*kq'L@KVTpr.=6sN</jn9Fc/mH)Aq*Bc<TjaCe_l4c/]M:L-
%8<Q&XJdpo)*8#NG2B57?ZI9!%9l22&cYbW\#h*@,PV3F8pgD!j`!nad)\.P([@7U1&grP=nD6&j`">p+N%GkRJ,G2?JJN&][B9T;
%'r[!.oqc'6WKfheJ(SQs01ROUs#2kGKuoZY#Y>X9oT4l"r,H4oKDVqi4hQP\#Ru%8=9D=&0.ZdV.]V(t@l024_Hb?_@0n\/3!J_n
%,8gt3$$&9NA2n[2=>pXDS9su8*=a?,!P#c-H$1k(OfI4g5<rUpDok_/EsPKq_dcV@3ZL1e6AOE>3-:L]RO_nl]H07`!"^;N)<n$9
%_8>i["4@.NjW"_c#H^j:]'42'EQWnE#N&ZO,^5CnHYDH8,#MZ@1%r,Y)p1Q0*!fLG53Qr.FS4I337tU@is/>Z:,fPOBWAX#*UlPI
%fB(E2_2!YQiaU$l_nfb2C>k/'o/MHGj`a^#E-sO'j6"7icb9-n+J9qqHoM\9/ahQ7TiS]4)CHU:,]7rd+3l#i@-"4^F>K#SaJAp<
%`ugplHoMg@Da5bg[]<Af.3M0q0DKM]o?rHW_h#a?>4^]<dNXG`HoM\#Nc4OJ5dLD4q/E9aj2Zc_#=A%Q"cfuJc(55**!f_oj26Gp
%N'B$U#Wb2S:;UDH(>Xa)+&2u2j,>$_oAMsu%P9J*5U,K%oAP'T=W[kg]EW]Hi5<C&'n@b.E$,`P._m3,cV+V9E09E4jnl%iKN.*O
%iB\Z$l/9I1nF^_](!).4M2$ci*tBRU76(']E54V.c[7^6b\i.T[=m$NnB@@4#K"2KS&69O9&*4;)I/8bqH9r%h4$<i12%<C8V[C>
%-,9@DLBHKU9S*`Z&h*kQiBX</V<-jWTlF4*c%CTjE7+k,8-CQZq/@`5-Q`gE1?%B5Gt<,3i"QOWbF^Q67.=VUWr"8t%nD[(RB>Cr
%;UaSEDg9ai:ahn_e)>7W\e,">_r9mCB&TE#Tt[]W$5=o![\0o]cOEUYd*+Eh%a@?84MGWaE^Y\8h.DoJ9o$W'3[>ph%QC``2PS+J
%IU@gk#9=;668P[%0FBceJpBb^8t?!N3=PVi*C5HJ#trLkF>uC<)IIm@iUAKMSRFQ!4fS13-A9quX3I+DLMs,glL8=m0W-3`I\)^q
%_g)Lk<-Ur9O1Q\CcMo';Fuq!$G<I4K_r7@oBrXcI2ET!!\-g>F?%WQ@lbuR9A2r(^>b`FZTg("sihjVe:rkrOiBWP8>gQ0\:Wi=i
%(V1kWm3`s*S$>6-R$W[HCeNl+L(bFmUAj@3LggR%#u</no)!'PpISH%iLD?q$*6!CcZmeOE&-p'j+0JNR(L@1r'=E"_(d^YVCUT?
%R/m.u4=nRHMr"8iI0-=P*IOD6E)!Au&@61^:'+2#MsXo0*=ch;`sc!dW!YjEai^_!'(^>t)6nsC4f,t<@02m=J_NQ?\(c2N;uhRs
%R)WHIY"6u^Uja>FpAAE></msBAa4;bG1N`"DopVt(,jT]]+9i^$*VDD`*oDm_%MQ-(fVpo)g`'4g_bZ40(3KjSXKU:k:PW91#a(f
%m_#G[NQu5TqPhT#%nV<G[dSdnPt\S9kUO]kRuWu0]m.o\>^(["ha-H])Z(h[f;6YQ/@Iq^IdO+;'WRCVdW<i:g7a)UmH"PgZcCJf
%BjMDQUe)*NU-CER3suUV"+SSoL)T0u.D6c,DR+l;<%+YTGhg8*W2rR';hhNZ*5eMK>&lpWrItA+5bClNpEKVL/kMN)3$][#hpAO=
%0?[*TO=EZ18Dof0ahuskqE2\qlRiiB+OK%L:;QjLWP=qs,pfZMe.p/I)*tRu*;ta1KtA`CTt&ok%'.=ZL7hOCULK.<Sk#P"KMiOZ
%2:P6EoZMC(KY>a`S_=pujW3i$G@P5R:>@OIVb2B9N=G7._(eDBj;Y:Men6/9X>6&.C,80XP;;^C)&eEdP?F4USs,7,9(I;/#U@h3
%_hs.T'o.$?Dc8;M,c8BBRb-^&@ss4^9[e1D4d9\rfab3c'Sm&J8&i/7b_ZFIhSQH3.\EiQ)?LF3/n44GUq8jIX`j[uDq3jP%$:89
%?X]>j99(Js'pqHE]IrYb`\3jgWs?ug5E>AQ>?+=55tDdugKF4&CcGr95(Vf=*MKL4R2J:t2EWdA[58d1%A'g/dAmGW<kAtS9V,X6
%k].,4fnSA-6Z@4eA$fDjN$8s<<Y_."eK*5M\3RZQ]J+n2?h(Y-B=GftM2_>l`bn9?qm(+Z3k!.O@*qf^^1\E/D]9V9_U#7XR+%uX
%p8E&2d^6hOgYX^I7qHBg]mB1/-p*NBi**8X>\Qt]k"%*^djK:\;_kGe=5tqSOri$1.9$poo-[m_#lB*D]9X1'MC?%XR"+<o0;lq9
%aET9O7M$J[iEdESAqZjJH5ac;\*eN0ACcPBmds1BF]N(nj5,.N3Q2%2Oj,:cNltnC0g%$4S%XVO4)\l%=juAf-)MNo%dZtVM=hZ1
%q'8AZk'^E0T'Ik$H"n('CI&etetEi9`t-&kWJfS8CuZR`/J?qpUDNY76(f=<@P;Z,TnK80$`'Rc_-gPRiFNr=Y`Mm2bnW?Rd^Gka
%-j)W'H^%RX5fs66)$IPSbkSc42>h%>D#,6L]`92lA?gXbW+6e!MacYA"hlluJGUE%SPg"!indQ+FU+'u0H9ZM!%jbjo#dRocU*X`
%0MSn7PXU$$<^jncXj^LVMhHe:dKs&=n!hX1B(#tf]`0/E04qo9nZmD5Bb-+MJY[u%&=8Juq[(qZRH"F5`Y?K*&`W?Vn.ibjn8I>/
%N5X9BGd<coj1-o`&>Fa@?9_[Q<4`_#iSEcsi#.+P`Qn%aNP`FiKR2:c4=3@>0_IKhk&+>9,jTGI3f4`^3()ul4We."M0ur]?k1[0
%),lrZTS'#h,p`p'J&<W'0U[AC>(T8V:^uRDV?EF$MS]aiq%5P-_3`ou]<7254;PP?d*H"I=B(--ChcrQq&;Zi@`j`1bQ'5#^_B-V
%A?MdVdm1K*2USM^JHgo.q'qYA-JeeHNNUNZ1(;i\T55b^^mb(\+T^S&E\K/aEo9uq$'+=!R3pWp-`2n@%t><Ps75&0hYsFd)bQ&u
%+f"c^U365U29'Jq'*W+*"C+huU;XS,"jTR&(HeCebeY?QTFJ-12N'SPAcoS;fVT*^H'cn]M%5Us<!cC#rQUIi&.I>.#0k=Xj[#:e
%FpG+sdG&B0M.*H$P$*%h<Fl(fZJ#m\1l5(B2eDX/I@KH!7d=%&$+O]DaBp:>O'G9g,]#$QWKpRq!Z0BNB&^+6V83h72i:!Ig:.:F
%r6/+>!Ke&;EM2D:k%+epNJT?uFrY0Bm(@.U8)cuSTD/r)!cBfK%QT"&F`#4qKa#:B_(34[rP9M'n1)J;kmr4`.f/+="S<Yb@VQC,
%%1+hhRCaEXN?1FL/o"o;<UE.i4b-ZPQrm:g;6=+<LC\':eKu_VZi[2O$WiU!mfa$+$^_)k`8bVc.^26?6jIbR(+UlUFo9m,:$lh!
%,B*O*+@heHM:l]@,>$al7Yd>/C:9)$h:R1;QPF]R0aRh+MIeqPmFisH,hce6k?qA200*s^>::XDYr#@JEN<7?0s7s)!cP*7P,BAA
%mo:7nDSB8D^sQR1+aoNfc>HCR3cZJ0W2P,<HSeai@^i(80[^Zk5"tr+>%i"'M7eaU#18N\pmamMR&pQ&0GOn,8VtDchEX%bJmZ$J
%V2Zg9XZfi89_@F=.mYXR8?^Ss^5>FgKi^cVRqTlRFi?`+l<!6$U4G.lLYD=A-$T8U:;jlm&+<7`"uXWfCF8[^.]C9B>[,%>99KZT
%?5-g)aIgY*O,[VR'5(Gg](M^t-'j/0jdd5;r_E[](5uLVXSLN>L<bUn?EVbCFfb<\KAO!FeB7`ka^uKqNF-2'^2::`RhfuDZtcYr
%DHp3('PAuL^];eqMeE6"](Lam/P5NB_sSd^lY'Q:Tf.'g;O^b<\7<@],eZgPOl=ir!uGb_A>1OH21(famu9=`po&&"7AsI,(mh*Z
%3+ur)s.!1$/.WJMAl,,Jd\KU:WUVSr:qIe']#a<\WbRpAg03!L>C?]H()nmc2$MFXS7B*(JAki!KpupX\<@Kl*.ZQSN<;X5'`cBB
%_6T7H/=#+dYS(>D4YULTo]nCkrP.OIb:I)tlVWfN$E-)!/FN@71!48.q]qO>P1(O*`K?prT$Ws+LiaOIU?@lms.QL!V>K*,Jp>0_
%a]]hH7pJHdBo>;-OTZ.f!#=Xhs/XhWfEstYc;iRZnTTo/gXaXhp"2%ZohH!^h/:2r?Hg,\WHB7m"Mk?GPOHucX@ShU;eQo>?-_dr
%&N$U$4MUHGTYc=GF!/_u@7Ln$l8)n+gkg-f1';?geX_i.j;Z#G\H(mY-E3<A=^0Gn^I+/&)Y0F_;7_L[NN&?a&7M-T3''B>Jnq^L
%frDSD!tj[b=Ubg>;Rg"$s.Rf+6U;@8\W@]r<&k5GlW&`i?N2`IE)DXgk`>tr7,I<7qT`IOOs^BkfeXiGkm>"?ki]"n=*6u5R=?<p
%=>=gY8TqK)!!jjf4!cqVgG]$P98Xm-*(m&Q.?am@6TQEQ[>R1S<jLohP*%4*#[+4E[P%J+L4t$tCjU]E=RJ_l!l9<q"A[1o`bbO>
%YQ.BQ+."i&>u(G-YrC^i:NX0A>j<O8I=[l=m.Zs8m1N2lf384hYCKbpf=52j<X+gKYm/(bK!+e4KTs];IKh$G4<\jZ"g[$o,KOMG
%5h_*.ECBB-;:W5B]WG)^fo9U<5aqK/n;bOKf8P?-]\s7d3p-W1H%ue%mK-\T(cRL+<Y#]L^q-ldOIO29&#69tN9u#?G5cuZAKM,Q
%ai<I3aT50gBk7Ibk/o<_D2d4s8'tb+0,!?E:*a[l"%$WB#^*HijLPG]Dk<pl&.$N[k1^O"D=1S@Fn7llG[0_4qF#='9%#r>`s8@2
%GZ81rGZj+n/F\cE[:pbp[L$2<PWjUgG^s($@l`BL0&dM9^cXuu3II`jq^n18C%<9Q4^)q')O.g>m[J]1K`KW:KXSRImWqpE36p/k
%e`Xb-J?F/J-gDm=Mdrdq2">/(]Q%qlehm`-L3*dT0RB*h_hsm4#*S$(PM7:#E:%Co#gMWeNcE^iZ]*CcJjDJFl*5Dtd,M%)aqFBp
%g;e!Iic+'SLpp(^n^*WRPYAuRIV]!:e/JOB4$<Wf>25'8p$?W8rQ\.DMfm'kUIf'&[Tbku;s#c7:d(CFfcTZ&lo"$ld0iA@NBu`7
%\9eZ8DDWYSY=e!ol]&?_f[>q1%+a`l^\`<ns7a1d($kkfa)BkL\c:ghr:BgK?QYp>]"G\&G6RDaI/7gXl/h0=:R@EWDa&PoqVuVj
%o_eX_p$)/?qt6TL5.k.7]RG=?gjT"nq9M<8ckp_Os8IfBhS/e)e;9Ec~>
%AI9_PrivateDataEnd
